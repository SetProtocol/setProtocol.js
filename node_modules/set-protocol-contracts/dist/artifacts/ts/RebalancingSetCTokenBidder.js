"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.RebalancingSetCTokenBidder={contractName:"RebalancingSetCTokenBidder",abi:[{constant:true,inputs:[],name:"dataDescription",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"transferProxy",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"",type:"address"}],name:"cTokenToUnderlying",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"rebalanceAuctionModule",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{inputs:[{name:"_rebalanceAuctionModule",type:"address"},{name:"_transferProxy",type:"address"},{name:"_cTokenArray",type:"address[]"},{name:"_underlyingArray",type:"address[]"},{name:"_dataDescription",type:"string"}],payable:false,stateMutability:"nonpayable",type:"constructor"},{anonymous:false,inputs:[{indexed:true,name:"rebalancingSetToken",type:"address"},{indexed:true,name:"bidder",type:"address"},{indexed:false,name:"quantity",type:"uint256"}],name:"BidPlacedCToken",type:"event"},{constant:false,inputs:[{name:"_rebalancingSetToken",type:"address"},{name:"_quantity",type:"uint256"},{name:"_allowPartialFill",type:"bool"}],name:"bidAndWithdraw",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"_rebalancingSetToken",type:"address"},{name:"_quantity",type:"uint256"}],name:"getAddressAndBidPriceArray",outputs:[{name:"",type:"address[]"},{name:"",type:"uint256[]"},{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[{"name":"_rebalancingSetToken","type":"address"},{"name":"_quantity","type":"uint256"}],"name":"getAddressAndBidPriceArray","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"dataDescription","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"transferProxy","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_rebalancingSetToken","type":"address"},{"name":"_quantity","type":"uint256"},{"name":"_allowPartialFill","type":"bool"}],"name":"bidAndWithdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"cTokenToUnderlying","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rebalanceAuctionModule","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_rebalanceAuctionModule","type":"address"},{"name":"_transferProxy","type":"address"},{"name":"_cTokenArray","type":"address[]"},{"name":"_underlyingArray","type":"address[]"},{"name":"_dataDescription","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"rebalancingSetToken","type":"address"},{"indexed":true,"name":"bidder","type":"address"},{"indexed":false,"name":"quantity","type":"uint256"}],"name":"BidPlacedCToken","type":"event"}],"devdoc":{"author":"Set Protocol * A helper contract that mints a cToken from its underlying or redeems a cToken into  its underlying used for bidding in the RebalanceAuctionModule.","methods":{"bidAndWithdraw(address,uint256,bool)":{"params":{"_allowPartialFill":"Set to true if want to partially fill bid when quantity is greater than currentRemainingSets","_quantity":"Number of currentSets to rebalance","_rebalancingSetToken":"Instance of the rebalancing token being bid on"}},"constructor":{"params":{"_cTokenArray":"The address array of the target cToken","_dataDescription":"Description of contract for Etherscan / other applications","_rebalanceAuctionModule":"The address of RebalanceAuctionModule","_transferProxy":"The address of TransferProxy","_underlyingArray":"The address array of the target cToken\'s underlying"}}},"title":"RebalancingSetCTokenBidder"},"userdoc":{"methods":{"bidAndWithdraw(address,uint256,bool)":{"notice":"Bid on rebalancing a given quantity of sets held by a rebalancing token wrapping or unwrapping a target cToken involved. The tokens are returned to the user."},"constructor":"Constructor function for RebalancingSetCTokenBidder"}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/helper/RebalancingSetCTokenBidder.sol":"RebalancingSetCTokenBidder"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICToken.sol":{"keccak256":"0x661dd1d6e349160dd01e275b8138c9c78fe296abbb7d54ecdbc03b6be35cc5e8","urls":["bzzr://731700a131b20732ffba3070eaa6e0cdec2f42c7493d5af3f24e605cb3022fcb"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalanceAuctionModule.sol":{"keccak256":"0x83643b2fb1bf0c842a847cc76e84ac3db3f66e93065ae3a8edad93ab627ba104","urls":["bzzr://0342c1eb46311b8f388df55eacfd370cea99e6dc0f31756b19daecb9700a1d68"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalancingSetToken.sol":{"keccak256":"0xe7356a7b0f0cc95d9526395d776f523a48fd65618730d67b4f31f20ffbd380da","urls":["bzzr://605a33a818eff7ce3370f25fccb751f61c066b4db0772605a2215d1357d68072"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ITransferProxy.sol":{"keccak256":"0x962d54385cc4760c550cd2f16bfdb53e967def4c5d3acb7b3d0b3d7a49f902de","urls":["bzzr://cb8994c8bae7fa1d55d240f44396f4156b45c81afa6fcfa608fd5e4bf9f1a919"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/Rebalance.sol":{"keccak256":"0x74ffa689d93ced6c6e0377a35ec1274241b6191b5aaac5576ada379ac3840286","urls":["bzzr://25bdda3f1f5adfa2c83c760c44993d250cd2df037360f0018d22d268df79e887"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/RebalancingLibrary.sol":{"keccak256":"0x7f9dd2f95b2ee71a98b94cb9b0df15874aa134e7480d04a1fcf36aff166a55f4","urls":["bzzr://f43a5563ec5df095151eee30cf7a0941b5a971917c27c7b34d9586b36563ab5b"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/helper/RebalancingSetCTokenBidder.sol":{"keccak256":"0x0d7ba5ccda4b7ecb67ece6c4431f29e17d3c6d8edda0a7058176e4afd7e71aee","urls":["bzzr://cf269cc5bed23f460ff047569929cad5546b332922c89a78137fbdeba7c581b0"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/ERC20Wrapper.sol":{"keccak256":"0x09fdf2adbbcbe2ce6cf3924c8cae4e206cd501c3daca55d43c847d310150ceb8","urls":["bzzr://f2866ffe2b523888937071b65dd86d89a6e61161fd2d1ce1b9b52ea23914337d"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/IERC20.sol":{"keccak256":"0xe4f71b1797f6421de91c6ce3b55199c5845693a58eddfd417a60b81d0198a9dd","urls":["bzzr://a6a4cebcffaff1db8ef9b78ea58d2d7391cc2b1ed533a1e1309286989f6d4ea0"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125","urls":["bzzr://3bc299fd722679f1313dc1387e2efc0591dcddc3727b6a7ccc98132c6e02f323"]},"set-protocol-contract-utils/contracts/lib/CommonMath.sol":{"keccak256":"0x3d1d08c6efc2a973fe2c02ddcb02fd99a8c8eb75f74dcbd93e8e15864eee2b6b","urls":["bzzr://580815dd1cf648a4521d923e59087de21143d9c48115ab71579a1f5a8f3d36af"]},"set-protocol-contract-utils/contracts/lib/CompoundUtils.sol":{"keccak256":"0x2fae8240526a689d919a67792626c9df1e8048a59eed6643ff4ce685a87a36dc","urls":["bzzr://5a5709236aaa10d93f1746e765fd4e10693277f5cbc3e24d5173738f87a01072"]}},"version":1}',bytecode:"0x60806040523480156200001157600080fd5b5060405162001e4338038062001e438339810180604052620000379190810190620004af565b600160008190558054600160a060020a03808816600160a060020a0319928316179092556002805492871692909116919091179055805162000081906004906020840190620002d4565b508151835114620000c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c0906200069a565b60405180910390fd5b60005b835181101562000197576000848281518110620000e557fe5b602002602001015190506000848381518110620000fe57fe5b602090810291909101810151600160a060020a038481166000908152600390935260409092208054600160a060020a0319169282169290921790915590506200016e81836200015a640100000000620001a3810262000dfe1704565b64010000000062000e04620001aa82021704565b6200018c82886200015a64010000000062000dfe620001a382021704565b5050600101620000cc565b50505050505062000794565b6000195b90565b6040517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0384169063095ea7b390620001f390859085906004016200067b565b602060405180830381600087803b1580156200020e57600080fd5b505af115801562000223573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000249919081019062000486565b506200025d6401000000006200029b810204565b62000296576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c090620006b2565b505050565b6000803d8015620002b55760208114620002bf57620002cb565b60019150620002cb565b60206000803e60005191505b50600114905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200031757805160ff191683800117855562000347565b8280016001018555821562000347579182015b82811115620003475782518255916020019190600101906200032a565b506200035592915062000359565b5090565b620001a791905b8082111562000355576000815560010162000360565b60006200038482516200073d565b9392505050565b600082601f8301126200039d57600080fd5b8151620003b4620003ae82620006eb565b620006c4565b91508181835260208401935060208101905083856020840282011115620003da57600080fd5b60005b838110156200040a5781620003f3888262000376565b8452506020928301929190910190600101620003dd565b5050505092915050565b60006200038482516200074f565b600062000384825162000754565b600082601f8301126200044257600080fd5b815162000453620003ae826200070c565b915080825260208301602083018583830111156200047057600080fd5b6200047d83828462000761565b50505092915050565b6000602082840312156200049957600080fd5b6000620004a7848462000414565b949350505050565b600080600080600060a08688031215620004c857600080fd5b6000620004d6888862000422565b9550506020620004e98882890162000422565b94505060408601516001604060020a038111156200050657600080fd5b62000514888289016200038b565b93505060608601516001604060020a038111156200053157600080fd5b6200053f888289016200038b565b92505060808601516001604060020a038111156200055c57600080fd5b6200056a8882890162000430565b9150509295509295909350565b62000582816200073d565b82525050565b600062000597605d8362000734565b7f526562616c616e63696e6753657443546f6b656e4269646465722e636f6e737481527f727563746f723a2063546f6b656e20617272617920616e6420756e6465726c7960208201527f696e67206172726179206d7573742062652073616d65206c656e677468000000604082015260600192915050565b60006200061e60268362000734565b7f4552433230577261707065722e617070726f76653a204261642072657475726e81527f2076616c75650000000000000000000000000000000000000000000000000000602082015260400192915050565b6200058281620001a7565b604081016200068b828562000577565b62000384602083018462000670565b60208082528101620006ac8162000588565b92915050565b60208082528101620006ac816200060f565b6040518181016001604060020a0381118282101715620006e357600080fd5b604052919050565b60006001604060020a038211156200070257600080fd5b5060209081020190565b60006001604060020a038211156200072357600080fd5b506020601f91909101601f19160190565b90815260200190565b6000600160a060020a038216620006ac565b151590565b6000620006ac826200073d565b60005b838110156200077e57818101518382015260200162000764565b838111156200078e576000848401525b50505050565b61169f80620007a46000396000f3fe608060405234801561001057600080fd5b50600436106100655760e060020a6000350463108da80d811461006a57806358d65629146100955780636e667db3146100aa57806378551f2a146100bf578063b6ee8340146100d4578063d0d2ba3e146100f4575b600080fd5b61007d61007836600461112e565b6100fc565b60405161008c93929190611509565b60405180910390f35b61009d610297565b60405161008c9190611550565b6100b2610325565b60405161008c9190611542565b6100d26100cd36600461115e565b610334565b005b6100e76100e2366004611054565b610447565b60405161008c9190611437565b6100b2610462565b60608060608060608061010f8888610471565b9194509250905060005b835181101561028857600084828151811061013057fe5b602090810291909101810151600160a060020a038082166000908152600390935260409092205490925016801561027e578086848151811061016e57fe5b6020026020010190600160a060020a03169081600160a060020a031681525050600082600160a060020a031663182df0f56040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156101cc57600080fd5b505afa1580156101e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061020491908101906111ab565b9050600086858151811061021457fe5b60200260200101519050600086868151811061022c57fe5b602002602001015190506102408284610588565b88878151811061024c57fe5b6020026020010181815250506102628184610588565b87878151811061026e57fe5b6020026020010181815250505050505b5050600101610119565b50919450925090509250925092565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561031d5780601f106102f25761010080835404028352916020019161031d565b820191906000526020600020905b81548152906001019060200180831161030057829003601f168201915b505050505081565b600254600160a060020a031681565b60008054600101908190556060808061034d8787610471565b92509250925061035d83836105be565b6001546040517f78551f2a000000000000000000000000000000000000000000000000000000008152600160a060020a03909116906378551f2a906103aa908a908a908a906004016114e1565b600060405180830381600087803b1580156103c457600080fd5b505af11580156103d8573d6000803e3d6000fd5b505050506103e5836108dc565b33600160a060020a031687600160a060020a03167fe727afba8f141dbbc3e88d35235f4cca96c0d93dd6b0ff9fd7df40c91b0eb317886040516104289190611591565b60405180910390a3505050600054811461044157600080fd5b50505050565b600360205260009081526040902054600160a060020a031681565b600154600160a060020a031681565b60608060608085600160a060020a0316638618711c6040518163ffffffff1660e060020a02815260040160006040518083038186803b1580156104b357600080fd5b505afa1580156104c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104ef9190810190611072565b905060608087600160a060020a0316639b013aee886040518263ffffffff1660e060020a0281526004016105239190611591565b60006040518083038186803b15801561053b57600080fd5b505afa15801561054f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261057791908101906110a7565b939650945091925050509250925092565b60008061059b848463ffffffff610c5316565b905060006105a7610c81565b90506105b38282610c8d565b925050505b92915050565b60005b82518110156108d75760008382815181106105d857fe5b6020026020010151905060008383815181106105f057fe5b6020026020010151905060008111156108cd5760025461061d9083903090600160a060020a031684610cdb565b600160a060020a03808316600090815260036020526040902054168015610844576000839050600081600160a060020a031663bd6d894d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561068357600080fd5b505af1158015610697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106bb91908101906111ab565b905060006106c98583610588565b6040517f15dacbea00000000000000000000000000000000000000000000000000000000815290915073__ERC20Wrapper__________________________906315dacbea90610722908790339030908790600401611460565b60006040518083038186803b15801561073a57600080fd5b505af415801561074e573d6000803e3d6000fd5b5050505061075e84308584610cdb565b6040517fa0712d68000000000000000000000000000000000000000000000000000000008152600090600160a060020a0385169063a0712d68906107a6908590600401611591565b602060405180830381600087803b1580156107c057600080fd5b505af11580156107d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107f891908101906111ab565b9050801561083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290611561565b60405180910390fd5b505050506108cb565b6040517f15dacbea00000000000000000000000000000000000000000000000000000000815273__ERC20Wrapper__________________________906315dacbea9061089a908690339030908890600401611460565b60006040518083038186803b1580156108b257600080fd5b505af41580156108c6573d6000803e3d6000fd5b505050505b505b50506001016105c1565b505050565b60005b8151811015610c4f5760008282815181106108f657fe5b60200260200101519050600073__ERC20Wrapper__________________________63f7888aec83306040518363ffffffff1660e060020a02815260040161093e929190611445565b60206040518083038186803b15801561095657600080fd5b505af415801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061098e91908101906111ab565b90508015610c4557600160a060020a03808316600090815260036020526040902054168015610bbe576040517fdb006a75000000000000000000000000000000000000000000000000000000008152600090600160a060020a0385169063db006a75906109ff908690600401611591565b602060405180830381600087803b158015610a1957600080fd5b505af1158015610a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a5191908101906111ab565b90508015610a8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290611581565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815260009073__ERC20Wrapper__________________________9063f7888aec90610ae09086903090600401611445565b60206040518083038186803b158015610af857600080fd5b505af4158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b3091908101906111ab565b6040517fbeabacc800000000000000000000000000000000000000000000000000000000815290915073__ERC20Wrapper__________________________9063beabacc890610b879086903390869060040161149e565b60006040518083038186803b158015610b9f57600080fd5b505af4158015610bb3573d6000803e3d6000fd5b505050505050610c43565b6040517fbeabacc800000000000000000000000000000000000000000000000000000000815273__ERC20Wrapper__________________________9063beabacc890610c129086903390879060040161149e565b60006040518083038186803b158015610c2a57600080fd5b505af4158015610c3e573d6000803e3d6000fd5b505050505b505b50506001016108df565b5050565b600082610c62575060006105b8565b82820282848281610c6f57fe5b0414610c7a57600080fd5b9392505050565b670de0b6b3a764000090565b600080610ca0848463ffffffff610d0b16565b11610cba57610cb5838363ffffffff610d2816565b610c7a565b610c7a6001610ccf858563ffffffff610d2816565b9063ffffffff610d4a16565b6000610ce8858585610d5c565b905081811015610d0457610d048584610cff610dfe565b610e04565b5050505050565b600081610d1757600080fd5b818381610d2057fe5b069392505050565b6000808211610d3657600080fd5b6000828481610d4157fe5b04949350505050565b600082820183811015610c7a57600080fd5b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600090600160a060020a0385169063dd62ed3e90610da69086908690600401611445565b60206040518083038186803b158015610dbe57600080fd5b505afa158015610dd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610df691908101906111ab565b949350505050565b60001990565b6040517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0384169063095ea7b390610e4b90859085906004016114c6565b602060405180830381600087803b158015610e6557600080fd5b505af1158015610e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e9d9190810190611110565b50610ea6610edc565b6108d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290611571565b6000803d8015610ef35760208114610efc57610f08565b60019150610f08565b60206000803e60005191505b50600114905090565b6000610c7a82356115fa565b6000610c7a82516115fa565b600082601f830112610f3a57600080fd5b8151610f4d610f48826115c6565b61159f565b91508181835260208401935060208101905083856020840282011115610f7257600080fd5b60005b83811015610f9e5781610f888882610f1d565b8452506020928301929190910190600101610f75565b5050505092915050565b600082601f830112610fb957600080fd5b8151610fc7610f48826115c6565b91508181835260208401935060208101905083856020840282011115610fec57600080fd5b60005b83811015610f9e57816110028882611048565b8452506020928301929190910190600101610fef565b6000610c7a8235611605565b6000610c7a8251611605565b6000610c7a8235611619565b6000610c7a8235611616565b6000610c7a8251611616565b60006020828403121561106657600080fd5b6000610df68484610f11565b60006020828403121561108457600080fd5b815167ffffffffffffffff81111561109b57600080fd5b610df684828501610f29565b600080604083850312156110ba57600080fd5b825167ffffffffffffffff8111156110d157600080fd5b6110dd85828601610fa8565b925050602083015167ffffffffffffffff8111156110fa57600080fd5b61110685828601610fa8565b9150509250929050565b60006020828403121561112257600080fd5b6000610df68484611024565b6000806040838503121561114157600080fd5b600061114d8585611030565b92505060206111068582860161103c565b60008060006060848603121561117357600080fd5b600061117f8686611030565b93505060206111908682870161103c565b92505060406111a186828701611018565b9150509250925092565b6000602082840312156111bd57600080fd5b6000610df68484611048565b60006111d583836111f8565b505060200190565b60006111d5838361142e565b6111f281611624565b82525050565b6111f2816115fa565b600061120c826115ed565b61121681856115f1565b9350611221836115e7565b60005b8281101561124c576112378683516111c9565b9550611242826115e7565b9150600101611224565b5093949350505050565b6000611261826115ed565b61126b81856115f1565b9350611276836115e7565b60005b8281101561124c5761128c8683516111dd565b9550611297826115e7565b9150600101611279565b6111f281611605565b6111f281611619565b60006112be826115ed565b6112c881856115f1565b93506112d881856020860161162f565b6112e18161165b565b9093019392505050565b60006112f8603f836115f1565b7f526562616c616e63696e6753657443546f6b656e4269646465722e626964416e81527f6457697468647261773a204572726f72206d696e74696e672063546f6b656e00602082015260400192915050565b60006113576026836115f1565b7f4552433230577261707065722e617070726f76653a204261642072657475726e81527f2076616c75650000000000000000000000000000000000000000000000000000602082015260400192915050565b60006113b66044836115f1565b7f526562616c616e63696e6753657443546f6b656e4269646465722e626964416e81527f6457697468647261773a204572726f72696e672072656465656d696e6720635460208201527f6f6b656e00000000000000000000000000000000000000000000000000000000604082015260600192915050565b6111f281611616565b602081016105b882846111f8565b6040810161145382856111f8565b610c7a60208301846111f8565b6080810161146e82876111f8565b61147b60208301866111e9565b61148860408301856111f8565b611495606083018461142e565b95945050505050565b606081016114ac82866111f8565b6114b960208301856111e9565b610df6604083018461142e565b604081016114d482856111f8565b610c7a602083018461142e565b606081016114ef82866111f8565b6114fc602083018561142e565b610df660408301846112a1565b6060808252810161151a8186611201565b9050818103602083015261152e8185611256565b905081810360408301526114958184611256565b602081016105b882846112aa565b60208082528101610c7a81846112b3565b602080825281016105b8816112eb565b602080825281016105b88161134a565b602080825281016105b8816113a9565b602081016105b8828461142e565b60405181810167ffffffffffffffff811182821017156115be57600080fd5b604052919050565b600067ffffffffffffffff8211156115dd57600080fd5b5060209081020190565b60200190565b5190565b90815260200190565b60006105b88261160a565b151590565b600160a060020a031690565b90565b60006105b8826115fa565b60006105b882611619565b60005b8381101561164a578181015183820152602001611632565b838111156104415750506000910152565b601f01601f19169056fea265627a7a7230582099eafa2553b1badd77a20bc9fd2103ee10ddeb45b258c2459266f664160b3c6f6c6578706572696d656e74616cf50037",deployedBytecode:"0x608060405234801561001057600080fd5b50600436106100655760e060020a6000350463108da80d811461006a57806358d65629146100955780636e667db3146100aa57806378551f2a146100bf578063b6ee8340146100d4578063d0d2ba3e146100f4575b600080fd5b61007d61007836600461112e565b6100fc565b60405161008c93929190611509565b60405180910390f35b61009d610297565b60405161008c9190611550565b6100b2610325565b60405161008c9190611542565b6100d26100cd36600461115e565b610334565b005b6100e76100e2366004611054565b610447565b60405161008c9190611437565b6100b2610462565b60608060608060608061010f8888610471565b9194509250905060005b835181101561028857600084828151811061013057fe5b602090810291909101810151600160a060020a038082166000908152600390935260409092205490925016801561027e578086848151811061016e57fe5b6020026020010190600160a060020a03169081600160a060020a031681525050600082600160a060020a031663182df0f56040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156101cc57600080fd5b505afa1580156101e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061020491908101906111ab565b9050600086858151811061021457fe5b60200260200101519050600086868151811061022c57fe5b602002602001015190506102408284610588565b88878151811061024c57fe5b6020026020010181815250506102628184610588565b87878151811061026e57fe5b6020026020010181815250505050505b5050600101610119565b50919450925090509250925092565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561031d5780601f106102f25761010080835404028352916020019161031d565b820191906000526020600020905b81548152906001019060200180831161030057829003601f168201915b505050505081565b600254600160a060020a031681565b60008054600101908190556060808061034d8787610471565b92509250925061035d83836105be565b6001546040517f78551f2a000000000000000000000000000000000000000000000000000000008152600160a060020a03909116906378551f2a906103aa908a908a908a906004016114e1565b600060405180830381600087803b1580156103c457600080fd5b505af11580156103d8573d6000803e3d6000fd5b505050506103e5836108dc565b33600160a060020a031687600160a060020a03167fe727afba8f141dbbc3e88d35235f4cca96c0d93dd6b0ff9fd7df40c91b0eb317886040516104289190611591565b60405180910390a3505050600054811461044157600080fd5b50505050565b600360205260009081526040902054600160a060020a031681565b600154600160a060020a031681565b60608060608085600160a060020a0316638618711c6040518163ffffffff1660e060020a02815260040160006040518083038186803b1580156104b357600080fd5b505afa1580156104c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104ef9190810190611072565b905060608087600160a060020a0316639b013aee886040518263ffffffff1660e060020a0281526004016105239190611591565b60006040518083038186803b15801561053b57600080fd5b505afa15801561054f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261057791908101906110a7565b939650945091925050509250925092565b60008061059b848463ffffffff610c5316565b905060006105a7610c81565b90506105b38282610c8d565b925050505b92915050565b60005b82518110156108d75760008382815181106105d857fe5b6020026020010151905060008383815181106105f057fe5b6020026020010151905060008111156108cd5760025461061d9083903090600160a060020a031684610cdb565b600160a060020a03808316600090815260036020526040902054168015610844576000839050600081600160a060020a031663bd6d894d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561068357600080fd5b505af1158015610697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106bb91908101906111ab565b905060006106c98583610588565b6040517f15dacbea00000000000000000000000000000000000000000000000000000000815290915073__ERC20Wrapper__________________________906315dacbea90610722908790339030908790600401611460565b60006040518083038186803b15801561073a57600080fd5b505af415801561074e573d6000803e3d6000fd5b5050505061075e84308584610cdb565b6040517fa0712d68000000000000000000000000000000000000000000000000000000008152600090600160a060020a0385169063a0712d68906107a6908590600401611591565b602060405180830381600087803b1580156107c057600080fd5b505af11580156107d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107f891908101906111ab565b9050801561083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290611561565b60405180910390fd5b505050506108cb565b6040517f15dacbea00000000000000000000000000000000000000000000000000000000815273__ERC20Wrapper__________________________906315dacbea9061089a908690339030908890600401611460565b60006040518083038186803b1580156108b257600080fd5b505af41580156108c6573d6000803e3d6000fd5b505050505b505b50506001016105c1565b505050565b60005b8151811015610c4f5760008282815181106108f657fe5b60200260200101519050600073__ERC20Wrapper__________________________63f7888aec83306040518363ffffffff1660e060020a02815260040161093e929190611445565b60206040518083038186803b15801561095657600080fd5b505af415801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061098e91908101906111ab565b90508015610c4557600160a060020a03808316600090815260036020526040902054168015610bbe576040517fdb006a75000000000000000000000000000000000000000000000000000000008152600090600160a060020a0385169063db006a75906109ff908690600401611591565b602060405180830381600087803b158015610a1957600080fd5b505af1158015610a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a5191908101906111ab565b90508015610a8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290611581565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815260009073__ERC20Wrapper__________________________9063f7888aec90610ae09086903090600401611445565b60206040518083038186803b158015610af857600080fd5b505af4158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b3091908101906111ab565b6040517fbeabacc800000000000000000000000000000000000000000000000000000000815290915073__ERC20Wrapper__________________________9063beabacc890610b879086903390869060040161149e565b60006040518083038186803b158015610b9f57600080fd5b505af4158015610bb3573d6000803e3d6000fd5b505050505050610c43565b6040517fbeabacc800000000000000000000000000000000000000000000000000000000815273__ERC20Wrapper__________________________9063beabacc890610c129086903390879060040161149e565b60006040518083038186803b158015610c2a57600080fd5b505af4158015610c3e573d6000803e3d6000fd5b505050505b505b50506001016108df565b5050565b600082610c62575060006105b8565b82820282848281610c6f57fe5b0414610c7a57600080fd5b9392505050565b670de0b6b3a764000090565b600080610ca0848463ffffffff610d0b16565b11610cba57610cb5838363ffffffff610d2816565b610c7a565b610c7a6001610ccf858563ffffffff610d2816565b9063ffffffff610d4a16565b6000610ce8858585610d5c565b905081811015610d0457610d048584610cff610dfe565b610e04565b5050505050565b600081610d1757600080fd5b818381610d2057fe5b069392505050565b6000808211610d3657600080fd5b6000828481610d4157fe5b04949350505050565b600082820183811015610c7a57600080fd5b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600090600160a060020a0385169063dd62ed3e90610da69086908690600401611445565b60206040518083038186803b158015610dbe57600080fd5b505afa158015610dd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610df691908101906111ab565b949350505050565b60001990565b6040517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0384169063095ea7b390610e4b90859085906004016114c6565b602060405180830381600087803b158015610e6557600080fd5b505af1158015610e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e9d9190810190611110565b50610ea6610edc565b6108d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290611571565b6000803d8015610ef35760208114610efc57610f08565b60019150610f08565b60206000803e60005191505b50600114905090565b6000610c7a82356115fa565b6000610c7a82516115fa565b600082601f830112610f3a57600080fd5b8151610f4d610f48826115c6565b61159f565b91508181835260208401935060208101905083856020840282011115610f7257600080fd5b60005b83811015610f9e5781610f888882610f1d565b8452506020928301929190910190600101610f75565b5050505092915050565b600082601f830112610fb957600080fd5b8151610fc7610f48826115c6565b91508181835260208401935060208101905083856020840282011115610fec57600080fd5b60005b83811015610f9e57816110028882611048565b8452506020928301929190910190600101610fef565b6000610c7a8235611605565b6000610c7a8251611605565b6000610c7a8235611619565b6000610c7a8235611616565b6000610c7a8251611616565b60006020828403121561106657600080fd5b6000610df68484610f11565b60006020828403121561108457600080fd5b815167ffffffffffffffff81111561109b57600080fd5b610df684828501610f29565b600080604083850312156110ba57600080fd5b825167ffffffffffffffff8111156110d157600080fd5b6110dd85828601610fa8565b925050602083015167ffffffffffffffff8111156110fa57600080fd5b61110685828601610fa8565b9150509250929050565b60006020828403121561112257600080fd5b6000610df68484611024565b6000806040838503121561114157600080fd5b600061114d8585611030565b92505060206111068582860161103c565b60008060006060848603121561117357600080fd5b600061117f8686611030565b93505060206111908682870161103c565b92505060406111a186828701611018565b9150509250925092565b6000602082840312156111bd57600080fd5b6000610df68484611048565b60006111d583836111f8565b505060200190565b60006111d5838361142e565b6111f281611624565b82525050565b6111f2816115fa565b600061120c826115ed565b61121681856115f1565b9350611221836115e7565b60005b8281101561124c576112378683516111c9565b9550611242826115e7565b9150600101611224565b5093949350505050565b6000611261826115ed565b61126b81856115f1565b9350611276836115e7565b60005b8281101561124c5761128c8683516111dd565b9550611297826115e7565b9150600101611279565b6111f281611605565b6111f281611619565b60006112be826115ed565b6112c881856115f1565b93506112d881856020860161162f565b6112e18161165b565b9093019392505050565b60006112f8603f836115f1565b7f526562616c616e63696e6753657443546f6b656e4269646465722e626964416e81527f6457697468647261773a204572726f72206d696e74696e672063546f6b656e00602082015260400192915050565b60006113576026836115f1565b7f4552433230577261707065722e617070726f76653a204261642072657475726e81527f2076616c75650000000000000000000000000000000000000000000000000000602082015260400192915050565b60006113b66044836115f1565b7f526562616c616e63696e6753657443546f6b656e4269646465722e626964416e81527f6457697468647261773a204572726f72696e672072656465656d696e6720635460208201527f6f6b656e00000000000000000000000000000000000000000000000000000000604082015260600192915050565b6111f281611616565b602081016105b882846111f8565b6040810161145382856111f8565b610c7a60208301846111f8565b6080810161146e82876111f8565b61147b60208301866111e9565b61148860408301856111f8565b611495606083018461142e565b95945050505050565b606081016114ac82866111f8565b6114b960208301856111e9565b610df6604083018461142e565b604081016114d482856111f8565b610c7a602083018461142e565b606081016114ef82866111f8565b6114fc602083018561142e565b610df660408301846112a1565b6060808252810161151a8186611201565b9050818103602083015261152e8185611256565b905081810360408301526114958184611256565b602081016105b882846112aa565b60208082528101610c7a81846112b3565b602080825281016105b8816112eb565b602080825281016105b88161134a565b602080825281016105b8816113a9565b602081016105b8828461142e565b60405181810167ffffffffffffffff811182821017156115be57600080fd5b604052919050565b600067ffffffffffffffff8211156115dd57600080fd5b5060209081020190565b60200190565b5190565b90815260200190565b60006105b88261160a565b151590565b600160a060020a031690565b90565b60006105b8826115fa565b60006105b882611619565b60005b8381101561164a578181015183820152602001611632565b838111156104415750506000910152565b601f01601f19169056fea265627a7a7230582099eafa2553b1badd77a20bc9fd2103ee10ddeb45b258c2459266f664160b3c6f6c6578706572696d656e74616cf50037",
sourceMap:"1655:12165:115:-;;;2857:1381;8:9:-1;5:2;;;30:1;27;20:12;5:2;2857:1381:115;;;;;;;;;;;;;;;;;;;;;;;;576:1:171;560:13;:17;;;3122:48:115;;-1:-1:-1;;;;;3122:48:115;;;-1:-1:-1;;;;;;3122:48:115;;;;;;;3181:13;:30;;;;;;;;;;;;;;;3222:34;;;;:15;;:34;;;;;:::i;:::-;;3311:16;:23;3288:12;:19;:46;3267:186;;;;;;;;;;;;;;;;;;;;;;3469:9;3464:768;3488:12;:19;3484:1;:23;3464:768;;;3528:21;3552:12;3565:1;3552:15;;;;;;;;;;;;;;3528:39;;3581:25;3609:16;3626:1;3609:19;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3701:33:115;;;;;;;:18;:33;;;;;;;:53;;-1:-1:-1;;;;;;3701:53:115;;;;;;;;;;;3609:19;-1:-1:-1;3845:141:115;3609:19;3701:33;3949:23;:21;;;;;;:23;:::i;:::-;3845:20;;;;;;:141;:::i;:::-;4074:147;4112:13;4151:14;4184:23;:21;;;;;;:23;:::i;4074:147::-;-1:-1:-1;;3509:3:115;;3464:768;;;;2857:1381;;;;;1655:12165;;1220:118:176;-1:-1:-1;;1220:118:176;;:::o;4042:342:118:-;4173:43;;;;;-1:-1:-1;;;;;4173:22:118;;;;;:43;;4196:8;;4206:9;;4173:43;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4173:43:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4173:43:118;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4173:43:118;;;;;;;;;-1:-1:-1;4299:14:118;:12;;;;:14;:::i;:::-;4278:99;;;;;;;;;;;;;;4042:342;;;:::o;5392:852::-;5467:4;;5651:14;5728:57;;;;5837:4;5832:220;;;;5644:497;;5728:57;5770:1;5755:16;;5728:57;;5832:220;5937:4;5932:3;5927;5912:30;6034:3;6028:10;6013:25;;5644:497;-1:-1:-1;6236:1:118;6221:16;;-1:-1:-1;5392:852:118;:::o;1655:12165:115:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1655:12165:115;;;-1:-1:-1;1655:12165:115;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:122:-1;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;152:722;;280:3;273:4;265:6;261:17;257:27;247:2;;298:1;295;288:12;247:2;328:6;322:13;350:80;365:64;422:6;365:64;;;350:80;;;341:89;;447:5;472:6;465:5;458:21;502:4;494:6;490:17;480:27;;524:4;519:3;515:14;508:21;;577:6;624:3;616:4;608:6;604:17;599:3;595:27;592:36;589:2;;;641:1;638;631:12;589:2;666:1;651:217;676:6;673:1;670:13;651:217;;;734:3;756:48;800:3;788:10;756:48;;;744:61;;-1:-1;828:4;819:14;;;;847;;;;;698:1;691:9;651:217;;;655:14;240:634;;;;;;;;882:116;;957:36;985:6;979:13;957:36;;1005:186;;1115:71;1178:6;1172:13;1115:71;;1374:444;;1487:3;1480:4;1472:6;1468:17;1464:27;1454:2;;1505:1;1502;1495:12;1454:2;1535:6;1529:13;1557:65;1572:49;1614:6;1572:49;;1557:65;1548:74;;1642:6;1635:5;1628:21;1678:4;1670:6;1666:17;1711:4;1704:5;1700:16;1746:3;1737:6;1732:3;1728:16;1725:25;1722:2;;;1763:1;1760;1753:12;1722:2;1773:39;1805:6;1800:3;1795;1773:39;;;1447:371;;;;;;;;1826:257;;1938:2;1926:9;1917:7;1913:23;1909:32;1906:2;;;1954:1;1951;1944:12;1906:2;1989:1;2006:61;2059:7;2039:9;2006:61;;;1996:71;1900:183;-1:-1;;;;1900:183;2090:1276;;;;;;2388:3;2376:9;2367:7;2363:23;2359:33;2356:2;;;2405:1;2402;2395:12;2356:2;2440:1;2457:96;2545:7;2525:9;2457:96;;;2447:106;;2419:140;2590:2;2608:87;2687:7;2678:6;2667:9;2663:22;2608:87;;;2598:97;;2569:132;2753:2;2742:9;2738:18;2732:25;-1:-1;;;;;2769:6;2766:30;2763:2;;;2809:1;2806;2799:12;2763:2;2829:89;2910:7;2901:6;2890:9;2886:22;2829:89;;;2819:99;;2711:213;2976:2;2965:9;2961:18;2955:25;-1:-1;;;;;2992:6;2989:30;2986:2;;;3032:1;3029;3022:12;2986:2;3052:89;3133:7;3124:6;3113:9;3109:22;3052:89;;;3042:99;;2934:213;3199:3;3188:9;3184:19;3178:26;-1:-1;;;;;3216:6;3213:30;3210:2;;;3256:1;3253;3246:12;3210:2;3276:74;3342:7;3333:6;3322:9;3318:22;3276:74;;;3266:84;;3157:199;2350:1016;;;;;;;;;3373:120;3456:31;3481:5;3456:31;;;3451:3;3444:44;3438:55;;;3501:566;;3661:67;3725:2;3720:3;3661:67;;;3761:66;3741:87;;3862:66;3857:2;3848:12;;3841:88;3963:66;3958:2;3949:12;;3942:88;4058:2;4049:12;;3647:420;-1:-1;;3647:420;4076:465;;4236:67;4300:2;4295:3;4236:67;;;4336:66;4316:87;;4437:66;4432:2;4423:12;;4416:88;4532:2;4523:12;;4222:319;-1:-1;;4222:319;4549:120;4632:31;4657:5;4632:31;;4676:324;4822:2;4807:18;;4836:71;4811:9;4880:6;4836:71;;;4918:72;4986:2;4975:9;4971:18;4962:6;4918:72;;5007:407;5198:2;5212:47;;;5183:18;;5273:131;5183:18;5273:131;;;5265:139;5169:245;-1:-1;;5169:245;5421:407;5612:2;5626:47;;;5597:18;;5687:131;5597:18;5687:131;;5835:256;5897:2;5891:9;5923:17;;;-1:-1;;;;;5983:34;;6019:22;;;5980:62;5977:2;;;6055:1;6052;6045:12;5977:2;6071;6064:22;5875:216;;-1:-1;5875:216;6098:258;;-1:-1;;;;;6249:6;6246:30;6243:2;;;6289:1;6286;6279:12;6243:2;-1:-1;6318:4;6306:17;;;6336:15;;6180:176;6363:259;;-1:-1;;;;;6499:6;6496:30;6493:2;;;6539:1;6536;6529:12;6493:2;-1:-1;6612:4;6583;6560:17;;;;-1:-1;;6556:33;6602:15;;6430:192;6630:163;6733:19;;;6782:4;6773:14;;6726:67;6801:105;;-1:-1;;;;;6982:54;;6870:31;6965:76;7246:92;7319:13;7312:21;;7295:43;7345:137;;7446:31;7471:5;7446:31;;7760:268;7825:1;7832:101;7846:6;7843:1;7840:13;7832:101;;;7913:11;;;7907:18;7894:11;;;7887:39;7868:2;7861:10;7832:101;;;7948:6;7945:1;7942:13;7939:2;;;8013:1;8004:6;7999:3;7995:16;7988:27;7939:2;7809:219;;;;;;1655:12165:115;;;;;;",deployedSourceMap:"1655:12165:115:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:12165:115;;;;;;-1:-1:-1;;;1655:12165:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6545:1732;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2092:29;;;:::i;:::-;;;;;;;;1934:35;;;:::i;:::-;;;;;;;;4827:1142;;;;;;;;;:::i;:::-;;2031:54;;;;;;;;;:::i;:::-;;;;;;;;1820:53;;;:::i;6545:1732::-;6712:16;6730;6748;6854:35;6903:33;6950:34;6997:56;7021:20;7043:9;6997:23;:56::i;:::-;6840:213;;-1:-1:-1;6840:213:115;-1:-1:-1;6840:213:115;-1:-1:-1;7164:9:115;7159:1037;7183:18;:25;7179:1;:29;7159:1037;;;7229:31;7263:18;7282:1;7263:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7389:43:115;;;7361:25;7389:43;;;:18;:43;;;;;;;;7263:21;;-1:-1:-1;7389:43:115;7450:31;;7446:740;;7525:17;7501:18;7520:1;7501:21;;;;;;;;;;;;;:41;-1:-1:-1;;;;;7501:41:115;;;-1:-1:-1;;;;;7501:41:115;;;;;7720:20;7751:23;-1:-1:-1;;;;;7743:51:115;;:53;;;;;-1:-1:-1;;;7743:53:115;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7743:53:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7743:53:115;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7743:53:115;;;;;;;;;7720:76;;7814:29;7846:16;7863:1;7846:19;;;;;;;;;;;;;;7814:51;;7883:30;7916:17;7934:1;7916:20;;;;;;;;;;;;;;7883:53;;7977:76;8017:21;8040:12;7977:39;:76::i;:::-;7955:16;7972:1;7955:19;;;;;;;;;;;;;:98;;;;;8094:77;8134:22;8158:12;8094:39;:77::i;:::-;8071:17;8089:1;8071:20;;;;;;;;;;;;;:100;;;;;7446:740;;;;-1:-1:-1;;7210:3:115;;7159:1037;;;-1:-1:-1;8214:18:115;;-1:-1:-1;8234:16:115;-1:-1:-1;8252:17:115;-1:-1:-1;6545:1732:115;;;;;:::o;2092:29::-;;;;;;;;;;;;;;;-1:-1:-1;;2092:29:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1934:35::-;;;-1:-1:-1;;;;;1934:35:115;;:::o;4827:1142::-;993:13:171;:18;;1010:1;993:18;;;;;5093:35:115;;;5236:56;5260:20;5282:9;5236:23;:56::i;:::-;5079:213;;;;;;5384:89;5415:18;5447:16;5384:17;:89::i;:::-;5510:22;;:144;;;;;-1:-1:-1;;;;;5510:22:115;;;;:37;;:144;;5569:20;;5604:9;;5627:17;;5510:144;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5510:144:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5510:144:115;;;;5722:68;5762:18;5722:26;:68::i;:::-;5919:10;-1:-1:-1;;;;;5847:115:115;5884:20;-1:-1:-1;;;;;5847:115:115;;5943:9;5847:115;;;;;;;;;;;;;;;1067:1:171;;;1102:13;;1086:12;:29;1078:38;;;;;;4827:1142:115;;;;:::o;2031:54::-;;;;;;;;;;;;-1:-1:-1;;;;;2031:54:115;;:::o;1820:53::-;;;-1:-1:-1;;;;;1820:53:115;;:::o;2225:627:43:-;2379:16;2397;2415;2478:35;2516:20;-1:-1:-1;;;;;2516:42:43;;:44;;;;;-1:-1:-1;;;2516:44:43;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2516:44:43;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2516:44:43;;;;;;39:16:-1;36:1;17:17;2:54;101:4;2516:44:43;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;2516:44:43;;;;;;;;;2478:82;;2653:28;2695:29;2737:20;-1:-1:-1;;;;;2737:32:43;;2770:9;2737:43;;;;;-1:-1:-1;;;2737:43:43;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2737:43:43;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2737:43:43;;;;;;39:16:-1;36:1;17:17;2:54;101:4;2737:43:43;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;2737:43:43;;;;;;;;;2799:18;;-1:-1:-1;2639:141:43;-1:-1:-1;2639:141:43;;-1:-1:-1;;;2225:627:43;;;;;:::o;1322:450:178:-;1466:7;;1613:38;:13;1631:19;1613:38;:17;:38;:::i;:::-;1601:50;;1661:9;1673:24;:22;:24::i;:::-;1661:36;;1741:24;1760:1;1763;1741:18;:24::i;:::-;1734:31;;;;1322:450;;;;;:::o;8639:2886:115:-;8883:9;8878:2641;8902:19;:26;8898:1;:30;8878:2641;;;8949:31;8983:19;9003:1;8983:22;;;;;;;;;;;;;;8949:56;;9019:32;9054:17;9072:1;9054:20;;;;;;;;;;;;;;9019:55;;9176:1;9149:24;:28;9145:2364;;;9403:13;;9265:216;;9315:23;;9368:4;;-1:-1:-1;;;;;9403:13:115;9439:24;9265:28;:216::i;:::-;-1:-1:-1;;;;;9698:43:115;;;9670:25;9698:43;;;:18;:43;;;;;;;9763:31;;9759:1736;;9818:22;9851:23;9818:57;;10019:20;10042:14;-1:-1:-1;;;;;10042:34:115;;:36;;;;;-1:-1:-1;;;10042:36:115;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10042:36:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10042:36:115;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10042:36:115;;;;;;;;;10019:59;;10100:26;10129:79;10169:24;10195:12;10129:39;:79::i;:::-;10293:209;;;;;10100:108;;-1:-1:-1;10293:12:115;;:25;;:209;;10344:17;;10387:10;;10431:4;;10100:108;;10293:209;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10293:209:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10293:209:115;;;;10605:225;10659:17;10710:4;10749:14;10790:18;10605:28;:225::i;:::-;10928:39;;;;;10905:20;;-1:-1:-1;;;;;10928:19:115;;;;;:39;;10948:18;;10928:39;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10928:39:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10928:39:115;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10928:39:115;;;;;;;;;10905:62;-1:-1:-1;11022:17:115;;10989:163;;;;;;;;;;;;;;;;;;;;;;9759:1736;;;;;;;11255:221;;;;;:12;;:25;;:221;;11306:23;;11355:10;;11399:4;;11430:24;;11255:221;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11255:221:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11255:221:115;;;;9759:1736;9145:2364;;-1:-1:-1;;8930:3:115;;8878:2641;;;;8639:2886;;:::o;11748:2070::-;11960:9;11955:1857;11979:19;:26;11975:1;:30;11955:1857;;;12026:31;12060:19;12080:1;12060:22;;;;;;;;;;;;;;12026:56;;12158:31;12192:12;:22;12232:23;12281:4;12192:108;;;;;-1:-1:-1;;;12192:108:115;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12192:108:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12192:108:115;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12192:108:115;;;;;;;;;12158:142;-1:-1:-1;12376:27:115;;12372:1430;;-1:-1:-1;;;;;12486:43:115;;;12458:25;12486:43;;;:18;:43;;;;;;;12551:31;;12547:1241;;12682:64;;;;;12659:20;;-1:-1:-1;;;;;12682:39:115;;;;;:64;;12722:23;;12682:64;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12682:64:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12682:64:115;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12682:64:115;;;;;;;;;12659:87;-1:-1:-1;12801:17:115;;12768:168;;;;;;;;;;;;;;13057:126;;;;;13020:34;;13057:12;;:22;;:126;;13105:17;;13156:4;;13057:126;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13057:126:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13057:126:115;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13057:126:115;;;;;;;;;13288:174;;;;;13020:163;;-1:-1:-1;13288:12:115;;:21;;:174;;13335:17;;13378:10;;13020:163;;13288:174;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13288:174:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13288:174:115;;;;12547:1241;;;;;13592:177;;;;;:12;;:21;;:177;;13639:23;;13688:10;;13724:23;;13592:177;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13592:177:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13592:177:115;;;;12547:1241;12372:1430;;-1:-1:-1;;12007:3:115;;11955:1857;;;;11748:2070;:::o;231:421:166:-;289:7;529:6;525:45;;-1:-1:-1;558:1:166;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;;644:1;231:421;-1:-1:-1;;;231:421:166:o;964:119:176:-;798:8;964:119;:::o;2513:163::-;2598:7;;2628:8;:1;2634;2628:8;:5;:8;:::i;:::-;:12;:41;;2661:8;:1;2667;2661:8;:5;:8;:::i;:::-;2628:41;;;2643:15;2656:1;2643:8;:1;2649;2643:8;:5;:8;:::i;:::-;:12;:15;:12;:15;:::i;4766:412:118:-;4929:24;4956:35;4966:6;4974;4982:8;4956:9;:35::i;:::-;4929:62;;5024:9;5005:16;:28;5001:171;;;5049:112;5074:6;5098:8;5124:23;:21;:23::i;:::-;5049:7;:112::i;:::-;4766:412;;;;;:::o;1739:121:166:-;1797:7;1824:6;1816:15;;;;;;1852:1;1848;:5;;;;;;;1739:121;-1:-1:-1;;;1739:121:166:o;782:296::-;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;;782:296;-1:-1:-1;;;;782:296:166:o;1439:145::-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;1953:225:118;2129:42;;;;;2099:7;;-1:-1:-1;;;;;2129:24:118;;;;;:42;;2154:6;;2162:8;;2129:42;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2129:42:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2129:42:118;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2129:42:118;;;;;;;;;2122:49;1953:225;-1:-1:-1;;;;1953:225:118:o;1220:118:176:-;-1:-1:-1;;1220:118:176;:::o;4042:342:118:-;4173:43;;;;;-1:-1:-1;;;;;4173:22:118;;;;;:43;;4196:8;;4206:9;;4173:43;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4173:43:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4173:43:118;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4173:43:118;;;;;;;;;;4299:14;:12;:14::i;:::-;4278:99;;;;;;;;;;;;;5392:852;5467:4;;5651:14;5728:57;;;;5837:4;5832:220;;;;5644:497;;5728:57;5770:1;5755:16;;5728:57;;5832:220;5937:4;5932:3;5927;5912:30;6034:3;6028:10;6013:25;;5644:497;-1:-1:-1;6236:1:118;6221:16;;-1:-1:-1;5392:852:118;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;130:122;;208:39;239:6;233:13;208:39;;277:722;;405:3;398:4;390:6;386:17;382:27;372:2;;423:1;420;413:12;372:2;453:6;447:13;475:80;490:64;547:6;490:64;;;475:80;;;466:89;;572:5;597:6;590:5;583:21;627:4;619:6;615:17;605:27;;649:4;644:3;640:14;633:21;;702:6;749:3;741:4;733:6;729:17;724:3;720:27;717:36;714:2;;;766:1;763;756:12;714:2;791:1;776:217;801:6;798:1;795:13;776:217;;;859:3;881:48;925:3;913:10;881:48;;;869:61;;-1:-1;953:4;944:14;;;;972;;;;;823:1;816:9;776:217;;;780:14;365:634;;;;;;;;1025:722;;1153:3;1146:4;1138:6;1134:17;1130:27;1120:2;;1171:1;1168;1161:12;1120:2;1201:6;1195:13;1223:80;1238:64;1295:6;1238:64;;1223:80;1214:89;;1320:5;1345:6;1338:5;1331:21;1375:4;1367:6;1363:17;1353:27;;1397:4;1392:3;1388:14;1381:21;;1450:6;1497:3;1489:4;1481:6;1477:17;1472:3;1468:27;1465:36;1462:2;;;1514:1;1511;1504:12;1462:2;1539:1;1524:217;1549:6;1546:1;1543:13;1524:217;;;1607:3;1629:48;1673:3;1661:10;1629:48;;;1617:61;;-1:-1;1701:4;1692:14;;;;1720;;;;;1571:1;1564:9;1524:217;;1755:112;;1819:43;1854:6;1841:20;1819:43;;1874:116;;1949:36;1977:6;1971:13;1949:36;;1997:176;;2093:75;2160:6;2147:20;2093:75;;2180:118;;2247:46;2285:6;2272:20;2247:46;;2305:122;;2383:39;2414:6;2408:13;2383:39;;2434:241;;2538:2;2526:9;2517:7;2513:23;2509:32;2506:2;;;2554:1;2551;2544:12;2506:2;2589:1;2606:53;2651:7;2631:9;2606:53;;2682:392;;2822:2;2810:9;2801:7;2797:23;2793:32;2790:2;;;2838:1;2835;2828:12;2790:2;2873:24;;2917:18;2906:30;;2903:2;;;2949:1;2946;2939:12;2903:2;2969:89;3050:7;3041:6;3030:9;3026:22;2969:89;;3081:657;;;3263:2;3251:9;3242:7;3238:23;3234:32;3231:2;;;3279:1;3276;3269:12;3231:2;3314:24;;3358:18;3347:30;;3344:2;;;3390:1;3387;3380:12;3344:2;3410:89;3491:7;3482:6;3471:9;3467:22;3410:89;;;3400:99;;3293:212;3557:2;3546:9;3542:18;3536:25;3581:18;3573:6;3570:30;3567:2;;;3613:1;3610;3603:12;3567:2;3633:89;3714:7;3705:6;3694:9;3690:22;3633:89;;;3623:99;;3515:213;3225:513;;;;;;3745:257;;3857:2;3845:9;3836:7;3832:23;3828:32;3825:2;;;3873:1;3870;3863:12;3825:2;3908:1;3925:61;3978:7;3958:9;3925:61;;4009:424;;;4159:2;4147:9;4138:7;4134:23;4130:32;4127:2;;;4175:1;4172;4165:12;4127:2;4210:1;4227:82;4301:7;4281:9;4227:82;;;4217:92;;4189:126;4346:2;4364:53;4409:7;4400:6;4389:9;4385:22;4364:53;;4440:543;;;;4604:2;4592:9;4583:7;4579:23;4575:32;4572:2;;;4620:1;4617;4610:12;4572:2;4655:1;4672:82;4746:7;4726:9;4672:82;;;4662:92;;4634:126;4791:2;4809:53;4854:7;4845:6;4834:9;4830:22;4809:53;;;4799:63;;4770:98;4899:2;4917:50;4959:7;4950:6;4939:9;4935:22;4917:50;;;4907:60;;4878:95;4566:417;;;;;;4990:263;;5105:2;5093:9;5084:7;5080:23;5076:32;5073:2;;;5121:1;5118;5111:12;5073:2;5156:1;5173:64;5229:7;5209:9;5173:64;;5261:173;;5348:46;5390:3;5382:6;5348:46;;;-1:-1;;5423:4;5414:14;;5341:93;5443:173;;5530:46;5572:3;5564:6;5530:46;;5624:150;5723:45;5762:5;5723:45;;;5718:3;5711:58;5705:69;;;5781:110;5854:31;5879:5;5854:31;;6191:621;;6336:54;6384:5;6336:54;;;6403:86;6482:6;6477:3;6403:86;;;6396:93;;6509:56;6559:5;6509:56;;;6586:1;6571:219;6596:6;6593:1;6590:13;6571:219;;;6643:63;6702:3;6693:6;6687:13;6643:63;;;6636:70;;6723:60;6776:6;6723:60;;;6713:70;-1:-1;6618:1;6611:9;6571:219;;;-1:-1;6803:3;;6315:497;-1:-1;;;;6315:497;6851:621;;6996:54;7044:5;6996:54;;;7063:86;7142:6;7137:3;7063:86;;;7056:93;;7169:56;7219:5;7169:56;;;7246:1;7231:219;7256:6;7253:1;7250:13;7231:219;;;7303:63;7362:3;7353:6;7347:13;7303:63;;;7296:70;;7383:60;7436:6;7383:60;;;7373:70;-1:-1;7278:1;7271:9;7231:219;;7480:111;7557:28;7579:5;7557:28;;7598:190;7713:69;7776:5;7713:69;;7974:339;;8082:35;8111:5;8082:35;;;8129:71;8193:6;8188:3;8129:71;;;8122:78;;8205:52;8250:6;8245:3;8238:4;8231:5;8227:16;8205:52;;;8278:29;8300:6;8278:29;;;8269:39;;;;8062:251;-1:-1;;;8062:251;8321:465;;8481:67;8545:2;8540:3;8481:67;;;8581:66;8561:87;;8682:66;8677:2;8668:12;;8661:88;8777:2;8768:12;;8467:319;-1:-1;;8467:319;8795:465;;8955:67;9019:2;9014:3;8955:67;;;9055:66;9035:87;;9156:66;9151:2;9142:12;;9135:88;9251:2;9242:12;;8941:319;-1:-1;;8941:319;9269:566;;9429:67;9493:2;9488:3;9429:67;;;9529:66;9509:87;;9630:66;9625:2;9616:12;;9609:88;9731:66;9726:2;9717:12;;9710:88;9826:2;9817:12;;9415:420;-1:-1;;9415:420;9843:110;9916:31;9941:5;9916:31;;10222:213;10340:2;10325:18;;10354:71;10329:9;10398:6;10354:71;;10442:324;10588:2;10573:18;;10602:71;10577:9;10646:6;10602:71;;;10684:72;10752:2;10741:9;10737:18;10728:6;10684:72;;11128:603;11346:3;11331:19;;11361:79;11335:9;11413:6;11361:79;;;11451:88;11535:2;11524:9;11520:18;11511:6;11451:88;;;11550:80;11626:2;11615:9;11611:18;11602:6;11550:80;;;11641;11717:2;11706:9;11702:18;11693:6;11641:80;;;11317:414;;;;;;;;11738:483;11928:2;11913:18;;11942:79;11917:9;11994:6;11942:79;;;12032:88;12116:2;12105:9;12101:18;12092:6;12032:88;;;12131:80;12207:2;12196:9;12192:18;12183:6;12131:80;;12228:324;12374:2;12359:18;;12388:71;12363:9;12432:6;12388:71;;;12470:72;12538:2;12527:9;12523:18;12514:6;12470:72;;12559:423;12727:2;12712:18;;12741:71;12716:9;12785:6;12741:71;;;12823:72;12891:2;12880:9;12876:18;12867:6;12823:72;;;12906:66;12968:2;12957:9;12953:18;12944:6;12906:66;;12989:879;13313:2;13327:47;;;13298:18;;13388:108;13298:18;13482:6;13388:108;;;13380:116;;13544:9;13538:4;13534:20;13529:2;13518:9;13514:18;13507:48;13569:108;13672:4;13663:6;13569:108;;;13561:116;;13725:9;13719:4;13715:20;13710:2;13699:9;13695:18;13688:48;13750:108;13853:4;13844:6;13750:108;;13875:277;14025:2;14010:18;;14039:103;14014:9;14115:6;14039:103;;14425:293;14559:2;14573:47;;;14544:18;;14634:74;14544:18;14694:6;14634:74;;14725:407;14916:2;14930:47;;;14901:18;;14991:131;14901:18;14991:131;;15139:407;15330:2;15344:47;;;15315:18;;15405:131;15315:18;15405:131;;15553:407;15744:2;15758:47;;;15729:18;;15819:131;15729:18;15819:131;;15967:213;16085:2;16070:18;;16099:71;16074:9;16143:6;16099:71;;16187:256;16249:2;16243:9;16275:17;;;16350:18;16335:34;;16371:22;;;16332:62;16329:2;;;16407:1;16404;16397:12;16329:2;16423;16416:22;16227:216;;-1:-1;16227:216;16450:258;;16609:18;16601:6;16598:30;16595:2;;;16641:1;16638;16631:12;16595:2;-1:-1;16670:4;16658:17;;;16688:15;;16532:176;16982:121;17091:4;17079:17;;17060:43;17244:107;17334:12;;17318:33;17830:178;17948:19;;;17997:4;17988:14;;17941:67;18375:105;;18444:31;18469:5;18444:31;;18487:92;18560:13;18553:21;;18536:43;18586:128;-1:-1;;;;;18655:54;;18638:76;18721:79;18790:5;18773:27;19018:134;;19116:31;19141:5;19116:31;;19380:129;;19467:37;19498:5;19467:37;;20432:268;20497:1;20504:101;20518:6;20515:1;20512:13;20504:101;;;20585:11;;;20579:18;20566:11;;;20559:39;20540:2;20533:10;20504:101;;;20620:6;20617:1;20614:13;20611:2;;;-1:-1;;20685:1;20667:16;;20660:27;20481:219;20708:97;20796:2;20776:14;-1:-1;;20772:28;;20756:49",source:'    /*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { ReentrancyGuard } from "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol";\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\nimport { CommonMath } from "set-protocol-contract-utils/contracts/lib/CommonMath.sol";\nimport { CompoundUtils } from "set-protocol-contract-utils/contracts/lib/CompoundUtils.sol";\n\nimport { ERC20Wrapper } from "../lib/ERC20Wrapper.sol";\nimport { ICToken } from "../core/interfaces/ICToken.sol";\nimport { IRebalanceAuctionModule } from "../core/interfaces/IRebalanceAuctionModule.sol";\nimport { IRebalancingSetToken } from "../core/interfaces/IRebalancingSetToken.sol";\nimport { ITransferProxy } from "../core/interfaces/ITransferProxy.sol";\nimport { Rebalance } from "../core/lib/Rebalance.sol";\n\n\n/**\n * @title RebalancingSetCTokenBidder\n * @author Set Protocol\n *\n * A helper contract that mints a cToken from its underlying or redeems a cToken into \n * its underlying used for bidding in the RebalanceAuctionModule.\n */\ncontract RebalancingSetCTokenBidder is\n    ReentrancyGuard\n{\n    using SafeMath for uint256;\n    \n    // Address and instance of RebalanceAuctionModule contract\n    IRebalanceAuctionModule public rebalanceAuctionModule;\n\n    // Address and instance of TransferProxy contract\n    ITransferProxy public transferProxy;\n\n    // Mapping of cToken address to underlying address\n    mapping (address => address) public cTokenToUnderlying;\n\n    string public dataDescription;\n\n    /* ============ Events ============ */\n\n    event BidPlacedCToken(\n        address indexed rebalancingSetToken,\n        address indexed bidder,\n        uint256 quantity\n    );\n\n    /* ============ Constructor ============ */\n\n    /**\n     * Constructor function for RebalancingSetCTokenBidder\n     *\n     * @param _rebalanceAuctionModule   The address of RebalanceAuctionModule\n     * @param _transferProxy            The address of TransferProxy\n     * @param _cTokenArray              The address array of the target cToken\n     * @param _underlyingArray          The address array of the target cToken\'s underlying\n     * @param _dataDescription          Description of contract for Etherscan / other applications\n     */\n    constructor(\n        IRebalanceAuctionModule _rebalanceAuctionModule,\n        ITransferProxy _transferProxy,\n        address[] memory _cTokenArray,\n        address[] memory _underlyingArray,\n        string memory _dataDescription\n    )\n        public\n    {\n        rebalanceAuctionModule = _rebalanceAuctionModule;\n\n        transferProxy = _transferProxy;\n\n        dataDescription = _dataDescription;\n\n        require(\n            _cTokenArray.length == _underlyingArray.length,\n            "RebalancingSetCTokenBidder.constructor: cToken array and underlying array must be same length"\n        );\n\n        for (uint256 i = 0; i < _cTokenArray.length; i++) {\n            address cTokenAddress = _cTokenArray[i];\n            address underlyingAddress = _underlyingArray[i];\n\n            // Initialize mapping of cToken to underlying\n            cTokenToUnderlying[cTokenAddress] = underlyingAddress;\n\n            // Add approvals of the underlying token to the cToken contract\n            ERC20Wrapper.approve(\n                underlyingAddress,\n                cTokenAddress,\n                CommonMath.maxUInt256()\n            );\n\n            // Add approvals of the cToken to the transferProxy contract\n            ERC20Wrapper.approve(\n                cTokenAddress,\n                address(_transferProxy),\n                CommonMath.maxUInt256()\n            );\n        }\n    }\n\n    /* ============ External Functions ============ */\n\n    /**\n     * Bid on rebalancing a given quantity of sets held by a rebalancing token wrapping or unwrapping\n     * a target cToken involved. The tokens are returned to the user.\n     *\n     * @param  _rebalancingSetToken    Instance of the rebalancing token being bid on\n     * @param  _quantity               Number of currentSets to rebalance\n     * @param  _allowPartialFill       Set to true if want to partially fill bid when quantity\n                                       is greater than currentRemainingSets\n     */\n\n    function bidAndWithdraw(\n        IRebalancingSetToken _rebalancingSetToken,\n        uint256 _quantity,\n        bool _allowPartialFill\n    )\n        external\n        nonReentrant\n    {\n        // Get token flow arrays for the given bid quantity\n        (\n            address[] memory combinedTokenArray,\n            uint256[] memory inflowUnitsArray,\n            uint256[] memory outflowUnitsArray\n        ) = Rebalance.getTokenFlows(_rebalancingSetToken, _quantity);\n\n        // Ensure allowances and transfer auction tokens or underlying from user\n        depositComponents(\n            combinedTokenArray,\n            inflowUnitsArray\n        );\n\n        // Bid in auction\n        rebalanceAuctionModule.bidAndWithdraw(\n            address(_rebalancingSetToken),\n            _quantity,\n            _allowPartialFill\n        );\n\n        // Withdraw auction tokens or underlying to user\n        withdrawComponentsToSender(\n            combinedTokenArray\n        );\n\n        // Log bid placed with Eth event\n        emit BidPlacedCToken(\n            address(_rebalancingSetToken),\n            msg.sender,\n            _quantity\n        );\n    }\n\n    /*\n     * Get token inflows and outflows and combined token array denominated in underlying required\n     * for bid for a given rebalancing Set token.\n     *\n     * @param _rebalancingSetToken    The rebalancing Set Token instance\n     * @param _quantity               The amount of currentSet to be rebalanced\n     * @return combinedTokenArray     Array of token addresses\n     * @return inflowUnitsArray       Array of amount of tokens inserted into system in bid\n     * @return outflowUnitsArray      Array of amount of tokens returned from system in bid\n     */\n    function getAddressAndBidPriceArray(\n        IRebalancingSetToken _rebalancingSetToken,\n        uint256 _quantity\n    )\n        external\n        view\n        returns (address[] memory, uint256[] memory, uint256[] memory)\n    {\n        // Get token flow arrays for the given bid quantity\n        (\n            address[] memory combinedTokenArray,\n            uint256[] memory inflowUnitsArray,\n            uint256[] memory outflowUnitsArray\n        ) = Rebalance.getTokenFlows(_rebalancingSetToken, _quantity);\n\n        // Loop through the combined token addresses array and replace with underlying address\n        for (uint256 i = 0; i < combinedTokenArray.length; i++) {\n            address currentComponentAddress = combinedTokenArray[i];\n\n            // Check if current component address is a cToken\n            address underlyingAddress = cTokenToUnderlying[currentComponentAddress];\n            if (underlyingAddress != address(0)) {\n                combinedTokenArray[i] = underlyingAddress;\n\n                // Replace inflow and outflow with required amount of underlying. \n                // Calculated as cToken quantity * exchangeRate / 10 ** 18.\n                uint256 exchangeRate = ICToken(currentComponentAddress).exchangeRateStored();\n                uint256 currentInflowQuantity = inflowUnitsArray[i];\n                uint256 currentOutflowQuantity = outflowUnitsArray[i];\n\n                inflowUnitsArray[i] = CompoundUtils.convertCTokenToUnderlying(currentInflowQuantity, exchangeRate);\n                outflowUnitsArray[i] = CompoundUtils.convertCTokenToUnderlying(currentOutflowQuantity, exchangeRate);\n            }\n        }\n\n        return (combinedTokenArray, inflowUnitsArray, outflowUnitsArray);\n    }\n\n    /* ============ Private Functions ============ */\n\n    /**\n     * Before bidding, calculate the required amount of inflow tokens and deposit token components\n     * into this helper contract.\n     *\n     * @param  _combinedTokenArray            Array of token addresses\n     * @param  _inflowUnitsArray              Array of inflow token units\n     */\n    function depositComponents(\n        address[] memory _combinedTokenArray,\n        uint256[] memory _inflowUnitsArray\n    )\n        private\n    {\n        // Loop through the combined token addresses array and deposit inflow amounts\n        for (uint256 i = 0; i < _combinedTokenArray.length; i++) {\n            address currentComponentAddress = _combinedTokenArray[i];\n            uint256 currentComponentQuantity = _inflowUnitsArray[i];\n\n            // Check component inflow is greater than 0\n            if (currentComponentQuantity > 0) {\n                // Ensure allowance for components to transferProxy\n                ERC20Wrapper.ensureAllowance(\n                    currentComponentAddress,\n                    address(this),\n                    address(transferProxy),\n                    currentComponentQuantity\n                );\n\n                // If cToken, calculate required underlying tokens, transfer to contract, \n                // ensure underlying allowance to cToken and then mint cTokens\n                address underlyingAddress = cTokenToUnderlying[currentComponentAddress];\n                if (underlyingAddress != address(0)) {\n                    ICToken cTokenInstance = ICToken(currentComponentAddress);\n\n                    // Calculate required amount of underlying. Calculated as cToken quantity * exchangeRate / 10 ** 18.\n                    uint256 exchangeRate = cTokenInstance.exchangeRateCurrent();\n                    uint256 underlyingQuantity = CompoundUtils.convertCTokenToUnderlying(currentComponentQuantity, exchangeRate);\n\n                    // Transfer underlying tokens to contract\n                    ERC20Wrapper.transferFrom(\n                        underlyingAddress,\n                        msg.sender,\n                        address(this),\n                        underlyingQuantity\n                    );\n\n                    // Ensure allowance for underlying token to cToken contract\n                    ERC20Wrapper.ensureAllowance(\n                        underlyingAddress,\n                        address(this),\n                        address(cTokenInstance),\n                        underlyingQuantity\n                    );\n\n                    // Mint cToken using underlying\n                    uint256 mintResponse = cTokenInstance.mint(underlyingQuantity);\n                    require(\n                        mintResponse == 0,\n                        "RebalancingSetCTokenBidder.bidAndWithdraw: Error minting cToken"\n                    );\n                } else {\n                    // Transfer non-cTokens to contract\n                    ERC20Wrapper.transferFrom(\n                        currentComponentAddress,\n                        msg.sender,\n                        address(this),\n                        currentComponentQuantity\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * After bidding, loop through token address array and redeem any cTokens \n     * and transfer token components to user\n     *\n     * @param  _combinedTokenArray           Array of token addresses\n     */\n    function withdrawComponentsToSender(\n        address[] memory _combinedTokenArray\n    )\n        private\n    {\n        // Loop through the combined token addresses array and withdraw leftover amounts\n        for (uint256 i = 0; i < _combinedTokenArray.length; i++) {\n            address currentComponentAddress = _combinedTokenArray[i];\n            \n            // Get balance of tokens in contract\n            uint256 currentComponentBalance = ERC20Wrapper.balanceOf(\n                currentComponentAddress,\n                address(this)\n            );\n\n            // Check component balance is greater than 0\n            if (currentComponentBalance > 0) {\n                // Check if cToken\n                address underlyingAddress = cTokenToUnderlying[currentComponentAddress];\n                if (underlyingAddress != address(0)) {\n                    // Redeem cToken into underlying\n                    uint256 mintResponse = ICToken(currentComponentAddress).redeem(currentComponentBalance);\n                    require(\n                        mintResponse == 0,\n                        "RebalancingSetCTokenBidder.bidAndWithdraw: Erroring redeeming cToken"\n                    );\n\n                    // Get balance of underlying in contract\n                    uint256 underlyingComponentBalance = ERC20Wrapper.balanceOf(\n                        underlyingAddress,\n                        address(this)\n                    );\n\n                    // Withdraw underlying from the contract and send to the user\n                    ERC20Wrapper.transfer(\n                        underlyingAddress,\n                        msg.sender,\n                        underlyingComponentBalance\n                    );\n                } else {\n                    // Withdraw non cTokens from the contract and send to the user\n                    ERC20Wrapper.transfer(\n                        currentComponentAddress,\n                        msg.sender,\n                        currentComponentBalance\n                    );\n                }\n            }\n        }\n    }\n}',
sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/helper/RebalancingSetCTokenBidder.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.993Z",devdoc:{author:"Set Protocol * A helper contract that mints a cToken from its underlying or redeems a cToken into  its underlying used for bidding in the RebalanceAuctionModule.",methods:{"bidAndWithdraw(address,uint256,bool)":{params:{_allowPartialFill:"Set to true if want to partially fill bid when quantity is greater than currentRemainingSets",_quantity:"Number of currentSets to rebalance",_rebalancingSetToken:"Instance of the rebalancing token being bid on"}},constructor:{params:{_cTokenArray:"The address array of the target cToken",_dataDescription:"Description of contract for Etherscan / other applications",_rebalanceAuctionModule:"The address of RebalanceAuctionModule",_transferProxy:"The address of TransferProxy",_underlyingArray:"The address array of the target cToken's underlying"}}},title:"RebalancingSetCTokenBidder"},userdoc:{methods:{"bidAndWithdraw(address,uint256,bool)":{notice:"Bid on rebalancing a given quantity of sets held by a rebalancing token wrapping or unwrapping a target cToken involved. The tokens are returned to the user."},constructor:"Constructor function for RebalancingSetCTokenBidder"}}};