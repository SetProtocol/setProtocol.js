"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.IAuthorizable={contractName:"IAuthorizable",abi:[{constant:false,inputs:[{name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"getAuthorizedAddresses",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"target",type:"address"}],name:"addAuthorizedAddress",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"target",type:"address"}],name:"removeAuthorizedAddress",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"target",type:"address"},{name:"index",type:"uint256"}],name:"removeAuthorizedAddressAtIndex",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":false,"inputs":[{"name":"target","type":"address"}],"name":"addAuthorizedAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"target","type":"address"}],"name":"removeAuthorizedAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"target","type":"address"},{"name":"index","type":"uint256"}],"name":"removeAuthorizedAddressAtIndex","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getAuthorizedAddresses","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{"addAuthorizedAddress(address)":{"details":"Authorizes an address.","params":{"target":"Address to authorize."}},"getAuthorizedAddresses()":{"details":"Gets all authorized addresses.","return":"Array of authorized addresses."},"removeAuthorizedAddress(address)":{"details":"Removes authorizion of an address.","params":{"target":"Address to remove authorization from."}},"removeAuthorizedAddressAtIndex(address,uint256)":{"details":"Removes authorizion of an address.","params":{"index":"Index of target in authorities array.","target":"Address to remove authorization from."}}}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/external/0x/AssetProxy/interfaces/IAuthorizable.sol":"IAuthorizable"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/external/0x/AssetProxy/interfaces/IAuthorizable.sol":{"keccak256":"0xb65b9b719b412c54b78a5b475d202da4618d86944cf595e0c47e13ad1c32745e","urls":["bzzr://e1fac619754c329e809cb15bc4db300632dc8ad8e67cf0ab8029dccf00023ad9"]}},"version":1}',bytecode:"0x",deployedBytecode:"0x",sourceMap:"",deployedSourceMap:"",source:'/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the "License");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an "AS IS" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity 0.5.7;\npragma experimental ABIEncoderV2;\n\n/*\n * Ownable\n *\n * Base contract with an owner.\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\n */\n\ncontract IOwnable {\n    function transferOwnership(address newOwner)\n        external;\n}\n\ncontract IAuthorizable is\n    IOwnable\n{\n\n    /// @dev Gets all authorized addresses.\n    /// @return Array of authorized addresses.\n    function getAuthorizedAddresses()\n        external\n        view\n        returns (address[] memory);\n\n    /// @dev Authorizes an address.\n    /// @param target Address to authorize.\n    function addAuthorizedAddress(address target)\n        external;\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    function removeAuthorizedAddress(address target)\n        external;\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    /// @param index Index of target in authorities array.\n    function removeAuthorizedAddressAtIndex(\n        address target,\n        uint256 index\n    )\n        external;\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/external/0x/AssetProxy/interfaces/IAuthorizable.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.970Z",devdoc:{methods:{"addAuthorizedAddress(address)":{details:"Authorizes an address.",params:{target:"Address to authorize."}},"getAuthorizedAddresses()":{details:"Gets all authorized addresses.","return":"Array of authorized addresses."},"removeAuthorizedAddress(address)":{details:"Removes authorizion of an address.",params:{target:"Address to remove authorization from."}},"removeAuthorizedAddressAtIndex(address,uint256)":{details:"Removes authorizion of an address.",params:{index:"Index of target in authorities array.",target:"Address to remove authorization from."}}}},userdoc:{methods:{}}};