"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.FeeCalculatorMock={contractName:"FeeCalculatorMock",abi:[{constant:true,inputs:[],name:"feeValue",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_feeCalculator",type:"address"},{name:"_feeCalculatorData",type:"bytes"}],name:"testInitialize",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"_feeCalculator",type:"address"}],name:"testGetFee",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_feeCalculator",type:"address"}],name:"testUpdateAndGetFee",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":false,"inputs":[{"name":"_feeCalculator","type":"address"},{"name":"_feeCalculatorData","type":"bytes"}],"name":"testInitialize","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"feeValue","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_feeCalculator","type":"address"}],"name":"testGetFee","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_feeCalculator","type":"address"}],"name":"testUpdateAndGetFee","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/core/fee-calculators/FeeCalculatorMock.sol":"FeeCalculatorMock"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IFeeCalculator.sol":{"keccak256":"0xfdce9b333367bfed8f379738b0eabfe4be0045db735e9f24493de09729593d4d","urls":["bzzr://d2fa7438b492f4f08009810e3e9a2e2c22a429c307562e3f5274d4bfe2d21734"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/core/fee-calculators/FeeCalculatorMock.sol":{"keccak256":"0xe377a722c0861d76031c6df0cd7654d9efabed9eb127040ef027da4472125ac1","urls":["bzzr://04434c72c57aa4f8658b6c552a12524d378567c820032be38494ab1cf438fa46"]}},"version":1}',bytecode:"0x608060405234801561001057600080fd5b50610427806100206000396000f3fe608060405234801561001057600080fd5b506004361061004f5760e060020a6000350463893b2d5181146100545780639fddaa9314610069578063af118f2f14610087578063d00402a81461009a575b600080fd5b6100676100623660046102de565b6100ad565b005b610071610138565b60405161007e919061039f565b60405180910390f35b6100716100953660046102b8565b61013e565b6100676100a83660046102b8565b6101c7565b6040517f439fab9100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063439fab9190610101908590859060040161038d565b600060405180830381600087803b15801561011b57600080fd5b505af115801561012f573d6000803e3d6000fd5b50505050505050565b60005481565b60008173ffffffffffffffffffffffffffffffffffffffff1663ced72f876040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561018957600080fd5b505afa15801561019d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506101c19190810190610334565b92915050565b8073ffffffffffffffffffffffffffffffffffffffff166320f554046040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561021257600080fd5b505af1158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061024a9190810190610334565b60005550565b600061025c82356103b9565b9392505050565b60008083601f84011261027557600080fd5b50813567ffffffffffffffff81111561028d57600080fd5b6020830191508360018202830111156102a557600080fd5b9250929050565b600061025c82516103b6565b6000602082840312156102ca57600080fd5b60006102d68484610250565b949350505050565b6000806000604084860312156102f357600080fd5b60006102ff8686610250565b935050602084013567ffffffffffffffff81111561031c57600080fd5b61032886828701610263565b92509250509250925092565b60006020828403121561034657600080fd5b60006102d684846102ac565b600061035e83856103ad565b935061036b8385846103d7565b610374836103e3565b9093019392505050565b610387816103b6565b82525050565b602080825281016102d6818486610352565b602081016101c1828461037e565b90815260200190565b90565b600073ffffffffffffffffffffffffffffffffffffffff82166101c1565b82818337506000910152565b601f01601f19169056fea265627a7a723058207e225d8526226ba16a1a4e2d29345aa420ff0c43563ea2d258c562490345bab86c6578706572696d656e74616cf50037",deployedBytecode:"0x608060405234801561001057600080fd5b506004361061004f5760e060020a6000350463893b2d5181146100545780639fddaa9314610069578063af118f2f14610087578063d00402a81461009a575b600080fd5b6100676100623660046102de565b6100ad565b005b610071610138565b60405161007e919061039f565b60405180910390f35b6100716100953660046102b8565b61013e565b6100676100a83660046102b8565b6101c7565b6040517f439fab9100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063439fab9190610101908590859060040161038d565b600060405180830381600087803b15801561011b57600080fd5b505af115801561012f573d6000803e3d6000fd5b50505050505050565b60005481565b60008173ffffffffffffffffffffffffffffffffffffffff1663ced72f876040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561018957600080fd5b505afa15801561019d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506101c19190810190610334565b92915050565b8073ffffffffffffffffffffffffffffffffffffffff166320f554046040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561021257600080fd5b505af1158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061024a9190810190610334565b60005550565b600061025c82356103b9565b9392505050565b60008083601f84011261027557600080fd5b50813567ffffffffffffffff81111561028d57600080fd5b6020830191508360018202830111156102a557600080fd5b9250929050565b600061025c82516103b6565b6000602082840312156102ca57600080fd5b60006102d68484610250565b949350505050565b6000806000604084860312156102f357600080fd5b60006102ff8686610250565b935050602084013567ffffffffffffffff81111561031c57600080fd5b61032886828701610263565b92509250509250925092565b60006020828403121561034657600080fd5b60006102d684846102ac565b600061035e83856103ad565b935061036b8385846103d7565b610374836103e3565b9093019392505050565b610387816103b6565b82525050565b602080825281016102d6818486610352565b602081016101c1828461037e565b90815260200190565b90565b600073ffffffffffffffffffffffffffffffffffffffff82166101c1565b82818337506000910152565b601f01601f19169056fea265627a7a723058207e225d8526226ba16a1a4e2d29345aa420ff0c43563ea2d258c562490345bab86c6578706572696d656e74616cf50037",sourceMap:"139:632:125:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;139:632:125;;;;;;;",deployedSourceMap:"139:632:125:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;139:632:125;;;;;;-1:-1:-1;;;139:632:125;;;;;;;;;;;;;;;;;;;;;;;;;;;202:211;;;;;;;;;:::i;:::-;;172:23;;;:::i;:::-;;;;;;;;;;;;;;;;419:180;;;;;;;;;:::i;605:164::-;;;;;;;;;:::i;202:211::-;345:61;;;;;:41;;;;;;:61;;387:18;;;;345:61;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;345:61:125;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;345:61:125;;;;202:211;;;:::o;172:23::-;;;;:::o;419:180::-;523:7;568:14;553:37;;;:39;;;;;-1:-1:-1;;;553:39:125;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;553:39:125;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;553:39:125;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;553:39:125;;;;;;;;;546:46;419:180;-1:-1:-1;;419:180:125:o;605:164::-;729:14;714:46;;;:48;;;;;-1:-1:-1;;;714:48:125;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;714:48:125;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;714:48:125;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;714:48:125;;;;;;;;;703:8;:59;-1:-1:-1;605:164:125:o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;144:335;;;258:3;251:4;243:6;239:17;235:27;225:2;;276:1;273;266:12;225:2;-1:-1;296:20;;336:18;325:30;;322:2;;;368:1;365;358:12;322:2;402:4;394:6;390:17;378:29;;452:3;445;437:6;433:16;423:8;419:31;416:40;413:2;;;469:1;466;459:12;413:2;218:261;;;;;;487:122;;565:39;596:6;590:13;565:39;;616:241;;720:2;708:9;699:7;695:23;691:32;688:2;;;736:1;733;726:12;688:2;771:1;788:53;833:7;813:9;788:53;;;778:63;682:175;-1:-1;;;;682:175;864:490;;;;1004:2;992:9;983:7;979:23;975:32;972:2;;;1020:1;1017;1010:12;972:2;1055:1;1072:53;1117:7;1097:9;1072:53;;;1062:63;;1034:97;1190:2;1179:9;1175:18;1162:32;1214:18;1206:6;1203:30;1200:2;;;1246:1;1243;1236:12;1200:2;1274:64;1330:7;1321:6;1310:9;1306:22;1274:64;;;1264:74;;;;1141:203;966:388;;;;;;1361:263;;1476:2;1464:9;1455:7;1451:23;1447:32;1444:2;;;1492:1;1489;1482:12;1444:2;1527:1;1544:64;1600:7;1580:9;1544:64;;1652:287;;1765:70;1828:6;1823:3;1765:70;;;1758:77;;1840:43;1876:6;1871:3;1864:5;1840:43;;;1904:29;1926:6;1904:29;;;1895:39;;;;1752:187;-1:-1;;;1752:187;1946:120;2029:31;2054:5;2029:31;;;2024:3;2017:44;2011:55;;;2073:317;2219:2;2233:47;;;2204:18;;2294:86;2204:18;2366:6;2358;2294:86;;2397:213;2515:2;2500:18;;2529:71;2504:9;2573:6;2529:71;;2618:162;2720:19;;;2769:4;2760:14;;2713:67;2788:79;2857:5;2840:27;2874:105;;3066:42;3055:54;;2943:31;3038:76;3208:145;3289:6;3284:3;3279;3266:30;-1:-1;3345:1;3327:16;;3320:27;3259:94;3361:97;3449:2;3429:14;-1:-1;;3425:28;;3409:49",source:'pragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { IFeeCalculator } from "../../../core/interfaces/IFeeCalculator.sol";\n\ncontract FeeCalculatorMock {\n    uint256 public feeValue;\n\n    function testInitialize(\n        address _feeCalculator,\n        bytes calldata _feeCalculatorData\n    )\n        external\n    {\n        return IFeeCalculator(_feeCalculator).initialize(_feeCalculatorData);\n    }\n\n    function testGetFee(\n        address _feeCalculator\n    )\n        external\n        view\n        returns(uint256)\n    {\n        return IFeeCalculator(_feeCalculator).getFee();\n    }\n\n    function testUpdateAndGetFee(\n        address _feeCalculator\n    )\n        external\n    {\n        feeValue = IFeeCalculator(_feeCalculator).updateAndGetFee();\n    }\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/core/fee-calculators/FeeCalculatorMock.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:37.044Z",devdoc:{methods:{}},userdoc:{methods:{}}};