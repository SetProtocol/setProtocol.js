"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ICToken={contractName:"ICToken",abi:[{constant:false,inputs:[],name:"exchangeRateCurrent",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"exchangeRateStored",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"mintAmount",type:"uint256"}],name:"mint",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"redeemTokens",type:"uint256"}],name:"redeem",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"exchangeRateStored","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"mintAmount","type":"uint256"}],"name":"mint","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"exchangeRateCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"redeemTokens","type":"uint256"}],"name":"redeem","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Set Protocol * Interface for interacting with Compound cTokens","methods":{"exchangeRateCurrent()":{"return":"Calculated exchange rate scaled by 1e18"},"mint(uint256)":{"params":{"mintAmount":"The amount of the underlying asset to supply"},"return":"uint 0=success, otherwise a failure"},"redeem(uint256)":{"details":"Accrues interest whether or not the operation succeeds, unless reverted","params":{"redeemTokens":"The number of cTokens to redeem into underlying"},"return":"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"}},"title":"ICToken"},"userdoc":{"methods":{"exchangeRateCurrent()":{"notice":"Calculates the exchange rate from the underlying to the CTokenAccrue interest then return the up-to-date exchange rate"},"mint(uint256)":{"notice":"Sender supplies assets into the market and receives cTokens in exchangeAccrues interest whether or not the operation succeeds, unless reverted"},"redeem(uint256)":{"notice":"Sender redeems cTokens in exchange for the underlying asset"}}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICToken.sol":"ICToken"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICToken.sol":{"keccak256":"0x661dd1d6e349160dd01e275b8138c9c78fe296abbb7d54ecdbc03b6be35cc5e8","urls":["bzzr://731700a131b20732ffba3070eaa6e0cdec2f42c7493d5af3f24e605cb3022fcb"]}},"version":1}',bytecode:"0x",deployedBytecode:"0x",sourceMap:"",deployedSourceMap:"",source:'/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\n\n\n/**\n * @title ICToken\n * @author Set Protocol\n *\n * Interface for interacting with Compound cTokens\n */\ninterface ICToken {\n\n    /**\n     * Calculates the exchange rate from the underlying to the CToken\n     *\n     * @notice Accrue interest then return the up-to-date exchange rate\n     * @return Calculated exchange rate scaled by 1e18\n     */\n    function exchangeRateCurrent()\n        external\n        returns (uint256);\n\n    function exchangeRateStored() external view returns (uint256);\n\n    function decimals() external view returns(uint8);\n\n    /**\n     * Sender supplies assets into the market and receives cTokens in exchange\n     *\n     * @notice Accrues interest whether or not the operation succeeds, unless reverted\n     * @param mintAmount The amount of the underlying asset to supply\n     * @return uint 0=success, otherwise a failure\n     */\n    function mint(uint mintAmount) external returns (uint);\n\n    /**\n     * @notice Sender redeems cTokens in exchange for the underlying asset\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\n     * @param redeemTokens The number of cTokens to redeem into underlying\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function redeem(uint redeemTokens) external returns (uint);\n}',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICToken.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.335Z",devdoc:{author:"Set Protocol * Interface for interacting with Compound cTokens",methods:{"exchangeRateCurrent()":{"return":"Calculated exchange rate scaled by 1e18"},"mint(uint256)":{params:{mintAmount:"The amount of the underlying asset to supply"},"return":"uint 0=success, otherwise a failure"},"redeem(uint256)":{details:"Accrues interest whether or not the operation succeeds, unless reverted",params:{redeemTokens:"The number of cTokens to redeem into underlying"},"return":"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"}},title:"ICToken"},userdoc:{methods:{"exchangeRateCurrent()":{notice:"Calculates the exchange rate from the underlying to the CTokenAccrue interest then return the up-to-date exchange rate"},"mint(uint256)":{notice:"Sender supplies assets into the market and receives cTokens in exchangeAccrues interest whether or not the operation succeeds, unless reverted"},"redeem(uint256)":{notice:"Sender redeems cTokens in exchange for the underlying asset"}}}};