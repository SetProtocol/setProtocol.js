"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.KyberNetworkWrapper={contractName:"KyberNetworkWrapper",abi:[{constant:true,inputs:[],name:"setTransferProxy",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"KYBER_TRADE_LENGTH",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"kyberNetworkProxy",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"core",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{inputs:[{name:"_core",type:"address"},{name:"_kyberNetworkProxy",type:"address"},{name:"_setTransferProxy",type:"address"}],payable:false,stateMutability:"nonpayable",type:"constructor"},{constant:true,inputs:[{name:"_sourceTokens",type:"address[]"},{name:"_destinationTokens",type:"address[]"},{name:"_quantities",type:"uint256[]"}],name:"conversionRate",outputs:[{name:"",type:"uint256[]"},{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{components:[{name:"caller",type:"address"},{name:"orderCount",type:"uint256"}],name:"_exchangeData",type:"tuple"},{name:"_tradesData",type:"bytes"}],name:"exchange",outputs:[{components:[{name:"receiveTokens",type:"address[]"},{name:"receiveTokenAmounts",type:"uint256[]"}],name:"",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"setTransferProxy","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"KYBER_TRADE_LENGTH","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"components":[{"name":"caller","type":"address"},{"name":"orderCount","type":"uint256"}],"name":"_exchangeData","type":"tuple"},{"name":"_tradesData","type":"bytes"}],"name":"exchange","outputs":[{"components":[{"name":"receiveTokens","type":"address[]"},{"name":"receiveTokenAmounts","type":"uint256[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_sourceTokens","type":"address[]"},{"name":"_destinationTokens","type":"address[]"},{"name":"_quantities","type":"uint256[]"}],"name":"conversionRate","outputs":[{"name":"","type":"uint256[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"kyberNetworkProxy","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"core","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_core","type":"address"},{"name":"_kyberNetworkProxy","type":"address"},{"name":"_setTransferProxy","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"devdoc":{"author":"Set Protocol * The KyberNetworkWrapper contract wrapper to interface with KyberNetwork for reserve liquidity","methods":{"constructor":{"params":{"_core":"Deployed Core contract","_kyberNetworkProxy":"KyberNetwork contract for filling orders","_setTransferProxy":"Set Protocol transfer proxy contract"}},"conversionRate(address[],address[],uint256[])":{"params":{"_destinationTokens":"Address of destination token to trade for","_quantities":"Amount of maker token to exchange for component token","_sourceTokens":"Address of source token used in exchange orders"},"return":"uint256[]             Conversion rate in weiuint256[]             Slippage in wei"},"exchange((address,uint256),bytes)":{"params":{"_exchangeData":"Standard exchange wrapper interface object containing exchange metadata","_tradesData":"Arbitrary bytes data for any information to pass to the exchange"},"return":"ExchangeWrapperLibrary.ExchangeResults  Struct containing component acquisition results"}},"title":"KyberNetworkWrapper"},"userdoc":{"methods":{"constructor":"Initialize exchange wrapper with required addresses to facilitate Kyber trades","conversionRate(address[],address[],uint256[])":{"notice":"Returns the conversion rate between the issuance order maker token and the set component token in 18 decimals, regardless of component token\'s decimals"},"exchange((address,uint256),bytes)":{"notice":"IExchangeWrapper interface delegate method.     * Parses and executes Kyber trades. Depending on conversion rate, Kyber trades may result in change. We currently pass change back to the issuance order maker, exploring how it can safely be passed to the taker.     *"}}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/exchange-wrappers/KyberNetworkWrapper.sol":"KyberNetworkWrapper"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/exchange-wrappers/KyberNetworkWrapper.sol":{"keccak256":"0xcd29fcadac227ef6aa8399b1fa5fd9bb5f082e7dd91ff4bc10b0b2e2c79c1872","urls":["bzzr://1ce46c050eefebed847fdf91ab3850a1a6e77d11ab153e1ca10be0a13a475990"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICore.sol":{"keccak256":"0x5dc3db4398630ea52d2a40c9ddfa89d94e65c2770a12bab4d2a5c8eb573fb0a0","urls":["bzzr://25e90b53f61b388e0950b808e2296f82d427b66cfd6021212713436b2a592e31"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IExchangeWrapper.sol":{"keccak256":"0xbe6c55b4ddd26e1fcda74a09c5202f1c938a23edc3cbe6328780bd8eb05e7fde","urls":["bzzr://fdba29705c0defefa87e4102dc401125a4df8ac76f06555718e39365f316810f"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/ExchangeWrapperLibrary.sol":{"keccak256":"0xcf95f40c291b1d8fb9adab6e0896f91bb8f2f6397d24e741ab82aab1192d3930","urls":["bzzr://3c75694fc0cbc623a02f7db596ffc72c64f8f662624101b87e390c0578407aaf"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/ExchangeWrapperLibraryV2.sol":{"keccak256":"0x92acd5054efb89467456183e7086e6022f9aed0c2044d00aeab382bcc8c86c4f","urls":["bzzr://92084a7a6cc58333b93b929171cdf455cec92ae314dd8c7f082778f0bd825e54"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/external/0x/LibBytes.sol":{"keccak256":"0x8617740051ffe434ec5737fa1cf53fdd3c6dd901d6f8c3b379754d9928daa752","urls":["bzzr://52865a32d5c247782bf2fda7bb606c579caa924875108b96d7ea388ef19991fc"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/external/KyberNetwork/KyberNetworkProxyInterface.sol":{"keccak256":"0x6bd1d7ab840b5c4686e3396c28e201beccae90206dcd53ac8e303a8749bedee8","urls":["bzzr://a0408053eac6e60f1ead91ebd618958500364b4cb29ebfa3d35292576c785a6f"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/ERC20Wrapper.sol":{"keccak256":"0x09fdf2adbbcbe2ce6cf3924c8cae4e206cd501c3daca55d43c847d310150ceb8","urls":["bzzr://f2866ffe2b523888937071b65dd86d89a6e61161fd2d1ce1b9b52ea23914337d"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/IERC20.sol":{"keccak256":"0xe4f71b1797f6421de91c6ce3b55199c5845693a58eddfd417a60b81d0198a9dd","urls":["bzzr://a6a4cebcffaff1db8ef9b78ea58d2d7391cc2b1ed533a1e1309286989f6d4ea0"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"set-protocol-contract-utils/contracts/lib/CommonMath.sol":{"keccak256":"0x3d1d08c6efc2a973fe2c02ddcb02fd99a8c8eb75f74dcbd93e8e15864eee2b6b","urls":["bzzr://580815dd1cf648a4521d923e59087de21143d9c48115ab71579a1f5a8f3d36af"]}},"version":1}',bytecode:"0x608060405260a06003553480156200001657600080fd5b50604051606080620011e7833981018060405262000038919081019062000090565b60008054600160a060020a03948516600160a060020a03199182161790915560018054938516938216939093179092556002805491909316911617905562000103565b6000620000898251620000e4565b9392505050565b600080600060608486031215620000a657600080fd5b6000620000b486866200007b565b9350506020620000c7868287016200007b565b9250506040620000da868287016200007b565b9150509250925092565b6000620000f182620000f7565b92915050565b600160a060020a031690565b6110d480620001136000396000f3fe608060405234801561001057600080fd5b50600436106100655760e060020a60003504633f80cff8811461006a578063a8a0d1c714610088578063c58c1db81461009d578063d6c424d1146100bd578063d77366a4146100de578063f2f4eb26146100e6575b600080fd5b6100726100ee565b60405161007f9190610ec2565b60405180910390f35b6100906100fd565b60405161007f9190610ffa565b6100b06100ab366004610bfd565b610103565b60405161007f9190610fe9565b6100d06100cb366004610b3e565b610378565b60405161007f929190610fa4565b6100726104fa565b610072610509565b600254600160a060020a031681565b60035481565b61010b6109cf565b6000546040517f5e633498000000000000000000000000000000000000000000000000000000008152600160a060020a0390911690635e63349890610154903390600401610ed0565b60206040518083038186803b15801561016c57600080fd5b505afa158015610180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506101a49190810190610bdf565b6101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da90610fd9565b60405180910390fd5b600083602001519050606081604051908082528060200260200182016040528015610218578160200160208202803883390190505b509050606082604051908082528060200260200182016040528015610247578160200160208202803883390190505b509050606083604051908082528060200260200182016040528015610276578160200160208202803883390190505b50905060005b8481101561034c5761028c6109e9565b6102aa886102a56003548561051890919063ffffffff16565b610546565b602081015160015460408301519293506102cf923091600160a060020a0316906105a5565b80602001518583815181106102e057fe5b6020026020010190600160a060020a03169081600160a060020a031681525050610309816105d5565b85848151811061031557fe5b6020026020010185858151811061032857fe5b6020908102919091010191909152600160a060020a0390911690525060010161027c565b5061035b8388600001516106bd565b604080518082019091529182526020820152925050505b92915050565b6040805186815260208088028201019091526060908190879082908280156103aa578160200160208202803883390190505b5090506060826040519080825280602002602001820160405280156103d9578160200160208202803883390190505b50905060005b838110156104e957600154600160a060020a031663809a9e558d8d8481811061040457fe5b90506020020135600160a060020a03168c8c8581811061042057fe5b90506020020135600160a060020a03168b8b8681811061043c57fe5b905060200201356040518463ffffffff1660e060020a02815260040161046493929190610ef9565b604080518083038186803b15801561047b57600080fd5b505afa15801561048f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104b39190810190610c6d565b8483815181106104bf57fe5b602002602001018484815181106104d257fe5b6020908102919091010191909152526001016103df565b50909a909950975050505050505050565b600154600160a060020a031681565b600054600160a060020a031681565b60008261052757506000610372565b8282028284828161053457fe5b041461053f57600080fd5b9392505050565b61054e6109e9565b6105566109e9565b60006105718461056587610802565b9063ffffffff61080816565b8051835260208082015190840152604080820151908401526060808201519084015260809081015190830152509392505050565b60006105b285858561081a565b9050818110156105ce576105ce85846105c96108bc565b6108c2565b5050505050565b600154602082015160408084015184516080860151606087015193517fcb3c28c700000000000000000000000000000000000000000000000000000000815260009687968796600160a060020a039092169563cb3c28c7956106469592949193909230929091908a90600401610f3c565b602060405180830381600087803b15801561066057600080fd5b505af1158015610674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106989190810190610c4f565b84516002549192506106b5913090600160a060020a0316846105a5565b925193915050565b60005b82518110156107fd57600073__ERC20Wrapper__________________________63f7888aec8584815181106106f157fe5b6020026020010151306040518363ffffffff1660e060020a02815260040161071a929190610ede565b60206040518083038186803b15801561073257600080fd5b505af4158015610746573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061076a9190810190610c4f565b905080156107f45773__ERC20Wrapper__________________________63beabacc885848151811061079857fe5b602002602001015185846040518463ffffffff1660e060020a0281526004016107c393929190610ef9565b60006040518083038186803b1580156107db57600080fd5b505af41580156107ef573d6000803e3d6000fd5b505050505b506001016106c0565b505050565b60200190565b60008282018381101561053f57600080fd5b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600090600160a060020a0385169063dd62ed3e906108649086908690600401610ede565b60206040518083038186803b15801561087c57600080fd5b505afa158015610890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108b49190810190610c4f565b949350505050565b60001990565b6040517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0384169063095ea7b3906109099085908590600401610f21565b602060405180830381600087803b15801561092357600080fd5b505af1158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061095b9190810190610bdf565b5061096461099a565b6107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da90610fc9565b6000803d80156109b157602081146109ba576109c6565b600191506109c6565b60206000803e60005191505b50600114905090565b604051806040016040528060608152602001606081525090565b6040518060a001604052806000600160a060020a031681526020016000600160a060020a031681526020016000815260200160008152602001600081525090565b600061053f8235611064565b60008083601f840112610a4857600080fd5b50813567ffffffffffffffff811115610a6057600080fd5b602083019150836020820283011115610a7857600080fd5b9250929050565b600061053f8251611078565b600082601f830112610a9c57600080fd5b8135610aaf610aaa8261102f565b611008565b91508082526020830160208301858383011115610acb57600080fd5b610ad683828461108e565b50505092915050565b600060408284031215610af157600080fd5b610afb6040611008565b90506000610b098484610a2a565b8252506020610b1a84848301610b26565b60208301525092915050565b600061053f8235611075565b600061053f8251611075565b60008060008060008060608789031215610b5757600080fd5b863567ffffffffffffffff811115610b6e57600080fd5b610b7a89828a01610a36565b9650965050602087013567ffffffffffffffff811115610b9957600080fd5b610ba589828a01610a36565b9450945050604087013567ffffffffffffffff811115610bc457600080fd5b610bd089828a01610a36565b92509250509295509295509295565b600060208284031215610bf157600080fd5b60006108b48484610a7f565b60008060608385031215610c1057600080fd5b6000610c1c8585610adf565b925050604083013567ffffffffffffffff811115610c3957600080fd5b610c4585828601610a8b565b9150509250929050565b600060208284031215610c6157600080fd5b60006108b48484610b32565b60008060408385031215610c8057600080fd5b6000610c8c8585610b32565b9250506020610c4585828601610b32565b6000610ca98383610ccc565b505060200190565b6000610ca98383610eb9565b610cc68161107d565b82525050565b610cc681611064565b6000610ce082611057565b610cea818561105b565b9350610cf583610802565b60005b82811015610d2057610d0b868351610c9d565b9550610d1682610802565b9150600101610cf8565b5093949350505050565b6000610d3582611057565b610d3f818561105b565b9350610d4a83610802565b60005b82811015610d2057610d60868351610cb1565b9550610d6b82610802565b9150600101610d4d565b6000610d8082611057565b610d8a818561105b565b9350610d9583610802565b60005b82811015610d2057610dab868351610cb1565b9550610db682610802565b9150600101610d98565b6000610dcd60268361105b565b7f4552433230577261707065722e617070726f76653a204261642072657475726e81527f2076616c75650000000000000000000000000000000000000000000000000000602082015260400192915050565b6000610e2c603c8361105b565b7f4b796265724e6574776f726b577261707065722e65786368616e67653a20536581527f6e646572206d75737420626520617070726f766564206d6f64756c6500000000602082015260400192915050565b8051604080845260009190840190610e968282610cd5565b91505060208301518482036020860152610eb08282610d75565b95945050505050565b610cc681611075565b602081016103728284610ccc565b602081016103728284610cbd565b60408101610eec8285610ccc565b61053f6020830184610ccc565b60608101610f078286610ccc565b610f146020830185610ccc565b6108b46040830184610eb9565b60408101610f2f8285610ccc565b61053f6020830184610eb9565b60e08101610f4a828a610ccc565b610f576020830189610eb9565b610f646040830188610ccc565b610f716060830187610ccc565b610f7e6080830186610eb9565b610f8b60a0830185610eb9565b610f9860c0830184610cbd565b98975050505050505050565b60408082528101610fb58185610d2a565b905081810360208301526108b48184610d2a565b6020808252810161037281610dc0565b6020808252810161037281610e1f565b6020808252810161053f8184610e7e565b602081016103728284610eb9565b60405181810167ffffffffffffffff8111828210171561102757600080fd5b604052919050565b600067ffffffffffffffff82111561104657600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b6000600160a060020a038216610372565b90565b151590565b600061037282600061037282611064565b8281833750600091015256fea265627a7a7230582026b013b92f5678dfb76b8c31a771ffa84db600e08508c15ef34b1777f53aecfa6c6578706572696d656e74616cf50037",deployedBytecode:"0x608060405234801561001057600080fd5b50600436106100655760e060020a60003504633f80cff8811461006a578063a8a0d1c714610088578063c58c1db81461009d578063d6c424d1146100bd578063d77366a4146100de578063f2f4eb26146100e6575b600080fd5b6100726100ee565b60405161007f9190610ec2565b60405180910390f35b6100906100fd565b60405161007f9190610ffa565b6100b06100ab366004610bfd565b610103565b60405161007f9190610fe9565b6100d06100cb366004610b3e565b610378565b60405161007f929190610fa4565b6100726104fa565b610072610509565b600254600160a060020a031681565b60035481565b61010b6109cf565b6000546040517f5e633498000000000000000000000000000000000000000000000000000000008152600160a060020a0390911690635e63349890610154903390600401610ed0565b60206040518083038186803b15801561016c57600080fd5b505afa158015610180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506101a49190810190610bdf565b6101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da90610fd9565b60405180910390fd5b600083602001519050606081604051908082528060200260200182016040528015610218578160200160208202803883390190505b509050606082604051908082528060200260200182016040528015610247578160200160208202803883390190505b509050606083604051908082528060200260200182016040528015610276578160200160208202803883390190505b50905060005b8481101561034c5761028c6109e9565b6102aa886102a56003548561051890919063ffffffff16565b610546565b602081015160015460408301519293506102cf923091600160a060020a0316906105a5565b80602001518583815181106102e057fe5b6020026020010190600160a060020a03169081600160a060020a031681525050610309816105d5565b85848151811061031557fe5b6020026020010185858151811061032857fe5b6020908102919091010191909152600160a060020a0390911690525060010161027c565b5061035b8388600001516106bd565b604080518082019091529182526020820152925050505b92915050565b6040805186815260208088028201019091526060908190879082908280156103aa578160200160208202803883390190505b5090506060826040519080825280602002602001820160405280156103d9578160200160208202803883390190505b50905060005b838110156104e957600154600160a060020a031663809a9e558d8d8481811061040457fe5b90506020020135600160a060020a03168c8c8581811061042057fe5b90506020020135600160a060020a03168b8b8681811061043c57fe5b905060200201356040518463ffffffff1660e060020a02815260040161046493929190610ef9565b604080518083038186803b15801561047b57600080fd5b505afa15801561048f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104b39190810190610c6d565b8483815181106104bf57fe5b602002602001018484815181106104d257fe5b6020908102919091010191909152526001016103df565b50909a909950975050505050505050565b600154600160a060020a031681565b600054600160a060020a031681565b60008261052757506000610372565b8282028284828161053457fe5b041461053f57600080fd5b9392505050565b61054e6109e9565b6105566109e9565b60006105718461056587610802565b9063ffffffff61080816565b8051835260208082015190840152604080820151908401526060808201519084015260809081015190830152509392505050565b60006105b285858561081a565b9050818110156105ce576105ce85846105c96108bc565b6108c2565b5050505050565b600154602082015160408084015184516080860151606087015193517fcb3c28c700000000000000000000000000000000000000000000000000000000815260009687968796600160a060020a039092169563cb3c28c7956106469592949193909230929091908a90600401610f3c565b602060405180830381600087803b15801561066057600080fd5b505af1158015610674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106989190810190610c4f565b84516002549192506106b5913090600160a060020a0316846105a5565b925193915050565b60005b82518110156107fd57600073__ERC20Wrapper__________________________63f7888aec8584815181106106f157fe5b6020026020010151306040518363ffffffff1660e060020a02815260040161071a929190610ede565b60206040518083038186803b15801561073257600080fd5b505af4158015610746573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061076a9190810190610c4f565b905080156107f45773__ERC20Wrapper__________________________63beabacc885848151811061079857fe5b602002602001015185846040518463ffffffff1660e060020a0281526004016107c393929190610ef9565b60006040518083038186803b1580156107db57600080fd5b505af41580156107ef573d6000803e3d6000fd5b505050505b506001016106c0565b505050565b60200190565b60008282018381101561053f57600080fd5b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600090600160a060020a0385169063dd62ed3e906108649086908690600401610ede565b60206040518083038186803b15801561087c57600080fd5b505afa158015610890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108b49190810190610c4f565b949350505050565b60001990565b6040517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0384169063095ea7b3906109099085908590600401610f21565b602060405180830381600087803b15801561092357600080fd5b505af1158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061095b9190810190610bdf565b5061096461099a565b6107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da90610fc9565b6000803d80156109b157602081146109ba576109c6565b600191506109c6565b60206000803e60005191505b50600114905090565b604051806040016040528060608152602001606081525090565b6040518060a001604052806000600160a060020a031681526020016000600160a060020a031681526020016000815260200160008152602001600081525090565b600061053f8235611064565b60008083601f840112610a4857600080fd5b50813567ffffffffffffffff811115610a6057600080fd5b602083019150836020820283011115610a7857600080fd5b9250929050565b600061053f8251611078565b600082601f830112610a9c57600080fd5b8135610aaf610aaa8261102f565b611008565b91508082526020830160208301858383011115610acb57600080fd5b610ad683828461108e565b50505092915050565b600060408284031215610af157600080fd5b610afb6040611008565b90506000610b098484610a2a565b8252506020610b1a84848301610b26565b60208301525092915050565b600061053f8235611075565b600061053f8251611075565b60008060008060008060608789031215610b5757600080fd5b863567ffffffffffffffff811115610b6e57600080fd5b610b7a89828a01610a36565b9650965050602087013567ffffffffffffffff811115610b9957600080fd5b610ba589828a01610a36565b9450945050604087013567ffffffffffffffff811115610bc457600080fd5b610bd089828a01610a36565b92509250509295509295509295565b600060208284031215610bf157600080fd5b60006108b48484610a7f565b60008060608385031215610c1057600080fd5b6000610c1c8585610adf565b925050604083013567ffffffffffffffff811115610c3957600080fd5b610c4585828601610a8b565b9150509250929050565b600060208284031215610c6157600080fd5b60006108b48484610b32565b60008060408385031215610c8057600080fd5b6000610c8c8585610b32565b9250506020610c4585828601610b32565b6000610ca98383610ccc565b505060200190565b6000610ca98383610eb9565b610cc68161107d565b82525050565b610cc681611064565b6000610ce082611057565b610cea818561105b565b9350610cf583610802565b60005b82811015610d2057610d0b868351610c9d565b9550610d1682610802565b9150600101610cf8565b5093949350505050565b6000610d3582611057565b610d3f818561105b565b9350610d4a83610802565b60005b82811015610d2057610d60868351610cb1565b9550610d6b82610802565b9150600101610d4d565b6000610d8082611057565b610d8a818561105b565b9350610d9583610802565b60005b82811015610d2057610dab868351610cb1565b9550610db682610802565b9150600101610d98565b6000610dcd60268361105b565b7f4552433230577261707065722e617070726f76653a204261642072657475726e81527f2076616c75650000000000000000000000000000000000000000000000000000602082015260400192915050565b6000610e2c603c8361105b565b7f4b796265724e6574776f726b577261707065722e65786368616e67653a20536581527f6e646572206d75737420626520617070726f766564206d6f64756c6500000000602082015260400192915050565b8051604080845260009190840190610e968282610cd5565b91505060208301518482036020860152610eb08282610d75565b95945050505050565b610cc681611075565b602081016103728284610ccc565b602081016103728284610cbd565b60408101610eec8285610ccc565b61053f6020830184610ccc565b60608101610f078286610ccc565b610f146020830185610ccc565b6108b46040830184610eb9565b60408101610f2f8285610ccc565b61053f6020830184610eb9565b60e08101610f4a828a610ccc565b610f576020830189610eb9565b610f646040830188610ccc565b610f716060830187610ccc565b610f7e6080830186610eb9565b610f8b60a0830185610eb9565b610f9860c0830184610cbd565b98975050505050505050565b60408082528101610fb58185610d2a565b905081810360208301526108b48184610d2a565b6020808252810161037281610dc0565b6020808252810161037281610e1f565b6020808252810161053f8184610e7e565b602081016103728284610eb9565b60405181810167ffffffffffffffff8111828210171561102757600080fd5b604052919050565b600067ffffffffffffffff82111561104657600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b6000600160a060020a038216610372565b90565b151590565b600061037282600061037282611064565b8281833750600091015256fea265627a7a7230582026b013b92f5678dfb76b8c31a771ffa84db600e08508c15ef34b1777f53aecfa6c6578706572696d656e74616cf50037",sourceMap:"1248:7961:4:-;;;1536:3;1500:39;;2168:254;8:9:-1;5:2;;;30:1;27;20:12;5:2;2168:254:4;;;;;;;;;;;;;;;;;;;;;;2309:4;:12;;-1:-1:-1;;;;;2309:12:4;;;-1:-1:-1;;;;;;2309:12:4;;;;;;;;2331:38;;;;;;;;;;;;;;;2379:16;:36;;;;;;;;;;;1248:7961;;5:122:-1;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;134:535;;;;283:2;271:9;262:7;258:23;254:32;251:2;;;299:1;296;289:12;251:2;334:1;351:64;407:7;387:9;351:64;;;341:74;;313:108;452:2;470:64;526:7;517:6;506:9;502:22;470:64;;;460:74;;431:109;571:2;589:64;645:7;636:6;625:9;621:22;589:64;;;579:74;;550:109;245:424;;;;;;676:105;;745:31;770:5;745:31;;;734:42;728:53;-1:-1;;728:53;788:128;-1:-1;;;;;857:54;;840:76;;1248:7961:4;;;;;;",deployedSourceMap:"1248:7961:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1248:7961:4;;;;;;-1:-1:-1;;;1248:7961:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:31;;;:::i;:::-;;;;;;;;;;;;;;;;1500:39;;;:::i;:::-;;;;;;;;4498:1956;;;;;;;;;:::i;:::-;;;;;;;;3039:821;;;;;;;;;:::i;:::-;;;;;;;;;1424:32;;;:::i;1399:19::-;;;:::i;1462:31::-;;;-1:-1:-1;;;;;1462:31:4;;:::o;1500:39::-;;;;:::o;4498:1956::-;4654:45;;:::i;:::-;4742:4;;4736:36;;;;;-1:-1:-1;;;;;4742:4:4;;;;4736:24;;:36;;4761:10;;4736:36;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4736:36:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4736:36:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4736:36:4;;;;;;;;;4715:143;;;;;;;;;;;;;;;;;;;;;;4869:19;4891:13;:24;;;4869:46;;4925:27;4969:11;4955:26;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;4955:26:4;;4925:56;;4991:30;5038:11;5024:26;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5024:26:4;;4991:59;;5060:37;5114:11;5100:26;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5100:26:4;-1:-1:-1;5060:66:4;-1:-1:-1;5260:9:4;5255:840;5279:11;5275:1;:15;5255:840;;;5366:23;;:::i;:::-;5392:101;5425:11;5454:25;5460:18;;5454:1;:5;;:25;;;;:::i;:::-;5392:15;:101::i;:::-;5688:17;;;;5754;;5789:25;;;;5366:127;;-1:-1:-1;5642:186:4;;5731:4;;-1:-1:-1;;;;;5754:17:4;;5642:28;:186::i;:::-;5945:5;:17;;;5929:10;5940:1;5929:13;;;;;;;;;;;;;:33;-1:-1:-1;;;;;5929:33:4;;;-1:-1:-1;;;;;5929:33:4;;;;;6058:26;6078:5;6058:19;:26::i;:::-;6013:13;6027:1;6013:16;;;;;;;;;;;;;6031:20;6052:1;6031:23;;;;;;;;;;;;;;;;;6012:72;;;;-1:-1:-1;;;;;6012:72:4;;;;;-1:-1:-1;5292:3:4;;5255:840;;;;6167:115;6228:10;6252:13;:20;;;6167:47;:115::i;:::-;6300:147;;;;;;;;;;;;;;;;;-1:-1:-1;;;4498:1956:4;;;;;:::o;3039:821::-;3378:24;;;;;;;;;;;;;;;;3245:16;;;;3315:13;;3245:16;;3315:13;3378:24;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;3378:24:4;;3345:57;;3412:30;3459:9;3445:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;3445:24:4;-1:-1:-1;3412:57:4;-1:-1:-1;3493:9:4;3488:284;3512:9;3508:1;:13;3488:284;;;3608:17;;-1:-1:-1;;;;;3608:17:4;3581:61;3660:13;;3674:1;3660:16;;;;;;;;;;;;;-1:-1:-1;;;;;3660:16:4;3694:18;;3713:1;3694:21;;;;;;;;;;;;;-1:-1:-1;;;;;3694:21:4;3733:11;;3745:1;3733:14;;;;;;;;;;;;;3581:180;;;;;-1:-1:-1;;;3581:180:4;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3581:180:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3581:180:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3581:180:4;;;;;;;;;3543:13;3557:1;3543:16;;;;;;;;;;;;;3561:13;3575:1;3561:16;;;;;;;;;;;;;;;;;3542:219;;;;;3523:3;;3488:284;;;-1:-1:-1;3803:13:4;;;;-1:-1:-1;3039:821:4;-1:-1:-1;;;;;;;;3039:821:4:o;1424:32::-;;;-1:-1:-1;;;;;1424:32:4;;:::o;1399:19::-;;;-1:-1:-1;;;;;1399:19:4;;:::o;231:421:166:-;289:7;529:6;525:45;;-1:-1:-1;558:1:166;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;;644:1;231:421;-1:-1:-1;;;231:421:166:o;8419:788:4:-;8555:17;;:::i;:::-;8588:23;;:::i;:::-;8622:22;8647:41;8680:7;8647:28;:11;:26;:28::i;:::-;:32;:41;:32;:41;:::i;:::-;8746:21;;8722:46;;8862:2;8842:23;;;8836:30;8819:14;;;8812:55;8947:2;8927:23;;;8921:30;8904:14;;;8897:55;9040:2;9020:23;;;9014:30;8997:14;;;8990:55;9135:3;9115:24;;;9109:31;9092:15;;;9085:56;-1:-1:-1;8729:5:4;8419:788;-1:-1:-1;;;8419:788:4:o;4766:412:118:-;4929:24;4956:35;4966:6;4974;4982:8;4956:9;:35::i;:::-;4929:62;;5024:9;5005:16;:28;5001:171;;;5049:112;5074:6;5098:8;5124:23;:21;:23::i;:::-;5049:7;:112::i;:::-;4766:412;;;;;:::o;6727:927:4:-;6994:17;;7032:18;;;;7064:26;;;;;7104:23;;7168:29;;;;7211:28;;;;6967:306;;;;;6829:7;;;;;;-1:-1:-1;;;;;6994:17:4;;;;6967:51;;:306;;7032:18;;7064:26;;7104:23;;7149:4;;7168:29;;7211:28;6829:7;;6967:306;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6967:306:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6967:306:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6967:306:4;;;;;;;;;7416:23;;7480:16;;6932:341;;-1:-1:-1;7374:170:4;;7461:4;;-1:-1:-1;;;;;7480:16:4;6932:341;7374:28;:170::i;:::-;7576:23;;;6727:927;-1:-1:-1;;6727:927:4:o;2075:592:41:-;2214:9;2209:452;2233:11;:18;2229:1;:22;2209:452;;;2350:26;2379:12;:22;2402:11;2414:1;2402:14;;;;;;;;;;;;;;2426:4;2379:53;;;;;-1:-1:-1;;;2379:53:41;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2379:53:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2379:53:41;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2379:53:41;;;;;;;;;2350:82;-1:-1:-1;2450:22:41;;2446:205;;2492:12;:21;2535:11;2547:1;2535:14;;;;;;;;;;;;;;2571:7;2600:18;2492:144;;;;;-1:-1:-1;;;2492:144:41;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2492:144:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2492:144:41;;;;2446:205;-1:-1:-1;2253:3:41;;2209:452;;;;2075:592;;:::o;848:228:113:-;1027:2;1016:14;;848:228::o;1439:145:166:-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;1953:225:118;2129:42;;;;;2099:7;;-1:-1:-1;;;;;2129:24:118;;;;;:42;;2154:6;;2162:8;;2129:42;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2129:42:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2129:42:118;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2129:42:118;;;;;;;;;2122:49;1953:225;-1:-1:-1;;;;1953:225:118:o;1220:118:176:-;-1:-1:-1;;1220:118:176;:::o;4042:342:118:-;4173:43;;;;;-1:-1:-1;;;;;4173:22:118;;;;;:43;;4196:8;;4206:9;;4173:43;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4173:43:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4173:43:118;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4173:43:118;;;;;;;;;;4299:14;:12;:14::i;:::-;4278:99;;;;;;;;;;;;;5392:852;5467:4;;5651:14;5728:57;;;;5837:4;5832:220;;;;5644:497;;5728:57;5770:1;5755:16;;5728:57;;5832:220;5937:4;5932:3;5927;5912:30;6034:3;6028:10;6013:25;;5644:497;-1:-1:-1;6236:1:118;6221:16;;-1:-1:-1;5392:852:118;:::o;1248:7961:4:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1248:7961:4;;;;;;-1:-1:-1;;;;;1248:7961:4;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;148:352;;;278:3;271:4;263:6;259:17;255:27;245:2;;296:1;293;286:12;245:2;-1:-1;316:20;;356:18;345:30;;342:2;;;388:1;385;378:12;342:2;422:4;414:6;410:17;398:29;;473:3;465:4;457:6;453:17;443:8;439:32;436:41;433:2;;;490:1;487;480:12;433:2;238:262;;;;;;886:116;;961:36;989:6;983:13;961:36;;1010:440;;1111:3;1104:4;1096:6;1092:17;1088:27;1078:2;;1129:1;1126;1119:12;1078:2;1166:6;1153:20;1188:64;1203:48;1244:6;1203:48;;;1188:64;;;1179:73;;1272:6;1265:5;1258:21;1308:4;1300:6;1296:17;1341:4;1334:5;1330:16;1376:3;1367:6;1362:3;1358:16;1355:25;1352:2;;;1393:1;1390;1383:12;1352:2;1403:41;1437:6;1432:3;1427;1403:41;;;1071:379;;;;;;;;1507:479;;1626:4;1614:9;1609:3;1605:19;1601:30;1598:2;;;1644:1;1641;1634:12;1598:2;1662:20;1677:4;1662:20;;;1653:29;-1:-1;1734:1;1765:49;1810:3;1790:9;1765:49;;;1741:74;;-1:-1;1882:2;1915:49;1960:3;1936:22;;;1915:49;;;1908:4;1901:5;1897:16;1890:75;1836:140;1592:394;;;;;1993:118;;2060:46;2098:6;2085:20;2060:46;;2118:122;;2196:39;2227:6;2221:13;2196:39;;2247:959;;;;;;;2490:2;2478:9;2469:7;2465:23;2461:32;2458:2;;;2506:1;2503;2496:12;2458:2;2541:31;;2592:18;2581:30;;2578:2;;;2624:1;2621;2614:12;2578:2;2652:80;2724:7;2715:6;2704:9;2700:22;2652:80;;;2642:90;;;;2520:218;2797:2;2786:9;2782:18;2769:32;2821:18;2813:6;2810:30;2807:2;;;2853:1;2850;2843:12;2807:2;2881:80;2953:7;2944:6;2933:9;2929:22;2881:80;;;2871:90;;;;2748:219;3026:2;3015:9;3011:18;2998:32;3050:18;3042:6;3039:30;3036:2;;;3082:1;3079;3072:12;3036:2;3110:80;3182:7;3173:6;3162:9;3158:22;3110:80;;;3100:90;;;;2977:219;2452:754;;;;;;;;;3213:257;;3325:2;3313:9;3304:7;3300:23;3296:32;3293:2;;;3341:1;3338;3331:12;3293:2;3376:1;3393:61;3446:7;3426:9;3393:61;;3477:530;;;3637:2;3625:9;3616:7;3612:23;3608:32;3605:2;;;3653:1;3650;3643:12;3605:2;3688:1;3705:83;3780:7;3760:9;3705:83;;;3695:93;;3667:127;3853:2;3842:9;3838:18;3825:32;3877:18;3869:6;3866:30;3863:2;;;3909:1;3906;3899:12;3863:2;3929:62;3983:7;3974:6;3963:9;3959:22;3929:62;;;3919:72;;3804:193;3599:408;;;;;;4014:263;;4129:2;4117:9;4108:7;4104:23;4100:32;4097:2;;;4145:1;4142;4135:12;4097:2;4180:1;4197:64;4253:7;4233:9;4197:64;;4284:399;;;4416:2;4404:9;4395:7;4391:23;4387:32;4384:2;;;4432:1;4429;4422:12;4384:2;4467:1;4484:64;4540:7;4520:9;4484:64;;;4474:74;;4446:108;4585:2;4603:64;4659:7;4650:6;4639:9;4635:22;4603:64;;4691:173;;4778:46;4820:3;4812:6;4778:46;;;-1:-1;;4853:4;4844:14;;4771:93;4873:173;;4960:46;5002:3;4994:6;4960:46;;5054:142;5145:45;5184:5;5145:45;;;5140:3;5133:58;5127:69;;;5203:110;5276:31;5301:5;5276:31;;5613:585;;5744:50;5788:5;5744:50;;;5807:76;5876:6;5871:3;5807:76;;;5800:83;;5903:52;5949:5;5903:52;;;5976:1;5961:215;5986:6;5983:1;5980:13;5961:215;;;6033:63;6092:3;6083:6;6077:13;6033:63;;;6026:70;;6113:56;6162:6;6113:56;;;6103:66;-1:-1;6008:1;6001:9;5961:215;;;-1:-1;6189:3;;5723:475;-1:-1;;;;5723:475;6237:621;;6382:54;6430:5;6382:54;;;6449:86;6528:6;6523:3;6449:86;;;6442:93;;6555:56;6605:5;6555:56;;;6632:1;6617:219;6642:6;6639:1;6636:13;6617:219;;;6689:63;6748:3;6739:6;6733:13;6689:63;;;6682:70;;6769:60;6822:6;6769:60;;;6759:70;-1:-1;6664:1;6657:9;6617:219;;6897:585;;7028:50;7072:5;7028:50;;;7091:76;7160:6;7155:3;7091:76;;;7084:83;;7187:52;7233:5;7187:52;;;7260:1;7245:215;7270:6;7267:1;7264:13;7245:215;;;7317:63;7376:3;7367:6;7361:13;7317:63;;;7310:70;;7397:56;7446:6;7397:56;;;7387:66;-1:-1;7292:1;7285:9;7245:215;;7491:465;;7651:67;7715:2;7710:3;7651:67;;;7751:66;7731:87;;7852:66;7847:2;7838:12;;7831:88;7947:2;7938:12;;7637:319;-1:-1;;7637:319;7965:465;;8125:67;8189:2;8184:3;8125:67;;;8225:66;8205:87;;8326:66;8321:2;8312:12;;8305:88;8421:2;8412:12;;8111:319;-1:-1;;8111:319;8539:733;8780:22;;8706:4;8815:37;;;8539:733;;8697:14;;;;8867:98;8697:14;8780:22;8867:98;;;8859:106;;8726:251;9064:4;9057:5;9053:16;9047:23;9116:3;9110:4;9106:14;9099:4;9094:3;9090:14;9083:38;9136:98;9229:4;9216:11;9136:98;;;9128:106;8679:593;-1:-1;;;;;8679:593;9279:110;9352:31;9377:5;9352:31;;9658:213;9776:2;9761:18;;9790:71;9765:9;9834:6;9790:71;;9878:229;10004:2;9989:18;;10018:79;9993:9;10070:6;10018:79;;10114:324;10260:2;10245:18;;10274:71;10249:9;10318:6;10274:71;;;10356:72;10424:2;10413:9;10409:18;10400:6;10356:72;;10800:435;10974:2;10959:18;;10988:71;10963:9;11032:6;10988:71;;;11070:72;11138:2;11127:9;11123:18;11114:6;11070:72;;;11153;11221:2;11210:9;11206:18;11197:6;11153:72;;11716:324;11862:2;11847:18;;11876:71;11851:9;11920:6;11876:71;;;11958:72;12026:2;12015:9;12011:18;12002:6;11958:72;;12047:899;12341:3;12326:19;;12356:71;12330:9;12400:6;12356:71;;;12438:72;12506:2;12495:9;12491:18;12482:6;12438:72;;;12521;12589:2;12578:9;12574:18;12565:6;12521:72;;;12604;12672:2;12661:9;12657:18;12648:6;12604:72;;;12687:73;12755:3;12744:9;12740:19;12731:6;12687:73;;;12771;12839:3;12828:9;12824:19;12815:6;12771:73;;;12855:81;12931:3;12920:9;12916:19;12907:6;12855:81;;;12312:634;;;;;;;;;;;12953:620;13199:2;13213:47;;;13184:18;;13274:108;13184:18;13368:6;13274:108;;;13266:116;;13430:9;13424:4;13420:20;13415:2;13404:9;13400:18;13393:48;13455:108;13558:4;13549:6;13455:108;;13580:407;13771:2;13785:47;;;13756:18;;13846:131;13756:18;13846:131;;13994:407;14185:2;14199:47;;;14170:18;;14260:131;14170:18;14260:131;;14408:393;14592:2;14606:47;;;14577:18;;14667:124;14577:18;14777:6;14667:124;;14808:213;14926:2;14911:18;;14940:71;14915:9;14984:6;14940:71;;15028:256;15090:2;15084:9;15116:17;;;15191:18;15176:34;;15212:22;;;15173:62;15170:2;;;15248:1;15245;15238:12;15170:2;15264;15257:22;15068:216;;-1:-1;15068:216;15291:258;;15434:18;15426:6;15423:30;15420:2;;;15466:1;15463;15456:12;15420:2;-1:-1;15539:4;15510;15487:17;;;;-1:-1;;15483:33;15529:15;;15357:192;15944:103;16030:12;;16014:33;16664:168;16772:19;;;16821:4;16812:14;;16765:67;17376:105;;-1:-1;;;;;17557:54;;17445:31;17540:76;17623:79;17692:5;17675:27;17821:92;17894:13;17887:21;;17870:43;18141:129;;18228:37;18259:5;18277:121;18356:37;18387:5;18356:37;;18528:145;18609:6;18604:3;18599;18586:30;-1:-1;18665:1;18647:16;;18640:27;18579:94",
source:'/*\n    Copyright 2018 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\n\nimport { ERC20Wrapper } from "../../lib/ERC20Wrapper.sol";\nimport { ExchangeWrapperLibrary } from "../lib/ExchangeWrapperLibrary.sol";\nimport { ICore } from "../interfaces/ICore.sol";\nimport { KyberNetworkProxyInterface } from "../../external/KyberNetwork/KyberNetworkProxyInterface.sol";\nimport { LibBytes } from "../../external/0x/LibBytes.sol";\n\n\n/**\n * @title KyberNetworkWrapper\n * @author Set Protocol\n *\n * The KyberNetworkWrapper contract wrapper to interface with KyberNetwork for reserve liquidity\n */\ncontract KyberNetworkWrapper {\n    using LibBytes for bytes;\n    using SafeMath for uint256;\n\n    /* ============ State Variables ============ */\n\n    address public core;\n    address public kyberNetworkProxy;\n    address public setTransferProxy;\n\n    uint256 public KYBER_TRADE_LENGTH = 160;\n\n    // ============ Structs ============\n\n    struct KyberTrade {\n        address destinationToken;\n        address sourceToken;\n        uint256 sourceTokenQuantity;\n        uint256 minimumConversionRate;\n        uint256 maxDestinationQuantity;\n    }\n\n    /* ============ Constructor ============ */\n\n    /**\n     * Initialize exchange wrapper with required addresses to facilitate Kyber trades\n     *\n     * @param  _core                 Deployed Core contract\n     * @param  _kyberNetworkProxy    KyberNetwork contract for filling orders\n     * @param  _setTransferProxy     Set Protocol transfer proxy contract\n     */\n    constructor(\n        address _core,\n        address _kyberNetworkProxy,\n        address _setTransferProxy\n    )\n        public\n    {\n        core = _core;\n        kyberNetworkProxy = _kyberNetworkProxy;\n        setTransferProxy = _setTransferProxy;\n    }\n\n    /* ============ Public Functions ============ */\n\n    /**\n     * Returns the conversion rate between the issuance order maker token and the set component token\n     * in 18 decimals, regardless of component token\'s decimals\n     *\n     * @param  _sourceTokens         Address of source token used in exchange orders\n     * @param  _destinationTokens    Address of destination token to trade for\n     * @param  _quantities           Amount of maker token to exchange for component token\n     * @return uint256[]             Conversion rate in wei\n     * @return uint256[]             Slippage in wei\n     */\n    function conversionRate(\n        address[] calldata _sourceTokens,\n        address[] calldata _destinationTokens,\n        uint256[] calldata _quantities\n    )\n        external\n        view\n        returns (uint256[] memory, uint256[] memory)\n    {\n        uint256 rateCount = _sourceTokens.length;\n        uint256[] memory expectedRates = new uint256[](rateCount);\n        uint256[] memory slippageRates = new uint256[](rateCount);\n        \n        for (uint256 i = 0; i < rateCount; i++) {\n            (expectedRates[i], slippageRates[i]) = KyberNetworkProxyInterface(kyberNetworkProxy).getExpectedRate(\n                _sourceTokens[i],\n                _destinationTokens[i],\n                _quantities[i]\n            );\n        }\n\n        return (\n            expectedRates,\n            slippageRates\n        );\n    }\n\n    /**\n     * IExchangeWrapper interface delegate method.\n     *\n     * Parses and executes Kyber trades. Depending on conversion rate, Kyber trades may result in change.\n     * We currently pass change back to the issuance order maker, exploring how it can safely be passed to the taker.\n     *\n     *\n     * @param  _exchangeData            Standard exchange wrapper interface object containing exchange metadata\n     * @param  _tradesData              Arbitrary bytes data for any information to pass to the exchange\n     * @return ExchangeWrapperLibrary.ExchangeResults  Struct containing component acquisition results\n     */\n    function exchange(\n        ExchangeWrapperLibrary.ExchangeData memory _exchangeData,\n        bytes memory _tradesData\n    )\n        public\n        returns (ExchangeWrapperLibrary.ExchangeResults memory)\n    {\n        require(\n            ICore(core).validModules(msg.sender),\n            "KyberNetworkWrapper.exchange: Sender must be approved module"\n        );\n\n        uint256 tradesCount = _exchangeData.orderCount;\n        address[] memory sendTokens = new address[](tradesCount);\n        address[] memory receiveTokens = new address[](tradesCount);\n        uint256[] memory receiveTokensAmounts = new uint256[](tradesCount);\n\n        // Parse and execute the trade at the current offset via the KyberNetworkProxy, each kyber trade is 160 bytes\n        for (uint256 i = 0; i < tradesCount; i++) {\n            // Parse Kyber trade at the current offset\n            KyberTrade memory trade = parseKyberTrade(\n                _tradesData,\n                i.mul(KYBER_TRADE_LENGTH)\n            );\n\n            // Ensure the caller\'s source token is allowed to be transferred by \n            // KyberNetworkProxy as the source token\n            ERC20Wrapper.ensureAllowance(\n                trade.sourceToken,\n                address(this),\n                kyberNetworkProxy,\n                trade.sourceTokenQuantity\n            );\n\n            // Track the send tokens to ensure any leftovers are returned to the user\n            sendTokens[i] = trade.sourceToken;\n\n            // Execute Kyber trade\n            (receiveTokens[i], receiveTokensAmounts[i]) = tradeOnKyberReserve(trade);\n        }\n\n        // Return leftover send tokens to the original caller\n        ExchangeWrapperLibrary.returnLeftoverSendTokens(\n            sendTokens,\n            _exchangeData.caller\n        );\n\n        return ExchangeWrapperLibrary.ExchangeResults({\n            receiveTokens: receiveTokens,\n            receiveTokenAmounts: receiveTokensAmounts\n        });\n    }\n\n    /* ============ Private ============ */\n\n    /**\n     * Parses and executes Kyber trade\n     *\n     * @return address                  Address of set component to trade for\n     * @return uint256                  Amount of set component received in trade\n     */\n    function tradeOnKyberReserve(\n        KyberTrade memory _trade\n    )\n        private\n        returns (address, uint256)\n    {\n        // Execute Kyber trade via deployed KyberNetworkProxy contract\n        uint256 destinationTokenQuantity = KyberNetworkProxyInterface(kyberNetworkProxy).trade(\n            _trade.sourceToken,\n            _trade.sourceTokenQuantity,\n            _trade.destinationToken,\n            address(this),\n            _trade.maxDestinationQuantity,\n            _trade.minimumConversionRate,\n            address(0)\n        );\n\n        // Ensure the destination token is allowed to be transferred by Set TransferProxy\n        ERC20Wrapper.ensureAllowance(\n            _trade.destinationToken,\n            address(this),\n            setTransferProxy,\n            destinationTokenQuantity\n        );\n\n        return (\n            _trade.destinationToken,\n            destinationTokenQuantity\n        );\n    }\n\n    /*\n     * Parses the bytes array for a Kyber trade\n     *\n     * | Data                       | Location                      |\n     * |----------------------------|-------------------------------|\n     * | destinationToken           | 0                             |\n     * | sourceTokenQuantity        | 32                            |\n     * | sourceTokenQuantity        | 64                            |\n     * | minimumConversionRate      | 96                            |\n     * | maxDestinationQuantity     | 128                           |\n     *\n     * @param  _tradesData    Byte array of (multiple) Kyber trades\n     * @param  _offset        Offset to start scanning for Kyber trade body\n     * @return KyberTrade     KyberTrade struct\n     */\n    function parseKyberTrade(\n        bytes memory _tradesData,\n        uint256 _offset\n    )\n        private\n        pure\n        returns (KyberTrade memory)\n    {\n        KyberTrade memory trade;\n\n        uint256 tradeDataStart = _tradesData.contentAddress().add(_offset);\n\n        assembly {\n            mstore(trade,           mload(tradeDataStart))            // destinationToken\n            mstore(add(trade, 32),  mload(add(tradeDataStart, 32)))   // sourceToken\n            mstore(add(trade, 64),  mload(add(tradeDataStart, 64)))   // sourceTokenQuantity\n            mstore(add(trade, 96),  mload(add(tradeDataStart, 96)))   // minimumConversionRate\n            mstore(add(trade, 128), mload(add(tradeDataStart, 128)))  // maxDestinationQuantity\n        }\n\n        return trade;\n    }\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/exchange-wrappers/KyberNetworkWrapper.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.229Z",devdoc:{author:"Set Protocol * The KyberNetworkWrapper contract wrapper to interface with KyberNetwork for reserve liquidity",methods:{constructor:{params:{_core:"Deployed Core contract",_kyberNetworkProxy:"KyberNetwork contract for filling orders",_setTransferProxy:"Set Protocol transfer proxy contract"}},"conversionRate(address[],address[],uint256[])":{params:{_destinationTokens:"Address of destination token to trade for",_quantities:"Amount of maker token to exchange for component token",_sourceTokens:"Address of source token used in exchange orders"},"return":"uint256[]             Conversion rate in weiuint256[]             Slippage in wei"},"exchange((address,uint256),bytes)":{params:{_exchangeData:"Standard exchange wrapper interface object containing exchange metadata",_tradesData:"Arbitrary bytes data for any information to pass to the exchange"},"return":"ExchangeWrapperLibrary.ExchangeResults  Struct containing component acquisition results"}},title:"KyberNetworkWrapper"},userdoc:{methods:{constructor:"Initialize exchange wrapper with required addresses to facilitate Kyber trades","conversionRate(address[],address[],uint256[])":{notice:"Returns the conversion rate between the issuance order maker token and the set component token in 18 decimals, regardless of component token's decimals"},"exchange((address,uint256),bytes)":{notice:"IExchangeWrapper interface delegate method.     * Parses and executes Kyber trades. Depending on conversion rate, Kyber trades may result in change. We currently pass change back to the issuance order maker, exploring how it can safely be passed to the taker.     *"}}}};