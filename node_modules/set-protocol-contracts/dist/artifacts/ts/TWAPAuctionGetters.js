"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TWAPAuctionGetters={contractName:"TWAPAuctionGetters",abi:[{constant:true,inputs:[{name:"_set",type:"address"}],name:"minimumBid",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getCombinedCurrentSetUnits",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getCombinedNextSetUnits",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"remainingCurrentSets",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"startingCurrentSets",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getCombinedTokenArray",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getOrderSize",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getOrderRemaining",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getTotalSetsRemaining",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getChunkSize",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getChunkAuctionPeriod",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getLastChunkAuctionEnd",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"minimumBid","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getCombinedCurrentSetUnits","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getCombinedNextSetUnits","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getLastChunkAuctionEnd","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"remainingCurrentSets","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"startingCurrentSets","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getChunkSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getCombinedTokenArray","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getChunkAuctionPeriod","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getTotalSetsRemaining","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getOrderSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getOrderRemaining","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"devdoc":{"author":"Set Protocol * Contract containing getters for receiving data from TWAPAuction.TWAPState struct. The twapAuction() getter is implemented in the inheriting contract.","methods":{},"title":"TWAPAuctionGetters"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/liquidators/twap-impl/TWAPAuctionGetters.sol":"TWAPAuctionGetters"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICore.sol":{"keccak256":"0x5dc3db4398630ea52d2a40c9ddfa89d94e65c2770a12bab4d2a5c8eb573fb0a0","urls":["bzzr://25e90b53f61b388e0950b808e2296f82d427b66cfd6021212713436b2a592e31"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IFeeCalculator.sol":{"keccak256":"0xfdce9b333367bfed8f379738b0eabfe4be0045db735e9f24493de09729593d4d","urls":["bzzr://d2fa7438b492f4f08009810e3e9a2e2c22a429c307562e3f5274d4bfe2d21734"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ILiquidator.sol":{"keccak256":"0x9d1e66d56cd51d14787cce5ff8fb378eb6a0bb704e7102d7c4eda5de7f585af3","urls":["bzzr://c44220025ac21fda1dda68e236572c5c4f82bf53ccf504a020487b8c746c7b26"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IOracleWhiteList.sol":{"keccak256":"0xc4623b7082c6e017d1f820a05289a71d4262c01444ff1571e92f64a4e82662af","urls":["bzzr://c11cc5b2b50c5e708a09b10adf350e9ea3d3427cc2f199516db4ae9be498aaac"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalancingSetToken.sol":{"keccak256":"0xe7356a7b0f0cc95d9526395d776f523a48fd65618730d67b4f31f20ffbd380da","urls":["bzzr://605a33a818eff7ce3370f25fccb751f61c066b4db0772605a2215d1357d68072"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalancingSetTokenV2.sol":{"keccak256":"0x46c9dc7c09957eaa4f896b33d8d25ff5268e710172330f033379eed62a052ace","urls":["bzzr://c5b5cdc4e58c0905a03ef70954ac23eefe4776c243049f37e7b93cd8277bb7cb"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalancingSetTokenV3.sol":{"keccak256":"0x72164f9d5fcd4d7b03f41df855fde0e079dba4ca743765af8d644e036214f6ae","urls":["bzzr://b3ca58753e49c659bdab71963effffd8f1aff0788cf39e91e02323a6682c4711"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetToken.sol":{"keccak256":"0xfa6c0c07f8394d89b6b8f72e15778f8452a9341acb20cebb8421f3522aaca1bd","urls":["bzzr://ccf23bb78fd507bf8cbf5cf7ac2a660a1463b87a3689196e42b8f6862d1a6b11"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/Rebalance.sol":{"keccak256":"0x74ffa689d93ced6c6e0377a35ec1274241b6191b5aaac5576ada379ac3840286","urls":["bzzr://25bdda3f1f5adfa2c83c760c44993d250cd2df037360f0018d22d268df79e887"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/RebalancingLibrary.sol":{"keccak256":"0x7f9dd2f95b2ee71a98b94cb9b0df15874aa134e7480d04a1fcf36aff166a55f4","urls":["bzzr://f43a5563ec5df095151eee30cf7a0941b5a971917c27c7b34d9586b36563ab5b"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/SetMath.sol":{"keccak256":"0x4c6762ad3d11c03889df48cc3b26bd199f958deffa651ec30655cd1654a47303","urls":["bzzr://b8e968dd2840d9586babe7852589abff3972135fff299285eaafd31687ae4385"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/liquidators/impl/Auction.sol":{"keccak256":"0x5024075a30ac3bb5de365cbc60c1d99b8776c43cfed53418d31a2c10959d5993","urls":["bzzr://b1564c7843aba02566623d350eb2a987d9b5f757a2564dee39762565e2eb5292"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/liquidators/impl/AuctionGetters.sol":{"keccak256":"0xc316c153e884b5b1b02504a0619c6af9b56016c780fe0f98da484a372cefd924","urls":["bzzr://aee31e84470cbe256da1704b998ac60acb9e9d0b80785d7bbbd584503abacd61"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/liquidators/impl/LinearAuction.sol":{"keccak256":"0x253367c7f2e8870399fcc3c833bf98dc6d6111698418747d9a6b595673917624","urls":["bzzr://b53d7a1098f20a399280bc49355d67613439bc2418e701b5390015aa8e97f0d5"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/liquidators/impl/SetUSDValuation.sol":{"keccak256":"0xb0b518c3a5f80e3f08df8157fb4dda48e1d48d2fa1c7149ee2e52bd21b1e8916","urls":["bzzr://b36893ff192fe43a9ed50161f5b616ed63b9fdeeb0b50b8512f19a84306380e0"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/liquidators/impl/TwoAssetPriceBoundedLinearAuction.sol":{"keccak256":"0xffa0ab726149913e8e3f876acb40153a7ac5b553a1208d41506399ae527c2c83","urls":["bzzr://429b5aa0cca9a3781c664cc86f12238cbfd03e9c38b86b59929f94de04bacbc3"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/liquidators/twap-impl/TWAPAuction.sol":{"keccak256":"0xe950c111625c6e1fe04f0a6b78887c778243995ab3d0337de213e84b40474e4d","urls":["bzzr://cee37a703dbcf4626d94ad7da4c211e8e618d6ebd1787a9b2320529ca1815453"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/liquidators/twap-impl/TWAPAuctionGetters.sol":{"keccak256":"0xbdccb914549e16e99d1571ee1dd2e3706b9040418804e960c2564b9d7061da0a","urls":["bzzr://3969e2725f3d3fcac569515cd28d8037ae8896124e732c9bd07e39e5fdd6fb76"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/liquidators/utils/LiquidatorUtils.sol":{"keccak256":"0x6d0490b5df5842015e56abbc22e2be72c9e3254962c05088dd42063ae3c5fe41","urls":["bzzr://589ef6c305bd961a75ef7a5afa23e83e87e18402f738f1e43320e38dfdbd54de"]},"openzeppelin-solidity/contracts/math/Math.sol":{"keccak256":"0x775160984ceb0931bf67e718fb23afd6fc2a5d38a6e2378ebb438a039ed2269e","urls":["bzzr://209e27ad1c13e3e9b157915e0269ee4c3b6f0a494660dcc4acf1faf102e1a7ad"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol":{"keccak256":"0xa60f7f7ce98ca2d75c8e02da982d3fe91176269fdab2589bbbb7cc65f2d7c9d3","urls":["bzzr://5edd2c9be304a1e8ed055e243daba5345f242008164f9a0565c33197b860323b"]},"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61","urls":["bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc"]},"set-protocol-contract-utils/contracts/lib/AddressArrayUtils.sol":{"keccak256":"0xb716eab4e8c5a336a2f19078928530829af097912bd1b925644f914b63601f08","urls":["bzzr://d8a21d39779beb316adb5180d08dcba1941eeccd9412ff08feb21a631c18c269"]},"set-protocol-contract-utils/contracts/lib/BoundsLibrary.sol":{"keccak256":"0xc7d55552e939f9d1bc6e123f7f78ff011dc5697c02256751040e746f74f60699","urls":["bzzr://ad5ce8135914d9bb89c2affac2b19d9779edc6c509ed8291461717b71ce45f54"]},"set-protocol-contract-utils/contracts/lib/CommonMath.sol":{"keccak256":"0x3d1d08c6efc2a973fe2c02ddcb02fd99a8c8eb75f74dcbd93e8e15864eee2b6b","urls":["bzzr://580815dd1cf648a4521d923e59087de21143d9c48115ab71579a1f5a8f3d36af"]},"set-protocol-oracles/contracts/meta-oracles/interfaces/IOracle.sol":{"keccak256":"0xeb5a447a0b1ef47547ce12a91b72412880edb9690aa9bcd8746fc3a379f2fbe9","urls":["bzzr://261675b916b84f58bea71ec28c4f711291053174ddf47e860c26daaee506744a"]}},"version":1}',bytecode:"0x",deployedBytecode:"0x",sourceMap:"",deployedSourceMap:"",source:'/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\n\nimport { AuctionGetters } from "../impl/AuctionGetters.sol";\nimport { TWAPAuction } from "./TWAPAuction.sol";\n\n\n/**\n * @title TWAPAuctionGetters\n * @author Set Protocol\n *\n * Contract containing getters for receiving data from TWAPAuction.TWAPState struct. The twapAuction()\n * getter is implemented in the inheriting contract.\n */\ncontract TWAPAuctionGetters is AuctionGetters {\n    using SafeMath for uint256;\n\n    function getOrderSize(address _set) external view returns (uint256) {\n        return twapAuction(_set).orderSize;\n    }\n\n    function getOrderRemaining(address _set) external view returns (uint256) {\n        return twapAuction(_set).orderRemaining;\n    }\n\n    function getTotalSetsRemaining(address _set) external view returns (uint256) {\n        return twapAuction(_set).orderRemaining.add(auction(_set).remainingCurrentSets);\n    }\n\n    function getChunkSize(address _set) external view returns (uint256) {\n        return twapAuction(_set).chunkSize;\n    }\n\n    function getChunkAuctionPeriod(address _set) external view returns (uint256) {\n        return twapAuction(_set).chunkAuctionPeriod;\n    }\n\n    function getLastChunkAuctionEnd(address _set) external view returns (uint256) {\n        return twapAuction(_set).lastChunkAuctionEnd;\n    }\n\n    function twapAuction(address _set) internal view returns(TWAPAuction.TWAPState storage);\n}',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/liquidators/twap-impl/TWAPAuctionGetters.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.552Z",devdoc:{author:"Set Protocol * Contract containing getters for receiving data from TWAPAuction.TWAPState struct. The twapAuction() getter is implemented in the inheriting contract.",methods:{},title:"TWAPAuctionGetters"},userdoc:{methods:{}}};