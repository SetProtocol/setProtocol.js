"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.CoreFactory={contractName:"CoreFactory",abi:[{constant:true,inputs:[{name:"_factory",type:"address"}],name:"validFactories",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"exchanges",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"setTokens",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_exchangeId",type:"uint8"}],name:"exchangeIds",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_module",type:"address"}],name:"validModules",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"transferProxy",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"operationState",outputs:[{name:"",type:"uint8"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_priceLibrary",type:"address"}],name:"validPriceLibraries",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"state",outputs:[{name:"operationState",type:"uint8"},{name:"transferProxy",type:"address"},{name:"vault",type:"address"},{name:"transferProxyInstance",type:"address"},{name:"vaultInstance",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"priceLibraries",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"disabledSets",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"modules",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"vault",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"factories",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"validSets",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{anonymous:false,inputs:[{indexed:true,name:"_setTokenAddress",type:"address"},{indexed:false,name:"_factory",type:"address"},{indexed:false,name:"_components",type:"address[]"},{indexed:false,name:"_units",type:"uint256[]"},{indexed:false,name:"_naturalUnit",type:"uint256"},{indexed:false,name:"_name",type:"bytes32"},{indexed:false,name:"_symbol",type:"bytes32"}],name:"SetTokenCreated",type:"event"},{constant:false,inputs:[{name:"_factory",type:"address"},{name:"_components",type:"address[]"},{name:"_units",type:"uint256[]"},{name:"_naturalUnit",type:"uint256"},{name:"_name",type:"bytes32"},{name:"_symbol",type:"bytes32"},{name:"_callData",type:"bytes"}],name:"createSet",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[{"name":"_factory","type":"address"}],"name":"validFactories","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"exchanges","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"setTokens","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_exchangeId","type":"uint8"}],"name":"exchangeIds","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_factory","type":"address"},{"name":"_components","type":"address[]"},{"name":"_units","type":"uint256[]"},{"name":"_naturalUnit","type":"uint256"},{"name":"_name","type":"bytes32"},{"name":"_symbol","type":"bytes32"},{"name":"_callData","type":"bytes"}],"name":"createSet","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_module","type":"address"}],"name":"validModules","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"transferProxy","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"operationState","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_priceLibrary","type":"address"}],"name":"validPriceLibraries","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"state","outputs":[{"name":"operationState","type":"uint8"},{"name":"transferProxy","type":"address"},{"name":"vault","type":"address"},{"name":"transferProxyInstance","type":"address"},{"name":"vaultInstance","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"priceLibraries","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"disabledSets","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"modules","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vault","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"factories","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"validSets","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_setTokenAddress","type":"address"},{"indexed":false,"name":"_factory","type":"address"},{"indexed":false,"name":"_components","type":"address[]"},{"indexed":false,"name":"_units","type":"uint256[]"},{"indexed":false,"name":"_naturalUnit","type":"uint256"},{"indexed":false,"name":"_name","type":"bytes32"},{"indexed":false,"name":"_symbol","type":"bytes32"}],"name":"SetTokenCreated","type":"event"}],"devdoc":{"author":"Set Protocol * The CoreFactory contract contains Set Token creation operations","methods":{"createSet(address,address[],uint256[],uint256,bytes32,bytes32,bytes)":{"params":{"_callData":"Byte string containing additional call parameters","_components":"The address of component tokens","_factory":"The address of the Factory to create from","_name":"The bytes32 encoded name of the new Set","_naturalUnit":"The minimum unit to be issued or redeemed","_symbol":"The bytes32 encoded symbol of the new Set","_units":"The units of each component token"},"return":"setTokenAddress       The address of the new Set"},"disabledSets(address)":{"params":{"_set":"Set address"},"return":"bool           Boolean indicating if is a disabled Set"},"exchangeIds(uint8)":{"params":{"_exchangeId":"ExchangeId number"},"return":"address           Address belonging to given exchangeId"},"exchanges()":{"return":"address[]      Array of valid exchange wrappers"},"factories()":{"return":"address[]      Array of valid factories"},"modules()":{"return":"address[]      Array of valid modules"},"operationState()":{"return":"uint8           Uint8 representing the operational state of the protocol"},"priceLibraries()":{"return":"address[]      Array of valid price libraries"},"setTokens()":{"return":"address[]      Array of valid Set Tokens"},"transferProxy()":{"return":"address       transferProxy address"},"validFactories(address)":{"params":{"_factory":"Factory address"},"return":"bool           Boolean indicating if enabled factory"},"validModules(address)":{"params":{"_module":"Factory address"},"return":"bool           Boolean indicating if enabled factory"},"validPriceLibraries(address)":{"params":{"_priceLibrary":"Price library address"},"return":"bool             Boolean indicating if valid Price Library"},"validSets(address)":{"params":{"_set":"Set address"},"return":"bool           Boolean indicating if valid Set"},"vault()":{"return":"address        vault address"}},"title":"CoreFactory"},"userdoc":{"methods":{"createSet(address,address[],uint256[],uint256,bytes32,bytes32,bytes)":{"notice":"Deploys a new Set Token and adds it to the valid list of SetTokens"},"disabledSets(address)":{"notice":"Return boolean indicating if address is a disabled Set."},"exchangeIds(uint8)":{"notice":"Return address belonging to given exchangeId."},"exchanges()":{"notice":"Return array of all valid exchange wrappers."},"factories()":{"notice":"Return array of all valid factories."},"modules()":{"notice":"Return array of all valid Modules."},"operationState()":{"notice":"Return uint8 representing the operational state of the protocol"},"priceLibraries()":{"notice":"Return array of all valid price libraries."},"setTokens()":{"notice":"Return array of all valid Set Tokens."},"transferProxy()":{"notice":"Return transferProxy address."},"validFactories(address)":{"notice":"Return boolean indicating if address is valid factory."},"validModules(address)":{"notice":"Return boolean indicating if address is valid module."},"validPriceLibraries(address)":{"notice":"Return boolean indicating if address is a valid Rebalancing Price Library."},"validSets(address)":{"notice":"Return boolean indicating if address is valid Set."},"vault()":{"notice":"Return vault address"}}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/extensions/CoreFactory.sol":"CoreFactory"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/extensions/CoreFactory.sol":{"keccak256":"0x8e161e5605236492321f816f320a458747572e023c8bc9eb558cd9d6c4b82063","urls":["bzzr://d5826f17e11e23289a75fb3b5983a791dda285a0bffe806f92d48884003ec5c9"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetFactory.sol":{"keccak256":"0xf795ab9e9ac11340a600f235073b4ec4bdea92d3c01601ced1e5afd3c2718301","urls":["bzzr://eb4f00f66933560aa133ee90030b23d7a30937e6591a83d56b3935a927e8ca9f"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ITransferProxy.sol":{"keccak256":"0x962d54385cc4760c550cd2f16bfdb53e967def4c5d3acb7b3d0b3d7a49f902de","urls":["bzzr://cb8994c8bae7fa1d55d240f44396f4156b45c81afa6fcfa608fd5e4bf9f1a919"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IVault.sol":{"keccak256":"0xf8a6d376173be39f5744492866db5dd3f91453a124d23679ff164ff3817f2f4f","urls":["bzzr://896c0a8329175c1620e1a22467778b835defe0e61847e5a8427a306f42391e64"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/CoreState.sol":{"keccak256":"0xc0aa403578d64be9f30fb2299cedcf4cc5e047bfe07cff4e70206948620b7c71","urls":["bzzr://2ba47997b0ad3048d6de0562193df392a53e6c3b2bcaccd041a00bc02327fa9f"]}},"version":1}',bytecode:"0x608060405234801561001057600080fd5b50610ab3806100206000396000f3fe608060405234801561001057600080fd5b506004361061011d576000357c010000000000000000000000000000000000000000000000000000000090048063a2c9eb6d116100b4578063f7e80e9811610083578063f7e80e9814610413578063fbfa77cf1461041b578063fe5b38e414610423578063fef3ee731461042b5761011d565b8063a2c9eb6d1461037a578063c19d93fb146103a0578063d0312561146103e5578063d913d4e1146103ed5761011d565b80635c217114116100f05780635c217114146101f85780635e6334981461032e5780636e667db31461035457806372bedcee1461035c5761011d565b80630e4355d41461012257806321a8c1771461015c578063559ed339146101b457806356fe2784146101bc575b600080fd5b6101486004803603602081101561013857600080fd5b5035600160a060020a0316610451565b604080519115158252519081900360200190f35b61016461046f565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101a0578181015183820152602001610188565b505050509050019250505060405180910390f35b6101646104d4565b6101dc600480360360208110156101d257600080fd5b503560ff16610537565b60408051600160a060020a039092168252519081900360200190f35b6101dc600480360360e081101561020e57600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561023957600080fd5b82018360208201111561024b57600080fd5b8035906020019184602083028401116401000000008311171561026d57600080fd5b91939092909160208101903564010000000081111561028b57600080fd5b82018360208201111561029d57600080fd5b803590602001918460208302840111640100000000831117156102bf57600080fd5b9193909282359260208101359260408201359290916080810190606001356401000000008111156102ef57600080fd5b82018360208201111561030157600080fd5b8035906020019184600183028401116401000000008311171561032357600080fd5b509092509050610555565b6101486004803603602081101561034457600080fd5b5035600160a060020a031661088e565b6101dc6108ac565b6103646108c0565b6040805160ff9092168252519081900360200190f35b6101486004803603602081101561039057600080fd5b5035600160a060020a03166108c9565b6103a86108e7565b6040805160ff9096168652600160a060020a0394851660208701529284168584015290831660608501529091166080830152519081900360a00190f35b610164610913565b6101486004803603602081101561040357600080fd5b5035600160a060020a0316610976565b610164610994565b6101dc6109f7565b610164610a06565b6101486004803603602081101561044157600080fd5b5035600160a060020a0316610a69565b600160a060020a031660009081526006602052604090205460ff1690565b60606000600d018054806020026020016040519081016040528092919081815260200182805480156104ca57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116104ac575b5050505050905090565b60606000600a018054806020026020016040519081016040528092919081815260200182805480156104ca57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116104ac575050505050905090565b60ff16600090815260046020526040902054600160a060020a031690565b600160a060020a038a1660009081526006602052604081205460ff166105dc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4372656174655365740000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008b600160a060020a031663569f74948c8c8c8c8c8c8c8c8c6040518a63ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001806020018881526020018781526020018681526020018060200184810384528d8d82818152602001925060200280828437600083820152601f01601f191690910185810384528b8152602090810191508c908c0280828437600083820152601f01601f191690910185810383528681526020019050868680828437600081840152601f19601f8201169050808301925050509c50505050505050505050505050602060405180830381600087803b1580156106e357600080fd5b505af11580156106f7573d6000803e3d6000fd5b505050506040513d602081101561070d57600080fd5b8101908080519060200190929190505050905060016000600801600083600160a060020a0316600160a060020a0316815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600a018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a815481600160a060020a030219169083600160a060020a031602179055505080600160a060020a03167fa31e381e140096a837a20ba16eb64e32a4011fda0697adbfd7a8f7341c56aa948d8d8d8d8d8d8d8d6040518089600160a060020a0316600160a060020a03168152602001806020018060200186815260200185815260200184815260200183810383528a8a82818152602001925060200280828437600083820152601f01601f19169091018481038352888152602090810191508990890280828437600083820152604051601f909101601f19169092018290039c50909a5050505050505050505050a29b9a5050505050505050505050565b600160a060020a031660009081526005602052604090205460ff1690565b6000546101009004600160a060020a031690565b60005460ff1690565b600160a060020a031660009081526007602052604090205460ff1690565b60005460015460025460035460ff841693600160a060020a036101009091048116938116928116911685565b60606000600e018054806020026020016040519081016040528092919081815260200182805480156104ca57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116104ac575050505050905090565b600160a060020a031660009081526009602052604090205460ff1690565b60606000600b018054806020026020016040519081016040528092919081815260200182805480156104ca57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116104ac575050505050905090565b600154600160a060020a031690565b60606000600c018054806020026020016040519081016040528092919081815260200182805480156104ca57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116104ac575050505050905090565b600160a060020a031660009081526008602052604090205460ff169056fea165627a7a723058204fb1ea9a0247b99901df9f2840638e5bdfa819430e3002b7d51da7c7284db57f0029",deployedBytecode:"0x608060405234801561001057600080fd5b506004361061011d576000357c010000000000000000000000000000000000000000000000000000000090048063a2c9eb6d116100b4578063f7e80e9811610083578063f7e80e9814610413578063fbfa77cf1461041b578063fe5b38e414610423578063fef3ee731461042b5761011d565b8063a2c9eb6d1461037a578063c19d93fb146103a0578063d0312561146103e5578063d913d4e1146103ed5761011d565b80635c217114116100f05780635c217114146101f85780635e6334981461032e5780636e667db31461035457806372bedcee1461035c5761011d565b80630e4355d41461012257806321a8c1771461015c578063559ed339146101b457806356fe2784146101bc575b600080fd5b6101486004803603602081101561013857600080fd5b5035600160a060020a0316610451565b604080519115158252519081900360200190f35b61016461046f565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101a0578181015183820152602001610188565b505050509050019250505060405180910390f35b6101646104d4565b6101dc600480360360208110156101d257600080fd5b503560ff16610537565b60408051600160a060020a039092168252519081900360200190f35b6101dc600480360360e081101561020e57600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561023957600080fd5b82018360208201111561024b57600080fd5b8035906020019184602083028401116401000000008311171561026d57600080fd5b91939092909160208101903564010000000081111561028b57600080fd5b82018360208201111561029d57600080fd5b803590602001918460208302840111640100000000831117156102bf57600080fd5b9193909282359260208101359260408201359290916080810190606001356401000000008111156102ef57600080fd5b82018360208201111561030157600080fd5b8035906020019184600183028401116401000000008311171561032357600080fd5b509092509050610555565b6101486004803603602081101561034457600080fd5b5035600160a060020a031661088e565b6101dc6108ac565b6103646108c0565b6040805160ff9092168252519081900360200190f35b6101486004803603602081101561039057600080fd5b5035600160a060020a03166108c9565b6103a86108e7565b6040805160ff9096168652600160a060020a0394851660208701529284168584015290831660608501529091166080830152519081900360a00190f35b610164610913565b6101486004803603602081101561040357600080fd5b5035600160a060020a0316610976565b610164610994565b6101dc6109f7565b610164610a06565b6101486004803603602081101561044157600080fd5b5035600160a060020a0316610a69565b600160a060020a031660009081526006602052604090205460ff1690565b60606000600d018054806020026020016040519081016040528092919081815260200182805480156104ca57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116104ac575b5050505050905090565b60606000600a018054806020026020016040519081016040528092919081815260200182805480156104ca57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116104ac575050505050905090565b60ff16600090815260046020526040902054600160a060020a031690565b600160a060020a038a1660009081526006602052604081205460ff166105dc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4372656174655365740000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008b600160a060020a031663569f74948c8c8c8c8c8c8c8c8c6040518a63ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001806020018881526020018781526020018681526020018060200184810384528d8d82818152602001925060200280828437600083820152601f01601f191690910185810384528b8152602090810191508c908c0280828437600083820152601f01601f191690910185810383528681526020019050868680828437600081840152601f19601f8201169050808301925050509c50505050505050505050505050602060405180830381600087803b1580156106e357600080fd5b505af11580156106f7573d6000803e3d6000fd5b505050506040513d602081101561070d57600080fd5b8101908080519060200190929190505050905060016000600801600083600160a060020a0316600160a060020a0316815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600a018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a815481600160a060020a030219169083600160a060020a031602179055505080600160a060020a03167fa31e381e140096a837a20ba16eb64e32a4011fda0697adbfd7a8f7341c56aa948d8d8d8d8d8d8d8d6040518089600160a060020a0316600160a060020a03168152602001806020018060200186815260200185815260200184815260200183810383528a8a82818152602001925060200280828437600083820152601f01601f19169091018481038352888152602090810191508990890280828437600083820152604051601f909101601f19169092018290039c50909a5050505050505050505050a29b9a5050505050505050505050565b600160a060020a031660009081526005602052604090205460ff1690565b6000546101009004600160a060020a031690565b60005460ff1690565b600160a060020a031660009081526007602052604090205460ff1690565b60005460015460025460035460ff841693600160a060020a036101009091048116938116928116911685565b60606000600e018054806020026020016040519081016040528092919081815260200182805480156104ca57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116104ac575050505050905090565b600160a060020a031660009081526009602052604090205460ff1690565b60606000600b018054806020026020016040519081016040528092919081815260200182805480156104ca57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116104ac575050505050905090565b600154600160a060020a031690565b60606000600c018054806020026020016040519081016040528092919081815260200182805480156104ca57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116104ac575050505050905090565b600160a060020a031660009081526008602052604090205460ff169056fea165627a7a723058204fb1ea9a0247b99901df9f2840638e5bdfa819430e3002b7d51da7c7284db57f0029",sourceMap:"858:2241:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;858:2241:9;;;;;;;",deployedSourceMap:"858:2241:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;858:2241:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3813:167:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3813:167:39;-1:-1:-1;;;;;3813:167:39;;:::i;:::-;;;;;;;;;;;;;;;;;;6379:129;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6379:129:39;;;;;;;;;;;;;;;;;5600;;;:::i;2982:168::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2982:168:39;;;;:::i;:::-;;;;-1:-1:-1;;;;;2982:168:39;;;;;;;;;;;;;;1941:1156:9;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;1941:1156:9;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1941:1156:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1941:1156:9;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1941:1156:9;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1941:1156:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1941:1156:9;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1941:1156:9;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1941:1156:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1941:1156:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1941:1156:9;;-1:-1:-1;1941:1156:9;-1:-1:-1;1941:1156:9;:::i;4184:161:39:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4184:161:39;-1:-1:-1;;;;;4184:161:39;;:::i;3267:128::-;;;:::i;2650:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5283:187;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5283:187:39;-1:-1:-1;;;;;5283:187:39;;:::i;2391:18::-;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;2391:18:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6648:139;;;:::i;4889:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4889:155:39;-1:-1:-1;;;;;4889:155:39;;:::i;5853:125::-;;;:::i;3496:112::-;;;:::i;6106:129::-;;;:::i;4536:149::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4536:149:39;-1:-1:-1;;;;;4536:149:39;;:::i;3813:167::-;-1:-1:-1;;;;;3943:30:39;3916:4;3943:30;;;:20;:30;;;;;;;;;3813:167::o;6379:129::-;6447:16;6486:5;:15;;6479:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6479:22:39;;;;;;;;;;;;;;;;;;;;;;;6379:129;:::o;5600:::-;5668:16;5707:5;:15;;5700:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5700:22:39;;;;;;;;;;;;;;;;;;;;;;5600:129;:::o;2982:168::-;3113:30;;3083:7;3113:30;;;:17;:30;;;;;;-1:-1:-1;;;;;3113:30:39;;2982:168::o;1941:1156:9:-;-1:-1:-1;;;;;2301:30:9;;2213:7;2301:30;;;:20;:30;;;;;;;;2280:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2403:26;2444:8;-1:-1:-1;;;;;2432:31:9;;2477:11;;2502:6;;2522:12;2548:5;2567:7;2588:9;;2432:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;2432:175:9;;;;;;;;;;;;;-1:-1:-1;2432:175:9;;;;;;;1:33:-1;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;2432:175:9;;;;;;;;;;;-1:-1:-1;2432:175:9;;;;;1:33:-1;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2432:175:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2432:175:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2432:175:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2432:175:9;;;;;;;;;;;;;;;;2403:204;;2706:4;2668:5;:15;;:35;2684:18;-1:-1:-1;;;;;2668:35:9;-1:-1:-1;;;;;2668:35:9;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;2769:5;:15;;2790:18;2769:40;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2769:40:9;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2769:40:9;;;;;-1:-1:-1;;;;;2769:40:9;;;;;;;2893:18;-1:-1:-1;;;;;2864:190:9;;2925:8;2947:11;;2972:6;;2992:12;3018:5;3037:7;2864:190;;;;-1:-1:-1;;;;;2864:190:9;-1:-1:-1;;;;;2864:190:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;2864:190:9;;;;;;;;;;;;;-1:-1:-1;2864:190:9;;;;;;;1:33:-1;99:1;81:16;;;74:27;2864:190:9;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;2864:190:9;;;;-1:-1:-1;2864:190:9;;-1:-1:-1;;;;;;;;;;;2864:190:9;3072:18;1941:1156;-1:-1:-1;;;;;;;;;;;1941:1156:9:o;4184:161:39:-;-1:-1:-1;;;;;4311:27:39;4284:4;4311:27;;;:18;:27;;;;;;;;;4184:161::o;3267:128::-;3339:7;3369:19;;;;-1:-1:-1;;;;;3369:19:39;;3267:128::o;2650:::-;2723:5;2751:20;;;2650:128;:::o;5283:187::-;-1:-1:-1;;;;;5423:40:39;5396:4;5423:40;;;:25;:40;;;;;;;;;5283:187::o;2391:18::-;;;;;;;;;;;;;-1:-1:-1;;;;;2391:18:39;;;;;;;;;;;;;;;:::o;6648:139::-;6721:16;6760:5;:20;;6753:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6753:27:39;;;;;;;;;;;;;;;;;;;;;;6648:139;:::o;4889:155::-;-1:-1:-1;;;;;5013:24:39;4986:4;5013:24;;;:18;:24;;;;;;;;;4889:155::o;5853:125::-;5919:16;5958:5;:13;;5951:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5951:20:39;;;;;;;;;;;;;;;;;;;;;;5853:125;:::o;3496:112::-;3590:11;;-1:-1:-1;;;;;3590:11:39;3496:112;:::o;6106:129::-;6174:16;6213:5;:15;;6206:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6206:22:39;;;;;;;;;;;;;;;;;;;;;;6106:129;:::o;4536:149::-;-1:-1:-1;;;;;4657:21:39;4630:4;4657:21;;;:15;:21;;;;;;;;;4536:149::o",source:'/*\n    Copyright 2018 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\n\nimport { CoreState } from "../lib/CoreState.sol";\nimport { ISetFactory } from "../interfaces/ISetFactory.sol";\n\n\n/**\n * @title CoreFactory\n * @author Set Protocol\n *\n * The CoreFactory contract contains Set Token creation operations\n */\ncontract CoreFactory is\n    CoreState\n{\n    /* ============ Events ============ */\n\n    event SetTokenCreated(\n        address indexed _setTokenAddress,\n        address _factory,\n        address[] _components,\n        uint256[] _units,\n        uint256 _naturalUnit,\n        bytes32 _name,\n        bytes32 _symbol\n    );\n\n    /* ============ External Functions ============ */\n\n    /**\n     * Deploys a new Set Token and adds it to the valid list of SetTokens\n     *\n     * @param  _factory              The address of the Factory to create from\n     * @param  _components           The address of component tokens\n     * @param  _units                The units of each component token\n     * @param  _naturalUnit          The minimum unit to be issued or redeemed\n     * @param  _name                 The bytes32 encoded name of the new Set\n     * @param  _symbol               The bytes32 encoded symbol of the new Set\n     * @param  _callData             Byte string containing additional call parameters\n     * @return setTokenAddress       The address of the new Set\n     */\n    function createSet(\n        address _factory,\n        address[] calldata _components,\n        uint256[] calldata _units,\n        uint256 _naturalUnit,\n        bytes32 _name,\n        bytes32 _symbol,\n        bytes calldata _callData\n    )\n        external\n        returns (address)\n    {\n        // Verify Factory is linked to Core\n        require(\n            state.validFactories[_factory],\n            "CreateSet"\n        );\n\n        // Create the Set\n        address newSetTokenAddress = ISetFactory(_factory).createSet(\n            _components,\n            _units,\n            _naturalUnit,\n            _name,\n            _symbol,\n            _callData\n        );\n\n        // Add Set to the mapping of tracked Sets\n        state.validSets[newSetTokenAddress] = true;\n\n        // Add Set to the array of tracked Sets\n        state.setTokens.push(newSetTokenAddress);\n\n        // Emit Set Token creation log\n        emit SetTokenCreated(\n            newSetTokenAddress,\n            _factory,\n            _components,\n            _units,\n            _naturalUnit,\n            _name,\n            _symbol\n        );\n\n        return newSetTokenAddress;\n    }\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/extensions/CoreFactory.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.270Z",devdoc:{author:"Set Protocol * The CoreFactory contract contains Set Token creation operations",methods:{"createSet(address,address[],uint256[],uint256,bytes32,bytes32,bytes)":{params:{_callData:"Byte string containing additional call parameters",_components:"The address of component tokens",_factory:"The address of the Factory to create from",_name:"The bytes32 encoded name of the new Set",_naturalUnit:"The minimum unit to be issued or redeemed",
_symbol:"The bytes32 encoded symbol of the new Set",_units:"The units of each component token"},"return":"setTokenAddress       The address of the new Set"},"disabledSets(address)":{params:{_set:"Set address"},"return":"bool           Boolean indicating if is a disabled Set"},"exchangeIds(uint8)":{params:{_exchangeId:"ExchangeId number"},"return":"address           Address belonging to given exchangeId"},"exchanges()":{"return":"address[]      Array of valid exchange wrappers"},"factories()":{"return":"address[]      Array of valid factories"},"modules()":{"return":"address[]      Array of valid modules"},"operationState()":{"return":"uint8           Uint8 representing the operational state of the protocol"},"priceLibraries()":{"return":"address[]      Array of valid price libraries"},"setTokens()":{"return":"address[]      Array of valid Set Tokens"},"transferProxy()":{"return":"address       transferProxy address"},"validFactories(address)":{params:{_factory:"Factory address"},"return":"bool           Boolean indicating if enabled factory"},"validModules(address)":{params:{_module:"Factory address"},"return":"bool           Boolean indicating if enabled factory"},"validPriceLibraries(address)":{params:{_priceLibrary:"Price library address"},"return":"bool             Boolean indicating if valid Price Library"},"validSets(address)":{params:{_set:"Set address"},"return":"bool           Boolean indicating if valid Set"},"vault()":{"return":"address        vault address"}},title:"CoreFactory"},userdoc:{methods:{"createSet(address,address[],uint256[],uint256,bytes32,bytes32,bytes)":{notice:"Deploys a new Set Token and adds it to the valid list of SetTokens"},"disabledSets(address)":{notice:"Return boolean indicating if address is a disabled Set."},"exchangeIds(uint8)":{notice:"Return address belonging to given exchangeId."},"exchanges()":{notice:"Return array of all valid exchange wrappers."},"factories()":{notice:"Return array of all valid factories."},"modules()":{notice:"Return array of all valid Modules."},"operationState()":{notice:"Return uint8 representing the operational state of the protocol"},"priceLibraries()":{notice:"Return array of all valid price libraries."},"setTokens()":{notice:"Return array of all valid Set Tokens."},"transferProxy()":{notice:"Return transferProxy address."},"validFactories(address)":{notice:"Return boolean indicating if address is valid factory."},"validModules(address)":{notice:"Return boolean indicating if address is valid module."},"validPriceLibraries(address)":{notice:"Return boolean indicating if address is a valid Rebalancing Price Library."},"validSets(address)":{notice:"Return boolean indicating if address is valid Set."},"vault()":{notice:"Return vault address"}}}};