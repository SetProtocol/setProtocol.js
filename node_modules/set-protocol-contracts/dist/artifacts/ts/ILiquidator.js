"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ILiquidator={contractName:"ILiquidator",abi:[{constant:false,inputs:[{name:"_currentSet",type:"address"},{name:"_nextSet",type:"address"},{name:"_startingCurrentSetQuantity",type:"uint256"},{name:"_liquidatorData",type:"bytes"}],name:"startRebalance",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"},{name:"_quantity",type:"uint256"}],name:"getBidPrice",outputs:[{components:[{name:"addresses",type:"address[]"},{name:"inflow",type:"uint256[]"},{name:"outflow",type:"uint256[]"}],name:"",type:"tuple"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_quantity",type:"uint256"}],name:"placeBid",outputs:[{components:[{name:"addresses",type:"address[]"},{name:"inflow",type:"uint256[]"},{name:"outflow",type:"uint256[]"}],name:"",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[],name:"settleRebalance",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[],name:"endFailedRebalance",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"auctionPriceParameters",outputs:[{components:[{name:"auctionStartTime",type:"uint256"},{name:"auctionTimeToPivot",type:"uint256"},{name:"auctionStartPrice",type:"uint256"},{name:"auctionPivotPrice",type:"uint256"}],name:"",type:"tuple"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"hasRebalanceFailed",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"minimumBid",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"startingCurrentSets",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"remainingCurrentSets",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getCombinedCurrentSetUnits",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getCombinedNextSetUnits",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getCombinedTokenArray",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"minimumBid","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"},{"name":"_quantity","type":"uint256"}],"name":"getBidPrice","outputs":[{"components":[{"name":"addresses","type":"address[]"},{"name":"inflow","type":"uint256[]"},{"name":"outflow","type":"uint256[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getCombinedCurrentSetUnits","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getCombinedNextSetUnits","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"hasRebalanceFailed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"remainingCurrentSets","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"auctionPriceParameters","outputs":[{"components":[{"name":"auctionStartTime","type":"uint256"},{"name":"auctionTimeToPivot","type":"uint256"},{"name":"auctionStartPrice","type":"uint256"},{"name":"auctionPivotPrice","type":"uint256"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"startingCurrentSets","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getCombinedTokenArray","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"endFailedRebalance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_quantity","type":"uint256"}],"name":"placeBid","outputs":[{"components":[{"name":"addresses","type":"address[]"},{"name":"inflow","type":"uint256[]"},{"name":"outflow","type":"uint256[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"settleRebalance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_currentSet","type":"address"},{"name":"_nextSet","type":"address"},{"name":"_startingCurrentSetQuantity","type":"uint256"},{"name":"_liquidatorData","type":"bytes"}],"name":"startRebalance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Set Protocol ","methods":{},"title":"ILiquidator"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ILiquidator.sol":"ILiquidator"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ILiquidator.sol":{"keccak256":"0x9d1e66d56cd51d14787cce5ff8fb378eb6a0bb704e7102d7c4eda5de7f585af3","urls":["bzzr://c44220025ac21fda1dda68e236572c5c4f82bf53ccf504a020487b8c746c7b26"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalancingSetToken.sol":{"keccak256":"0xe7356a7b0f0cc95d9526395d776f523a48fd65618730d67b4f31f20ffbd380da","urls":["bzzr://605a33a818eff7ce3370f25fccb751f61c066b4db0772605a2215d1357d68072"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetToken.sol":{"keccak256":"0xfa6c0c07f8394d89b6b8f72e15778f8452a9341acb20cebb8421f3522aaca1bd","urls":["bzzr://ccf23bb78fd507bf8cbf5cf7ac2a660a1463b87a3689196e42b8f6862d1a6b11"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/Rebalance.sol":{"keccak256":"0x74ffa689d93ced6c6e0377a35ec1274241b6191b5aaac5576ada379ac3840286","urls":["bzzr://25bdda3f1f5adfa2c83c760c44993d250cd2df037360f0018d22d268df79e887"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/RebalancingLibrary.sol":{"keccak256":"0x7f9dd2f95b2ee71a98b94cb9b0df15874aa134e7480d04a1fcf36aff166a55f4","urls":["bzzr://f43a5563ec5df095151eee30cf7a0941b5a971917c27c7b34d9586b36563ab5b"]}},"version":1}',bytecode:"0x",deployedBytecode:"0x",sourceMap:"",deployedSourceMap:"",source:'/*\n    Copyright 2019 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { ISetToken } from "./ISetToken.sol";\nimport { Rebalance } from "../lib/Rebalance.sol";\nimport { RebalancingLibrary } from "../lib/RebalancingLibrary.sol";\n\n/**\n * @title ILiquidator\n * @author Set Protocol\n *\n */\ninterface ILiquidator {\n\n    /* ============ External Functions ============ */\n\n    function startRebalance(\n        ISetToken _currentSet,\n        ISetToken _nextSet,\n        uint256 _startingCurrentSetQuantity,\n        bytes calldata _liquidatorData\n    )\n        external;\n\n    function getBidPrice(\n        address _set,\n        uint256 _quantity\n    )\n        external\n        view\n        returns (Rebalance.TokenFlow memory);\n\n    function placeBid(\n        uint256 _quantity\n    )\n        external\n        returns (Rebalance.TokenFlow memory);\n\n\n    function settleRebalance()\n        external;\n\n    function endFailedRebalance() external;\n\n    // ----------------------------------------------------------------------\n    // Auction Price\n    // ----------------------------------------------------------------------\n\n    function auctionPriceParameters(address _set)\n        external\n        view\n        returns (RebalancingLibrary.AuctionPriceParameters memory);\n\n    // ----------------------------------------------------------------------\n    // Auction\n    // ----------------------------------------------------------------------\n\n    function hasRebalanceFailed(address _set) external view returns (bool);        \n    function minimumBid(address _set) external view returns (uint256);\n    function startingCurrentSets(address _set) external view returns (uint256);\n    function remainingCurrentSets(address _set) external view returns (uint256);\n    function getCombinedCurrentSetUnits(address _set) external view returns (uint256[] memory);\n    function getCombinedNextSetUnits(address _set) external view returns (uint256[] memory);\n    function getCombinedTokenArray(address _set) external view returns (address[] memory);\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ILiquidator.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.349Z",devdoc:{author:"Set Protocol ",methods:{},title:"ILiquidator"},userdoc:{methods:{}}};