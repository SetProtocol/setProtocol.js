"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.RebalancingSetCTokenIssuanceModule={contractName:"RebalancingSetCTokenIssuanceModule",abi:[{constant:true,inputs:[],name:"weth",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"vaultInstance",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"transferProxy",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"coreInstance",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"core",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"vault",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"cTokenWhiteList",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{inputs:[{name:"_core",type:"address"},{name:"_vault",type:"address"},{name:"_transferProxy",type:"address"},{name:"_weth",type:"address"},{name:"_cTokenWhiteList",type:"address"}],payable:false,stateMutability:"nonpayable",type:"constructor"},{payable:true,stateMutability:"payable",type:"fallback"},{anonymous:false,inputs:[{indexed:true,name:"rebalancingSetAddress",type:"address"},{indexed:true,name:"callerAddress",type:"address"},{indexed:false,name:"rebalancingSetQuantity",type:"uint256"}],name:"LogRebalancingSetIssue",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"rebalancingSetAddress",type:"address"},{indexed:true,name:"callerAddress",type:"address"},{indexed:false,name:"rebalancingSetQuantity",type:"uint256"}],name:"LogRebalancingSetRedeem",type:"event"},{constant:false,inputs:[{name:"_rebalancingSetAddress",type:"address"},{name:"_rebalancingSetQuantity",type:"uint256"},{name:"_keepChangeInVault",type:"bool"}],name:"issueRebalancingSet",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_rebalancingSetAddress",type:"address"},{name:"_rebalancingSetQuantity",type:"uint256"},{name:"_keepChangeInVault",type:"bool"}],name:"issueRebalancingSetWrappingEther",outputs:[],payable:true,stateMutability:"payable",type:"function"},{constant:false,inputs:[{name:"_rebalancingSetAddress",type:"address"},{name:"_rebalancingSetQuantity",type:"uint256"},{name:"_keepChangeInVault",type:"bool"}],name:"redeemRebalancingSet",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_rebalancingSetAddress",type:"address"},{name:"_rebalancingSetQuantity",type:"uint256"},{name:"_keepChangeInVault",type:"bool"}],name:"redeemRebalancingSetUnwrappingEther",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":false,"inputs":[{"name":"_rebalancingSetAddress","type":"address"},{"name":"_rebalancingSetQuantity","type":"uint256"},{"name":"_keepChangeInVault","type":"bool"}],"name":"issueRebalancingSet","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_rebalancingSetAddress","type":"address"},{"name":"_rebalancingSetQuantity","type":"uint256"},{"name":"_keepChangeInVault","type":"bool"}],"name":"issueRebalancingSetWrappingEther","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"weth","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vaultInstance","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"transferProxy","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"coreInstance","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_rebalancingSetAddress","type":"address"},{"name":"_rebalancingSetQuantity","type":"uint256"},{"name":"_keepChangeInVault","type":"bool"}],"name":"redeemRebalancingSet","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"core","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_rebalancingSetAddress","type":"address"},{"name":"_rebalancingSetQuantity","type":"uint256"},{"name":"_keepChangeInVault","type":"bool"}],"name":"redeemRebalancingSetUnwrappingEther","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vault","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"cTokenWhiteList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_core","type":"address"},{"name":"_vault","type":"address"},{"name":"_transferProxy","type":"address"},{"name":"_weth","type":"address"},{"name":"_cTokenWhiteList","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"rebalancingSetAddress","type":"address"},{"indexed":true,"name":"callerAddress","type":"address"},{"indexed":false,"name":"rebalancingSetQuantity","type":"uint256"}],"name":"LogRebalancingSetIssue","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"rebalancingSetAddress","type":"address"},{"indexed":true,"name":"callerAddress","type":"address"},{"indexed":false,"name":"rebalancingSetQuantity","type":"uint256"}],"name":"LogRebalancingSetRedeem","type":"event"}],"devdoc":{"author":"Set Protocol * A module that includes functions for issuing / redeeming rebalancing SetToken from its base components, cToken underlying components, and Ether. Note: This module is not compatible with Compound Ether (cETH).","methods":{"constructor":{"params":{"_cTokenWhiteList":"Instance of whitelisted cTokens to underlying addresses","_core":"The address of Core","_transferProxy":"The address of TransferProxy","_vault":"The address of Vault","_weth":"Instance of Wrapped Ether"}},"issueRebalancingSet(address,uint256,bool)":{"params":{"_keepChangeInVault":"Boolean signifying whether excess base SetToken is transferred to the user                                  or left in the vault","_rebalancingSetAddress":"Address of the rebalancing SetToken to issue","_rebalancingSetQuantity":"The issuance quantity of rebalancing SetToken"}},"issueRebalancingSetWrappingEther(address,uint256,bool)":{"params":{"_keepChangeInVault":"Boolean signifying whether excess base SetToken is transferred to the user                                  or left in the vault","_rebalancingSetAddress":"Address of the rebalancing SetToken to issue","_rebalancingSetQuantity":"The issuance quantity of rebalancing SetToken"}},"redeemRebalancingSet(address,uint256,bool)":{"params":{"_keepChangeInVault":"Boolean signifying whether excess base SetToken is transferred to the user                                  or left in the vault","_rebalancingSetAddress":"Address of the rebalancing SetToken to redeem","_rebalancingSetQuantity":"The Quantity of the rebalancing SetToken to redeem"}},"redeemRebalancingSetUnwrappingEther(address,uint256,bool)":{"params":{"_keepChangeInVault":"Boolean signifying whether excess base SetToken is transferred to the user                                  or left in the vault","_rebalancingSetAddress":"Address of the rebalancing SetToken to redeem","_rebalancingSetQuantity":"The Quantity of the rebalancing SetToken to redeem"}}},"title":"RebalancingSetCTokenIssuanceModule"},"userdoc":{"methods":{"constructor":"Constructor function for RebalancingSetCTokenIssuanceModule","issueRebalancingSet(address,uint256,bool)":{"notice":"Issue a rebalancing SetToken using the base components of the base SetToken. If the base component is a supported cToken, retrieve the underlying from the user and mint the cToken. The base SetToken is then issued into the rebalancing SetToken. The base SetToken quantity issued is calculated by taking the rebalancing SetToken\'s quantity, unit shares, and natural unit. If the calculated quantity is not a multiple of the natural unit of the base SetToken, the quantity is rounded up to the base SetToken natural unit. NOTE: Potential to receive more baseSet than expected if someone transfers some to this module. Be careful with balance checks."},"issueRebalancingSetWrappingEther(address,uint256,bool)":{"notice":"Issue a rebalancing SetToken using the base components and ether of the base SetToken. If the base component is a supported cToken, retrieve the underlying from the user and mint the cToken. The ether is wrapped into wrapped Ether and utilized in issuance. The base SetToken is then issued and reissued into the rebalancing SetToken. Read more about base SetToken quantity in the issueRebalancingSet function. NOTE: Potential to receive more baseSet and ether dust than expected if someone transfers some to this module. Be careful with balance checks."},"redeemRebalancingSet(address,uint256,bool)":{"notice":"Redeems a rebalancing SetToken into the base components of the base SetToken. If a supported cToken, then base components are redeemed for the underlying and sent back to user. NOTE: Potential to receive more baseSet than expected if someone transfers some to this module. Be careful with balance checks."},"redeemRebalancingSetUnwrappingEther(address,uint256,bool)":{"notice":"Redeems a rebalancing SetToken into the base components of the base SetToken. If a supported cToken, then base components are redeemed for the underlying and sent back to user. Unwraps wrapped ether and sends eth to the user. If no wrapped ether in Set then will REVERT. NOTE: Potential to receive more baseSet and ether dust than expected if someone transfers some to this module. Be careful with balance checks."}}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/RebalancingSetCTokenIssuanceModule.sol":"RebalancingSetCTokenIssuanceModule"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IAddressToAddressWhiteList.sol":{"keccak256":"0x41d753215ef7bdf88734589bd55afdb524722d1e34589ab8194f5b64f95fa455","urls":["bzzr://b6a819b457dddc2c2aa4d23fb2eb5ea27cbd6994a7361e7ced7e8e89e7552a88"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICToken.sol":{"keccak256":"0x661dd1d6e349160dd01e275b8138c9c78fe296abbb7d54ecdbc03b6be35cc5e8","urls":["bzzr://731700a131b20732ffba3070eaa6e0cdec2f42c7493d5af3f24e605cb3022fcb"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICore.sol":{"keccak256":"0x5dc3db4398630ea52d2a40c9ddfa89d94e65c2770a12bab4d2a5c8eb573fb0a0","urls":["bzzr://25e90b53f61b388e0950b808e2296f82d427b66cfd6021212713436b2a592e31"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalancingSetToken.sol":{"keccak256":"0xe7356a7b0f0cc95d9526395d776f523a48fd65618730d67b4f31f20ffbd380da","urls":["bzzr://605a33a818eff7ce3370f25fccb751f61c066b4db0772605a2215d1357d68072"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetToken.sol":{"keccak256":"0xfa6c0c07f8394d89b6b8f72e15778f8452a9341acb20cebb8421f3522aaca1bd","urls":["bzzr://ccf23bb78fd507bf8cbf5cf7ac2a660a1463b87a3689196e42b8f6862d1a6b11"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ITransferProxy.sol":{"keccak256":"0x962d54385cc4760c550cd2f16bfdb53e967def4c5d3acb7b3d0b3d7a49f902de","urls":["bzzr://cb8994c8bae7fa1d55d240f44396f4156b45c81afa6fcfa608fd5e4bf9f1a919"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IVault.sol":{"keccak256":"0xf8a6d376173be39f5744492866db5dd3f91453a124d23679ff164ff3817f2f4f","urls":["bzzr://896c0a8329175c1620e1a22467778b835defe0e61847e5a8427a306f42391e64"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/RebalancingLibrary.sol":{"keccak256":"0x7f9dd2f95b2ee71a98b94cb9b0df15874aa134e7480d04a1fcf36aff166a55f4","urls":["bzzr://f43a5563ec5df095151eee30cf7a0941b5a971917c27c7b34d9586b36563ab5b"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/RebalancingSetCTokenIssuanceModule.sol":{"keccak256":"0x6e2a0b9956aebaea8632f4778c5ac0ac94b63200319c2d784e83a268c9776305","urls":["bzzr://5234540e549b914054a3db0c6070d93c8b5e6291bff155dae457fe1b95784a07"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/RebalancingSetIssuanceModule.sol":{"keccak256":"0x72d4e23ad66f4e0a4ff38a330fa8b7311c0119ae1017461904a4a21892645c4d","urls":["bzzr://b7ce04017d334e69396034e35e485629cd6e55153fcb9f559832aa26204ed380"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/lib/CTokenWhiteListed.sol":{"keccak256":"0x6b27a239d09111f262ccac7d644411c66d59debb0b0c98687e296d90cdfe91b9","urls":["bzzr://fe647de4323877924f1a3a2c3b7168321f73b74d7f64700c7164715b51379b44"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/lib/ModuleCoreState.sol":{"keccak256":"0x75a216727092c78a7adb0016e4ed49bc174b4e8725b0e6b0689f86c4d20bcba7","urls":["bzzr://29bbd30e5a474c131c8ae83c00cf82f3bf2162e6f4699cb04f7c06507302e50c"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/lib/RebalancingSetIssuance.sol":{"keccak256":"0x144cad20065c119f53eb5f68d55d9d225569773032345da965b1464a2fa4e334","urls":["bzzr://54bf1bafdf1a2db4732561aed72ffef0796c4512164d070a22465a53399ff374"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/ERC20Wrapper.sol":{"keccak256":"0x09fdf2adbbcbe2ce6cf3924c8cae4e206cd501c3daca55d43c847d310150ceb8","urls":["bzzr://f2866ffe2b523888937071b65dd86d89a6e61161fd2d1ce1b9b52ea23914337d"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/IERC20.sol":{"keccak256":"0xe4f71b1797f6421de91c6ce3b55199c5845693a58eddfd417a60b81d0198a9dd","urls":["bzzr://a6a4cebcffaff1db8ef9b78ea58d2d7391cc2b1ed533a1e1309286989f6d4ea0"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/IWETH.sol":{"keccak256":"0x7c9e000a6f74c258dc618fa5b58e36eee503ae2c494646782110e962dae19495","urls":["bzzr://9beaaba0143db4bd7856fcba8943f96dcdb6e618b568ffc9c4aa27aa03df5678"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125","urls":["bzzr://3bc299fd722679f1313dc1387e2efc0591dcddc3727b6a7ccc98132c6e02f323"]},"set-protocol-contract-utils/contracts/lib/AddressArrayUtils.sol":{"keccak256":"0xb716eab4e8c5a336a2f19078928530829af097912bd1b925644f914b63601f08","urls":["bzzr://d8a21d39779beb316adb5180d08dcba1941eeccd9412ff08feb21a631c18c269"]},"set-protocol-contract-utils/contracts/lib/CommonMath.sol":{"keccak256":"0x3d1d08c6efc2a973fe2c02ddcb02fd99a8c8eb75f74dcbd93e8e15864eee2b6b","urls":["bzzr://580815dd1cf648a4521d923e59087de21143d9c48115ab71579a1f5a8f3d36af"]},"set-protocol-contract-utils/contracts/lib/CompoundUtils.sol":{"keccak256":"0x2fae8240526a689d919a67792626c9df1e8048a59eed6643ff4ce685a87a36dc","urls":["bzzr://5a5709236aaa10d93f1746e765fd4e10693277f5cbc3e24d5173738f87a01072"]}},"version":1}',bytecode:"0x60806040523480156200001157600080fd5b5060405160a08062002bdf833981018060405260a08110156200003357600080fd5b508051602082015160408084015160608086015160809096015160008054600160a060020a03808916600160a060020a031992831681178455600280548416909117905560018054828a16908416811782556003805485169091179055600490815560068054838d16908516179055600580548389169085161790556007805492861692909316821790925586517fe7d22fdb0000000000000000000000000000000000000000000000000000000081529651989997989597969395889587959094929363e7d22fdb93828201939092909190829003018186803b1580156200011b57600080fd5b505afa15801562000130573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156200015a57600080fd5b8101908080516401000000008111156200017357600080fd5b820160208101848111156200018757600080fd5b8151856020820283011164010000000082111715620001a557600080fd5b50909450600093505050505b8151811015620002e9576000828281518110620001ca57fe5b602090810291909101810151600754604080517f3ccc0522000000000000000000000000000000000000000000000000000000008152600160a060020a03808516600483015291519395506000949190921692633ccc0522926024808201939291829003018186803b1580156200024057600080fd5b505afa15801562000255573d6000803e3d6000fd5b505050506040513d60208110156200026c57600080fd5b50519050620002a281836200028e6401000000006200234f620002f882021704565b64010000000062002355620002fe82021704565b620002c081876200028e6401000000006200234f620002f882021704565b620002de82876200028e6401000000006200234f620002f882021704565b5050600101620001b1565b50505050505050505062000452565b60001990565b82600160a060020a031663095ea7b383836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156200037b57600080fd5b505af115801562000390573d6000803e3d6000fd5b505050506040513d6020811015620003a757600080fd5b50620003bd905064010000000062000419810204565b62000414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062002bb96026913960400191505060405180910390fd5b505050565b6000803d80156200043357602081146200043d5762000449565b6001915062000449565b60206000803e60005191505b50600114905090565b61275780620004626000396000f3fe6080604052600436106100a05760003560e060020a90048063a05cb75511610068578063a05cb755146101be578063da89a7b1146101d3578063f2f4eb2614610214578063f7b00c9e14610229578063fbfa77cf1461026a578063ff5986011461027f576100a0565b80631cc0bd61146100ee5780633ba305511461012f5780633fc8cef31461016357806363dc4f95146101945780636e667db3146101a9575b600654600160a060020a031633146100ec5760405160e560020a62461bcd0281526004018080602001828103825260598152602001806124af6059913960600191505060405180910390fd5b005b3480156100fa57600080fd5b506100ec6004803603606081101561011157600080fd5b50600160a060020a0381351690602081013590604001351515610294565b6100ec6004803603606081101561014557600080fd5b50600160a060020a03813516906020810135906040013515156102d5565b34801561016f57600080fd5b50610178610360565b60408051600160a060020a039092168252519081900360200190f35b3480156101a057600080fd5b5061017861036f565b3480156101b557600080fd5b5061017861037e565b3480156101ca57600080fd5b5061017861038d565b3480156101df57600080fd5b506100ec600480360360608110156101f657600080fd5b50600160a060020a038135169060208101359060400135151561039c565b34801561022057600080fd5b5061017861044e565b34801561023557600080fd5b506100ec6004803603606081101561024c57600080fd5b50600160a060020a038135169060208101359060400135151561045d565b34801561027657600080fd5b50610178610518565b34801561028b57600080fd5b50610178610527565b60048054600101908190556000806102ac8686610536565b915091506102bf868684848860006105c8565b505060045481146102cf57600080fd5b50505050565b60048054600101908190556000806102ed8686610536565b6006549193509150610309908390600160a060020a031661066d565b610318868684848860016105c8565b3031801561034f57604051339082156108fc029083906000818181858888f1935050505015801561034d573d6000803e3d6000fd5b505b50505060045481146102cf57600080fd5b600654600160a060020a031681565b600354600160a060020a031681565b600554600160a060020a031681565b600254600160a060020a031681565b60048054600101808255604080517f30b8662700000000000000000000000000000000000000000000000000000000815290519192600092600160a060020a038816926330b866279281810192602092909190829003018186803b15801561040357600080fd5b505afa158015610417573d6000803e3d6000fd5b505050506040513d602081101561042d57600080fd5b5051905061043f858583866000610734565b5060045481146102cf57600080fd5b600054600160a060020a031681565b60048054600101808255604080517f30b8662700000000000000000000000000000000000000000000000000000000815290519192600092600160a060020a038816926330b866279281810192602092909190829003018186803b1580156104c457600080fd5b505afa1580156104d8573d6000803e3d6000fd5b505050506040513d60208110156104ee57600080fd5b505160065490915061050a908290600160a060020a031661066d565b61043f858583866001610734565b600154600160a060020a031681565b600754600160a060020a031681565b60008061054384846108cd565b600084600160a060020a03166330b866276040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561058157600080fd5b505afa158015610595573d6000803e3d6000fd5b505050506040513d60208110156105ab57600080fd5b5051905060006105bb8686610a54565b9196919550909350505050565b6105d3848483610cb9565b600254604080517fa57de4cf000000000000000000000000000000000000000000000000000000008152600160a060020a038781166004830152602482018790529151919092169163a57de4cf91604480830192600092919082900301818387803b15801561064157600080fd5b505af1158015610655573d6000803e3d6000fd5b505050506106658685878561117c565b505050505050565b81600160a060020a03166318c53aca826040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b1580156106c657600080fd5b505afa1580156106da573d6000803e3d6000fd5b505050506040513d60208110156106f057600080fd5b50516107305760405160e560020a62461bcd0281526004018080602001828103825260528152602001806126da6052913960600191505060405180910390fd5b5050565b61073e85856108cd565b600254604080517f5990ca08000000000000000000000000000000000000000000000000000000008152336004820152306024820152600160a060020a0388811660448301526064820188905291519190921691635990ca0891608480830192600092919082900301818387803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b5050505060006107db84611266565b600254604080517fa782132c000000000000000000000000000000000000000000000000000000008152600160a060020a03888116600483015260248201859052915193945091169163a782132c9160448082019260009290919082900301818387803b15801561084b57600080fd5b505af115801561085f573d6000803e3d6000fd5b5050505061086d8483611399565b600554610885908590600160a060020a0316856117b7565b6040805186815290513391600160a060020a038916917f412d6167082ef33d0eb78858a5ca2bc234ae9f96ea4757e6c0e2a66a152c0f629181900360200190a3505050505050565b600254604080517ffef3ee73000000000000000000000000000000000000000000000000000000008152600160a060020a0385811660048301529151919092169163fef3ee73916024808301926020929190829003018186803b15801561093357600080fd5b505afa158015610947573d6000803e3d6000fd5b505050506040513d602081101561095d57600080fd5b505161099d5760405160e560020a62461bcd0281526004018080602001828103825260588152602001806126826058913960600191505060405180910390fd5b610a1582600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156109dc57600080fd5b505afa1580156109f0573d6000803e3d6000fd5b505050506040513d6020811015610a0657600080fd5b5051829063ffffffff6117d116565b156107305760405160e560020a62461bcd02815260040180806020018281038252605d8152602001806125a2605d913960600191505060405180910390fd5b600080839050600081600160a060020a0316630193aea26040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610a9857600080fd5b505afa158015610aac573d6000803e3d6000fd5b505050506040513d6020811015610ac257600080fd5b5051604080517f42a7cfd50000000000000000000000000000000000000000000000000000000081529051919250600091600160a060020a038516916342a7cfd5916004808301926020929190829003018186803b158015610b2357600080fd5b505afa158015610b37573d6000803e3d6000fd5b505050506040513d6020811015610b4d57600080fd5b505190506000610b7383610b67888563ffffffff6117ee16565b9063ffffffff61181016565b9050600084600160a060020a03166330b866276040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610bb357600080fd5b505afa158015610bc7573d6000803e3d6000fd5b505050506040513d6020811015610bdd57600080fd5b5051604080517f42a7cfd50000000000000000000000000000000000000000000000000000000081529051919250600091600160a060020a038416916342a7cfd5916004808301926020929190829003018186803b158015610c3e57600080fd5b505afa158015610c52573d6000803e3d6000fd5b505050506040513d6020811015610c6857600080fd5b505190506000610c7e848363ffffffff6117d116565b90508015610ca957610ca682610c9a868463ffffffff61183e16565b9063ffffffff61185316565b93505b5091955050505050505b92915050565b6000839050606081600160a060020a03166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b158015610cfc57600080fd5b505afa158015610d10573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610d3957600080fd5b810190808051640100000000811115610d5157600080fd5b82016020810184811115610d6457600080fd5b8151856020820283011164010000000082111715610d8157600080fd5b50509291905050509050606082600160a060020a031663027aa9f56040518163ffffffff1660e060020a02815260040160006040518083038186803b158015610dc957600080fd5b505afa158015610ddd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610e0657600080fd5b810190808051640100000000811115610e1e57600080fd5b82016020810184811115610e3157600080fd5b8151856020820283011164010000000082111715610e4e57600080fd5b50509291905050509050600083600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610e9657600080fd5b505afa158015610eaa573d6000803e3d6000fd5b505050506040513d6020811015610ec057600080fd5b505190506000610ed6878363ffffffff6117ee16565b905060005b8451811015611171576000858281518110610ef257fe5b602002602001015190506000858381518110610f0a57fe5b602002602001015190506000610f29828661181090919063ffffffff16565b600754604080517f9b19251a000000000000000000000000000000000000000000000000000000008152600160a060020a03878116600483015291519394506000939190921691639b19251a916024808301926020929190829003018186803b158015610f9557600080fd5b505afa158015610fa9573d6000803e3d6000fd5b505050506040513d6020811015610fbf57600080fd5b50519050600160a060020a03811615610fe257610fdd848383611865565b611161565b8a8015610ffc5750600654600160a060020a038581169116145b156110ce57813410156110435760405160e560020a62461bcd0281526004018080602001828103825260748152602001806125086074913960800191505060405180910390fd5b600660009054906101000a9004600160a060020a0316600160a060020a031663d0e30db0836040518263ffffffff1660e060020a0281526004016000604051808303818588803b15801561109657600080fd5b505af11580156110aa573d6000803e3d6000fd5b5050600654600554610fdd9450600160a060020a0391821693503092501685611b9a565b600254604080517fde30f6ee000000000000000000000000000000000000000000000000000000008152336004820152306024820152600160a060020a038781166044830152606482018690529151919092169163de30f6ee91608480830192600092919082900301818387803b15801561114857600080fd5b505af115801561115c573d6000803e3d6000fd5b505050505b505060019092019150610edb9050565b505050505050505050565b600254604080517f73088bf7000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a03878116602483015260448201869052915191909216916373088bf791606480830192600092919082900301818387803b1580156111f057600080fd5b505af1158015611204573d6000803e3d6000fd5b50506005546112209250859150600160a060020a0316836117b7565b6040805183815290513391600160a060020a038716917f2d3ead46fb20943d335e2ff48b43b66d146fa01aaed75d497fa33a86092446129181900360200190a350505050565b60008082600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156112a557600080fd5b505afa1580156112b9573d6000803e3d6000fd5b505050506040513d60208110156112cf57600080fd5b5051600354604080517f1f98ade3000000000000000000000000000000000000000000000000000000008152600160a060020a03878116600483015230602483015291519394506000939190921691631f98ade3916044808301926020929190829003018186803b15801561134357600080fd5b505afa158015611357573d6000803e3d6000fd5b505050506040513d602081101561136d57600080fd5b50519050611391611384828463ffffffff6117d116565b829063ffffffff61183e16565b949350505050565b606082600160a060020a03166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b1580156113d757600080fd5b505afa1580156113eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561141457600080fd5b81019080805164010000000081111561142c57600080fd5b8201602081018481111561143f57600080fd5b815185602082028301116401000000008211171561145c57600080fd5b50909450600093505050505b81518110156102cf57600082828151811061147f57fe5b602090810291909101810151600354604080517f1f98ade3000000000000000000000000000000000000000000000000000000008152600160a060020a03808516600483015230602483015291519395506000949190921692631f98ade3926044808201939291829003018186803b1580156114fa57600080fd5b505afa15801561150e573d6000803e3d6000fd5b505050506040513d602081101561152457600080fd5b5051600754604080517f9b19251a000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015291519394506000939190921691639b19251a916024808301926020929190829003018186803b15801561159257600080fd5b505afa1580156115a6573d6000803e3d6000fd5b505050506040513d60208110156115bc57600080fd5b50519050600160a060020a038116156115df576115da838383611bca565b6117ac565b8580156115f95750600654600160a060020a038481169116145b1561172f576002546006546040805160e260020a630387f4cd02815230600482018190526024820152600160a060020a0392831660448201526064810186905290519190921691630e1fd33491608480830192600092919082900301818387803b15801561166657600080fd5b505af115801561167a573d6000803e3d6000fd5b5050600654604080517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018790529051600160a060020a039092169350632e1a7d4d925060248082019260009290919082900301818387803b1580156116e457600080fd5b505af11580156116f8573d6000803e3d6000fd5b505060405133925084156108fc02915084906000818181858888f19350505050158015611729573d6000803e3d6000fd5b506117ac565b6002546040805160e260020a630387f4cd028152306004820152336024820152600160a060020a0386811660448301526064820186905291519190921691630e1fd33491608480830192600092919082900301818387803b15801561179357600080fd5b505af11580156117a7573d6000803e3d6000fd5b505050505b505050600101611468565b6117c2838383611ebd565b6117cc83826120ba565b505050565b6000816117dd57600080fd5b8183816117e657fe5b069392505050565b60008082116117fc57600080fd5b600082848161180757fe5b04949350505050565b60008261181f57506000610cb3565b8282028284828161182c57fe5b041461183757600080fd5b9392505050565b60008282111561184d57600080fd5b50900390565b60008282018381101561183757600080fd5b600083600160a060020a031663bd6d894d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156118a557600080fd5b505af11580156118b9573d6000803e3d6000fd5b505050506040513d60208110156118cf57600080fd5b5051905060006118df848361227b565b600254604080517ffd496ebf000000000000000000000000000000000000000000000000000000008152600160a060020a03878116600483015260248201859052336044830152306064830152915193945091169163fd496ebf9160848082019260009290919082900301818387803b15801561195b57600080fd5b505af115801561196f573d6000803e3d6000fd5b5050505061197f83308784611b9a565b600085600160a060020a031663a0712d68836040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b1580156119ca57600080fd5b505af11580156119de573d6000803e3d6000fd5b505050506040513d60208110156119f457600080fd5b505190508015611a385760405160e560020a62461bcd0281526004018080602001828103825260408152602001806126426040913960400191505060405180910390fd5b604080517ff7888aec000000000000000000000000000000000000000000000000000000008152600160a060020a0388166004820152306024820152905160009173__ERC20Wrapper__________________________9163f7888aec91604480820192602092909190829003018186803b158015611ab557600080fd5b505af4158015611ac9573d6000803e3d6000fd5b505050506040513d6020811015611adf57600080fd5b5051600554909150611afe9088903090600160a060020a031684611b9a565b600254604080517fde30f6ee00000000000000000000000000000000000000000000000000000000815230600482018190526024820152600160a060020a038a81166044830152606482018590529151919092169163de30f6ee91608480830192600092919082900301818387803b158015611b7957600080fd5b505af1158015611b8d573d6000803e3d6000fd5b5050505050505050505050565b6000611ba78585856122af565b905081811015611bc357611bc38584611bbe61234f565b612355565b5050505050565b600083600160a060020a031663bd6d894d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611c0a57600080fd5b505af1158015611c1e573d6000803e3d6000fd5b505050506040513d6020811015611c3457600080fd5b505190506000611c44848361227b565b6002546040805160e260020a630387f4cd02815230600482018190526024820152600160a060020a038981166044830152606482018990529151939450911691630e1fd3349160848082019260009290919082900301818387803b158015611cab57600080fd5b505af1158015611cbf573d6000803e3d6000fd5b50505050600085600160a060020a031663db006a75866040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b158015611d0e57600080fd5b505af1158015611d22573d6000803e3d6000fd5b505050506040513d6020811015611d3857600080fd5b505190508015611d7c5760405160e560020a62461bcd0281526004018080602001828103825260438152602001806125ff6043913960600191505060405180910390fd5b604080517ff7888aec000000000000000000000000000000000000000000000000000000008152600160a060020a0386166004820152306024820152905173__ERC20Wrapper__________________________9163f7888aec916044808301926020929190829003018186803b158015611df557600080fd5b505af4158015611e09573d6000803e3d6000fd5b505050506040513d6020811015611e1f57600080fd5b5051600254604080517ffd496ebf000000000000000000000000000000000000000000000000000000008152600160a060020a03888116600483015260248201859052306044830152336064830152915193955091169163fd496ebf9160848082019260009290919082900301818387803b158015611e9d57600080fd5b505af1158015611eb1573d6000803e3d6000fd5b50505050505050505050565b604080517ff7888aec000000000000000000000000000000000000000000000000000000008152600160a060020a0385166004820152306024820152905160009173__ERC20Wrapper__________________________9163f7888aec91604480820192602092909190829003018186803b158015611f3a57600080fd5b505af4158015611f4e573d6000803e3d6000fd5b505050506040513d6020811015611f6457600080fd5b5051905080611f7357506117cc565b811561201c57611f8584308584611b9a565b600254604080517fde30f6ee000000000000000000000000000000000000000000000000000000008152306004820152336024820152600160a060020a038781166044830152606482018590529151919092169163de30f6ee91608480830192600092919082900301818387803b158015611fff57600080fd5b505af1158015612013573d6000803e3d6000fd5b505050506102cf565b604080517fbeabacc8000000000000000000000000000000000000000000000000000000008152600160a060020a038616600482015233602482015260448101839052905173__ERC20Wrapper__________________________9163beabacc8916064808301926000929190829003018186803b15801561209c57600080fd5b505af41580156120b0573d6000803e3d6000fd5b5050505050505050565b600354604080517f1f98ade3000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015230602483015291516000939290921691631f98ade391604480820192602092909190829003018186803b15801561212a57600080fd5b505afa15801561213e573d6000803e3d6000fd5b505050506040513d602081101561215457600080fd5b50519050806121635750610730565b81156121fa57600254604080517f59e026f7000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015233602483015260448201859052915191909216916359e026f791606480830192600092919082900301818387803b1580156121dd57600080fd5b505af11580156121f1573d6000803e3d6000fd5b505050506117cc565b6002546040805160e260020a630387f4cd028152306004820152336024820152600160a060020a0386811660448301526064820185905291519190921691630e1fd33491608480830192600092919082900301818387803b15801561225e57600080fd5b505af1158015612272573d6000803e3d6000fd5b50505050505050565b60008061228e848463ffffffff61181016565b9050600061229a61242b565b90506122a68282612437565b95945050505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301528381166024830152915160009286169163dd62ed3e916044808301926020929190829003018186803b15801561231b57600080fd5b505afa15801561232f573d6000803e3d6000fd5b505050506040513d602081101561234557600080fd5b5051949350505050565b60001990565b82600160a060020a031663095ea7b383836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156123b857600080fd5b505af11580156123cc573d6000803e3d6000fd5b505050506040513d60208110156123e257600080fd5b506123ed9050612479565b6117cc5760405160e560020a62461bcd02815260040180806020018281038252602681526020018061257c6026913960400191505060405180910390fd5b670de0b6b3a764000090565b60008061244a848463ffffffff6117d116565b116124645761245f838363ffffffff6117ee16565b611837565b6118376001610c9a858563ffffffff6117ee16565b6000803d80156124905760208114612499576124a5565b600191506124a5565b60206000803e60005191505b5060011490509056fe526562616c616e63696e6753657449737375616e63654d6f64756c652e66616c6c6261636b3a2043616e6e6f74207265636569766520455448206469726563746c7920756e6c65737320756e7772617070696e672057455448526562616c616e63696e6753657443546f6b656e49737375616e63654d6f64756c652e6465706f736974436f6d706f6e656e747348616e646c6543546f6b656e73416e644574683a204e6f7420656e6f75676820657468657220696e636c7564656420666f72206261736520536574546f6b656e4552433230577261707065722e617070726f76653a204261642072657475726e2076616c7565526562616c616e63696e6753657449737375616e63652e76616c6964617465526562616c616e63696e6749737375616e63653a205175616e74697479206d757374206265206d756c7469706c65206f66206e61747572616c20756e697443546f6b656e45786368616e676549737375616e63654d6f64756c652e65786368616e676552656465656d3a204572726f722072656465656d696e672063546f6b656e43546f6b656e45786368616e676549737375616e63654d6f64756c652e65786368616e676549737375653a204572726f72206d696e74696e672063546f6b656e526562616c616e63696e6753657449737375616e63652e76616c6964617465526562616c616e63696e6749737375616e63653a20496e76616c6964206f722064697361626c656420536574546f6b656e2061646472657373526562616c616e63696e6753657449737375616e63652e76616c696461746557455448497341436f6d706f6e656e744f665365743a20436f6d706f6e656e7473206d75737420636f6e7461696e2077657468a165627a7a7230582012f1bce0ff783264238e497bf4d6a9910bff171d26e3eb924cefb50707f22e1600294552433230577261707065722e617070726f76653a204261642072657475726e2076616c7565",
deployedBytecode:"0x6080604052600436106100a05760003560e060020a90048063a05cb75511610068578063a05cb755146101be578063da89a7b1146101d3578063f2f4eb2614610214578063f7b00c9e14610229578063fbfa77cf1461026a578063ff5986011461027f576100a0565b80631cc0bd61146100ee5780633ba305511461012f5780633fc8cef31461016357806363dc4f95146101945780636e667db3146101a9575b600654600160a060020a031633146100ec5760405160e560020a62461bcd0281526004018080602001828103825260598152602001806124af6059913960600191505060405180910390fd5b005b3480156100fa57600080fd5b506100ec6004803603606081101561011157600080fd5b50600160a060020a0381351690602081013590604001351515610294565b6100ec6004803603606081101561014557600080fd5b50600160a060020a03813516906020810135906040013515156102d5565b34801561016f57600080fd5b50610178610360565b60408051600160a060020a039092168252519081900360200190f35b3480156101a057600080fd5b5061017861036f565b3480156101b557600080fd5b5061017861037e565b3480156101ca57600080fd5b5061017861038d565b3480156101df57600080fd5b506100ec600480360360608110156101f657600080fd5b50600160a060020a038135169060208101359060400135151561039c565b34801561022057600080fd5b5061017861044e565b34801561023557600080fd5b506100ec6004803603606081101561024c57600080fd5b50600160a060020a038135169060208101359060400135151561045d565b34801561027657600080fd5b50610178610518565b34801561028b57600080fd5b50610178610527565b60048054600101908190556000806102ac8686610536565b915091506102bf868684848860006105c8565b505060045481146102cf57600080fd5b50505050565b60048054600101908190556000806102ed8686610536565b6006549193509150610309908390600160a060020a031661066d565b610318868684848860016105c8565b3031801561034f57604051339082156108fc029083906000818181858888f1935050505015801561034d573d6000803e3d6000fd5b505b50505060045481146102cf57600080fd5b600654600160a060020a031681565b600354600160a060020a031681565b600554600160a060020a031681565b600254600160a060020a031681565b60048054600101808255604080517f30b8662700000000000000000000000000000000000000000000000000000000815290519192600092600160a060020a038816926330b866279281810192602092909190829003018186803b15801561040357600080fd5b505afa158015610417573d6000803e3d6000fd5b505050506040513d602081101561042d57600080fd5b5051905061043f858583866000610734565b5060045481146102cf57600080fd5b600054600160a060020a031681565b60048054600101808255604080517f30b8662700000000000000000000000000000000000000000000000000000000815290519192600092600160a060020a038816926330b866279281810192602092909190829003018186803b1580156104c457600080fd5b505afa1580156104d8573d6000803e3d6000fd5b505050506040513d60208110156104ee57600080fd5b505160065490915061050a908290600160a060020a031661066d565b61043f858583866001610734565b600154600160a060020a031681565b600754600160a060020a031681565b60008061054384846108cd565b600084600160a060020a03166330b866276040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561058157600080fd5b505afa158015610595573d6000803e3d6000fd5b505050506040513d60208110156105ab57600080fd5b5051905060006105bb8686610a54565b9196919550909350505050565b6105d3848483610cb9565b600254604080517fa57de4cf000000000000000000000000000000000000000000000000000000008152600160a060020a038781166004830152602482018790529151919092169163a57de4cf91604480830192600092919082900301818387803b15801561064157600080fd5b505af1158015610655573d6000803e3d6000fd5b505050506106658685878561117c565b505050505050565b81600160a060020a03166318c53aca826040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b1580156106c657600080fd5b505afa1580156106da573d6000803e3d6000fd5b505050506040513d60208110156106f057600080fd5b50516107305760405160e560020a62461bcd0281526004018080602001828103825260528152602001806126da6052913960600191505060405180910390fd5b5050565b61073e85856108cd565b600254604080517f5990ca08000000000000000000000000000000000000000000000000000000008152336004820152306024820152600160a060020a0388811660448301526064820188905291519190921691635990ca0891608480830192600092919082900301818387803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b5050505060006107db84611266565b600254604080517fa782132c000000000000000000000000000000000000000000000000000000008152600160a060020a03888116600483015260248201859052915193945091169163a782132c9160448082019260009290919082900301818387803b15801561084b57600080fd5b505af115801561085f573d6000803e3d6000fd5b5050505061086d8483611399565b600554610885908590600160a060020a0316856117b7565b6040805186815290513391600160a060020a038916917f412d6167082ef33d0eb78858a5ca2bc234ae9f96ea4757e6c0e2a66a152c0f629181900360200190a3505050505050565b600254604080517ffef3ee73000000000000000000000000000000000000000000000000000000008152600160a060020a0385811660048301529151919092169163fef3ee73916024808301926020929190829003018186803b15801561093357600080fd5b505afa158015610947573d6000803e3d6000fd5b505050506040513d602081101561095d57600080fd5b505161099d5760405160e560020a62461bcd0281526004018080602001828103825260588152602001806126826058913960600191505060405180910390fd5b610a1582600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156109dc57600080fd5b505afa1580156109f0573d6000803e3d6000fd5b505050506040513d6020811015610a0657600080fd5b5051829063ffffffff6117d116565b156107305760405160e560020a62461bcd02815260040180806020018281038252605d8152602001806125a2605d913960600191505060405180910390fd5b600080839050600081600160a060020a0316630193aea26040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610a9857600080fd5b505afa158015610aac573d6000803e3d6000fd5b505050506040513d6020811015610ac257600080fd5b5051604080517f42a7cfd50000000000000000000000000000000000000000000000000000000081529051919250600091600160a060020a038516916342a7cfd5916004808301926020929190829003018186803b158015610b2357600080fd5b505afa158015610b37573d6000803e3d6000fd5b505050506040513d6020811015610b4d57600080fd5b505190506000610b7383610b67888563ffffffff6117ee16565b9063ffffffff61181016565b9050600084600160a060020a03166330b866276040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610bb357600080fd5b505afa158015610bc7573d6000803e3d6000fd5b505050506040513d6020811015610bdd57600080fd5b5051604080517f42a7cfd50000000000000000000000000000000000000000000000000000000081529051919250600091600160a060020a038416916342a7cfd5916004808301926020929190829003018186803b158015610c3e57600080fd5b505afa158015610c52573d6000803e3d6000fd5b505050506040513d6020811015610c6857600080fd5b505190506000610c7e848363ffffffff6117d116565b90508015610ca957610ca682610c9a868463ffffffff61183e16565b9063ffffffff61185316565b93505b5091955050505050505b92915050565b6000839050606081600160a060020a03166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b158015610cfc57600080fd5b505afa158015610d10573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610d3957600080fd5b810190808051640100000000811115610d5157600080fd5b82016020810184811115610d6457600080fd5b8151856020820283011164010000000082111715610d8157600080fd5b50509291905050509050606082600160a060020a031663027aa9f56040518163ffffffff1660e060020a02815260040160006040518083038186803b158015610dc957600080fd5b505afa158015610ddd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610e0657600080fd5b810190808051640100000000811115610e1e57600080fd5b82016020810184811115610e3157600080fd5b8151856020820283011164010000000082111715610e4e57600080fd5b50509291905050509050600083600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610e9657600080fd5b505afa158015610eaa573d6000803e3d6000fd5b505050506040513d6020811015610ec057600080fd5b505190506000610ed6878363ffffffff6117ee16565b905060005b8451811015611171576000858281518110610ef257fe5b602002602001015190506000858381518110610f0a57fe5b602002602001015190506000610f29828661181090919063ffffffff16565b600754604080517f9b19251a000000000000000000000000000000000000000000000000000000008152600160a060020a03878116600483015291519394506000939190921691639b19251a916024808301926020929190829003018186803b158015610f9557600080fd5b505afa158015610fa9573d6000803e3d6000fd5b505050506040513d6020811015610fbf57600080fd5b50519050600160a060020a03811615610fe257610fdd848383611865565b611161565b8a8015610ffc5750600654600160a060020a038581169116145b156110ce57813410156110435760405160e560020a62461bcd0281526004018080602001828103825260748152602001806125086074913960800191505060405180910390fd5b600660009054906101000a9004600160a060020a0316600160a060020a031663d0e30db0836040518263ffffffff1660e060020a0281526004016000604051808303818588803b15801561109657600080fd5b505af11580156110aa573d6000803e3d6000fd5b5050600654600554610fdd9450600160a060020a0391821693503092501685611b9a565b600254604080517fde30f6ee000000000000000000000000000000000000000000000000000000008152336004820152306024820152600160a060020a038781166044830152606482018690529151919092169163de30f6ee91608480830192600092919082900301818387803b15801561114857600080fd5b505af115801561115c573d6000803e3d6000fd5b505050505b505060019092019150610edb9050565b505050505050505050565b600254604080517f73088bf7000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a03878116602483015260448201869052915191909216916373088bf791606480830192600092919082900301818387803b1580156111f057600080fd5b505af1158015611204573d6000803e3d6000fd5b50506005546112209250859150600160a060020a0316836117b7565b6040805183815290513391600160a060020a038716917f2d3ead46fb20943d335e2ff48b43b66d146fa01aaed75d497fa33a86092446129181900360200190a350505050565b60008082600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156112a557600080fd5b505afa1580156112b9573d6000803e3d6000fd5b505050506040513d60208110156112cf57600080fd5b5051600354604080517f1f98ade3000000000000000000000000000000000000000000000000000000008152600160a060020a03878116600483015230602483015291519394506000939190921691631f98ade3916044808301926020929190829003018186803b15801561134357600080fd5b505afa158015611357573d6000803e3d6000fd5b505050506040513d602081101561136d57600080fd5b50519050611391611384828463ffffffff6117d116565b829063ffffffff61183e16565b949350505050565b606082600160a060020a03166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b1580156113d757600080fd5b505afa1580156113eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561141457600080fd5b81019080805164010000000081111561142c57600080fd5b8201602081018481111561143f57600080fd5b815185602082028301116401000000008211171561145c57600080fd5b50909450600093505050505b81518110156102cf57600082828151811061147f57fe5b602090810291909101810151600354604080517f1f98ade3000000000000000000000000000000000000000000000000000000008152600160a060020a03808516600483015230602483015291519395506000949190921692631f98ade3926044808201939291829003018186803b1580156114fa57600080fd5b505afa15801561150e573d6000803e3d6000fd5b505050506040513d602081101561152457600080fd5b5051600754604080517f9b19251a000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015291519394506000939190921691639b19251a916024808301926020929190829003018186803b15801561159257600080fd5b505afa1580156115a6573d6000803e3d6000fd5b505050506040513d60208110156115bc57600080fd5b50519050600160a060020a038116156115df576115da838383611bca565b6117ac565b8580156115f95750600654600160a060020a038481169116145b1561172f576002546006546040805160e260020a630387f4cd02815230600482018190526024820152600160a060020a0392831660448201526064810186905290519190921691630e1fd33491608480830192600092919082900301818387803b15801561166657600080fd5b505af115801561167a573d6000803e3d6000fd5b5050600654604080517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018790529051600160a060020a039092169350632e1a7d4d925060248082019260009290919082900301818387803b1580156116e457600080fd5b505af11580156116f8573d6000803e3d6000fd5b505060405133925084156108fc02915084906000818181858888f19350505050158015611729573d6000803e3d6000fd5b506117ac565b6002546040805160e260020a630387f4cd028152306004820152336024820152600160a060020a0386811660448301526064820186905291519190921691630e1fd33491608480830192600092919082900301818387803b15801561179357600080fd5b505af11580156117a7573d6000803e3d6000fd5b505050505b505050600101611468565b6117c2838383611ebd565b6117cc83826120ba565b505050565b6000816117dd57600080fd5b8183816117e657fe5b069392505050565b60008082116117fc57600080fd5b600082848161180757fe5b04949350505050565b60008261181f57506000610cb3565b8282028284828161182c57fe5b041461183757600080fd5b9392505050565b60008282111561184d57600080fd5b50900390565b60008282018381101561183757600080fd5b600083600160a060020a031663bd6d894d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156118a557600080fd5b505af11580156118b9573d6000803e3d6000fd5b505050506040513d60208110156118cf57600080fd5b5051905060006118df848361227b565b600254604080517ffd496ebf000000000000000000000000000000000000000000000000000000008152600160a060020a03878116600483015260248201859052336044830152306064830152915193945091169163fd496ebf9160848082019260009290919082900301818387803b15801561195b57600080fd5b505af115801561196f573d6000803e3d6000fd5b5050505061197f83308784611b9a565b600085600160a060020a031663a0712d68836040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b1580156119ca57600080fd5b505af11580156119de573d6000803e3d6000fd5b505050506040513d60208110156119f457600080fd5b505190508015611a385760405160e560020a62461bcd0281526004018080602001828103825260408152602001806126426040913960400191505060405180910390fd5b604080517ff7888aec000000000000000000000000000000000000000000000000000000008152600160a060020a0388166004820152306024820152905160009173__ERC20Wrapper__________________________9163f7888aec91604480820192602092909190829003018186803b158015611ab557600080fd5b505af4158015611ac9573d6000803e3d6000fd5b505050506040513d6020811015611adf57600080fd5b5051600554909150611afe9088903090600160a060020a031684611b9a565b600254604080517fde30f6ee00000000000000000000000000000000000000000000000000000000815230600482018190526024820152600160a060020a038a81166044830152606482018590529151919092169163de30f6ee91608480830192600092919082900301818387803b158015611b7957600080fd5b505af1158015611b8d573d6000803e3d6000fd5b5050505050505050505050565b6000611ba78585856122af565b905081811015611bc357611bc38584611bbe61234f565b612355565b5050505050565b600083600160a060020a031663bd6d894d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611c0a57600080fd5b505af1158015611c1e573d6000803e3d6000fd5b505050506040513d6020811015611c3457600080fd5b505190506000611c44848361227b565b6002546040805160e260020a630387f4cd02815230600482018190526024820152600160a060020a038981166044830152606482018990529151939450911691630e1fd3349160848082019260009290919082900301818387803b158015611cab57600080fd5b505af1158015611cbf573d6000803e3d6000fd5b50505050600085600160a060020a031663db006a75866040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b158015611d0e57600080fd5b505af1158015611d22573d6000803e3d6000fd5b505050506040513d6020811015611d3857600080fd5b505190508015611d7c5760405160e560020a62461bcd0281526004018080602001828103825260438152602001806125ff6043913960600191505060405180910390fd5b604080517ff7888aec000000000000000000000000000000000000000000000000000000008152600160a060020a0386166004820152306024820152905173__ERC20Wrapper__________________________9163f7888aec916044808301926020929190829003018186803b158015611df557600080fd5b505af4158015611e09573d6000803e3d6000fd5b505050506040513d6020811015611e1f57600080fd5b5051600254604080517ffd496ebf000000000000000000000000000000000000000000000000000000008152600160a060020a03888116600483015260248201859052306044830152336064830152915193955091169163fd496ebf9160848082019260009290919082900301818387803b158015611e9d57600080fd5b505af1158015611eb1573d6000803e3d6000fd5b50505050505050505050565b604080517ff7888aec000000000000000000000000000000000000000000000000000000008152600160a060020a0385166004820152306024820152905160009173__ERC20Wrapper__________________________9163f7888aec91604480820192602092909190829003018186803b158015611f3a57600080fd5b505af4158015611f4e573d6000803e3d6000fd5b505050506040513d6020811015611f6457600080fd5b5051905080611f7357506117cc565b811561201c57611f8584308584611b9a565b600254604080517fde30f6ee000000000000000000000000000000000000000000000000000000008152306004820152336024820152600160a060020a038781166044830152606482018590529151919092169163de30f6ee91608480830192600092919082900301818387803b158015611fff57600080fd5b505af1158015612013573d6000803e3d6000fd5b505050506102cf565b604080517fbeabacc8000000000000000000000000000000000000000000000000000000008152600160a060020a038616600482015233602482015260448101839052905173__ERC20Wrapper__________________________9163beabacc8916064808301926000929190829003018186803b15801561209c57600080fd5b505af41580156120b0573d6000803e3d6000fd5b5050505050505050565b600354604080517f1f98ade3000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015230602483015291516000939290921691631f98ade391604480820192602092909190829003018186803b15801561212a57600080fd5b505afa15801561213e573d6000803e3d6000fd5b505050506040513d602081101561215457600080fd5b50519050806121635750610730565b81156121fa57600254604080517f59e026f7000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015233602483015260448201859052915191909216916359e026f791606480830192600092919082900301818387803b1580156121dd57600080fd5b505af11580156121f1573d6000803e3d6000fd5b505050506117cc565b6002546040805160e260020a630387f4cd028152306004820152336024820152600160a060020a0386811660448301526064820185905291519190921691630e1fd33491608480830192600092919082900301818387803b15801561225e57600080fd5b505af1158015612272573d6000803e3d6000fd5b50505050505050565b60008061228e848463ffffffff61181016565b9050600061229a61242b565b90506122a68282612437565b95945050505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301528381166024830152915160009286169163dd62ed3e916044808301926020929190829003018186803b15801561231b57600080fd5b505afa15801561232f573d6000803e3d6000fd5b505050506040513d602081101561234557600080fd5b5051949350505050565b60001990565b82600160a060020a031663095ea7b383836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156123b857600080fd5b505af11580156123cc573d6000803e3d6000fd5b505050506040513d60208110156123e257600080fd5b506123ed9050612479565b6117cc5760405160e560020a62461bcd02815260040180806020018281038252602681526020018061257c6026913960400191505060405180910390fd5b670de0b6b3a764000090565b60008061244a848463ffffffff6117d116565b116124645761245f838363ffffffff6117ee16565b611837565b6118376001610c9a858563ffffffff6117ee16565b6000803d80156124905760208114612499576124a5565b600191506124a5565b60206000803e60005191505b5060011490509056fe526562616c616e63696e6753657449737375616e63654d6f64756c652e66616c6c6261636b3a2043616e6e6f74207265636569766520455448206469726563746c7920756e6c65737320756e7772617070696e672057455448526562616c616e63696e6753657443546f6b656e49737375616e63654d6f64756c652e6465706f736974436f6d706f6e656e747348616e646c6543546f6b656e73416e644574683a204e6f7420656e6f75676820657468657220696e636c7564656420666f72206261736520536574546f6b656e4552433230577261707065722e617070726f76653a204261642072657475726e2076616c7565526562616c616e63696e6753657449737375616e63652e76616c6964617465526562616c616e63696e6749737375616e63653a205175616e74697479206d757374206265206d756c7469706c65206f66206e61747572616c20756e697443546f6b656e45786368616e676549737375616e63654d6f64756c652e65786368616e676552656465656d3a204572726f722072656465656d696e672063546f6b656e43546f6b656e45786368616e676549737375616e63654d6f64756c652e65786368616e676549737375653a204572726f72206d696e74696e672063546f6b656e526562616c616e63696e6753657449737375616e63652e76616c6964617465526562616c616e63696e6749737375616e63653a20496e76616c6964206f722064697361626c656420536574546f6b656e2061646472657373526562616c616e63696e6753657449737375616e63652e76616c696461746557455448497341436f6d706f6e656e744f665365743a20436f6d706f6e656e7473206d75737420636f6e7461696e2077657468a165627a7a7230582012f1bce0ff783264238e497bf4d6a9910bff171d26e3eb924cefb50707f22e160029",sourceMap:"1802:22945:63:-;;;2410:419;8:9:-1;5:2;;;30:1;27;20:12;5:2;2410:419:63;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;2410:419:63;;;;;;;;;;;;;;;;;;;;;1652:4:69;:12;;-1:-1:-1;;;;;1652:12:69;;;-1:-1:-1;;;;;;1652:12:69;;;;;;;1739;:27;;;;;;;;;1652:12;1834:14;;;;;;;;;;;;1924:13;:30;;;;;;;;;560:13:171;:17;;;2688:4:65;:12;;;;;;;;;;;2756:13;:30;;;;;;;;;;;1759:15:66;:34;;;;;;;;;;;;;;1932:33;;;;;;;2410:419:63;;;;;;;;;;;;;;;1759:34:66;;1932:31;;:33;;;;1652:4:69;;1932:33:66;;;;;;;;1759:34;1932:33;;;5:2:-1;;;;30:1;27;20:12;5:2;1932:33:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1932:33:66;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1932:33:66;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;1932:33:66;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;1932:33:66;;-1:-1:-1;1981:9:66;;-1:-1:-1;;;;1976:899:66;2000:15;:22;1996:1;:26;1976:899;;;2043:21;2067:15;2083:1;2067:18;;;;;;;;;;;;;;;;;;;2127:15;;:39;;;;;;-1:-1:-1;;;;;2127:39:66;;;;;;;;;2067:18;;-1:-1:-1;2099:25:66;;2127:15;;;;;:24;;:39;;;;;2067:18;2127:39;;;;;;:15;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;2127:39:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2127:39:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2127:39:66;;-1:-1:-1;2257:141:66;2127:39;2330:13;2361:23;:21;;;;;;:23;:::i;:::-;2257:20;;;;;;:141;:::i;:::-;2496:142;2534:17;2569:14;2601:23;:21;;;;;;:23;:::i;2496:142::-;2726:138;2764:13;2795:14;2827:23;:21;;;;;;:23;:::i;2726:138::-;-1:-1:-1;;2024:3:66;;1976:899;;;;1543:1338;;;2410:419:63;;;;;1802:22945;;1220:118:176;-1:-1:-1;;1220:118:176;:::o;4042:342:118:-;4180:6;-1:-1:-1;;;;;4173:22:118;;4196:8;4206:9;4173:43;;;;;;;;;;;;;-1:-1:-1;;;;;4173:43:118;-1:-1:-1;;;;;4173:43:118;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4173:43:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4173:43:118;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4299:14:118;;-1:-1:-1;4299:12:118;;;;:14;:::i;:::-;4278:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4042:342;;;:::o;5392:852::-;5467:4;;5651:14;5728:57;;;;5837:4;5832:220;;;;5644:497;;5728:57;5770:1;5755:16;;5728:57;;5832:220;5937:4;5932:3;5927;5912:30;6034:3;6028:10;6013:25;;5644:497;-1:-1:-1;6236:1:118;6221:16;;-1:-1:-1;5392:852:118;:::o;1802:22945:63:-;;;;;;;",deployedSourceMap:"1802:22945:63:-;;;;;;;;;;-1:-1:-1;;;1802:22945:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3036:4:65;;-1:-1:-1;;;;;3036:4:65;3014:10;:27;2993:163;;;;-1:-1:-1;;;;;2993:163:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:22945:63;3962:877;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3962:877:63;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3962:877:63;;;;;;;;;;;;;;;:::i;5821:1311::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5821:1311:63;;;;;;;;;;;;;;;:::i;1657:17:65:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1657:17:65;;;:::i;:::-;;;;-1:-1:-1;;;;;1657:17:65;;;;;;;;;;;;;;1234:27:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1234:27:69;;;:::i;1568:28:65:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1568:28:65;;;:::i;1168:25:69:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1168:25:69;;;:::i;7851:711:63:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7851:711:63;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7851:711:63;;;;;;;;;;;;;;;:::i;1049:19:69:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1049:19:69;;;:::i;9397:855:63:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9397:855:63;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9397:855:63;;;;;;;;;;;;;;;:::i;1108:20:69:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1108:20:69;;;:::i;1224:49:66:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1224:49:66;;;:::i;3962:877:63:-;993:13:171;:18;;1010:1;993:18;;;;;:13;;4342:77:63;4371:22;4395:23;4342:28;:77::i;:::-;4248:171;;;;4606:226;4647:22;4683:23;4720:14;4748:23;4785:18;4817:5;4606:27;:226::i;:::-;1067:1:171;;1102:13;;1086:12;:29;1078:38;;;;;;3962:877:63;;;;:::o;5821:1311::-;993:13:171;:18;;1010:1;993:18;;;;;:13;;6230:77:63;6259:22;6283:23;6230:28;:77::i;:::-;6428:4;;6136:171;;-1:-1:-1;6136:171:63;-1:-1:-1;6374:60:63;;6136:171;;-1:-1:-1;;;;;6428:4:63;6374:29;:60::i;:::-;6616:225;6657:22;6693:23;6730:14;6758:23;6795:18;6827:4;6616:27;:225::i;:::-;7025:4;7017:21;7052:15;;7048:78;;7083:32;;:10;;:32;;;;;7103:11;;7083:32;;;;7103:11;7083:10;:32;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7083:32:63;7048:78;1067:1:171;;;1102:13;;1086:12;:29;1078:38;;;;;1657:17:65;;;-1:-1:-1;;;;;1657:17:65;;:::o;1234:27:69:-;;;-1:-1:-1;;;;;1234:27:69;;:::o;1568:28:65:-;;;-1:-1:-1;;;;;1568:28:65;;:::o;1168:25:69:-;;;-1:-1:-1;;;;;1168:25:69;;:::o;7851:711:63:-;993:13:171;:18;;1010:1;993:18;;;;8110:57:63;;;;;;;;993:18:171;;:13;;-1:-1:-1;;;;;8110:55:63;;;;;:57;;;;;;;;;;;;;;:55;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;8110:57:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8110:57:63;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8110:57:63;;-1:-1:-1;8365:190:63;8407:22;8443:23;8110:57;8508:18;8540:5;8365:28;:190::i;:::-;1067:1:171;1102:13;;1086:12;:29;1078:38;;;;;1049:19:69;;;-1:-1:-1;;;;;1049:19:69;;:::o;9397:855:63:-;993:13:171;:18;;1010:1;993:18;;;;9671:57:63;;;;;;;;993:18:171;;:13;;-1:-1:-1;;;;;9671:55:63;;;;;:57;;;;;;;;;;;;;;:55;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;9671:57:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9671:57:63;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9671:57:63;9857:4;;9671:57;;-1:-1:-1;9803:60:63;;9671:57;;-1:-1:-1;;;;;9857:4:63;9803:29;:60::i;:::-;10056:189;10098:22;10134:23;10171:14;10199:18;10231:4;10056:28;:189::i;1108:20:69:-;;;-1:-1:-1;;;;;1108:20:69;;:::o;1224:49:66:-;;;-1:-1:-1;;;;;1224:49:66;;:::o;13363:770:65:-;13535:7;13544;13672:79;13703:22;13727:23;13672:30;:79::i;:::-;13762:22;13808;-1:-1:-1;;;;;13787:55:65;;:57;;;;;-1:-1:-1;;;13787:57:65;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13787:57:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13787:57:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13787:57:65;;-1:-1:-1;13908:31:65;13942:117;13990:22;14026:23;13942:34;:117::i;:::-;14078:14;;;;-1:-1:-1;13363:770:65;;-1:-1:-1;;;;13363:770:65:o;11532:1206:63:-;11999:135;12049:15;12078:24;12116:8;11999:36;:135::i;:::-;12235:12;;:102;;;;;;-1:-1:-1;;;;;12235:102:63;;;;;;;;;;;;;;;:12;;;;;:25;;:102;;;;;:12;;:102;;;;;;;:12;;:102;;;5:2:-1;;;;30:1;27;20:12;5:2;12235:102:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12235:102:63;;;;12549:182;12601:22;12637:15;12666:23;12703:18;12549:38;:182::i;:::-;11532:1206;;;;;;:::o;1627:353:71:-;1814:11;-1:-1:-1;;;;;1804:39:71;;1844:20;1804:61;;;;;-1:-1:-1;;;1804:61:71;;;;;;;-1:-1:-1;;;;;1804:61:71;-1:-1:-1;;;;;1804:61:71;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1804:61:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1804:61:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1804:61:71;1783:190;;;;-1:-1:-1;;;;;1783:190:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1627:353;;:::o;13517:1544:63:-;13868:79;13899:22;13923:23;13868:30;:79::i;:::-;14024:12;;:159;;;;;;14063:10;14024:159;;;;14095:4;14024:159;;;;-1:-1:-1;;;;;14024:159:63;;;;;;;;;;;;;;;:12;;;;;:25;;:159;;;;;:12;;:159;;;;;;;:12;;:159;;;5:2:-1;;;;30:1;27;20:12;5:2;14024:159:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14024:159:63;;;;14249:29;14281:41;14306:15;14281:24;:41::i;:::-;14402:12;;:100;;;;;;-1:-1:-1;;;;;14402:100:63;;;;;;;;;;;;;;;14249:73;;-1:-1:-1;14402:12:63;;;:26;;:100;;;;;:12;;:100;;;;;;;;:12;;:100;;;5:2:-1;;;;30:1;27;20:12;5:2;14402:100:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14402:100:63;;;;14656:66;14694:15;14711:10;14656:37;:66::i;:::-;14838:13;;14801:71;;14821:15;;-1:-1:-1;;;;;14838:13:63;14853:18;14801:19;:71::i;:::-;14924:130;;;;;;;;14997:10;;-1:-1:-1;;;;;14924:130:63;;;;;;;;;;;;13517:1544;;;;;;:::o;2318:764:71:-;2583:12;;:46;;;;;;-1:-1:-1;;;;;2583:46:71;;;;;;;;;:12;;;;;:22;;:46;;;;;;;;;;;;;;:12;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;2583:46:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2583:46:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2583:46:71;2562:181;;;;-1:-1:-1;;;;;2562:181:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2875:76;2913:22;-1:-1:-1;;;;;2903:45:71;;:47;;;;;-1:-1:-1;;;2903:47:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2903:47:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2903:47:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2903:47:71;2875:23;;:76;:27;:76;:::i;:::-;:81;2854:221;;;;-1:-1:-1;;;;;2854:221:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3673:1093;3851:7;3874:35;3933:22;3874:82;;3967:18;3988:14;-1:-1:-1;;;;;3988:25:71;;:27;;;;;-1:-1:-1;;;3988:27:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3988:27:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3988:27:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3988:27:71;4047:28;;;;;;;;3988:27;;-1:-1:-1;4025:19:71;;-1:-1:-1;;;;;4047:26:71;;;;;:28;;;;;3988:27;;4047:28;;;;;;;:26;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;4047:28:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4047:28:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4047:28:71;;-1:-1:-1;4086:31:71;4120:56;4165:10;4120:40;:23;4047:28;4120:40;:27;:40;:::i;:::-;:44;:56;:44;:56;:::i;:::-;4086:90;;4187:15;4205:14;-1:-1:-1;;;;;4205:25:71;;:27;;;;;-1:-1:-1;;;4205:27:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4205:27:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4205:27:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4205:27:71;4271:32;;;;;;;;4205:27;;-1:-1:-1;4242:26:71;;-1:-1:-1;;;;;4271:30:71;;;;;:32;;;;;4205:27;;4271:32;;;;;;;:30;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;4271:32:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4271:32:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4271:32:71;;-1:-1:-1;4486:25:71;4514:47;:23;4271:32;4514:47;:27;:47;:::i;:::-;4486:75;-1:-1:-1;4575:21:71;;4571:148;;4638:70;4689:18;4638:46;:23;4666:17;4638:46;:27;:46;:::i;:::-;:50;:70;:50;:70;:::i;:::-;4612:96;;4571:148;-1:-1:-1;4736:23:71;;-1:-1:-1;;;;;;3673:1093:71;;;;;:::o;15567:2809:63:-;15739:17;15769:15;15739:46;;15796:34;15833:7;-1:-1:-1;;;;;15833:21:63;;:23;;;;;-1:-1:-1;;;15833:23:63;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15833:23:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15833:23:63;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15833:23:63;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;15833:23:63;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;15833:23:63;;;;;;15796:60;;15866:29;15898:7;-1:-1:-1;;;;;15898:16:63;;:18;;;;;-1:-1:-1;;;15898:18:63;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15898:18:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15898:18:63;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15898:18:63;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;15898:18:63;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;15898:18:63;;;;;;15866:50;;15926:26;15955:7;-1:-1:-1;;;;;15955:19:63;;:21;;;;;-1:-1:-1;;;15955:21:63;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15955:21:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15955:21:63;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15955:21:63;;-1:-1:-1;16084:30:63;16117:40;:16;15955:21;16117:40;:20;:40;:::i;:::-;16084:73;-1:-1:-1;16250:9:63;16245:2125;16269:17;:24;16265:1;:28;16245:2125;;;16314:31;16348:17;16366:1;16348:20;;;;;;;;;;;;;;16314:54;;16382:19;16404:12;16417:1;16404:15;;;;;;;;;;;;;;16382:37;;16487:32;16522:39;16549:11;16522:22;:26;;:39;;;;:::i;:::-;16690:15;;:50;;;;;;-1:-1:-1;;;;;16690:50:63;;;;;;;;;16487:74;;-1:-1:-1;16662:25:63;;16690:15;;;;;:25;;:50;;;;;;;;;;;;;;:15;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;16690:50:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16690:50:63;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16690:50:63;;-1:-1:-1;;;;;;16758:31:63;;;16754:1606;;16874:177;16924:23;16970:24;17016:17;16874:20;:177::i;:::-;16754:1606;;;17076:8;:52;;;;-1:-1:-1;17123:4:63;;-1:-1:-1;;;;;17088:40:63;;;17123:4;;17088:40;17076:52;17072:1288;;;17339:24;17326:9;:37;;17297:224;;;;-1:-1:-1;;;;;17297:224:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17722:4;;;;;;;;;-1:-1:-1;;;;;17722:4:63;-1:-1:-1;;;;;17722:12:63;;17741:24;17722:46;;;;;-1:-1:-1;;;17722:46:63;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17722:46:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;17886:4:63;;17948:13;;17828:197;;-1:-1:-1;;;;;;17886:4:63;;;;-1:-1:-1;17921:4:63;;-1:-1:-1;17948:13:63;17983:24;17828:28;:197::i;17072:1288::-;18143:12;;:202;;;;;;18191:10;18143:202;;;;18231:4;18143:202;;;;-1:-1:-1;;;;;18143:202:63;;;;;;;;;;;;;;;:12;;;;;:26;;:202;;;;;:12;;:202;;;;;;;:12;;:202;;;5:2:-1;;;;30:1;27;20:12;5:2;18143:202:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18143:202:63;;;;17072:1288;-1:-1:-1;;16295:3:63;;;;;-1:-1:-1;16245:2125:63;;-1:-1:-1;16245:2125:63;;;15567:2809;;;;;;;;:::o;14689:750:65:-;14973:12;;:127;;;;;;15007:10;14973:127;;;;-1:-1:-1;;;;;14973:127:65;;;;;;;;;;;;;;;:12;;;;;:20;;:127;;;;;:12;;:127;;;;;;;:12;;:127;;;5:2:-1;;;;30:1;27;20:12;5:2;14973:127:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;15211:13:65;;15174:71;;-1:-1:-1;15194:15:65;;-1:-1:-1;;;;;;15211:13:65;15226:18;15174:19;:71::i;:::-;15296:129;;;;;;;;15368:10;;-1:-1:-1;;;;;15296:129:65;;;;;;;;;;;;14689:750;;;;:::o;5152:571:71:-;5272:7;5362:26;5401:15;-1:-1:-1;;;;;5391:38:71;;:40;;;;;-1:-1:-1;;;5391:40:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5391:40:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5391:40:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5391:40:71;5466:13;;:95;;;;;;-1:-1:-1;;;;;5466:95:71;;;;;;;5546:4;5466:95;;;;;;5391:40;;-1:-1:-1;5441:22:71;;5466:13;;;;;:29;;:95;;;;;5391:40;;5466:95;;;;;;;:13;:95;;;5:2:-1;;;;30:1;27;20:12;5:2;5466:95:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5466:95:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5466:95:71;;-1:-1:-1;5658:58:71;5677:38;5466:95;5696:18;5677:38;:18;:38;:::i;:::-;5658:14;;:58;:18;:58;:::i;:::-;5651:65;5152:571;-1:-1:-1;;;;5152:571:71:o;20960:2075:63:-;21101:34;21148:15;-1:-1:-1;;;;;21138:40:63;;:42;;;;;-1:-1:-1;;;21138:42:63;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21138:42:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21138:42:63;;;;;;39:16:-1;36:1;17:17;2:54;101:4;21138:42:63;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;21138:42:63;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;21138:42:63;;-1:-1:-1;21250:9:63;;-1:-1:-1;;;;21245:1784:63;21269:17;:24;21265:1;:28;21245:1784;;;21314:31;21348:17;21366:1;21348:20;;;;;;;;;;;;;;;;;;;21417:13;;:115;;;;;;-1:-1:-1;;;;;21417:115:63;;;;;;;21513:4;21417:115;;;;;;21348:20;;-1:-1:-1;21382:32:63;;21417:13;;;;;:29;;:115;;;;;21348:20;21417:115;;;;;;:13;:115;;;5:2:-1;;;;30:1;27;20:12;5:2;21417:115:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21417:115:63;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21417:115:63;21661:15;;:50;;;;;;-1:-1:-1;;;;;21661:50:63;;;;;;;;;21417:115;;-1:-1:-1;21633:25:63;;21661:15;;;;;:25;;:50;;;;;21417:115;;21661:50;;;;;;;:15;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;21661:50:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21661:50:63;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21661:50:63;;-1:-1:-1;;;;;;21729:31:63;;;21725:1294;;21841:180;21894:23;21940:24;21986:17;21841:23;:180::i;:::-;21725:1294;;;22058:10;:54;;;;-1:-1:-1;22107:4:63;;-1:-1:-1;;;;;22072:40:63;;;22107:4;;22072:40;22058:54;22054:965;;;22289:12;;22416:4;;22289:196;;;-1:-1:-1;;;;;22289:196:63;;22346:4;22289:196;;;;;;;;;;-1:-1:-1;;;;;22416:4:63;;;22289:196;;;;;;;;;;;;:12;;;;;:27;;:196;;;;;:12;;:196;;;;;;;:12;;:196;;;5:2:-1;;;;30:1;27;20:12;5:2;22289:196:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;22544:4:63;;:39;;;;;;;;;;;;;;-1:-1:-1;;;;;22544:4:63;;;;-1:-1:-1;22544:13:63;;-1:-1:-1;22544:39:63;;;;;:4;;:39;;;;;;;;:4;;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;22544:39:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;22643:45:63;;:10;;-1:-1:-1;22643:45:63;;;;;-1:-1:-1;22663:24:63;;22643:45;;;;22663:24;22643:10;:45;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22643:45:63;22054:965;;;22801:12;;:203;;;-1:-1:-1;;;;;22801:203:63;;22858:4;22801:203;;;;22885:10;22801:203;;;;-1:-1:-1;;;;;22801:203:63;;;;;;;;;;;;;;;:12;;;;;:27;;:203;;;;;:12;;:203;;;;;;;:12;;:203;;;5:2:-1;;;;30:1;27;20:12;5:2;22801:203:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22801:203:63;;;;22054:965;-1:-1:-1;;;21295:3:63;;21245:1784;;6282:343:71;6453:91;6485:15;6502:21;6525:18;6453:31;:91::i;:::-;6555:63;6582:15;6599:18;6555:26;:63::i;:::-;6282:343;;;:::o;1739:121:166:-;1797:7;1824:6;1816:15;;;;;;1852:1;1848;:5;;;;;;;1739:121;-1:-1:-1;;;1739:121:166:o;782:296::-;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;;782:296;-1:-1:-1;;;;782:296:166:o;231:421::-;289:7;529:6;525:45;;-1:-1:-1;558:1:166;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;;644:1;231:421;-1:-1:-1;;;231:421:166:o;1211:145::-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:166;;;1211:145::o;1439:::-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;18725:1877:63;18994:20;19017:7;-1:-1:-1;;;;;19017:27:63;;:29;;;;;-1:-1:-1;;;19017:29:63;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19017:29:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19017:29:63;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19017:29:63;;-1:-1:-1;19056:26:63;19085:70;19125:15;19017:29;19085:39;:70::i;:::-;19212:12;;:152;;;;;;-1:-1:-1;;;;;19212:152:63;;;;;;;;;;;;;19317:10;19212:152;;;;19349:4;19212:152;;;;;;19056:99;;-1:-1:-1;19212:12:63;;;:27;;:152;;;;;:12;;:152;;;;;;;;:12;;:152;;;5:2:-1;;;;30:1;27;20:12;5:2;19212:152:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19212:152:63;;;;19502:159;19544:18;19584:4;19611:7;19633:18;19502:28;:159::i;:::-;19712:20;19735:7;-1:-1:-1;;;;;19735:12:63;;19748:18;19735:32;;;;;-1:-1:-1;;;19735:32:63;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19735:32:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19735:32:63;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19735:32:63;;-1:-1:-1;19798:17:63;;19777:128;;;;-1:-1:-1;;;;;19777:128:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19998:89;;;;;;-1:-1:-1;;;;;19998:89:63;;;;;;20072:4;19998:89;;;;;;19973:22;;19998:12;;:22;;:89;;;;;;;;;;;;;;;:12;:89;;;5:2:-1;;;;30:1;27;20:12;5:2;19998:89:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19998:89:63;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19998:89:63;20312:13;;19998:89;;-1:-1:-1;20213:150:63;;20263:7;;20293:4;;-1:-1:-1;;;;;20312:13:63;19998:89;20213:28;:150::i;:::-;20447:12;;:148;;;;;;20495:4;20447:148;;;;;;;;;;-1:-1:-1;;;;;20447:148:63;;;;;;;;;;;;;;;:12;;;;;:26;;:148;;;;;:12;;:148;;;;;;;:12;;:148;;;5:2:-1;;;;30:1;27;20:12;5:2;20447:148:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20447:148:63;;;;18725:1877;;;;;;;:::o;4766:412:118:-;4929:24;4956:35;4966:6;4974;4982:8;4956:9;:35::i;:::-;4929:62;;5024:9;5005:16;:28;5001:171;;;5049:112;5074:6;5098:8;5124:23;:21;:23::i;:::-;5049:7;:112::i;:::-;4766:412;;;;;:::o;23403:1342:63:-;23675:20;23698:7;-1:-1:-1;;;;;23698:27:63;;:29;;;;;-1:-1:-1;;;23698:29:63;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23698:29:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23698:29:63;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23698:29:63;;-1:-1:-1;23737:26:63;23766:70;23806:15;23698:29;23766:39;:70::i;:::-;23909:12;;:150;;;-1:-1:-1;;;;;23909:150:63;;23958:4;23909:150;;;;;;;;;;-1:-1:-1;;;;;23909:150:63;;;;;;;;;;;;;;;23737:99;;-1:-1:-1;23909:12:63;;;:27;;:150;;;;;:12;;:150;;;;;;;;:12;;:150;;;5:2:-1;;;;30:1;27;20:12;5:2;23909:150:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23909:150:63;;;;24109:22;24134:7;-1:-1:-1;;;;;24134:14:63;;24149:15;24134:31;;;;;-1:-1:-1;;;24134:31:63;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24134:31:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24134:31:63;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24134:31:63;;-1:-1:-1;24196:19:63;;24175:133;;;;-1:-1:-1;;;;;24175:133:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24415:91;;;;;;-1:-1:-1;;;;;24415:91:63;;;;;;24491:4;24415:91;;;;;;:12;;:22;;:91;;;;;;;;;;;;;;:12;:91;;;5:2:-1;;;;30:1;27;20:12;5:2;24415:91:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24415:91:63;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24415:91:63;24586:12;;:152;;;;;;-1:-1:-1;;;;;24586:152:63;;;;;;;;;;;;;24699:4;24586:152;;;;24718:10;24586:152;;;;;;24415:91;;-1:-1:-1;24586:12:63;;;:27;;:152;;;;;:12;;:152;;;;;;;;:12;;:152;;;5:2:-1;;;;30:1;27;20:12;5:2;24586:152:63;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24586:152:63;;;;23403:1342;;;;;;:::o;7171:1060:71:-;7380:54;;;;;;-1:-1:-1;;;;;7380:54:71;;;;;;7428:4;7380:54;;;;;;7354:23;;7380:12;;:22;;:54;;;;;;;;;;;;;;;:12;:54;;;5:2:-1;;;;30:1;27;20:12;5:2;7380:54:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7380:54:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7380:54:71;;-1:-1:-1;7457:20:71;7453:772;;7494:7;;;7453:772;7522:18;7518:707;;;7602:178;7648:15;7689:4;7712:21;7751:15;7602:28;:178::i;:::-;7844:12;;:165;;;;;;7896:4;7844:165;;;;7919:10;7844:165;;;;-1:-1:-1;;;;;7844:165:71;;;;;;;;;;;;;;;:12;;;;;:26;;:165;;;;;:12;;:165;;;;;;;:12;;:165;;;5:2:-1;;;;30:1;27;20:12;5:2;7844:165:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7844:165:71;;;;7518:707;;;8085:129;;;;;;-1:-1:-1;;;;;8085:129:71;;;;;;8157:10;8085:129;;;;;;;;;;;;:12;;:21;;:129;;;;;-1:-1:-1;;8085:129:71;;;;;;;:12;:129;;;5:2:-1;;;;30:1;27;20:12;5:2;8085:129:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8085:129:71;;;;7171:1060;;;;:::o;8696:940::-;8929:13;;:95;;;;;;-1:-1:-1;;;;;8929:95:71;;;;;;;9009:4;8929:95;;;;;;8896:30;;8929:13;;;;;:29;;:95;;;;;;;;;;;;;;;:13;:95;;;5:2:-1;;;;30:1;27;20:12;5:2;8929:95:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8929:95:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8929:95:71;;-1:-1:-1;9047:27:71;9043:587;;9091:7;;;9043:587;9119:18;9115:515;;;9216:12;;:144;;;;;;-1:-1:-1;;;;;9216:144:71;;;;;;;9296:10;9216:144;;;;;;;;;;;;:12;;;;;:29;;:144;;;;;:12;;:144;;;;;;;:12;;:144;;;5:2:-1;;;;30:1;27;20:12;5:2;9216:144:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9216:144:71;;;;9115:515;;;9446:12;;:173;;;-1:-1:-1;;;;;9446:173:71;;9499:4;9446:173;;;;9522:10;9446:173;;;;-1:-1:-1;;;;;9446:173:71;;;;;;;;;;;;;;;:12;;;;;:27;;:173;;;;;:12;;:173;;;;;;;:12;;:173;;;5:2:-1;;;;30:1;27;20:12;5:2;9446:173:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9446:173:71;;;;8696:940;;;:::o;1322:450:178:-;1466:7;;1613:38;:13;1631:19;1613:38;:17;:38;:::i;:::-;1601:50;;1661:9;1673:24;:22;:24::i;:::-;1661:36;;1741:24;1760:1;1763;1741:18;:24::i;:::-;1734:31;1322:450;-1:-1:-1;;;;;1322:450:178:o;1953:225:118:-;2129:42;;;;;;-1:-1:-1;;;;;2129:42:118;;;;;;;;;;;;;;;;2099:7;;2129:24;;;;;:42;;;;;;;;;;;;;;:24;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;2129:42:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2129:42:118;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2129:42:118;;1953:225;-1:-1:-1;;;;1953:225:118:o;1220:118:176:-;-1:-1:-1;;1220:118:176;:::o;4042:342:118:-;4180:6;-1:-1:-1;;;;;4173:22:118;;4196:8;4206:9;4173:43;;;;;-1:-1:-1;;;4173:43:118;;;;;;;-1:-1:-1;;;;;4173:43:118;-1:-1:-1;;;;;4173:43:118;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4173:43:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4173:43:118;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4299:14:118;;-1:-1:-1;4299:12:118;:14::i;:::-;4278:99;;;;-1:-1:-1;;;;;4278:99:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;964:119:176;798:8;964:119;:::o;2513:163::-;2598:7;;2628:8;:1;2634;2628:8;:5;:8;:::i;:::-;:12;:41;;2661:8;:1;2667;2661:8;:5;:8;:::i;:::-;2628:41;;;2643:15;2656:1;2643:8;:1;2649;2643:8;:5;:8;:::i;5392:852:118:-;5467:4;;5651:14;5728:57;;;;5837:4;5832:220;;;;5644:497;;5728:57;5770:1;5755:16;;5728:57;;5832:220;5937:4;5932:3;5927;5912:30;6034:3;6028:10;6013:25;;5644:497;-1:-1:-1;6236:1:118;6221:16;;-1:-1:-1;5392:852:118;:::o",
source:'/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\n\nimport { ReentrancyGuard } from "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol";\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\nimport { CommonMath } from "set-protocol-contract-utils/contracts/lib/CommonMath.sol";\nimport { CompoundUtils } from "set-protocol-contract-utils/contracts/lib/CompoundUtils.sol";\n\nimport { CTokenWhiteListed } from "./lib/CTokenWhiteListed.sol";\nimport { ICToken } from "../interfaces/ICToken.sol";\nimport { IRebalancingSetToken } from "../interfaces/IRebalancingSetToken.sol";\nimport { ISetToken } from "../interfaces/ISetToken.sol";\nimport { IWETH } from "../../lib/IWETH.sol";\nimport { IAddressToAddressWhiteList } from "../interfaces/IAddressToAddressWhiteList.sol";\nimport { ERC20Wrapper } from "../../lib/ERC20Wrapper.sol";\nimport { RebalancingSetIssuanceModule } from "./RebalancingSetIssuanceModule.sol";\n\n\n/**\n * @title RebalancingSetCTokenIssuanceModule\n * @author Set Protocol\n *\n * A module that includes functions for issuing / redeeming rebalancing SetToken from its base components, cToken\n * underlying components, and Ether. Note: This module is not compatible with Compound Ether (cETH).\n */\ncontract RebalancingSetCTokenIssuanceModule is\n    RebalancingSetIssuanceModule,\n    CTokenWhiteListed\n{\n    using SafeMath for uint256;\n\n    /* ============ Constructor ============ */\n\n    /**\n     * Constructor function for RebalancingSetCTokenIssuanceModule\n     *\n     * @param _core                The address of Core\n     * @param _vault               The address of Vault\n     * @param _transferProxy       The address of TransferProxy\n     * @param _weth                Instance of Wrapped Ether\n     * @param _cTokenWhiteList     Instance of whitelisted cTokens to underlying addresses\n     */\n    constructor(\n        address _core,\n        address _vault,\n        address _transferProxy,\n        IWETH _weth,\n        IAddressToAddressWhiteList _cTokenWhiteList\n    )\n        public\n        RebalancingSetIssuanceModule(\n            _core,\n            _vault,\n            _transferProxy,\n            _weth\n        )\n        CTokenWhiteListed(\n            _transferProxy,\n            _cTokenWhiteList\n        )\n    {}\n\n    /* ============ External Functions ============ */\n\n    /**\n     * Issue a rebalancing SetToken using the base components of the base SetToken. If the base component is a supported\n     * cToken, retrieve the underlying from the user and mint the cToken. The base SetToken is then issued\n     * into the rebalancing SetToken. The base SetToken quantity issued is calculated by taking the rebalancing SetToken\'s quantity,\n     * unit shares, and natural unit. If the calculated quantity is not a multiple of the natural unit of the base SetToken,\n     * the quantity is rounded up to the base SetToken natural unit.\n     * NOTE: Potential to receive more baseSet than expected if someone transfers some to this module.\n     * Be careful with balance checks.\n     *\n     * @param  _rebalancingSetAddress    Address of the rebalancing SetToken to issue\n     * @param  _rebalancingSetQuantity   The issuance quantity of rebalancing SetToken\n     * @param  _keepChangeInVault        Boolean signifying whether excess base SetToken is transferred to the user\n     *                                   or left in the vault\n     */\n    function issueRebalancingSet(\n        address _rebalancingSetAddress,\n        uint256 _rebalancingSetQuantity,\n        bool _keepChangeInVault\n    )\n        external\n        nonReentrant\n    {\n        // Get baseSet address and quantity required for issuance of Rebalancing Set\n        (\n            address baseSetAddress,\n            uint256 requiredBaseSetQuantity\n        ) = getBaseSetAddressAndQuantity(_rebalancingSetAddress, _rebalancingSetQuantity);\n\n        // Deposit components, mint cTokens, issue base and rebalancing Set tokens and return excess base to sender\n        // Set false because function is not wrapping Ether\n        issueRebalancingSetInternal(\n            _rebalancingSetAddress,\n            _rebalancingSetQuantity,\n            baseSetAddress,\n            requiredBaseSetQuantity,\n            _keepChangeInVault,\n            false\n        );\n    }\n\n    /**\n     * Issue a rebalancing SetToken using the base components and ether of the base SetToken. If the base component\n     * is a supported cToken, retrieve the underlying from the user and mint the cToken. The ether is wrapped\n     * into wrapped Ether and utilized in issuance.\n     * The base SetToken is then issued and reissued into the rebalancing SetToken. Read more about base SetToken quantity\n     * in the issueRebalancingSet function.\n     * NOTE: Potential to receive more baseSet and ether dust than expected if someone transfers some to this module.\n     * Be careful with balance checks.\n     *\n     * @param  _rebalancingSetAddress    Address of the rebalancing SetToken to issue\n     * @param  _rebalancingSetQuantity   The issuance quantity of rebalancing SetToken\n     * @param  _keepChangeInVault        Boolean signifying whether excess base SetToken is transferred to the user\n     *                                   or left in the vault\n     */\n    function issueRebalancingSetWrappingEther(\n        address _rebalancingSetAddress,\n        uint256 _rebalancingSetQuantity,\n        bool _keepChangeInVault\n    )\n        external\n        payable\n        nonReentrant\n    {\n        // Get baseSet address and quantity required for issuance of Rebalancing Set\n        (\n            address baseSetAddress,\n            uint256 requiredBaseSetQuantity\n        ) = getBaseSetAddressAndQuantity(_rebalancingSetAddress, _rebalancingSetQuantity);\n\n        // Validate that WETH is a component of baseSet\n        validateWETHIsAComponentOfSet(baseSetAddress, address(weth));\n\n        // Deposit components, mint cTokens, issue base and rebalancing Set tokens and return excess base to sender\n        // Set true because function is wrapping Ether\n        issueRebalancingSetInternal(\n            _rebalancingSetAddress,\n            _rebalancingSetQuantity,\n            baseSetAddress,\n            requiredBaseSetQuantity,\n            _keepChangeInVault,\n            true\n        );\n\n        // Any eth that is not wrapped is sent back to the user\n        // Only the amount required for the base SetToken issuance is wrapped.\n        uint256 leftoverEth = address(this).balance;\n        if (leftoverEth > 0) {\n            msg.sender.transfer(leftoverEth);\n        }\n    }\n\n    /**\n     * Redeems a rebalancing SetToken into the base components of the base SetToken. If a supported cToken, then base components\n     * are redeemed for the underlying and sent back to user.\n     * NOTE: Potential to receive more baseSet than expected if someone transfers some to this module.\n     * Be careful with balance checks.\n     *\n     * @param  _rebalancingSetAddress    Address of the rebalancing SetToken to redeem\n     * @param  _rebalancingSetQuantity   The Quantity of the rebalancing SetToken to redeem\n     * @param  _keepChangeInVault        Boolean signifying whether excess base SetToken is transferred to the user\n     *                                   or left in the vault\n     */\n    function redeemRebalancingSet(\n        address _rebalancingSetAddress,\n        uint256 _rebalancingSetQuantity,\n        bool _keepChangeInVault\n    )\n        external\n        nonReentrant\n    {\n        // Get base Set address\n        address baseSetAddress = IRebalancingSetToken(_rebalancingSetAddress).currentSet();\n\n        // Redeem into base Set, redeem into components, redeem cTokens into underlying, and transfer tokens and excess to sender\n        // Set false because we are not unwrapping Ether\n        redeemRebalancingSetInternal(\n            _rebalancingSetAddress,\n            _rebalancingSetQuantity,\n            baseSetAddress,\n            _keepChangeInVault,\n            false\n        );\n    }\n\n    /**\n     * Redeems a rebalancing SetToken into the base components of the base SetToken. If a supported cToken, then base components\n     * are redeemed for the underlying and sent back to user. Unwraps wrapped ether and sends eth to the user.\n     * If no wrapped ether in Set then will REVERT.\n     * NOTE: Potential to receive more baseSet and ether dust than expected if someone transfers some to this module.\n     * Be careful with balance checks.\n     *\n     * @param  _rebalancingSetAddress    Address of the rebalancing SetToken to redeem\n     * @param  _rebalancingSetQuantity   The Quantity of the rebalancing SetToken to redeem\n     * @param  _keepChangeInVault        Boolean signifying whether excess base SetToken is transferred to the user\n     *                                   or left in the vault\n     */\n    function redeemRebalancingSetUnwrappingEther(\n        address _rebalancingSetAddress,\n        uint256 _rebalancingSetQuantity,\n        bool _keepChangeInVault\n    )\n        external\n        nonReentrant\n    {\n        // Get base Set address\n        address baseSetAddress = IRebalancingSetToken(_rebalancingSetAddress).currentSet();\n        \n        // Validate that WETH is a component of baseSet\n        validateWETHIsAComponentOfSet(baseSetAddress, address(weth));\n\n        // Redeem into base Set, redeem into components, redeem cTokens into underlying, and transfer tokens and excess to sender\n        // Set true because we are unwrapping Ether\n        redeemRebalancingSetInternal(\n            _rebalancingSetAddress,\n            _rebalancingSetQuantity,\n            baseSetAddress,\n            _keepChangeInVault,\n            true\n        );\n    }\n\n    /* ============ Private Functions ============ */\n\n    /**\n     * Issue a rebalancing SetToken using the base components of the base SetToken. If the base component\n     * is a supported cToken, retrieve the underlying from the user and mint the cToken. If wrapEth is true, ether is wrapped\n     * into wrapped Ether and utilized in issuance. The base SetToken is then issued\n     * into the rebalancing SetToken. The base SetToken quantity issued is calculated by taking the rebalancing SetToken\'s quantity,\n     * unit shares, and natural unit. If the calculated quantity is not a multiple of the natural unit of the base SetToken,\n     * the quantity is rounded up to the base SetToken natural unit.\n     *\n     * @param  _rebalancingSetAddress    Address of the rebalancing Set to issue\n     * @param  _rebalancingSetQuantity   Quantity of the rebalancing Set\n     * @param  _baseSetAddress           Address of the base Set to issue\n     * @param  _requiredBaseSetQuantity  Quantity of the base Set\n     * @param  _keepChangeInVault        Boolean signifying whether excess base SetToken is transferred to the user\n     *                                   or left in the vault\n     * @param  _wrapEth                  Boolean indicating whether to wrap Eth\n     */\n    function issueRebalancingSetInternal(\n        address _rebalancingSetAddress,\n        uint256 _rebalancingSetQuantity,\n        address _baseSetAddress,\n        uint256 _requiredBaseSetQuantity,\n        bool _keepChangeInVault,\n        bool _wrapEth\n    )\n        private\n    {\n        // Deposit components and mint cTokens. Set true because we are wrapping Ether\n        // If wrapEth is true, the required ether is wrapped and approved to the transferProxy\n        depositComponentsHandleCTokensAndEth(\n            _baseSetAddress,\n            _requiredBaseSetQuantity,\n            _wrapEth\n        );\n\n        // Issue base SetToken to this contract, with the base SetToken held in the Vault\n        coreInstance.issueInVault(\n            _baseSetAddress,\n            _requiredBaseSetQuantity\n        );\n\n        // Note: Don\'t need to set allowance of the base SetToken as the base SetToken is already in the vault\n\n        // Issue rebalancing SetToken to the sender and return any excess base to sender\n        issueRebalancingSetAndReturnExcessBase(\n            _rebalancingSetAddress,\n            _baseSetAddress,\n            _rebalancingSetQuantity,\n            _keepChangeInVault\n        );\n    }\n\n    /**\n     * Redeems a rebalancing SetToken into the base components of the base SetToken. If a supported cToken, then base components\n     * are redeemed for the underlying and sent back to user. If wrapEth is true, unwraps wrapped ether and sends eth to the user.\n     *\n     * @param  _rebalancingSetAddress    Address of the rebalancing Set to redeem\n     * @param  _rebalancingSetQuantity   Quantity of the rebalancing Set\n     * @param  _baseSetAddress           Address of the base Set to redeem\n     * @param  _keepChangeInVault        Boolean signifying whether excess base SetToken is transferred to the user\n     *                                   or left in the vault\n     * @param  _unwrapEth                Boolean indicating whether to unwrap Eth\n     */\n    function redeemRebalancingSetInternal(\n        address _rebalancingSetAddress,\n        uint256 _rebalancingSetQuantity,\n        address _baseSetAddress,\n        bool _keepChangeInVault,\n        bool _unwrapEth\n    )\n        private\n    {\n        // Validate the rebalancing SetToken is valid and the quantity is a multiple of the natural unit\n        validateRebalancingSetIssuance(_rebalancingSetAddress, _rebalancingSetQuantity);\n\n        // Redeem RB Set to the vault attributed to this contract\n        coreInstance.redeemModule(\n            msg.sender,\n            address(this),\n            _rebalancingSetAddress,\n            _rebalancingSetQuantity\n        );\n\n        // Calculate the base SetToken Redeem quantity\n        uint256 baseSetRedeemQuantity = getBaseSetRedeemQuantity(_baseSetAddress);\n\n        // Redeem the base SetToken and keep components in the vault\n        coreInstance.redeemInVault(\n            _baseSetAddress,\n            baseSetRedeemQuantity\n        );\n\n        // Withdraw components and redeem cTokens. Transfer tokens to sender.\n        // If unwrapEth is true, the required ether is unwrapped\n        withdrawComponentsHandleCTokensAndEth(_baseSetAddress, _unwrapEth);\n\n        // Transfer any change of the base SetToken to the end user\n        returnExcessBaseSet(_baseSetAddress, transferProxy, _keepChangeInVault);\n\n        // Log RebalancingSetRedeem\n        emit LogRebalancingSetRedeem(\n            _rebalancingSetAddress,\n            msg.sender,\n            _rebalancingSetQuantity\n        );\n    }\n\n    /**\n     * During issuance, deposit the required quantity of base SetToken, handle cToken minting, wrap Ether, and deposit components\n     * (excluding Ether, which is deposited during issuance) to the Vault in the name of the module.\n     *\n     * @param  _baseSetAddress           Address of the base SetToken token\n     * @param  _baseSetQuantity          The Quantity of the base SetToken token to issue\n     * @param  _wrapEth                  Boolean indicating whether to wrap Eth\n     */\n    function depositComponentsHandleCTokensAndEth(\n        address _baseSetAddress,\n        uint256 _baseSetQuantity,\n        bool _wrapEth\n    )\n        private\n    {\n        ISetToken baseSet = ISetToken(_baseSetAddress);\n\n        address[] memory baseSetComponents = baseSet.getComponents();\n        uint256[] memory baseSetUnits = baseSet.getUnits();\n        uint256 baseSetNaturalUnit = baseSet.naturalUnit();\n\n        // Calculate the number of natural units required and round down to nearest natural unit\n        uint256 quantityOfNaturalUnits = _baseSetQuantity.div(baseSetNaturalUnit); \n\n        // Loop through the base SetToken components and deposit components\n        for (uint256 i = 0; i < baseSetComponents.length; i++) {\n            address currentComponentAddress = baseSetComponents[i];\n            uint256 currentUnit = baseSetUnits[i];\n\n            // Calculate required component quantity\n            uint256 currentComponentQuantity = quantityOfNaturalUnits.mul(currentUnit);\n\n            // If cToken, calculate required underlying tokens and transfer to module\n            address underlyingAddress = cTokenWhiteList.whitelist(currentComponentAddress);\n            if (underlyingAddress != address(0)) {\n                // Deposit underlying components and mint cToken\n                depositAndMintCToken(\n                    ICToken(currentComponentAddress),\n                    currentComponentQuantity,\n                    underlyingAddress\n                );\n            } else if (_wrapEth && currentComponentAddress == address(weth)) {\n                // If address is weth, deposit weth and transfer eth\n                // Expect the ether included exceeds the required Weth quantity\n                require(\n                    msg.value >= currentComponentQuantity,\n                    "RebalancingSetCTokenIssuanceModule.depositComponentsHandleCTokensAndEth: Not enough ether included for base SetToken"\n                );\n\n                // Wrap the required ether quantity\n                // NOTE: Weth is wrapped but does not get deposited to vault. When issuing, WETH is pulled from contract to vault\n                weth.deposit.value(currentComponentQuantity)();\n\n                // Ensure weth allowance\n                ERC20Wrapper.ensureAllowance(\n                    address(weth),\n                    address(this),\n                    transferProxy,\n                    currentComponentQuantity\n                );\n            } else {\n                // Deposit components to the vault in the name of the contract\n                coreInstance.depositModule(\n                    msg.sender,\n                    address(this),\n                    currentComponentAddress,\n                    currentComponentQuantity\n                );\n            }\n        }\n    }\n\n    /**\n     * This function deposits the underlying components into the module and mints cToken\n     *\n     * @param  _cToken                      Instance of the cToken to mint\n     * @param  _cTokenQuantity              Quantity of the cToken required\n     * @param  _underlyingAddress           Address of the underlying component\n     */\n    function depositAndMintCToken(\n        ICToken _cToken,\n        uint256 _cTokenQuantity,\n        address _underlyingAddress\n    )\n        private\n    {\n        // Calculate required amount of underlying. Calculated as cToken quantity * exchangeRate / 10 ** 18.\n        uint256 exchangeRate = _cToken.exchangeRateCurrent();\n        uint256 underlyingQuantity = CompoundUtils.convertCTokenToUnderlying(_cTokenQuantity, exchangeRate);\n\n        // Transfer components to this module\n        coreInstance.transferModule(\n            _underlyingAddress,\n            underlyingQuantity,\n            msg.sender,\n            address(this)\n        );\n\n        // Ensure allowance for underlying token to cToken contract. This is for cases if we add a new cToken to the whitelist\n        ERC20Wrapper.ensureAllowance(\n            _underlyingAddress,\n            address(this),\n            address(_cToken),\n            underlyingQuantity\n        );\n\n        // Mint cToken using underlying\n        uint256 mintResponse = _cToken.mint(underlyingQuantity);\n        require(\n            mintResponse == 0,\n            "CTokenExchangeIssuanceModule.exchangeIssue: Error minting cToken"\n        );\n\n        // Get balance of cTokens minted in the contract\n        uint256 cTokenQuantity = ERC20Wrapper.balanceOf(\n            address(_cToken),\n            address(this)\n        );\n\n        // Ensure allowance for cToken to transferProxy. This is for cases if we add a new cToken to the whitelist\n        ERC20Wrapper.ensureAllowance(\n            address(_cToken),\n            address(this),\n            transferProxy,\n            cTokenQuantity\n        );\n\n        // Deposit transformed cTokens to vault (owned by this contract)\n        coreInstance.depositModule(\n            address(this),\n            address(this),\n            address(_cToken),\n            cTokenQuantity\n        );\n    }\n\n    /**\n     * During redemption, withdraw the required quantity of base SetToken, and withdraw\n     * components to the sender. If _unwrapEth is true, then unwrap weth into Ether\n     *\n     * @param  _baseSetAddress           Address of the base SetToken\n     * @param  _unwrapEth                Boolean indicating whether to withdraw to Eth\n     */\n    function withdrawComponentsHandleCTokensAndEth(\n        address _baseSetAddress,\n        bool _unwrapEth\n    )\n        private\n    {\n        address[] memory baseSetComponents = ISetToken(_baseSetAddress).getComponents();\n\n        // Loop through the base SetToken components.\n        for (uint256 i = 0; i < baseSetComponents.length; i++) {\n            address currentComponentAddress = baseSetComponents[i];\n            uint256 currentComponentQuantity = vaultInstance.getOwnerBalance(\n                currentComponentAddress,\n                address(this)\n            );\n\n            // If cToken, calculate required underlying tokens and transfer to module\n            address underlyingAddress = cTokenWhiteList.whitelist(currentComponentAddress);\n            if (underlyingAddress != address(0)) {\n                // Redeem underlying components send to user\n                redeemCTokenAndWithdraw(\n                    ICToken(currentComponentAddress),\n                    currentComponentQuantity,\n                    underlyingAddress\n                );\n            }\n            else if (_unwrapEth && currentComponentAddress == address(weth)) {\n                // If address is weth, withdraw weth and transfer eth to sender\n                // Transfer the wrapped ether to this address from the Vault\n                coreInstance.withdrawModule(\n                    address(this),\n                    address(this),\n                    address(weth),\n                    currentComponentQuantity\n                );\n\n                // Unwrap wrapped ether\n                weth.withdraw(currentComponentQuantity);\n\n                // Transfer to recipient\n                msg.sender.transfer(currentComponentQuantity);\n            } else {\n                // Withdraw component from the Vault and send to the user\n                coreInstance.withdrawModule(\n                    address(this),\n                    msg.sender,\n                    currentComponentAddress,\n                    currentComponentQuantity\n                );\n            }\n        }\n    }\n\n    /**\n     * This function redeems the cToken in the module and withdraws the underlying component to the user\n     *\n     * @param  _cToken                      Instance of the cToken to redeem\n     * @param  _cTokenQuantity              Quantity of the cToken to redeem\n     * @param  _underlyingAddress           Address of the underlying component\n     */\n    function redeemCTokenAndWithdraw(\n        ICToken _cToken,\n        uint256 _cTokenQuantity,\n        address _underlyingAddress\n    )\n        private\n    {\n        // Calculate required amount of underlying. Calculated as cToken quantity * exchangeRate / 10 ** 18.\n        uint256 exchangeRate = _cToken.exchangeRateCurrent();\n        uint256 underlyingQuantity = CompoundUtils.convertCTokenToUnderlying(_cTokenQuantity, exchangeRate);\n\n        // Transfer the cToken to this address from the Vault\n        coreInstance.withdrawModule(\n            address(this),\n            address(this),\n            address(_cToken),\n            _cTokenQuantity\n        );\n\n        // Redeem cToken to underlying\n        uint256 redeemResponse = _cToken.redeem(_cTokenQuantity);\n        require(\n            redeemResponse == 0,\n            "CTokenExchangeIssuanceModule.exchangeRedeem: Error redeeming cToken"\n        );\n\n         // Get balance of underlying after cToken redemption and override\n        underlyingQuantity = ERC20Wrapper.balanceOf(\n            _underlyingAddress,\n            address(this)\n        );\n\n        // Transfer underlying component from the module to the user\n        coreInstance.transferModule(\n            _underlyingAddress,\n            underlyingQuantity,\n            address(this),\n            msg.sender\n        );\n    }\n}',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/RebalancingSetCTokenIssuanceModule.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.603Z",devdoc:{author:"Set Protocol * A module that includes functions for issuing / redeeming rebalancing SetToken from its base components, cToken underlying components, and Ether. Note: This module is not compatible with Compound Ether (cETH).",methods:{constructor:{params:{_cTokenWhiteList:"Instance of whitelisted cTokens to underlying addresses",_core:"The address of Core",_transferProxy:"The address of TransferProxy",_vault:"The address of Vault",_weth:"Instance of Wrapped Ether"}},"issueRebalancingSet(address,uint256,bool)":{params:{_keepChangeInVault:"Boolean signifying whether excess base SetToken is transferred to the user                                  or left in the vault",_rebalancingSetAddress:"Address of the rebalancing SetToken to issue",_rebalancingSetQuantity:"The issuance quantity of rebalancing SetToken"}},"issueRebalancingSetWrappingEther(address,uint256,bool)":{params:{_keepChangeInVault:"Boolean signifying whether excess base SetToken is transferred to the user                                  or left in the vault",_rebalancingSetAddress:"Address of the rebalancing SetToken to issue",_rebalancingSetQuantity:"The issuance quantity of rebalancing SetToken"}},"redeemRebalancingSet(address,uint256,bool)":{params:{_keepChangeInVault:"Boolean signifying whether excess base SetToken is transferred to the user                                  or left in the vault",_rebalancingSetAddress:"Address of the rebalancing SetToken to redeem",_rebalancingSetQuantity:"The Quantity of the rebalancing SetToken to redeem"}},"redeemRebalancingSetUnwrappingEther(address,uint256,bool)":{params:{_keepChangeInVault:"Boolean signifying whether excess base SetToken is transferred to the user                                  or left in the vault",_rebalancingSetAddress:"Address of the rebalancing SetToken to redeem",_rebalancingSetQuantity:"The Quantity of the rebalancing SetToken to redeem"}}},title:"RebalancingSetCTokenIssuanceModule"},userdoc:{methods:{constructor:"Constructor function for RebalancingSetCTokenIssuanceModule","issueRebalancingSet(address,uint256,bool)":{notice:"Issue a rebalancing SetToken using the base components of the base SetToken. If the base component is a supported cToken, retrieve the underlying from the user and mint the cToken. The base SetToken is then issued into the rebalancing SetToken. The base SetToken quantity issued is calculated by taking the rebalancing SetToken's quantity, unit shares, and natural unit. If the calculated quantity is not a multiple of the natural unit of the base SetToken, the quantity is rounded up to the base SetToken natural unit. NOTE: Potential to receive more baseSet than expected if someone transfers some to this module. Be careful with balance checks."},"issueRebalancingSetWrappingEther(address,uint256,bool)":{notice:"Issue a rebalancing SetToken using the base components and ether of the base SetToken. If the base component is a supported cToken, retrieve the underlying from the user and mint the cToken. The ether is wrapped into wrapped Ether and utilized in issuance. The base SetToken is then issued and reissued into the rebalancing SetToken. Read more about base SetToken quantity in the issueRebalancingSet function. NOTE: Potential to receive more baseSet and ether dust than expected if someone transfers some to this module. Be careful with balance checks."},"redeemRebalancingSet(address,uint256,bool)":{notice:"Redeems a rebalancing SetToken into the base components of the base SetToken. If a supported cToken, then base components are redeemed for the underlying and sent back to user. NOTE: Potential to receive more baseSet than expected if someone transfers some to this module. Be careful with balance checks."},"redeemRebalancingSetUnwrappingEther(address,uint256,bool)":{notice:"Redeems a rebalancing SetToken into the base components of the base SetToken. If a supported cToken, then base components are redeemed for the underlying and sent back to user. Unwraps wrapped ether and sends eth to the user. If no wrapped ether in Set then will REVERT. NOTE: Potential to receive more baseSet and ether dust than expected if someone transfers some to this module. Be careful with balance checks."}}}};