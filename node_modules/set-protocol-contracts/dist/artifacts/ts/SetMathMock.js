"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SetMathMock={contractName:"SetMathMock",abi:[{constant:true,inputs:[{name:"_setQuantity",type:"uint256"},{name:"_unit",type:"uint256"},{name:"_naturalUnit",type:"uint256"}],name:"setToComponent",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_componentQuantity",type:"uint256"},{name:"_unit",type:"uint256"},{name:"_naturalUnit",type:"uint256"}],name:"componentToSet",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[{"name":"_setQuantity","type":"uint256"},{"name":"_unit","type":"uint256"},{"name":"_naturalUnit","type":"uint256"}],"name":"setToComponent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_componentQuantity","type":"uint256"},{"name":"_unit","type":"uint256"},{"name":"_naturalUnit","type":"uint256"}],"name":"componentToSet","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"devdoc":{"methods":{}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/core/lib/SetMathMock.sol":"SetMathMock"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/SetMath.sol":{"keccak256":"0x4c6762ad3d11c03889df48cc3b26bd199f958deffa651ec30655cd1654a47303","urls":["bzzr://b8e968dd2840d9586babe7852589abff3972135fff299285eaafd31687ae4385"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/core/lib/SetMathMock.sol":{"keccak256":"0x0df0cf0efc8e02571a784afe223610f2a720d1230cb31331f64671117092fccb","urls":["bzzr://ceade9d8a60e33a6729c7d60a61ab94a84c163ee0115dac7e1d5abb68ea77714"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]}},"version":1}',bytecode:"0x608060405234801561001057600080fd5b506101f9806100206000396000f3fe608060405234801561001057600080fd5b5060043610610052577c010000000000000000000000000000000000000000000000000000000060003504631d3844d18114610057578063762f23a414610080575b600080fd5b61006a610065366004610152565b610093565b60405161007791906101ae565b60405180910390f35b61006a61008e366004610152565b6100a8565b60006100a08484846100b5565b949350505050565b60006100a08484846100d7565b60006100a0826100cb868663ffffffff6100ed16565b9063ffffffff61011d16565b60006100a0836100cb868563ffffffff6100ed16565b6000826100fc57506000610117565b8282028284828161010957fe5b041461011457600080fd5b90505b92915050565b600080821161012b57600080fd5b600082848161013657fe5b04949350505050565b600061014b82356101bc565b9392505050565b60008060006060848603121561016757600080fd5b6000610173868661013f565b93505060206101848682870161013f565b92505060406101958682870161013f565b9150509250925092565b6101a8816101bc565b82525050565b60208101610117828461019f565b9056fea265627a7a72305820ff5035d8ec3e23ec8708e38021d8f9dce49c3ae3ae955c5a95ecead6348473656c6578706572696d656e74616cf50037",deployedBytecode:"0x608060405234801561001057600080fd5b5060043610610052577c010000000000000000000000000000000000000000000000000000000060003504631d3844d18114610057578063762f23a414610080575b600080fd5b61006a610065366004610152565b610093565b60405161007791906101ae565b60405180910390f35b61006a61008e366004610152565b6100a8565b60006100a08484846100b5565b949350505050565b60006100a08484846100d7565b60006100a0826100cb868663ffffffff6100ed16565b9063ffffffff61011d16565b60006100a0836100cb868563ffffffff6100ed16565b6000826100fc57506000610117565b8282028284828161010957fe5b041461011457600080fd5b90505b92915050565b600080821161012b57600080fd5b600082848161013657fe5b04949350505050565b600061014b82356101bc565b9392505050565b60008060006060848603121561016757600080fd5b6000610173868661013f565b93505060206101848682870161013f565b92505060406101958682870161013f565b9150509250925092565b6101a8816101bc565b82525050565b60208101610117828461019f565b9056fea265627a7a72305820ff5035d8ec3e23ec8708e38021d8f9dce49c3ae3ae955c5a95ecead6348473656c6578706572696d656e74616cf50037",sourceMap:"118:642:132:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;118:642:132;;;;;;;",deployedSourceMap:"118:642:132:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;118:642:132;;;;;;;;;;;;;;;;;;;;;;;;146:297;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;449:309;;;;;;;;;:::i;146:297::-;303:7;333:103;369:12;395:5;414:12;333:22;:103::i;:::-;326:110;146:297;-1:-1:-1;;;;146:297:132:o;449:309::-;612:7;642:109;678:18;710:5;729:12;642:22;:109::i;883:256:45:-;1052:7;1082:50;1119:12;1082:32;:12;1099:14;1082:32;:16;:32;:::i;:::-;:36;:50;:36;:50;:::i;1212:268::-;1387:7;1417:56;1458:14;1417:36;:18;1440:12;1417:36;:22;:36;:::i;231:421:166:-;289:7;529:6;525:45;;-1:-1:-1;558:1:166;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;;644:1;-1:-1:-1;231:421:166;;;;;:::o;782:296::-;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;;782:296;-1:-1:-1;;;;782:296:166:o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;130:491;;;;268:2;256:9;247:7;243:23;239:32;236:2;;;284:1;281;274:12;236:2;319:1;336:53;381:7;361:9;336:53;;;326:63;;298:97;426:2;444:53;489:7;480:6;469:9;465:22;444:53;;;434:63;;405:98;534:2;552:53;597:7;588:6;577:9;573:22;552:53;;;542:63;;513:98;230:391;;;;;;628:120;711:31;736:5;711:31;;;706:3;699:44;693:55;;;755:213;873:2;858:18;;887:71;862:9;931:6;887:71;;975:79;1044:5;1027:27",source:'pragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { SetMath } from "../../../core/lib/SetMath.sol";\n\ncontract SetMathMock {\n\n    function setToComponent(\n        uint256 _setQuantity,\n        uint256 _unit,\n        uint256 _naturalUnit\n    )\n        public\n        view\n        returns(uint256)\n    {\n        return SetMath.setToComponent(\n            _setQuantity,\n            _unit,\n            _naturalUnit\n        );\n    }\n\n    function componentToSet(\n        uint256 _componentQuantity,\n        uint256 _unit,\n        uint256 _naturalUnit\n    )\n        public\n        view\n        returns(uint256)\n    {\n        return SetMath.componentToSet(\n            _componentQuantity,\n            _unit,\n            _naturalUnit\n        );\n    }\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/core/lib/SetMathMock.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:37.058Z",devdoc:{methods:{}},userdoc:{methods:{}}};