"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.IExchangeWrapper={contractName:"IExchangeWrapper",abi:[{constant:false,inputs:[{components:[{name:"caller",type:"address"},{name:"orderCount",type:"uint256"}],name:"_exchangeData",type:"tuple"},{name:"_orderData",type:"bytes"}],name:"exchange",outputs:[{components:[{name:"receiveTokens",type:"address[]"},{name:"receiveTokenAmounts",type:"uint256[]"}],name:"",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":false,"inputs":[{"components":[{"name":"caller","type":"address"},{"name":"orderCount","type":"uint256"}],"name":"_exchangeData","type":"tuple"},{"name":"_orderData","type":"bytes"}],"name":"exchange","outputs":[{"components":[{"name":"receiveTokens","type":"address[]"},{"name":"receiveTokenAmounts","type":"uint256[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Set Protocol * Interface for executing an order with an exchange wrapper","methods":{"exchange((address,uint256),bytes)":{"params":{"_orderData":"Arbitrary bytes data for any information to pass to the exchange"}}},"title":"IExchangeWrapper"},"userdoc":{"methods":{"exchange((address,uint256),bytes)":{"notice":"Exchange some amount of makerToken for takerToken.     * maker                            Issuance order maker taker                            Issuance order taker makerToken                       Address of maker token used in exchange orders makerAssetAmount                 Amount of issuance order maker token to use on this exchange orderCount                       Expected number of orders to execute fillQuantity                     Quantity of Set to be filled attemptedFillQuantity            Quantity of Set taker attempted to fill"}}}},"settings":{"compilationTarget":{"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/core/interfaces/IExchangeWrapper.sol":"IExchangeWrapper"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/core/interfaces/IExchangeWrapper.sol":{"keccak256":"0xbe6c55b4ddd26e1fcda74a09c5202f1c938a23edc3cbe6328780bd8eb05e7fde","urls":["bzzr://fdba29705c0defefa87e4102dc401125a4df8ac76f06555718e39365f316810f"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/core/lib/ExchangeWrapperLibraryV2.sol":{"keccak256":"0x92acd5054efb89467456183e7086e6022f9aed0c2044d00aeab382bcc8c86c4f","urls":["bzzr://92084a7a6cc58333b93b929171cdf455cec92ae314dd8c7f082778f0bd825e54"]}},"version":1}',bytecode:"0x",deployedBytecode:"0x",sourceMap:"",deployedSourceMap:"",source:'/*\n    Copyright 2018 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { ExchangeWrapperLibraryV2 } from "../lib/ExchangeWrapperLibraryV2.sol";\n\n/**\n * @title IExchangeWrapper\n * @author Set Protocol\n *\n * Interface for executing an order with an exchange wrapper\n */\ninterface IExchangeWrapper {\n\n    /* ============ External Functions ============ */\n\n    /**\n     * Exchange some amount of makerToken for takerToken.\n     *\n     * maker                            Issuance order maker\n     * taker                            Issuance order taker\n     * makerToken                       Address of maker token used in exchange orders\n     * makerAssetAmount                 Amount of issuance order maker token to use on this exchange\n     * orderCount                       Expected number of orders to execute\n     * fillQuantity                     Quantity of Set to be filled\n     * attemptedFillQuantity            Quantity of Set taker attempted to fill\n     *\n     * @param  _orderData               Arbitrary bytes data for any information to pass to the exchange\n     */\n    function exchange(\n        ExchangeWrapperLibraryV2.ExchangeData calldata _exchangeData,\n        bytes calldata _orderData\n    )\n        external\n        returns (ExchangeWrapperLibraryV2.ExchangeResults memory);\n}\n',sourcePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/core/interfaces/IExchangeWrapper.sol",ast:{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/core/interfaces/IExchangeWrapper.sol",exportedSymbols:{IExchangeWrapper:[4844]},id:4845,nodeType:"SourceUnit",nodes:[{id:4831,literals:["solidity","0.5",".7"],nodeType:"PragmaDirective",src:"597:22:22"},{id:4832,literals:["experimental","ABIEncoderV2"],nodeType:"PragmaDirective",src:"620:35:22"},{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/core/lib/ExchangeWrapperLibraryV2.sol",file:"../lib/ExchangeWrapperLibraryV2.sol",id:4834,nodeType:"ImportDirective",scope:4845,sourceUnit:6508,src:"657:79:22",symbolAliases:[{foreign:4833,local:null}],unitAlias:""},{baseContracts:[],contractDependencies:[],contractKind:"interface",documentation:"@title IExchangeWrapper\n@author Set Protocol\n * Interface for executing an order with an exchange wrapper",fullyImplemented:false,id:4844,linearizedBaseContracts:[4844],name:"IExchangeWrapper",nodeType:"ContractDefinition",nodes:[{body:null,documentation:"Exchange some amount of makerToken for takerToken.\n     * maker                            Issuance order maker\ntaker                            Issuance order taker\nmakerToken                       Address of maker token used in exchange orders\nmakerAssetAmount                 Amount of issuance order maker token to use on this exchange\norderCount                       Expected number of orders to execute\nfillQuantity                     Quantity of Set to be filled\nattemptedFillQuantity            Quantity of Set taker attempted to fill\n     * @param  _orderData               Arbitrary bytes data for any information to pass to the exchange",id:4843,implemented:false,kind:"function",modifiers:[],name:"exchange",nodeType:"FunctionDefinition",parameters:{id:4839,nodeType:"ParameterList",parameters:[{constant:false,id:4836,name:"_exchangeData",nodeType:"VariableDeclaration",scope:4843,src:"1707:60:22",stateVariable:false,storageLocation:"calldata",typeDescriptions:{typeIdentifier:"t_struct$_ExchangeData_$6499_calldata_ptr",typeString:"struct ExchangeWrapperLibraryV2.ExchangeData"},typeName:{contractScope:null,id:4835,name:"ExchangeWrapperLibraryV2.ExchangeData",nodeType:"UserDefinedTypeName",referencedDeclaration:6499,src:"1707:37:22",typeDescriptions:{typeIdentifier:"t_struct$_ExchangeData_$6499_storage_ptr",typeString:"struct ExchangeWrapperLibraryV2.ExchangeData"}},value:null,visibility:"internal"},{constant:false,id:4838,name:"_orderData",nodeType:"VariableDeclaration",scope:4843,src:"1777:25:22",stateVariable:false,storageLocation:"calldata",typeDescriptions:{typeIdentifier:"t_bytes_calldata_ptr",typeString:"bytes"},typeName:{id:4837,name:"bytes",nodeType:"ElementaryTypeName",src:"1777:5:22",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},value:null,visibility:"internal"}],src:"1697:111:22"},returnParameters:{id:4842,nodeType:"ParameterList",parameters:[{constant:false,id:4841,name:"",nodeType:"VariableDeclaration",scope:4843,src:"1843:47:22",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_ExchangeResults_$6506_memory_ptr",typeString:"struct ExchangeWrapperLibraryV2.ExchangeResults"},typeName:{contractScope:null,id:4840,name:"ExchangeWrapperLibraryV2.ExchangeResults",nodeType:"UserDefinedTypeName",referencedDeclaration:6506,src:"1843:40:22",typeDescriptions:{typeIdentifier:"t_struct$_ExchangeResults_$6506_storage_ptr",typeString:"struct ExchangeWrapperLibraryV2.ExchangeResults"}},value:null,visibility:"internal"}],src:"1842:49:22"},scope:4844,src:"1680:212:22",stateMutability:"nonpayable",superFunction:null,visibility:"external"}],scope:4845,src:"861:1033:22"}],src:"597:1298:22"},legacyAST:{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/core/interfaces/IExchangeWrapper.sol",exportedSymbols:{IExchangeWrapper:[4844]},id:4845,nodeType:"SourceUnit",nodes:[{id:4831,literals:["solidity","0.5",".7"],nodeType:"PragmaDirective",src:"597:22:22"},{id:4832,literals:["experimental","ABIEncoderV2"],nodeType:"PragmaDirective",src:"620:35:22"},{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/core/lib/ExchangeWrapperLibraryV2.sol",file:"../lib/ExchangeWrapperLibraryV2.sol",id:4834,nodeType:"ImportDirective",scope:4845,sourceUnit:6508,src:"657:79:22",symbolAliases:[{foreign:4833,local:null}],unitAlias:""},{baseContracts:[],contractDependencies:[],contractKind:"interface",documentation:"@title IExchangeWrapper\n@author Set Protocol\n * Interface for executing an order with an exchange wrapper",fullyImplemented:false,id:4844,linearizedBaseContracts:[4844],name:"IExchangeWrapper",nodeType:"ContractDefinition",nodes:[{body:null,documentation:"Exchange some amount of makerToken for takerToken.\n     * maker                            Issuance order maker\ntaker                            Issuance order taker\nmakerToken                       Address of maker token used in exchange orders\nmakerAssetAmount                 Amount of issuance order maker token to use on this exchange\norderCount                       Expected number of orders to execute\nfillQuantity                     Quantity of Set to be filled\nattemptedFillQuantity            Quantity of Set taker attempted to fill\n     * @param  _orderData               Arbitrary bytes data for any information to pass to the exchange",id:4843,implemented:false,kind:"function",modifiers:[],name:"exchange",nodeType:"FunctionDefinition",parameters:{id:4839,nodeType:"ParameterList",parameters:[{constant:false,id:4836,name:"_exchangeData",nodeType:"VariableDeclaration",scope:4843,src:"1707:60:22",stateVariable:false,storageLocation:"calldata",typeDescriptions:{typeIdentifier:"t_struct$_ExchangeData_$6499_calldata_ptr",typeString:"struct ExchangeWrapperLibraryV2.ExchangeData"},typeName:{contractScope:null,id:4835,name:"ExchangeWrapperLibraryV2.ExchangeData",nodeType:"UserDefinedTypeName",referencedDeclaration:6499,src:"1707:37:22",typeDescriptions:{typeIdentifier:"t_struct$_ExchangeData_$6499_storage_ptr",typeString:"struct ExchangeWrapperLibraryV2.ExchangeData"}},value:null,visibility:"internal"},{constant:false,id:4838,name:"_orderData",nodeType:"VariableDeclaration",scope:4843,src:"1777:25:22",stateVariable:false,storageLocation:"calldata",typeDescriptions:{typeIdentifier:"t_bytes_calldata_ptr",typeString:"bytes"},typeName:{id:4837,name:"bytes",nodeType:"ElementaryTypeName",src:"1777:5:22",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},value:null,visibility:"internal"}],src:"1697:111:22"},returnParameters:{id:4842,nodeType:"ParameterList",parameters:[{constant:false,id:4841,name:"",nodeType:"VariableDeclaration",scope:4843,src:"1843:47:22",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_ExchangeResults_$6506_memory_ptr",typeString:"struct ExchangeWrapperLibraryV2.ExchangeResults"},typeName:{contractScope:null,id:4840,name:"ExchangeWrapperLibraryV2.ExchangeResults",nodeType:"UserDefinedTypeName",referencedDeclaration:6506,src:"1843:40:22",typeDescriptions:{typeIdentifier:"t_struct$_ExchangeResults_$6506_storage_ptr",typeString:"struct ExchangeWrapperLibraryV2.ExchangeResults"}},value:null,visibility:"internal"}],src:"1842:49:22"},scope:4844,src:"1680:212:22",stateMutability:"nonpayable",superFunction:null,visibility:"external"}],scope:4845,src:"861:1033:22"}],src:"597:1298:22"},compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-04-07T04:29:24.466Z",devdoc:{author:"Set Protocol * Interface for executing an order with an exchange wrapper",methods:{"exchange((address,uint256),bytes)":{params:{_orderData:"Arbitrary bytes data for any information to pass to the exchange"}}},title:"IExchangeWrapper"},userdoc:{methods:{"exchange((address,uint256),bytes)":{notice:"Exchange some amount of makerToken for takerToken.     * maker                            Issuance order maker taker                            Issuance order taker makerToken                       Address of maker token used in exchange orders makerAssetAmount                 Amount of issuance order maker token to use on this exchange orderCount                       Expected number of orders to execute fillQuantity                     Quantity of Set to be filled attemptedFillQuantity            Quantity of Set taker attempted to fill"}}}};