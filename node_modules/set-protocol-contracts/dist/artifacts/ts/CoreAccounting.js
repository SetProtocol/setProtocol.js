"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.CoreAccounting={contractName:"CoreAccounting",abi:[{constant:true,inputs:[{name:"_factory",type:"address"}],name:"validFactories",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"exchanges",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_operationState",type:"uint8"}],name:"setOperationState",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"setTokens",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_exchangeId",type:"uint8"}],name:"exchangeIds",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_module",type:"address"}],name:"validModules",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"transferProxy",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[],name:"renounceOwnership",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"operationState",outputs:[{name:"",type:"uint8"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"isOwner",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_priceLibrary",type:"address"}],name:"validPriceLibraries",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"state",outputs:[{name:"operationState",type:"uint8"},{name:"transferProxy",type:"address"},{name:"vault",type:"address"},{name:"transferProxyInstance",type:"address"},{name:"vaultInstance",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"priceLibraries",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"disabledSets",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"modules",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"vault",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"factories",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"validSets",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{anonymous:false,inputs:[{indexed:false,name:"_prevState",type:"uint8"},{indexed:false,name:"_newState",type:"uint8"}],name:"OperationStateChanged",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"previousOwner",type:"address"},{indexed:true,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{constant:false,inputs:[{name:"_token",type:"address"},{name:"_quantity",type:"uint256"}],name:"deposit",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_token",type:"address"},{name:"_quantity",type:"uint256"}],name:"withdraw",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_tokens",type:"address[]"},{name:"_quantities",type:"uint256[]"}],name:"batchDeposit",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_tokens",type:"address[]"},{name:"_quantities",type:"uint256[]"}],name:"batchWithdraw",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_token",type:"address"},{name:"_to",type:"address"},{name:"_quantity",type:"uint256"}],name:"internalTransfer",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[{"name":"_factory","type":"address"}],"name":"validFactories","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"exchanges","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_tokens","type":"address[]"},{"name":"_quantities","type":"uint256[]"}],"name":"batchDeposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_token","type":"address"},{"name":"_quantity","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_operationState","type":"uint8"}],"name":"setOperationState","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"setTokens","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_exchangeId","type":"uint8"}],"name":"exchangeIds","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_token","type":"address"},{"name":"_to","type":"address"},{"name":"_quantity","type":"uint256"}],"name":"internalTransfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_module","type":"address"}],"name":"validModules","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"transferProxy","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"operationState","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_priceLibrary","type":"address"}],"name":"validPriceLibraries","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"state","outputs":[{"name":"operationState","type":"uint8"},{"name":"transferProxy","type":"address"},{"name":"vault","type":"address"},{"name":"transferProxyInstance","type":"address"},{"name":"vaultInstance","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"priceLibraries","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"disabledSets","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_tokens","type":"address[]"},{"name":"_quantities","type":"uint256[]"}],"name":"batchWithdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_token","type":"address"},{"name":"_quantity","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"modules","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vault","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"factories","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"validSets","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_prevState","type":"uint8"},{"indexed":false,"name":"_newState","type":"uint8"}],"name":"OperationStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"devdoc":{"author":"Set Protocol * The CoreAccounting contract interfaces with the vault and transfer proxies for storage of tokenized assets.","methods":{"batchDeposit(address[],uint256[])":{"params":{"_quantities":"Array of the amounts of tokens to deposit","_tokens":"Array of the addresses of the tokens"}},"batchWithdraw(address[],uint256[])":{"params":{"_quantities":"Array of the amounts of tokens to withdraw","_tokens":"Array of the addresses of the tokens"}},"deposit(address,uint256)":{"params":{"_quantity":"Amount of tokens to deposit","_token":"Address of the token"}},"disabledSets(address)":{"params":{"_set":"Set address"},"return":"bool           Boolean indicating if is a disabled Set"},"exchangeIds(uint8)":{"params":{"_exchangeId":"ExchangeId number"},"return":"address           Address belonging to given exchangeId"},"exchanges()":{"return":"address[]      Array of valid exchange wrappers"},"factories()":{"return":"address[]      Array of valid factories"},"internalTransfer(address,address,uint256)":{"params":{"_quantity":"Amount of tokens being transferred","_to":"Address of user receiving tokens","_token":"Address of token being transferred"}},"isOwner()":{"return":"true if `msg.sender` is the owner of the contract."},"modules()":{"return":"address[]      Array of valid modules"},"operationState()":{"return":"uint8           Uint8 representing the operational state of the protocol"},"owner()":{"return":"the address of the owner."},"priceLibraries()":{"return":"address[]      Array of valid price libraries"},"renounceOwnership()":{"details":"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."},"setOperationState(uint8)":{"params":{"_operationState":"Uint8 representing the current protocol operation state"}},"setTokens()":{"return":"address[]      Array of valid Set Tokens"},"transferOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.","params":{"newOwner":"The address to transfer ownership to."}},"transferProxy()":{"return":"address       transferProxy address"},"validFactories(address)":{"params":{"_factory":"Factory address"},"return":"bool           Boolean indicating if enabled factory"},"validModules(address)":{"params":{"_module":"Factory address"},"return":"bool           Boolean indicating if enabled factory"},"validPriceLibraries(address)":{"params":{"_priceLibrary":"Price library address"},"return":"bool             Boolean indicating if valid Price Library"},"validSets(address)":{"params":{"_set":"Set address"},"return":"bool           Boolean indicating if valid Set"},"vault()":{"return":"address        vault address"},"withdraw(address,uint256)":{"params":{"_quantity":"Amount of tokens to withdraw","_token":"Address of the token"}}},"title":"CoreAccounting"},"userdoc":{"methods":{"batchDeposit(address[],uint256[])":{"notice":"Deposit multiple tokens to the vault and attribute to sender. Quantities should be in the order of the addresses of the tokens being deposited."},"batchWithdraw(address[],uint256[])":{"notice":"Withdraw multiple tokens from the vault and deattribute from sender. Quantities should be in the order of the addresses of the tokens being withdrawn."},"deposit(address,uint256)":{"notice":"Deposit a quantity of tokens to the vault and attribute to sender."},"disabledSets(address)":{"notice":"Return boolean indicating if address is a disabled Set."},"exchangeIds(uint8)":{"notice":"Return address belonging to given exchangeId."},"exchanges()":{"notice":"Return array of all valid exchange wrappers."},"factories()":{"notice":"Return array of all valid factories."},"internalTransfer(address,address,uint256)":{"notice":"Transfer tokens associated with the sender\'s account in vault to another user\'s account in vault."},"modules()":{"notice":"Return array of all valid Modules."},"operationState()":{"notice":"Return uint8 representing the operational state of the protocol"},"priceLibraries()":{"notice":"Return array of all valid price libraries."},"renounceOwnership()":{"notice":"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setOperationState(uint8)":{"notice":"Updates the operation state of the protocol. Can only be called by owner of Core."},"setTokens()":{"notice":"Return array of all valid Set Tokens."},"transferProxy()":{"notice":"Return transferProxy address."},"validFactories(address)":{"notice":"Return boolean indicating if address is valid factory."},"validModules(address)":{"notice":"Return boolean indicating if address is valid module."},"validPriceLibraries(address)":{"notice":"Return boolean indicating if address is a valid Rebalancing Price Library."},"validSets(address)":{"notice":"Return boolean indicating if address is valid Set."},"vault()":{"notice":"Return vault address"},"withdraw(address,uint256)":{"notice":"Withdraw a quantity of tokens from the vault and deattribute from sender."}}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/extensions/CoreAccounting.sol":"CoreAccounting"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/extensions/CoreAccounting.sol":{"keccak256":"0x93e063b12700416ffe27260766882b8ec7d7a31598628c25df2038d14b4c9893","urls":["bzzr://e9428b16947d93ff98eb1ade366905d93748ef467a470e0ac5455cae004dc4f7"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/extensions/CoreOperationState.sol":{"keccak256":"0xaa10d192d519a0408a5fde670c0b2f5a1843783cc855852bcd40819b6bf406d9","urls":["bzzr://07834008b4a7d9ecaa113d3a9e83480ed267c07a7fe2b7c13ac613a77bfcff58"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ITransferProxy.sol":{"keccak256":"0x962d54385cc4760c550cd2f16bfdb53e967def4c5d3acb7b3d0b3d7a49f902de","urls":["bzzr://cb8994c8bae7fa1d55d240f44396f4156b45c81afa6fcfa608fd5e4bf9f1a919"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IVault.sol":{"keccak256":"0xf8a6d376173be39f5744492866db5dd3f91453a124d23679ff164ff3817f2f4f","urls":["bzzr://896c0a8329175c1620e1a22467778b835defe0e61847e5a8427a306f42391e64"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/CoreState.sol":{"keccak256":"0xc0aa403578d64be9f30fb2299cedcf4cc5e047bfe07cff4e70206948620b7c71","urls":["bzzr://2ba47997b0ad3048d6de0562193df392a53e6c3b2bcaccd041a00bc02327fa9f"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"openzeppelin-solidity/contracts/ownership/Ownable.sol":{"keccak256":"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30","urls":["bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55"]},"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125","urls":["bzzr://3bc299fd722679f1313dc1387e2efc0591dcddc3727b6a7ccc98132c6e02f323"]},"set-protocol-contract-utils/contracts/lib/CommonValidationsLibrary.sol":{"keccak256":"0x757ec17c9c86093af15b08fbdf99ee15203c0e64a3185d2e4745e9a6be1b2d20","urls":["bzzr://f14bb668c341da6994edece64b35601e000591434eee90c9454cb9a1f9f7d60e"]}},"version":1}',bytecode:"0x6080604081905260008054600160a060020a0319163317808255600160a060020a0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600160105561177c8061005c6000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e060020a900480638da5cb5b116100e2578063e131243e1161009b578063f7e80e9811610075578063f7e80e98146105a9578063fbfa77cf146105b1578063fe5b38e4146105b9578063fef3ee73146105c157610177565b8063e131243e14610495578063f2fde38b14610557578063f3fef3a31461057d57610177565b80638da5cb5b146103ec5780638f32d59b146103f4578063a2c9eb6d146103fc578063c19d93fb14610422578063d031256114610467578063d913d4e11461046f57610177565b806356fe27841161013457806356fe27841461032657806359e026f7146103625780635e633498146103985780636e667db3146103be578063715018a6146103c657806372bedcee146103ce57610177565b80630e4355d41461017c57806321a8c177146101b657806330a907361461020e57806347e7ef24146102d2578063539f70d8146102fe578063559ed3391461031e575b600080fd5b6101a26004803603602081101561019257600080fd5b5035600160a060020a03166105e7565b604080519115158252519081900360200190f35b6101be610605565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101fa5781810151838201526020016101e2565b505050509050019250505060405180910390f35b6102d06004803603604081101561022457600080fd5b81019060208101813564010000000081111561023f57600080fd5b82018360208201111561025157600080fd5b8035906020019184602083028401116401000000008311171561027357600080fd5b91939092909160208101903564010000000081111561029157600080fd5b8201836020820111156102a357600080fd5b803590602001918460208302840111640100000000831117156102c557600080fd5b50909250905061066a565b005b6102d0600480360360408110156102e857600080fd5b50600160a060020a038135169060200135610742565b6102d06004803603602081101561031457600080fd5b503560ff166108d7565b6101be6109af565b6103466004803603602081101561033c57600080fd5b503560ff16610a12565b60408051600160a060020a039092168252519081900360200190f35b6102d06004803603606081101561037857600080fd5b50600160a060020a03813581169160208101359091169060400135610a30565b6101a2600480360360208110156103ae57600080fd5b5035600160a060020a0316610b30565b610346610b4e565b6102d0610b62565b6103d6610bca565b6040805160ff9092168252519081900360200190f35b610346610bd3565b6101a2610be2565b6101a26004803603602081101561041257600080fd5b5035600160a060020a0316610bf3565b61042a610c11565b6040805160ff9096168652600160a060020a0394851660208701529284168584015290831660608501529091166080830152519081900360a00190f35b6101be610c3d565b6101a26004803603602081101561048557600080fd5b5035600160a060020a0316610ca0565b6102d0600480360360408110156104ab57600080fd5b8101906020810181356401000000008111156104c657600080fd5b8201836020820111156104d857600080fd5b803590602001918460208302840111640100000000831117156104fa57600080fd5b91939092909160208101903564010000000081111561051857600080fd5b82018360208201111561052a57600080fd5b8035906020019184602083028401116401000000008311171561054c57600080fd5b509092509050610cbe565b6102d06004803603602081101561056d57600080fd5b5035600160a060020a0316610d39565b6102d06004803603604081101561059357600080fd5b50600160a060020a038135169060200135610d56565b6101be610e6f565b610346610ed2565b6101be610ee1565b6101a2600480360360208110156105d757600080fd5b5035600160a060020a0316610f44565b600160a060020a031660009081526007602052604090205460ff1690565b60606001600d0180548060200260200160405190810160405280929190818152602001828054801561066057602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610642575b5050505050905090565b601080546001908101918290555460ff16156106be576040805160e560020a62461bcd02815260206004820152600f6024820152600080516020611731833981519152604482015290519081900360640190fd5b61072d333387878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a925089918291850190849080828437600092019190915250610f6292505050565b601054811461073b57600080fd5b5050505050565b601080546001908101918290555460ff1615610796576040805160e560020a62461bcd02815260206004820152600f6024820152600080516020611731833981519152604482015290519081900360640190fd5b81156108c457600354600254604080517fa6c4e467000000000000000000000000000000000000000000000000000000008152600160a060020a0387811660048301526024820187905233604483015292831660648201529051919092169163a6c4e46791608480830192600092919082900301818387803b15801561081b57600080fd5b505af115801561082f573d6000803e3d6000fd5b505060048054604080517fbada5726000000000000000000000000000000000000000000000000000000008152600160a060020a038981169482019490945233602482015260448101889052905192909116935063bada5726925060648082019260009290919082900301818387803b1580156108ab57600080fd5b505af11580156108bf573d6000803e3d6000fd5b505050505b60105481146108d257600080fd5b505050565b6108df610be2565b6108e857600080fd5b600260ff8216108015610903575060015460ff828116911614155b610957576040805160e560020a62461bcd02815260206004820152601560248201527f496e76616c69644f7065726174696f6e53746174650000000000000000000000604482015290519081900360640190fd5b6001546040805160ff9283168152918316602083015280517f64d299fbc729d870a19dc650c5bc71264299611e5919111b23c981262c402e6a9281900390910190a16001805460ff191660ff92909216919091179055565b60606001600a0180548060200260200160405190810160405280929190818152602001828054801561066057602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610642575050505050905090565b60ff16600090815260056020526040902054600160a060020a031690565b601080546001908101918290555460ff1615610a84576040805160e560020a62461bcd02815260206004820152600f6024820152600080516020611731833981519152604482015290519081900360640190fd5b60048054604080517fb19ad577000000000000000000000000000000000000000000000000000000008152600160a060020a03888116948201949094523360248201528684166044820152606481018690529051929091169163b19ad5779160848082019260009290919082900301818387803b158015610b0457600080fd5b505af1158015610b18573d6000803e3d6000fd5b505050506010548114610b2a57600080fd5b50505050565b600160a060020a031660009081526006602052604090205460ff1690565b6001546101009004600160a060020a031690565b610b6a610be2565b610b7357600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60015460ff1690565b600054600160a060020a031690565b600054600160a060020a0316331490565b600160a060020a031660009081526008602052604090205460ff1690565b60015460025460035460045460ff841693600160a060020a036101009091048116938116928116911685565b60606001600e0180548060200260200160405190810160405280929190818152602001828054801561066057602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610642575050505050905090565b600160a060020a03166000908152600a602052604090205460ff1690565b6010805460010190819055604080516020808702828101820190935286825261072d923392839290918a918a91829185019084908082843760009201919091525050604080516020808b0282810182019093528a82529093508a92508991829185019084908082843760009201919091525061137c92505050565b610d41610be2565b610d4a57600080fd5b610d53816116b5565b50565b601080546001019081905581156108c45760048054604080517f80ddda30000000000000000000000000000000000000000000000000000000008152600160a060020a038781169482019490945233602482015260448101869052905192909116916380ddda309160648082019260009290919082900301818387803b158015610ddf57600080fd5b505af1158015610df3573d6000803e3d6000fd5b505060048054604080517fc3b35a7e000000000000000000000000000000000000000000000000000000008152600160a060020a038981169482019490945233602482015260448101889052905192909116935063c3b35a7e925060648082019260009290919082900301818387803b1580156108ab57600080fd5b60606001600b0180548060200260200160405190810160405280929190818152602001828054801561066057602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610642575050505050905090565b600254600160a060020a031690565b60606001600c0180548060200260200160405190810160405280929190818152602001828054801561066057602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610642575050505050905090565b600160a060020a031660009081526009602052604090205460ff1690565b60015460ff1615610fab576040805160e560020a62461bcd02815260206004820152600f6024820152600080516020611731833981519152604482015290519081900360640190fd5b6040517f64cf166f00000000000000000000000000000000000000000000000000000000815260206004820181815284516024840152845173__CommonValidationsLibrary______________936364cf166f93879392839260440191808601910280838360005b8381101561102b578181015183820152602001611013565b505050509050019250505060006040518083038186803b15801561104e57600080fd5b505af4158015611062573d6000803e3d6000fd5b5050505073__CommonValidationsLibrary______________632c183f4383836040518363ffffffff1660e060020a028152600401808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156110d85781810151838201526020016110c0565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156111175781810151838201526020016110ff565b5050505090500194505050505060006040518083038186803b15801561113c57600080fd5b505af4158015611150573d6000803e3d6000fd5b50506003546002546040517f709a385e000000000000000000000000000000000000000000000000000000008152600160a060020a0389811660448301529182166064820181905260806004830190815288516084840152885193909416955063709a385e9450879387938b938291602482019160a401906020808a01910280838360005b838110156111ed5781810151838201526020016111d5565b50505050905001838103825286818151815260200191508051906020019060200280838360005b8381101561122c578181015183820152602001611214565b505050509050019650505050505050600060405180830381600087803b15801561125557600080fd5b505af1158015611269573d6000803e3d6000fd5b5050600480546040517f12a3bbe3000000000000000000000000000000000000000000000000000000008152600160a060020a0388811660248301526060938201938452875160648301528751921694506312a3bbe3935086928892879282916044820191608401906020808901910280838360005b838110156112f75781810151838201526020016112df565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561133657818101518382015260200161131e565b5050505090500195505050505050600060405180830381600087803b15801561135e57600080fd5b505af1158015611372573d6000803e3d6000fd5b5050505050505050565b6040517f64cf166f00000000000000000000000000000000000000000000000000000000815260206004820181815284516024840152845173__CommonValidationsLibrary______________936364cf166f93879392839260440191808601910280838360005b838110156113fc5781810151838201526020016113e4565b505050509050019250505060006040518083038186803b15801561141f57600080fd5b505af4158015611433573d6000803e3d6000fd5b5050505073__CommonValidationsLibrary______________632c183f4383836040518363ffffffff1660e060020a028152600401808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156114a9578181015183820152602001611491565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156114e85781810151838201526020016114d0565b5050505090500194505050505060006040518083038186803b15801561150d57600080fd5b505af4158015611521573d6000803e3d6000fd5b5050600480546040517f3911477c000000000000000000000000000000000000000000000000000000008152600160a060020a038981166024830152606093820193845287516064830152875192169450633911477c935086928992879282916044820191608401906020808901910280838360005b838110156115af578181015183820152602001611597565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156115ee5781810151838201526020016115d6565b5050505090500195505050505050600060405180830381600087803b15801561161657600080fd5b505af115801561162a573d6000803e3d6000fd5b5050600480546040517f2321af6a000000000000000000000000000000000000000000000000000000008152600160a060020a038881166024830152606093820193845287516064830152875192169450632321af6a9350869288928792829160448201916084019060208881019102808383600083156112f75781810151838201526020016112df565b600160a060020a0381166116c857600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe5768656e4f7065726174696f6e616c0000000000000000000000000000000000a165627a7a7230582054eafa0662ed5abea45813fa2bb9a24a95cd92fcaceb4f8ce1604ca000a9d8ea0029",deployedBytecode:"0x608060405234801561001057600080fd5b50600436106101775760003560e060020a900480638da5cb5b116100e2578063e131243e1161009b578063f7e80e9811610075578063f7e80e98146105a9578063fbfa77cf146105b1578063fe5b38e4146105b9578063fef3ee73146105c157610177565b8063e131243e14610495578063f2fde38b14610557578063f3fef3a31461057d57610177565b80638da5cb5b146103ec5780638f32d59b146103f4578063a2c9eb6d146103fc578063c19d93fb14610422578063d031256114610467578063d913d4e11461046f57610177565b806356fe27841161013457806356fe27841461032657806359e026f7146103625780635e633498146103985780636e667db3146103be578063715018a6146103c657806372bedcee146103ce57610177565b80630e4355d41461017c57806321a8c177146101b657806330a907361461020e57806347e7ef24146102d2578063539f70d8146102fe578063559ed3391461031e575b600080fd5b6101a26004803603602081101561019257600080fd5b5035600160a060020a03166105e7565b604080519115158252519081900360200190f35b6101be610605565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101fa5781810151838201526020016101e2565b505050509050019250505060405180910390f35b6102d06004803603604081101561022457600080fd5b81019060208101813564010000000081111561023f57600080fd5b82018360208201111561025157600080fd5b8035906020019184602083028401116401000000008311171561027357600080fd5b91939092909160208101903564010000000081111561029157600080fd5b8201836020820111156102a357600080fd5b803590602001918460208302840111640100000000831117156102c557600080fd5b50909250905061066a565b005b6102d0600480360360408110156102e857600080fd5b50600160a060020a038135169060200135610742565b6102d06004803603602081101561031457600080fd5b503560ff166108d7565b6101be6109af565b6103466004803603602081101561033c57600080fd5b503560ff16610a12565b60408051600160a060020a039092168252519081900360200190f35b6102d06004803603606081101561037857600080fd5b50600160a060020a03813581169160208101359091169060400135610a30565b6101a2600480360360208110156103ae57600080fd5b5035600160a060020a0316610b30565b610346610b4e565b6102d0610b62565b6103d6610bca565b6040805160ff9092168252519081900360200190f35b610346610bd3565b6101a2610be2565b6101a26004803603602081101561041257600080fd5b5035600160a060020a0316610bf3565b61042a610c11565b6040805160ff9096168652600160a060020a0394851660208701529284168584015290831660608501529091166080830152519081900360a00190f35b6101be610c3d565b6101a26004803603602081101561048557600080fd5b5035600160a060020a0316610ca0565b6102d0600480360360408110156104ab57600080fd5b8101906020810181356401000000008111156104c657600080fd5b8201836020820111156104d857600080fd5b803590602001918460208302840111640100000000831117156104fa57600080fd5b91939092909160208101903564010000000081111561051857600080fd5b82018360208201111561052a57600080fd5b8035906020019184602083028401116401000000008311171561054c57600080fd5b509092509050610cbe565b6102d06004803603602081101561056d57600080fd5b5035600160a060020a0316610d39565b6102d06004803603604081101561059357600080fd5b50600160a060020a038135169060200135610d56565b6101be610e6f565b610346610ed2565b6101be610ee1565b6101a2600480360360208110156105d757600080fd5b5035600160a060020a0316610f44565b600160a060020a031660009081526007602052604090205460ff1690565b60606001600d0180548060200260200160405190810160405280929190818152602001828054801561066057602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610642575b5050505050905090565b601080546001908101918290555460ff16156106be576040805160e560020a62461bcd02815260206004820152600f6024820152600080516020611731833981519152604482015290519081900360640190fd5b61072d333387878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a925089918291850190849080828437600092019190915250610f6292505050565b601054811461073b57600080fd5b5050505050565b601080546001908101918290555460ff1615610796576040805160e560020a62461bcd02815260206004820152600f6024820152600080516020611731833981519152604482015290519081900360640190fd5b81156108c457600354600254604080517fa6c4e467000000000000000000000000000000000000000000000000000000008152600160a060020a0387811660048301526024820187905233604483015292831660648201529051919092169163a6c4e46791608480830192600092919082900301818387803b15801561081b57600080fd5b505af115801561082f573d6000803e3d6000fd5b505060048054604080517fbada5726000000000000000000000000000000000000000000000000000000008152600160a060020a038981169482019490945233602482015260448101889052905192909116935063bada5726925060648082019260009290919082900301818387803b1580156108ab57600080fd5b505af11580156108bf573d6000803e3d6000fd5b505050505b60105481146108d257600080fd5b505050565b6108df610be2565b6108e857600080fd5b600260ff8216108015610903575060015460ff828116911614155b610957576040805160e560020a62461bcd02815260206004820152601560248201527f496e76616c69644f7065726174696f6e53746174650000000000000000000000604482015290519081900360640190fd5b6001546040805160ff9283168152918316602083015280517f64d299fbc729d870a19dc650c5bc71264299611e5919111b23c981262c402e6a9281900390910190a16001805460ff191660ff92909216919091179055565b60606001600a0180548060200260200160405190810160405280929190818152602001828054801561066057602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610642575050505050905090565b60ff16600090815260056020526040902054600160a060020a031690565b601080546001908101918290555460ff1615610a84576040805160e560020a62461bcd02815260206004820152600f6024820152600080516020611731833981519152604482015290519081900360640190fd5b60048054604080517fb19ad577000000000000000000000000000000000000000000000000000000008152600160a060020a03888116948201949094523360248201528684166044820152606481018690529051929091169163b19ad5779160848082019260009290919082900301818387803b158015610b0457600080fd5b505af1158015610b18573d6000803e3d6000fd5b505050506010548114610b2a57600080fd5b50505050565b600160a060020a031660009081526006602052604090205460ff1690565b6001546101009004600160a060020a031690565b610b6a610be2565b610b7357600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60015460ff1690565b600054600160a060020a031690565b600054600160a060020a0316331490565b600160a060020a031660009081526008602052604090205460ff1690565b60015460025460035460045460ff841693600160a060020a036101009091048116938116928116911685565b60606001600e0180548060200260200160405190810160405280929190818152602001828054801561066057602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610642575050505050905090565b600160a060020a03166000908152600a602052604090205460ff1690565b6010805460010190819055604080516020808702828101820190935286825261072d923392839290918a918a91829185019084908082843760009201919091525050604080516020808b0282810182019093528a82529093508a92508991829185019084908082843760009201919091525061137c92505050565b610d41610be2565b610d4a57600080fd5b610d53816116b5565b50565b601080546001019081905581156108c45760048054604080517f80ddda30000000000000000000000000000000000000000000000000000000008152600160a060020a038781169482019490945233602482015260448101869052905192909116916380ddda309160648082019260009290919082900301818387803b158015610ddf57600080fd5b505af1158015610df3573d6000803e3d6000fd5b505060048054604080517fc3b35a7e000000000000000000000000000000000000000000000000000000008152600160a060020a038981169482019490945233602482015260448101889052905192909116935063c3b35a7e925060648082019260009290919082900301818387803b1580156108ab57600080fd5b60606001600b0180548060200260200160405190810160405280929190818152602001828054801561066057602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610642575050505050905090565b600254600160a060020a031690565b60606001600c0180548060200260200160405190810160405280929190818152602001828054801561066057602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610642575050505050905090565b600160a060020a031660009081526009602052604090205460ff1690565b60015460ff1615610fab576040805160e560020a62461bcd02815260206004820152600f6024820152600080516020611731833981519152604482015290519081900360640190fd5b6040517f64cf166f00000000000000000000000000000000000000000000000000000000815260206004820181815284516024840152845173__CommonValidationsLibrary______________936364cf166f93879392839260440191808601910280838360005b8381101561102b578181015183820152602001611013565b505050509050019250505060006040518083038186803b15801561104e57600080fd5b505af4158015611062573d6000803e3d6000fd5b5050505073__CommonValidationsLibrary______________632c183f4383836040518363ffffffff1660e060020a028152600401808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156110d85781810151838201526020016110c0565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156111175781810151838201526020016110ff565b5050505090500194505050505060006040518083038186803b15801561113c57600080fd5b505af4158015611150573d6000803e3d6000fd5b50506003546002546040517f709a385e000000000000000000000000000000000000000000000000000000008152600160a060020a0389811660448301529182166064820181905260806004830190815288516084840152885193909416955063709a385e9450879387938b938291602482019160a401906020808a01910280838360005b838110156111ed5781810151838201526020016111d5565b50505050905001838103825286818151815260200191508051906020019060200280838360005b8381101561122c578181015183820152602001611214565b505050509050019650505050505050600060405180830381600087803b15801561125557600080fd5b505af1158015611269573d6000803e3d6000fd5b5050600480546040517f12a3bbe3000000000000000000000000000000000000000000000000000000008152600160a060020a0388811660248301526060938201938452875160648301528751921694506312a3bbe3935086928892879282916044820191608401906020808901910280838360005b838110156112f75781810151838201526020016112df565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561133657818101518382015260200161131e565b5050505090500195505050505050600060405180830381600087803b15801561135e57600080fd5b505af1158015611372573d6000803e3d6000fd5b5050505050505050565b6040517f64cf166f00000000000000000000000000000000000000000000000000000000815260206004820181815284516024840152845173__CommonValidationsLibrary______________936364cf166f93879392839260440191808601910280838360005b838110156113fc5781810151838201526020016113e4565b505050509050019250505060006040518083038186803b15801561141f57600080fd5b505af4158015611433573d6000803e3d6000fd5b5050505073__CommonValidationsLibrary______________632c183f4383836040518363ffffffff1660e060020a028152600401808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156114a9578181015183820152602001611491565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156114e85781810151838201526020016114d0565b5050505090500194505050505060006040518083038186803b15801561150d57600080fd5b505af4158015611521573d6000803e3d6000fd5b5050600480546040517f3911477c000000000000000000000000000000000000000000000000000000008152600160a060020a038981166024830152606093820193845287516064830152875192169450633911477c935086928992879282916044820191608401906020808901910280838360005b838110156115af578181015183820152602001611597565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156115ee5781810151838201526020016115d6565b5050505090500195505050505050600060405180830381600087803b15801561161657600080fd5b505af115801561162a573d6000803e3d6000fd5b5050600480546040517f2321af6a000000000000000000000000000000000000000000000000000000008152600160a060020a038881166024830152606093820193845287516064830152875192169450632321af6a9350869288928792829160448201916084019060208881019102808383600083156112f75781810151838201526020016112df565b600160a060020a0381166116c857600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe5768656e4f7065726174696f6e616c0000000000000000000000000000000000a165627a7a7230582054eafa0662ed5abea45813fa2bb9a24a95cd92fcaceb4f8ce1604ca000a9d8ea0029",
sourceMap:"1197:6658:7:-;;;;;515:6:167;:19;;-1:-1:-1;;;;;;515:19:167;524:10;515:19;;;;-1:-1:-1;;;;;582:6:167;;549:40;;515:6;;549:40;576:1:171;560:13;:17;1197:6658:7;;;;;;",deployedSourceMap:"1197:6658:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1197:6658:7;;;;;;;;-1:-1:-1;;;1197:6658:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3813:167:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3813:167:39;-1:-1:-1;;;;;3813:167:39;;:::i;:::-;;;;;;;;;;;;;;;;;;6379:129;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6379:129:39;;;;;;;;;;;;;;;;;3537:359:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3537:359:7;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3537:359:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3537:359:7;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3537:359:7;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3537:359:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3537:359:7;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;3537:359:7;;-1:-1:-1;3537:359:7;-1:-1:-1;3537:359:7;:::i;:::-;;1643:696;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1643:696:7;;;;;;;;:::i;2021:454:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2021:454:12;;;;:::i;5600:129:39:-;;;:::i;2982:168::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2982:168:39;;;;:::i;:::-;;;;-1:-1:-1;;;;;2982:168:39;;;;;;;;;;;;;;4916:316:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4916:316:7;;;;;;;;;;;;;;;;;:::i;4184:161:39:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4184:161:39;-1:-1:-1;;;;;4184:161:39;;:::i;3267:128::-;;;:::i;1423:137:167:-;;;:::i;2650:128:39:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;659:77:167;;;:::i;979:90::-;;;:::i;5283:187:39:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5283:187:39;-1:-1:-1;;;;;5283:187:39;;:::i;2391:18::-;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;2391:18:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6648:139;;;:::i;4889:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4889:155:39;-1:-1:-1;;;;;4889:155:39;;:::i;4238:338:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4238:338:7;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4238:338:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4238:338:7;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4238:338:7;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4238:338:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4238:338:7;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;4238:338:7;;-1:-1:-1;4238:338:7;-1:-1:-1;4238:338:7;:::i;1731:107:167:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1731:107:167;-1:-1:-1;;;;;1731:107:167;;:::i;2563:640:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2563:640:7;;;;;;;;:::i;5853:125:39:-;;;:::i;3496:112::-;;;:::i;6106:129::-;;;:::i;4536:149::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4536:149:39;-1:-1:-1;;;;;4536:149:39;;:::i;3813:167::-;-1:-1:-1;;;;;3943:30:39;3916:4;3943:30;;;:20;:30;;;;;;;;;3813:167::o;6379:129::-;6447:16;6486:5;:15;;6479:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6479:22:39;;;;;;;;;;;;;;;;;;;;;;;6379:129;:::o;3537:359:7:-;993:13:171;:18;;1010:1;993:18;;;;;;;1635:20:12;:57;:20;:57;1614:119;;;;;-1:-1:-1;;;;;1614:119:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1614:119:12;;;;;;;;;;;;;;;3765:124:7;3799:10;3823;3847:7;;3765:124;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;3765:124:7;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3868:11:7;;-1:-1:-1;3868:11:7;;;;3765:124;;;3868:11;;3765:124;3868:11;3765:124;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3765:20:7;;-1:-1:-1;;;3765:124:7:i;:::-;1102:13:171;;1086:12;:29;1078:38;;;;;;3537:359:7;;;;;:::o;1643:696::-;993:13:171;:18;;1010:1;993:18;;;;;;;1635:20:12;:57;:20;:57;1614:119;;;;;-1:-1:-1;;;;;1614:119:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1614:119:12;;;;;;;;;;;;;;;1839:13:7;;1835:498;;1944:27;;;2077:11;1944:158;;;;;;-1:-1:-1;;;;;1944:158:7;;;;;;;;;;;;;2049:10;1944:158;;;;2077:11;;;1944:158;;;;;;:27;;;;;:36;;:158;;;;;:27;;:158;;;;;;;:27;;:158;;;5:2:-1;;;;30:1;27;20:12;5:2;1944:158:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2190:19:7;;;:132;;;;;;-1:-1:-1;;;;;2190:132:7;;;;;;;;;;2271:10;2190:132;;;;;;;;;;;;:19;;;;;-1:-1:-1;2190:39:7;;-1:-1:-1;2190:132:7;;;;;:19;;:132;;;;;;;;:19;;:132;;;5:2:-1;;;;30:1;27;20:12;5:2;2190:132:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2190:132:7;;;;1835:498;1102:13:171;;1086:12;:29;1078:38;;;;;;1643:696:7;;;:::o;2021:454:12:-;863:9:167;:7;:9::i;:::-;855:18;;;;;;2179:27:12;2155:52;;;;:107;;;;-1:-1:-1;2242:5:12;:20;;2223:39;;;2242:20;;2223:39;;2155:107;2134:175;;;;;-1:-1:-1;;;;;2134:175:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:5;:20;2325:94;;;2360:20;;;;2325:94;;;;;;;;;;;;;;;;;;;;;2430:5;:38;;-1:-1:-1;;2430:38:12;;;;;;;;;;;;2021:454::o;5600:129:39:-;5668:16;5707:5;:15;;5700:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5700:22:39;;;;;;;;;;;;;;;;;;;;;;5600:129;:::o;2982:168::-;3113:30;;3083:7;3113:30;;;:17;:30;;;;;;-1:-1:-1;;;;;3113:30:39;;2982:168::o;4916:316:7:-;993:13:171;:18;;1010:1;993:18;;;;;;;1635:20:12;:57;:20;:57;1614:119;;;;;-1:-1:-1;;;;;1614:119:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1614:119:12;;;;;;;;;;;;;;;5096:19:7;;;:129;;;;;;-1:-1:-1;;;;;5096:129:7;;;;;;;;;;5165:10;5096:129;;;;;;;;;;;;;;;;;;;:19;;;;;:35;;:129;;;;;:19;;:129;;;;;;;;:19;;:129;;;5:2:-1;;;;30:1;27;20:12;5:2;5096:129:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5096:129:7;;;;1102:13:171;;1086:12;:29;1078:38;;;;;;4916:316:7;;;;:::o;4184:161:39:-;-1:-1:-1;;;;;4311:27:39;4284:4;4311:27;;;:18;:27;;;;;;;;;4184:161::o;3267:128::-;3369:5;:19;;;;-1:-1:-1;;;;;3369:19:39;;3267:128::o;1423:137:167:-;863:9;:7;:9::i;:::-;855:18;;;;;;1521:1;1505:6;;1484:40;;-1:-1:-1;;;;;1505:6:167;;;;1484:40;;1521:1;;1484:40;1551:1;1534:19;;-1:-1:-1;;1534:19:167;;;1423:137::o;2650:128:39:-;2751:5;:20;;;2650:128;:::o;659:77:167:-;697:7;723:6;-1:-1:-1;;;;;723:6:167;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:167;1042:10;:20;;979:90::o;5283:187:39:-;-1:-1:-1;;;;;5423:40:39;5396:4;5423:40;;;:25;:40;;;;;;;;;5283:187::o;2391:18::-;;;;;;;;;;;;;-1:-1:-1;;;;;2391:18:39;;;;;;;;;;;;;;;:::o;6648:139::-;6721:16;6760:5;:20;;6753:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6753:27:39;;;;;;;;;;;;;;;;;;;;;;6648:139;:::o;4889:155::-;-1:-1:-1;;;;;5013:24:39;4986:4;5013:24;;;:18;:24;;;;;;;;;4889:155::o;4238:338:7:-;993:13:171;:18;;1010:1;993:18;;;;;4444:125:7;;;;;;;;;;;;;;;;;;;;4479:10;;;;4444:125;;4527:7;;;;;;4444:125;;;4527:7;;4444:125;4527:7;4444:125;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;4444:125:7;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4548:11:7;;-1:-1:-1;4548:11:7;;;;4444:125;;;4548:11;;4444:125;4548:11;4444:125;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;4444:21:7;;-1:-1:-1;;;4444:125:7:i;1731:107:167:-;863:9;:7;:9::i;:::-;855:18;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;2563:640:7:-;993:13:171;:18;;1010:1;993:18;;;;;2737:13:7;;2733:464;;2843:19;;;:132;;;;;;-1:-1:-1;;;;;2843:132:7;;;;;;;;;;2924:10;2843:132;;;;;;;;;;;;:19;;;;;:39;;:132;;;;;:19;;:132;;;;;;;;:19;;:132;;;5:2:-1;;;;30:1;27;20:12;5:2;2843:132:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3063:19:7;;;:123;;;;;;-1:-1:-1;;;;;3063:123:7;;;;;;;;;;3135:10;3063:123;;;;;;;;;;;;:19;;;;;-1:-1:-1;3063:30:7;;-1:-1:-1;3063:123:7;;;;;:19;;:123;;;;;;;;:19;;:123;;;5:2:-1;;;;30:1;27;20:12;5853:125:39;5919:16;5958:5;:13;;5951:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5951:20:39;;;;;;;;;;;;;;;;;;;;;;5853:125;:::o;3496:112::-;3590:11;;-1:-1:-1;;;;;3590:11:39;3496:112;:::o;6106:129::-;6174:16;6213:5;:15;;6206:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6206:22:39;;;;;;;;;;;;;;;;;;;;;;6106:129;:::o;4536:149::-;-1:-1:-1;;;;;4657:21:39;4630:4;4657:21;;;:15;:21;;;;;;;;;4536:149::o;5769:754:7:-;1635:5:12;:20;:57;:20;:57;1614:119;;;;;-1:-1:-1;;;;;1614:119:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1614:119:12;;;;;;;;;;;;;;;6044:50:7;;;;;;;;;;;;;;;;;;;;:24;;:41;;6086:7;;6044:50;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6044:50:7;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6044:50:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6044:50:7;;;;6170:24;:44;6215:7;6224:11;6170:66;;;;;-1:-1:-1;;;6170:66:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6170:66:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6170:66:7;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6170:66:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6247:27:7;;;6367:11;6247:141;;;;;-1:-1:-1;;;;;6247:141:7;;;;;;;6367:11;;;6247:141;;;;;;;;;;;;;;;;;;;;;:27;;;;;-1:-1:-1;6247:41:7;;-1:-1:-1;6302:7:7;;6323:11;;6348:5;;6247:141;;;;;;;;;;;;;;;;;;:27;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6247:141:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6247:141:7;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6247:141:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6399:19:7;;;:117;;;;;-1:-1:-1;;;;;6399:117:7;;;;;;;;;;;;;;;;;;;;;;:19;;;-1:-1:-1;6399:44:7;;-1:-1:-1;6457:7:7;;6478:3;;6495:11;;6399:117;;;;;;;;;;;;;;;;;;:19;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6399:117:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6399:117:7;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6399:117:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6399:117:7;;;;5769:754;;;;:::o;7011:842::-;7263:50;;;;;;;;;;;;;;;;;;;;:24;;:41;;7305:7;;7263:50;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7263:50:7;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7263:50:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7263:50:7;;;;7389:24;:44;7434:7;7443:11;7389:66;;;;;-1:-1:-1;;;7389:66:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7389:66:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7389:66:7;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7389:66:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;7539:19:7;;;:119;;;;;-1:-1:-1;;;;;7539:119:7;;;;;;;;;;;;;;;;;;;;;;:19;;;-1:-1:-1;7539:44:7;;-1:-1:-1;7597:7:7;;7618:5;;7637:11;;7539:119;;;;;;;;;;;;;;;;;;:19;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7539:119:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7539:119:7;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7539:119:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;7738:19:7;;;:108;;;;;-1:-1:-1;;;;;7738:108:7;;;;;;;;;;;;;;;;;;;;;;:19;;;-1:-1:-1;7738:35:7;;-1:-1:-1;7738:108:7;;;;7825:11;;7738:108;;;;;;;;;-1:-1:-1;7738:108:7;;;;;;;;-1:-1:-1;27:10;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1982:183:167;-1:-1:-1;;;;;2055:22:167;;2047:31;;;;;;2114:6;;;2093:38;;-1:-1:-1;;;;;2093:38:167;;;;2114:6;;;2093:38;;;2141:6;:17;;-1:-1:-1;;2141:17:167;-1:-1:-1;;;;;2141:17:167;;;;;;;;;;1982:183::o",source:'/*\n    Copyright 2018 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\n\nimport { ReentrancyGuard } from "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol";\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\nimport { CommonValidationsLibrary } from "set-protocol-contract-utils/contracts/lib/CommonValidationsLibrary.sol";\n\nimport { CoreOperationState } from "./CoreOperationState.sol";\nimport { CoreState } from "../lib/CoreState.sol";\n\n\n/**\n * @title CoreAccounting\n * @author Set Protocol\n *\n * The CoreAccounting contract interfaces with the vault and transfer proxies for\n * storage of tokenized assets.\n */\ncontract CoreAccounting is\n    CoreState,\n    CoreOperationState,\n    ReentrancyGuard\n{\n    // Use SafeMath library for all uint256 arithmetic\n    using SafeMath for uint256;\n\n    /* ============ External Functions ============ */\n\n    /**\n     * Deposit a quantity of tokens to the vault and attribute to sender.\n     *\n     * @param  _token           Address of the token\n     * @param  _quantity        Amount of tokens to deposit\n     */\n    function deposit(\n        address _token,\n        uint256 _quantity\n    )\n        external\n        nonReentrant\n        whenOperational\n    {\n        // Don\'t deposit if quantity <= 0\n        if (_quantity > 0) {\n            // Call TransferProxy contract to transfer user tokens to Vault\n            state.transferProxyInstance.transfer(\n                _token,\n                _quantity,\n                msg.sender,\n                state.vault\n            );\n\n            // Call Vault contract to attribute deposited tokens to user\n            state.vaultInstance.incrementTokenOwner(\n                _token,\n                msg.sender,\n                _quantity\n            );\n        }\n    }\n\n    /**\n     * Withdraw a quantity of tokens from the vault and deattribute from sender.\n     *\n     * @param  _token           Address of the token\n     * @param  _quantity        Amount of tokens to withdraw\n     */\n    function withdraw(\n        address _token,\n        uint256 _quantity\n    )\n        external\n        nonReentrant\n    {\n        // Don\'t withdraw if quantity <= 0\n        if (_quantity > 0) {\n            // Call Vault contract to deattribute withdrawn tokens from user\n            state.vaultInstance.decrementTokenOwner(\n                _token,\n                msg.sender,\n                _quantity\n            );\n\n            // Call Vault contract to withdraw tokens from Vault to user\n            state.vaultInstance.withdrawTo(\n                _token,\n                msg.sender,\n                _quantity\n            );\n        }\n    }\n\n    /**\n     * Deposit multiple tokens to the vault and attribute to sender.\n     * Quantities should be in the order of the addresses of the tokens being deposited.\n     *\n     * @param  _tokens            Array of the addresses of the tokens\n     * @param  _quantities        Array of the amounts of tokens to deposit\n     */\n    function batchDeposit(\n        address[] calldata _tokens,\n        uint256[] calldata _quantities\n    )\n        external\n        nonReentrant\n        whenOperational\n    {\n        // Call internal batch deposit function\n        batchDepositInternal(\n            msg.sender,\n            msg.sender,\n            _tokens,\n            _quantities\n        );\n    }\n\n    /**\n     * Withdraw multiple tokens from the vault and deattribute from sender.\n     * Quantities should be in the order of the addresses of the tokens being withdrawn.\n     *\n     * @param  _tokens            Array of the addresses of the tokens\n     * @param  _quantities        Array of the amounts of tokens to withdraw\n     */\n    function batchWithdraw(\n        address[] calldata _tokens,\n        uint256[] calldata _quantities\n    )\n        external\n        nonReentrant\n    {\n        // Call internal batch withdraw function\n        batchWithdrawInternal(\n            msg.sender,\n            msg.sender,\n            _tokens,\n            _quantities\n        );\n    }\n\n    /**\n     * Transfer tokens associated with the sender\'s account in vault to another user\'s\n     * account in vault.\n     *\n     * @param  _token           Address of token being transferred\n     * @param  _to              Address of user receiving tokens\n     * @param  _quantity        Amount of tokens being transferred\n     */\n    function internalTransfer(\n        address _token,\n        address _to,\n        uint256 _quantity\n    )\n        external\n        nonReentrant\n        whenOperational\n    {\n        state.vaultInstance.transferBalance(\n            _token,\n            msg.sender,\n            _to,\n            _quantity\n        );\n    }\n\n    /* ============ Internal Functions ============ */\n\n    /**\n     * Internal function that deposits multiple tokens to the vault.\n     * Quantities should be in the order of the addresses of the tokens being deposited.\n     *\n     * @param  _from              Address to transfer tokens from\n     * @param  _to                Address to credit for deposits\n     * @param  _tokens            Array of the addresses of the tokens being deposited\n     * @param  _quantities        Array of the amounts of tokens to deposit\n     */\n    function batchDepositInternal(\n        address _from,\n        address _to,\n        address[] memory _tokens,\n        uint256[] memory _quantities\n    )\n        internal\n        whenOperational\n    {\n        // Confirm an empty _tokens or quantity array is not passed\n        CommonValidationsLibrary.validateNonEmpty(_tokens);\n\n        // Confirm there is one quantity for every token address\n        CommonValidationsLibrary.validateEqualLength(_tokens, _quantities);\n\n        state.transferProxyInstance.batchTransfer(\n            _tokens,\n            _quantities,\n            _from,\n            state.vault\n        );\n\n        state.vaultInstance.batchIncrementTokenOwner(\n            _tokens,\n            _to,\n            _quantities\n        );\n    }\n\n    /**\n     * Internal function that withdraws multiple tokens from the vault.\n     * Quantities should be in the order of the addresses of the tokens being withdrawn.\n     *\n     * @param  _from              Address to decredit for withdrawals\n     * @param  _to                Address to transfer tokens to\n     * @param  _tokens            Array of the addresses of the tokens being withdrawn\n     * @param  _quantities        Array of the amounts of tokens to withdraw\n     */\n    function batchWithdrawInternal(\n        address _from,\n        address _to,\n        address[] memory _tokens,\n        uint256[] memory _quantities\n    )\n        internal\n    {\n        // Confirm an empty _tokens or quantity array is not passed\n        CommonValidationsLibrary.validateNonEmpty(_tokens);\n\n        // Confirm there is one quantity for every token address\n        CommonValidationsLibrary.validateEqualLength(_tokens, _quantities);\n\n        // Call Vault contract to deattribute withdrawn tokens from user\n        state.vaultInstance.batchDecrementTokenOwner(\n            _tokens,\n            _from,\n            _quantities\n        );\n\n        // Call Vault contract to withdraw tokens from Vault to user\n        state.vaultInstance.batchWithdrawTo(\n            _tokens,\n            _to,\n            _quantities\n        );\n    }\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/extensions/CoreAccounting.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.248Z",devdoc:{author:"Set Protocol * The CoreAccounting contract interfaces with the vault and transfer proxies for storage of tokenized assets.",methods:{"batchDeposit(address[],uint256[])":{params:{_quantities:"Array of the amounts of tokens to deposit",_tokens:"Array of the addresses of the tokens"}},"batchWithdraw(address[],uint256[])":{params:{_quantities:"Array of the amounts of tokens to withdraw",_tokens:"Array of the addresses of the tokens"}},"deposit(address,uint256)":{params:{_quantity:"Amount of tokens to deposit",_token:"Address of the token"}},"disabledSets(address)":{params:{_set:"Set address"},"return":"bool           Boolean indicating if is a disabled Set"},"exchangeIds(uint8)":{params:{_exchangeId:"ExchangeId number"},"return":"address           Address belonging to given exchangeId"},"exchanges()":{"return":"address[]      Array of valid exchange wrappers"},"factories()":{"return":"address[]      Array of valid factories"},"internalTransfer(address,address,uint256)":{params:{_quantity:"Amount of tokens being transferred",_to:"Address of user receiving tokens",_token:"Address of token being transferred"}},"isOwner()":{"return":"true if `msg.sender` is the owner of the contract."},"modules()":{"return":"address[]      Array of valid modules"},"operationState()":{"return":"uint8           Uint8 representing the operational state of the protocol"},"owner()":{"return":"the address of the owner."},"priceLibraries()":{"return":"address[]      Array of valid price libraries"},"renounceOwnership()":{details:"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."},"setOperationState(uint8)":{params:{_operationState:"Uint8 representing the current protocol operation state"}},"setTokens()":{"return":"address[]      Array of valid Set Tokens"},"transferOwnership(address)":{details:"Allows the current owner to transfer control of the contract to a newOwner.",params:{newOwner:"The address to transfer ownership to."}},"transferProxy()":{"return":"address       transferProxy address"},"validFactories(address)":{params:{_factory:"Factory address"},"return":"bool           Boolean indicating if enabled factory"},"validModules(address)":{params:{_module:"Factory address"},"return":"bool           Boolean indicating if enabled factory"},"validPriceLibraries(address)":{params:{_priceLibrary:"Price library address"},"return":"bool             Boolean indicating if valid Price Library"},"validSets(address)":{params:{_set:"Set address"},"return":"bool           Boolean indicating if valid Set"},"vault()":{"return":"address        vault address"},"withdraw(address,uint256)":{params:{_quantity:"Amount of tokens to withdraw",_token:"Address of the token"}}},title:"CoreAccounting"},userdoc:{methods:{"batchDeposit(address[],uint256[])":{notice:"Deposit multiple tokens to the vault and attribute to sender. Quantities should be in the order of the addresses of the tokens being deposited."},"batchWithdraw(address[],uint256[])":{notice:"Withdraw multiple tokens from the vault and deattribute from sender. Quantities should be in the order of the addresses of the tokens being withdrawn."},"deposit(address,uint256)":{notice:"Deposit a quantity of tokens to the vault and attribute to sender."},"disabledSets(address)":{notice:"Return boolean indicating if address is a disabled Set."},"exchangeIds(uint8)":{notice:"Return address belonging to given exchangeId."},"exchanges()":{notice:"Return array of all valid exchange wrappers."},"factories()":{notice:"Return array of all valid factories."},"internalTransfer(address,address,uint256)":{notice:"Transfer tokens associated with the sender's account in vault to another user's account in vault."},"modules()":{notice:"Return array of all valid Modules."},"operationState()":{notice:"Return uint8 representing the operational state of the protocol"},"priceLibraries()":{notice:"Return array of all valid price libraries."},"renounceOwnership()":{notice:"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setOperationState(uint8)":{notice:"Updates the operation state of the protocol. Can only be called by owner of Core."},"setTokens()":{notice:"Return array of all valid Set Tokens."},"transferProxy()":{notice:"Return transferProxy address."},"validFactories(address)":{notice:"Return boolean indicating if address is valid factory."},"validModules(address)":{notice:"Return boolean indicating if address is valid module."},"validPriceLibraries(address)":{notice:"Return boolean indicating if address is a valid Rebalancing Price Library."},"validSets(address)":{notice:"Return boolean indicating if address is valid Set."},"vault()":{notice:"Return vault address"},"withdraw(address,uint256)":{notice:"Withdraw a quantity of tokens from the vault and deattribute from sender."}}}};