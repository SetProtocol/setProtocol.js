"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.IncentiveFee={contractName:"IncentiveFee",abi:[{constant:true,inputs:[],name:"unitShares",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_newLiquidator",type:"address"}],name:"setLiquidator",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"getUnits",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"entryFee",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"spender",type:"address"},{name:"value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"liquidatorWhiteList",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"rebalanceInterval",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"rebalanceFailPeriod",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_tokenAddress",type:"address"}],name:"tokenIsComponent",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"from",type:"address"},{name:"to",type:"address"},{name:"value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"rebalanceFee",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"currentSet",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"spender",type:"address"},{name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"liquidator",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"naturalUnit",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"rebalanceFeeCalculator",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"feeRecipient",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"manager",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"componentWhiteList",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"owner",type:"address"}],name:"balanceOf",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"rebalanceIndex",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"getComponents",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"rebalanceStartTime",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"spender",type:"address"},{name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"to",type:"address"},{name:"value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"lastRebalanceTimestamp",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"factory",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"nextSet",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_newManager",type:"address"}],name:"setManager",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_newFeeRecipient",type:"address"}],name:"setFeeRecipient",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_newEntryFee",type:"uint256"}],name:"setEntryFee",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"hasBidded",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"core",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"rebalanceState",outputs:[{name:"",type:"uint8"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"vault",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{anonymous:false,inputs:[{indexed:true,name:"feeRecipient",type:"address"},{indexed:false,name:"feeQuantity",type:"uint256"},{indexed:false,name:"feePercentage",type:"uint256"},{indexed:false,name:"newUnitShares",type:"uint256"}],name:"IncentiveFeePaid",type:"event"},{anonymous:false,inputs:[{indexed:false,name:"newManager",type:"address"},{indexed:false,name:"oldManager",type:"address"}],name:"NewManagerAdded",type:"event"},{anonymous:false,inputs:[{indexed:false,name:"newLiquidator",type:"address"},{indexed:false,name:"oldLiquidator",type:"address"}],name:"NewLiquidatorAdded",type:"event"},{anonymous:false,inputs:[{indexed:false,name:"newEntryFee",type:"uint256"},{indexed:false,name:"oldEntryFee",type:"uint256"}],name:"NewEntryFee",type:"event"},{anonymous:false,inputs:[{indexed:false,name:"newFeeRecipient",type:"address"},{indexed:false,name:"oldFeeRecipient",type:"address"}],name:"NewFeeRecipient",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"feeRecipient",type:"address"},{indexed:false,name:"feeQuantity",type:"uint256"}],name:"EntryFeePaid",type:"event"},{anonymous:false,inputs:[{indexed:false,name:"oldSet",type:"address"},{indexed:false,name:"newSet",type:"address"},{indexed:false,name:"rebalanceIndex",type:"uint256"},{indexed:false,name:"currentSetQuantity",type:"uint256"}],name:"RebalanceStarted",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"feeRecipient",type:"address"},{indexed:false,name:"feeQuantity",type:"uint256"},{indexed:false,name:"feePercentage",type:"uint256"},{indexed:false,name:"rebalanceIndex",type:"uint256"},{indexed:false,name:"issueQuantity",type:"uint256"},{indexed:false,name:"unitShares",type:"uint256"}],name:"RebalanceSettled",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"from",type:"address"},{indexed:true,name:"to",type:"address"},{indexed:false,name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"owner",type:"address"},{indexed:true,name:"spender",type:"address"},{indexed:false,name:"value",type:"uint256"}],name:"Approval",type:"event"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"unitShares","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newLiquidator","type":"address"}],"name":"setLiquidator","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getUnits","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"entryFee","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"liquidatorWhiteList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rebalanceInterval","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rebalanceFailPeriod","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_tokenAddress","type":"address"}],"name":"tokenIsComponent","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rebalanceFee","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"currentSet","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"liquidator","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"naturalUnit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rebalanceFeeCalculator","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"feeRecipient","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"manager","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"componentWhiteList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rebalanceIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getComponents","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rebalanceStartTime","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"lastRebalanceTimestamp","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"factory","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"nextSet","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newManager","type":"address"}],"name":"setManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newFeeRecipient","type":"address"}],"name":"setFeeRecipient","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_newEntryFee","type":"uint256"}],"name":"setEntryFee","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"hasBidded","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"core","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rebalanceState","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vault","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"feeRecipient","type":"address"},{"indexed":false,"name":"feeQuantity","type":"uint256"},{"indexed":false,"name":"feePercentage","type":"uint256"},{"indexed":false,"name":"newUnitShares","type":"uint256"}],"name":"IncentiveFeePaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"newManager","type":"address"},{"indexed":false,"name":"oldManager","type":"address"}],"name":"NewManagerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"newLiquidator","type":"address"},{"indexed":false,"name":"oldLiquidator","type":"address"}],"name":"NewLiquidatorAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"newEntryFee","type":"uint256"},{"indexed":false,"name":"oldEntryFee","type":"uint256"}],"name":"NewEntryFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"newFeeRecipient","type":"address"},{"indexed":false,"name":"oldFeeRecipient","type":"address"}],"name":"NewFeeRecipient","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"feeRecipient","type":"address"},{"indexed":false,"name":"feeQuantity","type":"uint256"}],"name":"EntryFeePaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldSet","type":"address"},{"indexed":false,"name":"newSet","type":"address"},{"indexed":false,"name":"rebalanceIndex","type":"uint256"},{"indexed":false,"name":"currentSetQuantity","type":"uint256"}],"name":"RebalanceStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"feeRecipient","type":"address"},{"indexed":false,"name":"feeQuantity","type":"uint256"},{"indexed":false,"name":"feePercentage","type":"uint256"},{"indexed":false,"name":"rebalanceIndex","type":"uint256"},{"indexed":false,"name":"issueQuantity","type":"uint256"},{"indexed":false,"name":"unitShares","type":"uint256"}],"name":"RebalanceSettled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"}],"devdoc":{"author":"Set Protocol","methods":{"allowance(address,address)":{"details":"Function to check the amount of tokens that an owner allowed to a spender.","params":{"owner":"address The address which owns the funds.","spender":"address The address which will spend the funds."},"return":"A uint256 specifying the amount of tokens still available for the spender."},"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender\'s allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729","params":{"spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"The address to query the balance of."},"return":"A uint256 representing the amount owned by the passed address."},"decreaseAllowance(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"spender":"The address which will spend the funds.","subtractedValue":"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"addedValue":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"totalSupply()":{"details":"Total number of tokens in existence"},"transfer(address,uint256)":{"details":"Transfer token to a specified address","params":{"to":"The address to transfer to.","value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.","params":{"from":"address The address which you want to send tokens from","to":"address The address which you want to transfer to","value":"uint256 the amount of tokens to be transferred"}}},"title":"IncentiveFee"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/rebalancing-v3/IncentiveFee.sol":"IncentiveFee"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICore.sol":{"keccak256":"0x5dc3db4398630ea52d2a40c9ddfa89d94e65c2770a12bab4d2a5c8eb573fb0a0","urls":["bzzr://25e90b53f61b388e0950b808e2296f82d427b66cfd6021212713436b2a592e31"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IFeeCalculator.sol":{"keccak256":"0xfdce9b333367bfed8f379738b0eabfe4be0045db735e9f24493de09729593d4d","urls":["bzzr://d2fa7438b492f4f08009810e3e9a2e2c22a429c307562e3f5274d4bfe2d21734"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ILiquidator.sol":{"keccak256":"0x9d1e66d56cd51d14787cce5ff8fb378eb6a0bb704e7102d7c4eda5de7f585af3","urls":["bzzr://c44220025ac21fda1dda68e236572c5c4f82bf53ccf504a020487b8c746c7b26"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalancingSetFactory.sol":{"keccak256":"0x781ccbdaa2b8908599e6cd5cdf077f2add7077b72acd064fb4ae560c00ddf62d","urls":["bzzr://93950fa7b8ce25f427edfe6a136c850ef41f1002eadd94ec957b8e6abe85812b"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalancingSetToken.sol":{"keccak256":"0xe7356a7b0f0cc95d9526395d776f523a48fd65618730d67b4f31f20ffbd380da","urls":["bzzr://605a33a818eff7ce3370f25fccb751f61c066b4db0772605a2215d1357d68072"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetFactory.sol":{"keccak256":"0xf795ab9e9ac11340a600f235073b4ec4bdea92d3c01601ced1e5afd3c2718301","urls":["bzzr://eb4f00f66933560aa133ee90030b23d7a30937e6591a83d56b3935a927e8ca9f"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetToken.sol":{"keccak256":"0xfa6c0c07f8394d89b6b8f72e15778f8452a9341acb20cebb8421f3522aaca1bd","urls":["bzzr://ccf23bb78fd507bf8cbf5cf7ac2a660a1463b87a3689196e42b8f6862d1a6b11"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IVault.sol":{"keccak256":"0xf8a6d376173be39f5744492866db5dd3f91453a124d23679ff164ff3817f2f4f","urls":["bzzr://896c0a8329175c1620e1a22467778b835defe0e61847e5a8427a306f42391e64"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IWhiteList.sol":{"keccak256":"0x35158bdba86e9e08faf0bdf5e1756fb20ee0404e0b0b3c2d529e0e5b03b5adfd","urls":["bzzr://130cfe1fe490b464a6d42fd8613dd42a9f3375f24b6ab2dd91448f12895992ab"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/Rebalance.sol":{"keccak256":"0x74ffa689d93ced6c6e0377a35ec1274241b6191b5aaac5576ada379ac3840286","urls":["bzzr://25bdda3f1f5adfa2c83c760c44993d250cd2df037360f0018d22d268df79e887"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/RebalancingLibrary.sol":{"keccak256":"0x7f9dd2f95b2ee71a98b94cb9b0df15874aa134e7480d04a1fcf36aff166a55f4","urls":["bzzr://f43a5563ec5df095151eee30cf7a0941b5a971917c27c7b34d9586b36563ab5b"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/rebalancing-v2/RebalancingSetState.sol":{"keccak256":"0xaba07d2edbe8b694f567ecc3e65dd0fb5303f40e4a5ad6dc2bcbe7a3ec8320db","urls":["bzzr://84179f14d9caa8cc283f86141050ff03b9cce5e72de9f4ef2b84ec2b3cfbc091"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/rebalancing-v3/IncentiveFee.sol":{"keccak256":"0x0cc62d8556138ea146a8e9d60f15b905af477cce58173e1bdc589549e66eec2a","urls":["bzzr://4650979483badde4b844facd6f1592cdbc9d677d6ca3b80b23f37353c5b59107"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411","urls":["bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db"]},"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61","urls":["bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc"]},"set-protocol-contract-utils/contracts/lib/CommonMath.sol":{"keccak256":"0x3d1d08c6efc2a973fe2c02ddcb02fd99a8c8eb75f74dcbd93e8e15864eee2b6b","urls":["bzzr://580815dd1cf648a4521d923e59087de21143d9c48115ab71579a1f5a8f3d36af"]},"set-protocol-contract-utils/contracts/lib/ScaleValidations.sol":{"keccak256":"0xba602c9dda228b4552744ef0ba26329a3ada2610c42cb085a373d873d58d1391","urls":["bzzr://78110cdd43a9f5b4092cb51867e79da62e6d8b324ffb24d0dd448ad3e27048ee"]}},"version":1}',bytecode:"",
deployedBytecode:"",sourceMap:"1111:2862:94:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1111:2862:94;;;;;;;",deployedSourceMap:"1111:2862:94:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1111:2862:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3446:25:90;;;:::i;:::-;;;;;;;;;;;;;;;;6434:479;;;;;;;;;:::i;:::-;;7898:200;;;:::i;:::-;;;;;;;;3068:23;;;:::i;2721:145:168:-;;;;;;;;;:::i;:::-;;;;;;;;1983:37:90;;;:::i;:::-;;;;;;;;2735:32;;;:::i;916:89:168:-;;;:::i;2869:34:90:-;;;:::i;8245:180::-;;;;;;;;;:::i;3329:224:168:-;;;;;;;;;:::i;7328:139:90:-;;;:::i;3341:27::-;;;:::i;4067:200:168:-;;;;;;;;;:::i;2178:29:90:-;;;:::i;3521:26::-;;;:::i;2276:44::-;;;:::i;2451:27::-;;;:::i;:::-;;;;;;;;2380:22;;;:::i;1899:36::-;;;:::i;1217:104:168:-;;;;;;;;;:::i;3787:29:90:-;;;:::i;7568:229::-;;;:::i;:::-;;;;;;;;4245:33;;;:::i;4786:210:168:-;;;;;;;;;:::i;1948:137::-;;;;;;;;;:::i;3876:37:90:-;;;:::i;1712:::-;;;:::i;4154:24::-;;;:::i;5810:186::-;;;;;;;;;:::i;1652:129:168:-;;;;;;;;;:::i;6919:216:90:-;;;;;;;;;:::i;6002:338::-;;;;;;;;;:::i;4503:21::-;;;:::i;1647:17::-;;;:::i;3662:46::-;;;:::i;:::-;;;;;;;;1793:19;;;:::i;3446:25::-;;;;:::o;6434:479::-;4774:17;:15;:17::i;:::-;6589:34;6571:14;;;;:52;;;;;;;;;;6550:112;;;;-1:-1:-1;;;;;6550:112:90;;;;;;;;;;;;;;;;;6694:19;;:54;;;;;-1:-1:-1;;;;;6694:19:90;;;;:29;;:54;;6732:14;;6694:54;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6694:54:90;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6694:54:90;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6694:54:90;;;;;;;;;6673:116;;;;-1:-1:-1;;;;;6673:116:90;;;;;;;;;6857:10;;6805:64;;;;;;6832:14;;-1:-1:-1;;;;;6857:10:90;;6805:64;;;;;;;;;;6879:10;:27;;-1:-1:-1;;6879:27:90;-1:-1:-1;;;;;6879:27:90;;;;;;;;;;6434:479::o;7898:200::-;8022:16;;;8036:1;8022:16;;;;;;;;;7965;;;;8022;;;;;;;105:10:-1;8022:16:90;88:34:-1;136:17;;-1:-1;8022:16:90;7997:41;;8059:10;;8048:5;8054:1;8048:8;;;;;;;;;;;;;;;;;:21;8086:5;-1:-1:-1;7898:200:90;:::o;3068:23::-;;;;:::o;2721:145:168:-;2786:4;2802:36;2811:10;2823:7;2832:5;2802:8;:36::i;:::-;-1:-1:-1;2855:4:168;2721:145;;;;;:::o;1983:37:90:-;;;-1:-1:-1;;;;;1983:37:90;;:::o;2735:32::-;;;;:::o;916:89:168:-;986:12;;916:89;:::o;2869:34:90:-;;;;:::o;8245:180::-;8407:10;;-1:-1:-1;;;;;8407:10:90;;;8382:36;;;;8245:180::o;3329:224:168:-;3408:4;3424:26;3434:4;3440:2;3444:5;3424:9;:26::i;:::-;-1:-1:-1;;;;;3487:14:168;;;;;;:8;:14;;;;;;;;3475:10;3487:26;;;;;;;;;3460:65;;3469:4;;3487:37;;3518:5;3487:37;:30;:37;:::i;:::-;3460:8;:65::i;:::-;-1:-1:-1;3542:4:168;3329:224;;;;;;:::o;7328:139:90:-;7429:22;;:31;;;;;;;;7399:7;;-1:-1:-1;;;;;7429:22:90;;:29;;:31;;;;;;;;;;;;;;:22;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;7429:31:90;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7429:31:90;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7429:31:90;;;;;;;;;7422:38;;7328:139;:::o;3341:27::-;;;-1:-1:-1;;;;;3341:27:90;;:::o;4067:200:168:-;4172:10;4147:4;4193:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4193:29:168;;;;;;;;;;4147:4;;4163:76;;4184:7;;4193:45;;4227:10;4193:45;:33;:45;:::i;2178:29:90:-;;;-1:-1:-1;;;;;2178:29:90;;:::o;3521:26::-;;;;:::o;2276:44::-;;;-1:-1:-1;;;;;2276:44:90;;:::o;2451:27::-;;;-1:-1:-1;;;;;2451:27:90;;:::o;2380:22::-;;;-1:-1:-1;;;;;2380:22:90;;:::o;1899:36::-;;;-1:-1:-1;;;;;1899:36:90;;:::o;1217:104:168:-;-1:-1:-1;;;;;1298:16:168;1272:7;1298:16;;;;;;;;;;;;1217:104::o;3787:29:90:-;;;;:::o;7568:229::-;7702:16;;;7716:1;7702:16;;;;;;;;;7640;;;;7702;;;;;;;105:10:-1;7702:16:90;88:34:-1;-1:-1;;7752:10:90;;7728:13;;;;-1:-1:-1;;;;;;7752:10:90;;7728:13;;-1:-1:-1;7752:10:90;;7728:13;;;;-1:-1:-1;;;;;7728:35:90;;;:13;;;;;;;;;;;:35;7780:10;-1:-1:-1;7568:229:90;:::o;4245:33::-;;;;:::o;4786:210:168:-;4896:10;4871:4;4917:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4917:29:168;;;;;;;;;;4871:4;;4887:81;;4908:7;;4917:50;;4951:15;4917:50;:33;:50;:::i;1948:137::-;2009:4;2025:32;2035:10;2047:2;2051:5;2025:9;:32::i;3876:37:90:-;;;;:::o;1712:::-;;;-1:-1:-1;;;;;1712:37:90;;:::o;4154:24::-;;;-1:-1:-1;;;;;4154:24:90;;:::o;5810:186::-;4774:17;:15;:17::i;:::-;5950:7;;5921:37;;;;;;5937:11;;-1:-1:-1;;;;;5950:7:90;;5921:37;;;;;;;;;;5968:7;:21;;-1:-1:-1;;5968:21:90;-1:-1:-1;;;;;5968:21:90;;;;;;;;;;5810:186::o;1652:129:168:-;-1:-1:-1;;;;;1750:15:168;;;1724:7;1750:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1652:129::o;6919:216:90:-;4774:17;:15;:17::i;:::-;7074:12;;7040:47;;;;;;7056:16;;-1:-1:-1;;;;;7074:12:90;;7040:47;;;;;;;;;;7097:12;:31;;-1:-1:-1;;7097:31:90;-1:-1:-1;;;;;7097:31:90;;;;;;;;;;6919:216::o;6002:338::-;4774:17;:15;:17::i;:::-;6110:69;6166:12;6110:55;:69::i;:::-;6190:59;6236:12;6190:45;:59::i;:::-;6265:35;6277:12;6291:8;;6265:35;;;;;;;;;;;;;;;;6310:8;:23;6002:338::o;4503:21::-;;;;;;:::o;1647:17::-;;;-1:-1:-1;;;;;1647:17:90;;:::o;3662:46::-;;;;;;:::o;1793:19::-;;;-1:-1:-1;;;;;1793:19:90;;:::o;8479:137::-;8565:7;;-1:-1:-1;;;;;8565:7:90;8551:10;:21;8530:79;;;;-1:-1:-1;;;;;8530:79:90;;;;;;;;;8479:137::o;6831:248:168:-;-1:-1:-1;;;;;6923:21:168;;6915:30;;;;;;-1:-1:-1;;;;;6963:19:168;;6955:28;;;;;;-1:-1:-1;;;;;6994:15:168;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;;:32;;;7041:31;;;;;7021:5;;7041:31;;;;;;;;;;6831:248;;;:::o;5215:256::-;-1:-1:-1;;;;;5302:16:168;;5294:25;;;;;;-1:-1:-1;;;;;5348:15:168;;:9;:15;;;;;;;;;;;:26;;5368:5;5348:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5330:15:168;;;:9;:15;;;;;;;;;;;:44;;;;5400:13;;;;;;;:24;;5418:5;5400:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5384:13:168;;;:9;:13;;;;;;;;;;;;:40;;;;5439:25;;;;;;;;;;5458:5;;5439:25;;1211:145:166;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:166;;;1211:145::o;1439:::-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;876:152:179;812:4;972:6;:29;;964:57;;;;-1:-1:-1;;;;;964:57:179;;;;;;;;;876:152;:::o;1034:189::-;1133:27;:6;865:4;1133:27;:10;:27;:::i;:::-;:32;1112:104;;;;-1:-1:-1;;;;;1112:104:179;;;;;;;;1739:121:166;1797:7;1824:6;1816:15;;;;;;1852:1;1848;:5;;;;;;;1739:121;-1:-1:-1;;;1739:121:166:o;5:118:-1:-;;72:46;110:6;97:20;72:46;;130:116;;205:36;233:6;227:13;205:36;;253:158;;340:66;398:6;385:20;340:66;;418:118;;485:46;523:6;510:20;485:46;;543:122;;621:39;652:6;646:13;621:39;;672:241;;776:2;764:9;755:7;751:23;747:32;744:2;;;792:1;789;782:12;744:2;827:1;844:53;889:7;869:9;844:53;;;834:63;738:175;-1:-1;;;;738:175;920:366;;;1041:2;1029:9;1020:7;1016:23;1012:32;1009:2;;;1057:1;1054;1047:12;1009:2;1092:1;1109:53;1154:7;1134:9;1109:53;;;1099:63;;1071:97;1199:2;1217:53;1262:7;1253:6;1242:9;1238:22;1217:53;;;1207:63;;1178:98;1003:283;;;;;;1293:491;;;;1431:2;1419:9;1410:7;1406:23;1402:32;1399:2;;;1447:1;1444;1437:12;1399:2;1482:1;1499:53;1544:7;1524:9;1499:53;;;1489:63;;1461:97;1589:2;1607:53;1652:7;1643:6;1632:9;1628:22;1607:53;;;1597:63;;1568:98;1697:2;1715:53;1760:7;1751:6;1740:9;1736:22;1715:53;;;1705:63;;1676:98;1393:391;;;;;;1791:366;;;1912:2;1900:9;1891:7;1887:23;1883:32;1880:2;;;1928:1;1925;1918:12;1880:2;1963:1;1980:53;2025:7;2005:9;1980:53;;;1970:63;;1942:97;2070:2;2088:53;2133:7;2124:6;2113:9;2109:22;2088:53;;2164:257;;2276:2;2264:9;2255:7;2251:23;2247:32;2244:2;;;2292:1;2289;2282:12;2244:2;2327:1;2344:61;2397:7;2377:9;2344:61;;2428:281;;2552:2;2540:9;2531:7;2527:23;2523:32;2520:2;;;2568:1;2565;2558:12;2520:2;2603:1;2620:73;2685:7;2665:9;2620:73;;2716:241;;2820:2;2808:9;2799:7;2795:23;2791:32;2788:2;;;2836:1;2833;2826:12;2788:2;2871:1;2888:53;2933:7;2913:9;2888:53;;2964:263;;3079:2;3067:9;3058:7;3054:23;3050:32;3047:2;;;3095:1;3092;3085:12;3047:2;3130:1;3147:64;3203:7;3183:9;3147:64;;3235:173;;3322:46;3364:3;3356:6;3322:46;;;-1:-1;;3397:4;3388:14;;3315:93;3417:173;;3504:46;3546:3;3538:6;3504:46;;3598:110;3671:31;3696:5;3671:31;;;3666:3;3659:44;3653:55;;;3873:621;;4018:54;4066:5;4018:54;;;4085:86;4164:6;4159:3;4085:86;;;4078:93;;4191:56;4241:5;4191:56;;;4268:1;4253:219;4278:6;4275:1;4272:13;4253:219;;;4325:63;4384:3;4375:6;4369:13;4325:63;;;4318:70;;4405:60;4458:6;4405:60;;;4395:70;-1:-1;4300:1;4293:9;4253:219;;;-1:-1;4485:3;;3997:497;-1:-1;;;;3997:497;4533:621;;4678:54;4726:5;4678:54;;;4745:86;4824:6;4819:3;4745:86;;;4738:93;;4851:56;4901:5;4851:56;;;4928:1;4913:219;4938:6;4935:1;4932:13;4913:219;;;4985:63;5044:3;5035:6;5029:13;4985:63;;;4978:70;;5065:60;5118:6;5065:60;;;5055:70;-1:-1;4960:1;4953:9;4913:219;;5162:111;5239:28;5261:5;5239:28;;5280:154;5377:51;5422:5;5377:51;;6491:142;6582:45;6621:5;6582:45;;6641:364;;6801:67;6865:2;6860:3;6801:67;;;6901:66;6881:87;;6996:2;6987:12;;6787:218;-1:-1;;6787:218;7014:364;;7174:67;7238:2;7233:3;7174:67;;;7274:66;7254:87;;7369:2;7360:12;;7160:218;-1:-1;;7160:218;7387:364;;7547:67;7611:2;7606:3;7547:67;;;7647:66;7627:87;;7742:2;7733:12;;7533:218;-1:-1;;7533:218;7760:364;;7920:67;7984:2;7979:3;7920:67;;;8020:66;8000:87;;8115:2;8106:12;;7906:218;-1:-1;;7906:218;8133:364;;8293:67;8357:2;8352:3;8293:67;;;8393:66;8373:87;;8488:2;8479:12;;8279:218;-1:-1;;8279:218;8505:110;8578:31;8603:5;8578:31;;8749:213;8867:2;8852:18;;8881:71;8856:9;8925:6;8881:71;;8969:324;9115:2;9100:18;;9129:71;9104:9;9173:6;9129:71;;;9211:72;9279:2;9268:9;9264:18;9255:6;9211:72;;9300:361;9468:2;9482:47;;;9453:18;;9543:108;9453:18;9637:6;9543:108;;9668:361;9836:2;9850:47;;;9821:18;;9911:108;9821:18;10005:6;9911:108;;10036:201;10148:2;10133:18;;10162:65;10137:9;10200:6;10162:65;;10244:241;10376:2;10361:18;;10390:85;10365:9;10448:6;10390:85;;12064:229;12190:2;12175:18;;12204:79;12179:9;12256:6;12204:79;;12300:407;12491:2;12505:47;;;12476:18;;12566:131;12476:18;12566:131;;12714:407;12905:2;12919:47;;;12890:18;;12980:131;12890:18;12980:131;;13128:407;13319:2;13333:47;;;13304:18;;13394:131;13304:18;13394:131;;13542:407;13733:2;13747:47;;;13718:18;;13808:131;13718:18;13808:131;;13956:407;14147:2;14161:47;;;14132:18;;14222:131;14132:18;14222:131;;14370:213;14488:2;14473:18;;14502:71;14477:9;14546:6;14502:71;;14590:324;14736:2;14721:18;;14750:71;14725:9;14794:6;14750:71;;;14832:72;14900:2;14889:9;14885:18;14876:6;14832:72;;14923:121;15032:4;15020:17;;15001:43;15185:107;15275:12;;15259:33;15676:178;15794:19;;;15843:4;15834:14;;15787:67;16221:105;;16290:31;16315:5;16290:31;;16333:92;16406:13;16399:21;;16382:43;16432:127;;16520:1;16513:5;16510:12;16500:2;;16526:9;16500:2;-1:-1;16549:5;16494:65;16566:128;-1:-1;;;;;16635:54;;16618:76;16701:79;16770:5;16753:27;16998:125;;17087:31;17112:5;17087:31;;19521:133;;19608:41;19643:5;19608:41;",source:'/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\nimport { ERC20 } from "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol";\nimport { CommonMath } from "set-protocol-contract-utils/contracts/lib/CommonMath.sol";\n\nimport { RebalancingLibrary } from "../../lib/RebalancingLibrary.sol";\nimport { RebalancingSetState } from "../rebalancing-v2/RebalancingSetState.sol";\n\n\n/**\n * @title IncentiveFee\n * @author Set Protocol\n */\ncontract IncentiveFee is\n    ERC20,\n    RebalancingSetState\n{\n    using SafeMath for uint256;\n    using CommonMath for uint256;\n\n    /* ============ Events ============ */\n\n    event IncentiveFeePaid(\n        address indexed feeRecipient,\n        uint256 feeQuantity,\n        uint256 feePercentage,\n        uint256 newUnitShares\n    );\n\n    /* ============ Internal Functions ============ */\n\n    /**\n     * Calculates the fee and mints the rebalancing SetToken quantity to the recipient.\n     * The minting is done without an increase to the total collateral controlled by the\n     * rebalancing SetToken. In effect, the existing holders are paying the fee via inflation.\n     *\n     * @return feePercentage\n     * @return feeQuantity\n     */\n    function handleFees()\n        internal\n        returns (uint256, uint256)\n    {\n        // Represents a decimal value scaled by 1e18 (e.g. 100% = 1e18 and 1% = 1e16)\n        uint256 feePercent = rebalanceFeeCalculator.updateAndGetFee();\n        uint256 feeQuantity = calculateIncentiveFeeInflation(feePercent);\n\n        if (feeQuantity > 0) {\n            ERC20._mint(feeRecipient, feeQuantity);\n        }\n\n        return (feePercent, feeQuantity);\n    }\n\n    /**\n     * Returns the new incentive fee. The calculation for the fee involves implying\n     * mint quantity so that the feeRecipient owns the fee percentage of the entire\n     * supply of the Set.\n     *\n     * The formula to solve for fee is:\n     * feeQuantity / feeQuantity + totalSupply = fee / scaleFactor\n     *\n     * The simplified formula utilized below is:\n     * feeQuantity = fee * totalSupply / (scaleFactor - fee)\n     *\n     * @param   _feePercentage          Fee levied to feeRecipient\n     * @return  uint256                 New RebalancingSet issue quantity\n     */\n    function calculateIncentiveFeeInflation(\n        uint256 _feePercentage\n    )\n        internal\n        view\n        returns(uint256)\n    {\n        // fee * totalSupply\n        uint256 a = _feePercentage.mul(totalSupply());\n\n        // ScaleFactor (10e18) - fee\n        uint256 b = CommonMath.scaleFactor().sub(_feePercentage);\n\n        return a.div(b);\n    }\n\n    /*\n     * The Rebalancing SetToken must be in Default state.\n     */\n    function validateFeeActualization() internal view {\n        validateRebalanceStateIs(RebalancingLibrary.State.Default);\n    }\n\n    /*\n     * After the minting of new inflation fees, the unit shares must be updated.\n     * The formula is as follows:\n     * newUnitShares = currentSetAmount * rebalanceSetNaturalUnit / rebalanceSetTotalSupply\n     */\n    function calculateNewUnitShares() internal view returns(uint256) {\n        uint256 currentSetAmount = vault.getOwnerBalance(\n            address(currentSet),\n            address(this)\n        );\n\n        return currentSetAmount.mul(naturalUnit).divCeil(totalSupply());\n    }\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/rebalancing-v3/IncentiveFee.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.967Z",devdoc:{author:"Set Protocol",methods:{"allowance(address,address)":{details:"Function to check the amount of tokens that an owner allowed to a spender.",params:{owner:"address The address which owns the funds.",spender:"address The address which will spend the funds."},"return":"A uint256 specifying the amount of tokens still available for the spender."},"approve(address,uint256)":{details:"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",params:{spender:"The address which will spend the funds.",value:"The amount of tokens to be spent."}},"balanceOf(address)":{details:"Gets the balance of the specified address.",params:{owner:"The address to query the balance of."},"return":"A uint256 representing the amount owned by the passed address."},"decreaseAllowance(address,uint256)":{details:"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",params:{spender:"The address which will spend the funds.",subtractedValue:"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{details:"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",params:{addedValue:"The amount of tokens to increase the allowance by.",spender:"The address which will spend the funds."}},"totalSupply()":{details:"Total number of tokens in existence"},"transfer(address,uint256)":{details:"Transfer token to a specified address",params:{to:"The address to transfer to.",value:"The amount to be transferred."}},"transferFrom(address,address,uint256)":{details:"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",params:{from:"address The address which you want to send tokens from",to:"address The address which you want to transfer to",value:"uint256 the amount of tokens to be transferred"}}},title:"IncentiveFee"},userdoc:{methods:{}}};