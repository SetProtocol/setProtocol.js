"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.RebalanceAuctionModule={contractName:"RebalanceAuctionModule",abi:[{constant:true,inputs:[],name:"vaultInstance",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"coreInstance",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"core",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"vault",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{inputs:[{name:"_core",type:"address"},{name:"_vault",type:"address"}],payable:false,stateMutability:"nonpayable",type:"constructor"},{anonymous:false,inputs:[{indexed:true,name:"rebalancingSetToken",type:"address"},{indexed:true,name:"bidder",type:"address"},{indexed:false,name:"executionQuantity",type:"uint256"},{indexed:false,name:"combinedTokenAddresses",type:"address[]"},{indexed:false,name:"inflowTokenUnits",type:"uint256[]"},{indexed:false,name:"outflowTokenUnits",type:"uint256[]"}],name:"BidPlaced",type:"event"},{constant:false,inputs:[{name:"_rebalancingSetToken",type:"address"},{name:"_quantity",type:"uint256"},{name:"_allowPartialFill",type:"bool"}],name:"bid",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_rebalancingSetToken",type:"address"},{name:"_quantity",type:"uint256"},{name:"_allowPartialFill",type:"bool"}],name:"bidAndWithdraw",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_rebalancingSetToken",type:"address"}],name:"redeemFromFailedRebalance",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"vaultInstance","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_rebalancingSetToken","type":"address"},{"name":"_quantity","type":"uint256"},{"name":"_allowPartialFill","type":"bool"}],"name":"bidAndWithdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_rebalancingSetToken","type":"address"},{"name":"_quantity","type":"uint256"},{"name":"_allowPartialFill","type":"bool"}],"name":"bid","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"coreInstance","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_rebalancingSetToken","type":"address"}],"name":"redeemFromFailedRebalance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"core","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vault","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_core","type":"address"},{"name":"_vault","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"rebalancingSetToken","type":"address"},{"indexed":true,"name":"bidder","type":"address"},{"indexed":false,"name":"executionQuantity","type":"uint256"},{"indexed":false,"name":"combinedTokenAddresses","type":"address[]"},{"indexed":false,"name":"inflowTokenUnits","type":"uint256[]"},{"indexed":false,"name":"outflowTokenUnits","type":"uint256[]"}],"name":"BidPlaced","type":"event"}],"devdoc":{"author":"Set Protocol * The RebalanceAuctionModule is a smart contract that exposes bidding and failed rebalance functionality.","methods":{"bid(address,uint256,bool)":{"params":{"_allowPartialFill":"Set to true if want to partially fill bid when quantity is greater than currentRemainingSets","_quantity":"Number of currentSets to rebalance","_rebalancingSetToken":"Address of the rebalancing token being bid on"}},"bidAndWithdraw(address,uint256,bool)":{"params":{"_allowPartialFill":"Set to true if want to partially fill bid when quantity is greater than currentRemainingSets","_quantity":"Number of currentSets to rebalance","_rebalancingSetToken":"Address of the rebalancing token being bid on"}},"constructor":{"params":{"_core":"The address of Core","_vault":"The address of Vault"}},"redeemFromFailedRebalance(address)":{"params":{"_rebalancingSetToken":"Address of the rebalancing token to withdraw from"}}},"title":"RebalanceAuctionModule"},"userdoc":{"methods":{"bid(address,uint256,bool)":{"notice":"Bid on rebalancing a given quantity of sets held by a rebalancing token The tokens are attributed to the user in the vault."},"bidAndWithdraw(address,uint256,bool)":{"notice":"Bid on rebalancing a given quantity of sets held by a rebalancing token The tokens are returned to the user."},"constructor":"Constructor function for RebalanceAuctionModule","redeemFromFailedRebalance(address)":{"notice":"If a Rebalancing Set Token Rebalance has failed (it includes paused token or exceeds gas limits) and been put in Drawdown state, user\'s can withdraw their portion of the components collateralizing the Rebalancing Set Token. This burns the user\'s portion of the Rebalancing Set Token."}}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/RebalanceAuctionModule.sol":"RebalanceAuctionModule"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICore.sol":{"keccak256":"0x5dc3db4398630ea52d2a40c9ddfa89d94e65c2770a12bab4d2a5c8eb573fb0a0","urls":["bzzr://25e90b53f61b388e0950b808e2296f82d427b66cfd6021212713436b2a592e31"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalancingSetToken.sol":{"keccak256":"0xe7356a7b0f0cc95d9526395d776f523a48fd65618730d67b4f31f20ffbd380da","urls":["bzzr://605a33a818eff7ce3370f25fccb751f61c066b4db0772605a2215d1357d68072"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetToken.sol":{"keccak256":"0xfa6c0c07f8394d89b6b8f72e15778f8452a9341acb20cebb8421f3522aaca1bd","urls":["bzzr://ccf23bb78fd507bf8cbf5cf7ac2a660a1463b87a3689196e42b8f6862d1a6b11"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ITransferProxy.sol":{"keccak256":"0x962d54385cc4760c550cd2f16bfdb53e967def4c5d3acb7b3d0b3d7a49f902de","urls":["bzzr://cb8994c8bae7fa1d55d240f44396f4156b45c81afa6fcfa608fd5e4bf9f1a919"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IVault.sol":{"keccak256":"0xf8a6d376173be39f5744492866db5dd3f91453a124d23679ff164ff3817f2f4f","urls":["bzzr://896c0a8329175c1620e1a22467778b835defe0e61847e5a8427a306f42391e64"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/RebalancingLibrary.sol":{"keccak256":"0x7f9dd2f95b2ee71a98b94cb9b0df15874aa134e7480d04a1fcf36aff166a55f4","urls":["bzzr://f43a5563ec5df095151eee30cf7a0941b5a971917c27c7b34d9586b36563ab5b"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/RebalanceAuctionModule.sol":{"keccak256":"0xb0a071ece29fcdb39bfc85cd127302501bf2c1ac560b2caaba0c62e1b58ad362","urls":["bzzr://e9e1129ce19430404fda79ec4d29617bf75137d969ee5c93656fbb57afb33039"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/lib/ModuleCoreState.sol":{"keccak256":"0x75a216727092c78a7adb0016e4ed49bc174b4e8725b0e6b0689f86c4d20bcba7","urls":["bzzr://29bbd30e5a474c131c8ae83c00cf82f3bf2162e6f4699cb04f7c06507302e50c"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125","urls":["bzzr://3bc299fd722679f1313dc1387e2efc0591dcddc3727b6a7ccc98132c6e02f323"]}},"version":1}',bytecode:"0x608060405234801561001057600080fd5b506040516040806113858339810180604052604081101561003057600080fd5b50805160209091015160008054600160a060020a03938416600160a060020a03199182168117909255600280548216909217909155600180549390921692811683178255600380549091169092179091556004556112f2806100936000396000f3fe608060405234801561001057600080fd5b50600436106100815760003560e060020a90048063a05cb7551161005f578063a05cb75514610114578063e8d1ecfc1461011c578063f2f4eb2614610142578063fbfa77cf1461014a57610081565b806363dc4f951461008657806378551f2a146100aa578063878d9b7a146100e0575b600080fd5b61008e610152565b60408051600160a060020a039092168252519081900360200190f35b6100de600480360360608110156100c057600080fd5b50600160a060020a0381351690602081013590604001351515610161565b005b6100de600480360360608110156100f657600080fd5b50600160a060020a0381351690602081013590604001351515610677565b61008e6109d1565b6100de6004803603602081101561013257600080fd5b5035600160a060020a03166109e0565b61008e610f89565b61008e610f98565b600354600160a060020a031681565b60048054600101908190556000610179858585610fa7565b9050606080606087600160a060020a0316639979ef45856040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b1580156101c957600080fd5b505af11580156101dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052606081101561020657600080fd5b81019080805164010000000081111561021e57600080fd5b8201602081018481111561023157600080fd5b815185602082028301116401000000008211171561024e57600080fd5b5050929190602001805164010000000081111561026a57600080fd5b8201602081018481111561027d57600080fd5b815185602082028301116401000000008211171561029a57600080fd5b505092919060200180516401000000008111156102b657600080fd5b820160208101848111156102c957600080fd5b81518560208202830111640100000000821117156102e657600080fd5b5050929190505050809350819450829550505050600260009054906101000a9004600160a060020a0316600160a060020a031663caaa3ada338a86866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a031681526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156103a8578181015183820152602001610390565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156103e75781810151838201526020016103cf565b505050509050019650505050505050600060405180830381600087803b15801561041057600080fd5b505af1158015610424573d6000803e3d6000fd5b50506002546040517ffe93620e000000000000000000000000000000000000000000000000000000008152600160a060020a038c81166004830190815233602484018190526080604485019081528a5160848601528a5193909516965063fe93620e95508e9490938a9389939291606481019160a4909101906020808801910280838360005b838110156104c25781810151838201526020016104aa565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156105015781810151838201526020016104e9565b505050509050019650505050505050600060405180830381600087803b15801561052a57600080fd5b505af115801561053e573d6000803e3d6000fd5b5050505033600160a060020a031688600160a060020a03167f7964b0abc937d19ea4a78ec85a1dab6930da8281799c700deee860945a8a6c218686868660405180858152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156105c95781810151838201526020016105b1565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156106085781810151838201526020016105f0565b50505050905001848103825285818151815260200191508051906020019060200280838360005b8381101561064757818101518382015260200161062f565b5050505090500197505050505050505060405180910390a350505050600454811461067157600080fd5b50505050565b6004805460010190819055600061068f858585610fa7565b9050606080606087600160a060020a0316639979ef45856040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b1580156106df57600080fd5b505af11580156106f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052606081101561071c57600080fd5b81019080805164010000000081111561073457600080fd5b8201602081018481111561074757600080fd5b815185602082028301116401000000008211171561076457600080fd5b5050929190602001805164010000000081111561078057600080fd5b8201602081018481111561079357600080fd5b81518560208202830111640100000000821117156107b057600080fd5b505092919060200180516401000000008111156107cc57600080fd5b820160208101848111156107df57600080fd5b81518560208202830111640100000000821117156107fc57600080fd5b5050929190505050809350819450829550505050600260009054906101000a9004600160a060020a0316600160a060020a031663caaa3ada338a86866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a031681526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156108be5781810151838201526020016108a6565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156108fd5781810151838201526020016108e5565b505050509050019650505050505050600060405180830381600087803b15801561092657600080fd5b505af115801561093a573d6000803e3d6000fd5b50506002546040517f55d2d9cd000000000000000000000000000000000000000000000000000000008152600160a060020a038c8116602483015233604483018190526080600484019081528951608485015289519290941695506355d2d9cd945088938e93919288928291606482019160a4019060208981019102808383600083156104c25781810151838201526020016104aa565b600254600160a060020a031681565b60048054600101808255600254604080517ffef3ee73000000000000000000000000000000000000000000000000000000008152600160a060020a038087169582019590955290519293859392169163fef3ee7391602480820192602092909190829003018186803b158015610a5557600080fd5b505afa158015610a69573d6000803e3d6000fd5b505050506040513d6020811015610a7f57600080fd5b5051610ad6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260568152602001806112316056913960600191505060405180910390fd5b606081600160a060020a031663f0284b1c6040518163ffffffff1660e060020a02815260040160006040518083038186803b158015610b1457600080fd5b505afa158015610b28573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610b5157600080fd5b810190808051640100000000811115610b6957600080fd5b82016020810184811115610b7c57600080fd5b8151856020820283011164010000000082111715610b9957600080fd5b50509291905050509050600082600160a060020a03166318160ddd6040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610be157600080fd5b505afa158015610bf5573d6000803e3d6000fd5b505050506040513d6020811015610c0b57600080fd5b5051604080517f70a082310000000000000000000000000000000000000000000000000000000081523360048201529051919250600091600160a060020a038616916370a08231916024808301926020929190829003018186803b158015610c7257600080fd5b505afa158015610c86573d6000803e3d6000fd5b505050506040513d6020811015610c9c57600080fd5b5051835160408051828152602083810282010190915291925090606090828015610cd0578160200160208202803883390190505b50905060005b82811015610ddb576003548651600091600160a060020a031690631f98ade390899085908110610d0257fe5b60200260200101518c6040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182600160a060020a0316600160a060020a031681526020019250505060206040518083038186803b158015610d6d57600080fd5b505afa158015610d81573d6000803e3d6000fd5b505050506040513d6020811015610d9757600080fd5b50519050610dbb86610daf838863ffffffff6111de16565b9063ffffffff61120e16565b838381518110610dc757fe5b602090810291909101015250600101610cd6565b50604080517f9dc29fac000000000000000000000000000000000000000000000000000000008152336004820152602481018590529051600160a060020a03881691639dc29fac91604480830192600092919082900301818387803b158015610e4357600080fd5b505af1158015610e57573d6000803e3d6000fd5b50506002546040517f55d2d9cd000000000000000000000000000000000000000000000000000000008152600160a060020a038c8116602483015233604483018190526080600484019081528b5160848501528b519290941695506355d2d9cd94508a938e93919288928291606482019160a401906020808a01910280838360005b83811015610ef1578181015183820152602001610ed9565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610f30578181015183820152602001610f18565b505050509050019650505050505050600060405180830381600087803b158015610f5957600080fd5b505af1158015610f6d573d6000803e3d6000fd5b505050505050505050506004548114610f8557600080fd5b5050565b600054600160a060020a031681565b600154600160a060020a031681565b600254604080517ffef3ee73000000000000000000000000000000000000000000000000000000008152600160a060020a0386811660048301529151600093929092169163fef3ee7391602480820192602092909190829003018186803b15801561101157600080fd5b505afa158015611025573d6000803e3d6000fd5b505050506040513d602081101561103b57600080fd5b5051611092576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806112876040913960400191505060405180910390fd5b606084600160a060020a031663a2e59c916040518163ffffffff1660e060020a02815260040160006040518083038186803b1580156110d057600080fd5b505afa1580156110e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561110d57600080fd5b81019080805164010000000081111561112557600080fd5b8201602081018481111561113857600080fd5b815185602082028301116401000000008211171561115557600080fd5b5050929190505050905060008160008151811061116e57fe5b6020026020010151905060008260018151811061118757fe5b6020026020010151905084801561119d57508086115b156111d05760006111c4836111b8848263ffffffff61120e16565b9063ffffffff6111de16565b94506111d79350505050565b8593505050505b9392505050565b6000826111ed57506000611208565b828202828482816111fa57fe5b041461120557600080fd5b90505b92915050565b600080821161121c57600080fd5b600082848161122757fe5b0494935050505056fe526562616c616e636541756374696f6e4d6f64756c652e72656465656d46726f6d4661696c6564526562616c616e63653a20496e76616c6964206f722064697361626c656420536574546f6b656e2061646472657373526562616c616e636541756374696f6e4d6f64756c652e6269643a20496e76616c6964206f722064697361626c656420536574546f6b656e2061646472657373a165627a7a72305820be385b55c1414b29001512fa6ef334ea6ae7951fd569209185fa87b4b92319e90029",deployedBytecode:"0x608060405234801561001057600080fd5b50600436106100815760003560e060020a90048063a05cb7551161005f578063a05cb75514610114578063e8d1ecfc1461011c578063f2f4eb2614610142578063fbfa77cf1461014a57610081565b806363dc4f951461008657806378551f2a146100aa578063878d9b7a146100e0575b600080fd5b61008e610152565b60408051600160a060020a039092168252519081900360200190f35b6100de600480360360608110156100c057600080fd5b50600160a060020a0381351690602081013590604001351515610161565b005b6100de600480360360608110156100f657600080fd5b50600160a060020a0381351690602081013590604001351515610677565b61008e6109d1565b6100de6004803603602081101561013257600080fd5b5035600160a060020a03166109e0565b61008e610f89565b61008e610f98565b600354600160a060020a031681565b60048054600101908190556000610179858585610fa7565b9050606080606087600160a060020a0316639979ef45856040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b1580156101c957600080fd5b505af11580156101dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052606081101561020657600080fd5b81019080805164010000000081111561021e57600080fd5b8201602081018481111561023157600080fd5b815185602082028301116401000000008211171561024e57600080fd5b5050929190602001805164010000000081111561026a57600080fd5b8201602081018481111561027d57600080fd5b815185602082028301116401000000008211171561029a57600080fd5b505092919060200180516401000000008111156102b657600080fd5b820160208101848111156102c957600080fd5b81518560208202830111640100000000821117156102e657600080fd5b5050929190505050809350819450829550505050600260009054906101000a9004600160a060020a0316600160a060020a031663caaa3ada338a86866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a031681526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156103a8578181015183820152602001610390565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156103e75781810151838201526020016103cf565b505050509050019650505050505050600060405180830381600087803b15801561041057600080fd5b505af1158015610424573d6000803e3d6000fd5b50506002546040517ffe93620e000000000000000000000000000000000000000000000000000000008152600160a060020a038c81166004830190815233602484018190526080604485019081528a5160848601528a5193909516965063fe93620e95508e9490938a9389939291606481019160a4909101906020808801910280838360005b838110156104c25781810151838201526020016104aa565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156105015781810151838201526020016104e9565b505050509050019650505050505050600060405180830381600087803b15801561052a57600080fd5b505af115801561053e573d6000803e3d6000fd5b5050505033600160a060020a031688600160a060020a03167f7964b0abc937d19ea4a78ec85a1dab6930da8281799c700deee860945a8a6c218686868660405180858152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156105c95781810151838201526020016105b1565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156106085781810151838201526020016105f0565b50505050905001848103825285818151815260200191508051906020019060200280838360005b8381101561064757818101518382015260200161062f565b5050505090500197505050505050505060405180910390a350505050600454811461067157600080fd5b50505050565b6004805460010190819055600061068f858585610fa7565b9050606080606087600160a060020a0316639979ef45856040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b1580156106df57600080fd5b505af11580156106f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052606081101561071c57600080fd5b81019080805164010000000081111561073457600080fd5b8201602081018481111561074757600080fd5b815185602082028301116401000000008211171561076457600080fd5b5050929190602001805164010000000081111561078057600080fd5b8201602081018481111561079357600080fd5b81518560208202830111640100000000821117156107b057600080fd5b505092919060200180516401000000008111156107cc57600080fd5b820160208101848111156107df57600080fd5b81518560208202830111640100000000821117156107fc57600080fd5b5050929190505050809350819450829550505050600260009054906101000a9004600160a060020a0316600160a060020a031663caaa3ada338a86866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a031681526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156108be5781810151838201526020016108a6565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156108fd5781810151838201526020016108e5565b505050509050019650505050505050600060405180830381600087803b15801561092657600080fd5b505af115801561093a573d6000803e3d6000fd5b50506002546040517f55d2d9cd000000000000000000000000000000000000000000000000000000008152600160a060020a038c8116602483015233604483018190526080600484019081528951608485015289519290941695506355d2d9cd945088938e93919288928291606482019160a4019060208981019102808383600083156104c25781810151838201526020016104aa565b600254600160a060020a031681565b60048054600101808255600254604080517ffef3ee73000000000000000000000000000000000000000000000000000000008152600160a060020a038087169582019590955290519293859392169163fef3ee7391602480820192602092909190829003018186803b158015610a5557600080fd5b505afa158015610a69573d6000803e3d6000fd5b505050506040513d6020811015610a7f57600080fd5b5051610ad6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260568152602001806112316056913960600191505060405180910390fd5b606081600160a060020a031663f0284b1c6040518163ffffffff1660e060020a02815260040160006040518083038186803b158015610b1457600080fd5b505afa158015610b28573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610b5157600080fd5b810190808051640100000000811115610b6957600080fd5b82016020810184811115610b7c57600080fd5b8151856020820283011164010000000082111715610b9957600080fd5b50509291905050509050600082600160a060020a03166318160ddd6040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610be157600080fd5b505afa158015610bf5573d6000803e3d6000fd5b505050506040513d6020811015610c0b57600080fd5b5051604080517f70a082310000000000000000000000000000000000000000000000000000000081523360048201529051919250600091600160a060020a038616916370a08231916024808301926020929190829003018186803b158015610c7257600080fd5b505afa158015610c86573d6000803e3d6000fd5b505050506040513d6020811015610c9c57600080fd5b5051835160408051828152602083810282010190915291925090606090828015610cd0578160200160208202803883390190505b50905060005b82811015610ddb576003548651600091600160a060020a031690631f98ade390899085908110610d0257fe5b60200260200101518c6040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182600160a060020a0316600160a060020a031681526020019250505060206040518083038186803b158015610d6d57600080fd5b505afa158015610d81573d6000803e3d6000fd5b505050506040513d6020811015610d9757600080fd5b50519050610dbb86610daf838863ffffffff6111de16565b9063ffffffff61120e16565b838381518110610dc757fe5b602090810291909101015250600101610cd6565b50604080517f9dc29fac000000000000000000000000000000000000000000000000000000008152336004820152602481018590529051600160a060020a03881691639dc29fac91604480830192600092919082900301818387803b158015610e4357600080fd5b505af1158015610e57573d6000803e3d6000fd5b50506002546040517f55d2d9cd000000000000000000000000000000000000000000000000000000008152600160a060020a038c8116602483015233604483018190526080600484019081528b5160848501528b519290941695506355d2d9cd94508a938e93919288928291606482019160a401906020808a01910280838360005b83811015610ef1578181015183820152602001610ed9565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610f30578181015183820152602001610f18565b505050509050019650505050505050600060405180830381600087803b158015610f5957600080fd5b505af1158015610f6d573d6000803e3d6000fd5b505050505050505050506004548114610f8557600080fd5b5050565b600054600160a060020a031681565b600154600160a060020a031681565b600254604080517ffef3ee73000000000000000000000000000000000000000000000000000000008152600160a060020a0386811660048301529151600093929092169163fef3ee7391602480820192602092909190829003018186803b15801561101157600080fd5b505afa158015611025573d6000803e3d6000fd5b505050506040513d602081101561103b57600080fd5b5051611092576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806112876040913960400191505060405180910390fd5b606084600160a060020a031663a2e59c916040518163ffffffff1660e060020a02815260040160006040518083038186803b1580156110d057600080fd5b505afa1580156110e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561110d57600080fd5b81019080805164010000000081111561112557600080fd5b8201602081018481111561113857600080fd5b815185602082028301116401000000008211171561115557600080fd5b5050929190505050905060008160008151811061116e57fe5b6020026020010151905060008260018151811061118757fe5b6020026020010151905084801561119d57508086115b156111d05760006111c4836111b8848263ffffffff61120e16565b9063ffffffff6111de16565b94506111d79350505050565b8593505050505b9392505050565b6000826111ed57506000611208565b828202828482816111fa57fe5b041461120557600080fd5b90505b92915050565b600080821161121c57600080fd5b600082848161122757fe5b0494935050505056fe526562616c616e636541756374696f6e4d6f64756c652e72656465656d46726f6d4661696c6564526562616c616e63653a20496e76616c6964206f722064697361626c656420536574546f6b656e2061646472657373526562616c616e636541756374696f6e4d6f64756c652e6269643a20496e76616c6964206f722064697361626c656420536574546f6b656e2061646472657373a165627a7a72305820be385b55c1414b29001512fa6ef334ea6ae7951fd569209185fa87b4b92319e90029",sourceMap:"1267:8943:61:-;;;1901:159;8:9:-1;5:2;;;30:1;27;20:12;5:2;1901:159:61;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1901:159:61;;;;;;;1652:4:69;:12;;-1:-1:-1;;;;;1652:12:69;;;-1:-1:-1;;;;;;1652:12:69;;;;;;;;1739;:27;;;;;;;;;;1652:12;1834:14;;;;;;;;;;;;;1924:13;:30;;;;;;;;;;;560:13:171;:17;1267:8943:61;;;;;;",deployedSourceMap:"1267:8943:61:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1267:8943:61;;;;;;;;-1:-1:-1;;;1267:8943:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1234:27:69;;;:::i;:::-;;;;-1:-1:-1;;;;;1234:27:69;;;;;;;;;;;;;;4604:1507:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4604:1507:61;;;;;;;;;;;;;;;:::i;:::-;;2611:1511;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2611:1511:61;;;;;;;;;;;;;;;:::i;1168:25:69:-;;;:::i;6534:1944:61:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6534:1944:61;-1:-1:-1;;;;;6534:1944:61;;:::i;1049:19:69:-;;;:::i;1108:20::-;;;:::i;1234:27::-;;;-1:-1:-1;;;;;1234:27:69;;:::o;4604:1507:61:-;993:13:171;:18;;1010:1;993:18;;;;;:13;4889:124:61;4929:20;4963:9;4986:17;4889:26;:124::i;:::-;4861:152;;5085:27;5122:32;5164:33;5324:20;-1:-1:-1;;;;;5303:51:61;;5355:17;5303:70;;;;;-1:-1:-1;;;5303:70:61;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5303:70:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5303:70:61;;;;;;39:16:-1;36:1;17:17;2:54;101:4;5303:70:61;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;5303:70:61;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;5303:70:61;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;5303:70:61;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;5303:70:61;;;;;;5207:166;;;;;;;;;;;;5470:12;;;;;;;;;-1:-1:-1;;;;;5470:12:61;-1:-1:-1;;;;;5470:31:61;;5515:10;5539:20;5573:10;5597:15;5470:152;;;;;-1:-1:-1;;;5470:152:61;;;;;;;-1:-1:-1;;;;;5470:152:61;-1:-1:-1;;;;;5470:152:61;;;;;;-1:-1:-1;;;;;5470:152:61;-1:-1:-1;;;;;5470:152:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5470:152:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5470:152:61;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5470:152:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5711:12:61;;:154;;;;;-1:-1:-1;;;;;5711:154:61;;;;;;;;;5791:10;5711:154;;;;;;;;;;;;;;;;;;;;;:12;;;;;-1:-1:-1;5711:32:61;;-1:-1:-1;5757:20:61;;5791:10;;5815;;5839:16;;5711:154;;;;;;;;;;;;;;;;;;;;:12;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5711:154:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5711:154:61;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5711:154:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5711:154:61;;;;5970:10;-1:-1:-1;;;;;5913:191:61;5936:20;-1:-1:-1;;;;;5913:191:61;;5994:17;6025:10;6049:15;6078:16;5913:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5913:191:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5913:191:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5913:191:61;;;;;;;;;;;;;;;;;;;;;;1067:1:171;;;;1102:13;;1086:12;:29;1078:38;;;;;;4604:1507:61;;;;:::o;2611:1511::-;993:13:171;:18;;1010:1;993:18;;;;;:13;2885:124:61;2925:20;2959:9;2982:17;2885:26;:124::i;:::-;2857:152;;3081:27;3118:32;3160:33;3320:20;-1:-1:-1;;;;;3299:51:61;;3351:17;3299:70;;;;;-1:-1:-1;;;3299:70:61;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3299:70:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3299:70:61;;;;;;39:16:-1;36:1;17:17;2:54;101:4;3299:70:61;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;3299:70:61;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;3299:70:61;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;3299:70:61;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;3299:70:61;;;;;;3203:166;;;;;;;;;;;;3466:12;;;;;;;;;-1:-1:-1;;;;;3466:12:61;-1:-1:-1;;;;;3466:31:61;;3511:10;3535:20;3569:10;3593:15;3466:152;;;;;-1:-1:-1;;;3466:152:61;;;;;;;-1:-1:-1;;;;;3466:152:61;-1:-1:-1;;;;;3466:152:61;;;;;;-1:-1:-1;;;;;3466:152:61;-1:-1:-1;;;;;3466:152:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3466:152:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3466:152:61;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3466:152:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3715:12:61;;:161;;;;;-1:-1:-1;;;;;3715:161:61;;;;;;;3826:10;3715:161;;;;;;;;;;;;;;;;;;;;;:12;;;;;-1:-1:-1;3715:39:61;;-1:-1:-1;3715:161:61;;;;3826:10;;3850:16;;3715:161;;;;;;;;;-1:-1:-1;3715:161:61;;;;;;;;-1:-1:-1;27:10;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1168:25:69;;;-1:-1:-1;;;;;1168:25:69;;:::o;6534:1944:61:-;993:13:171;:18;;1010:1;993:18;;;;6895:12:61;;:44;;;;;;-1:-1:-1;;;;;6895:44:61;;;;;;;;;;;;993:18:171;;6778:20:61;;6895:12;;;:22;;:44;;;;;;;;;;;;;;;:12;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;6895:44:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6895:44:61;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6895:44:61;6874:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7137:35;7175:19;-1:-1:-1;;;;;7175:54:61;;:56;;;;;-1:-1:-1;;;7175:56:61;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7175:56:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7175:56:61;;;;;;39:16:-1;36:1;17:17;2:54;101:4;7175:56:61;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;7175:56:61;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;7175:56:61;;;;;;7137:94;;7294:22;7319:19;-1:-1:-1;;;;;7319:31:61;;:33;;;;;-1:-1:-1;;;7319:33:61;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7319:33:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7319:33:61;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7319:33:61;7419:41;;;;;;7449:10;7419:41;;;;;;7319:33;;-1:-1:-1;7395:21:61;;-1:-1:-1;;;;;7419:29:61;;;;;:41;;;;;7319:33;;7419:41;;;;;;;:29;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;7419:41:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7419:41:61;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7419:41:61;7599:25;;7677:34;;;;;;7419:41;7677:34;;;;;;;;;7419:41;;-1:-1:-1;7599:25:61;7634:40;;7599:25;7677:34;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;7677:34:61;-1:-1:-1;7634:77:61;-1:-1:-1;7726:9:61;7721:330;7745:19;7741:1;:23;7721:330;;;7817:13;;7864:21;;7785:29;;-1:-1:-1;;;;;7817:13:61;;:29;;7864:18;;7883:1;;7864:21;;;;;;;;;;;;7903:20;7817:120;;;;;-1:-1:-1;;;7817:120:61;;;;;;;-1:-1:-1;;;;;7817:120:61;-1:-1:-1;;;;;7817:120:61;;;;;;-1:-1:-1;;;;;7817:120:61;-1:-1:-1;;;;;7817:120:61;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7817:120:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7817:120:61;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7817:120:61;;-1:-1:-1;7980:60:61;8025:14;7980:40;7817:120;8006:13;7980:40;:25;:40;:::i;:::-;:44;:60;:44;:60;:::i;:::-;7951:23;7975:1;7951:26;;;;;;;;;;;;;;;;;:89;-1:-1:-1;7766:3:61;;7721:330;;;-1:-1:-1;8119:85:61;;;;;;8157:10;8119:85;;;;;;;;;;;;-1:-1:-1;;;;;8119:24:61;;;;;:85;;;;;-1:-1:-1;;8119:85:61;;;;;;;-1:-1:-1;8119:24:61;:85;;;5:2:-1;;;;30:1;27;20:12;5:2;8119:85:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;8295:12:61;;:176;;;;;-1:-1:-1;;;;;8295:176:61;;;;;;;8414:10;8295:176;;;;;;;;;;;;;;;;;;;;;:12;;;;;-1:-1:-1;8295:39:61;;-1:-1:-1;8348:18:61;;8380:20;;8414:10;;8438:23;;8295:176;;;;;;;;;;;;;;;;;;:12;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;8295:176:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;8295:176:61;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8295:176:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8295:176:61;;;;1067:1:171;;;;;;1102:13;;1086:12;:29;1078:38;;;;;;6534:1944:61;;:::o;1049:19:69:-;;;-1:-1:-1;;;;;1049:19:69;;:::o;1108:20::-;;;-1:-1:-1;;;;;1108:20:69;;:::o;9062:1146:61:-;9356:12;;:44;;;;;;-1:-1:-1;;;;;9356:44:61;;;;;;;;;9248:7;;9356:12;;;;;:22;;:44;;;;;;;;;;;;;;;:12;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;9356:44:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9356:44:61;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9356:44:61;9335:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9558:34;9616:20;-1:-1:-1;;;;;9595:63:61;;:65;;;;;-1:-1:-1;;;9595:65:61;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9595:65:61;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9595:65:61;;;;;;39:16:-1;36:1;17:17;2:54;101:4;9595:65:61;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;9595:65:61;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;9595:65:61;;;;;;9558:102;;9670:18;9691:17;9709:1;9691:20;;;;;;;;;;;;;;9670:41;;9721:28;9752:17;9770:1;9752:20;;;;;;;;;;;;;;9721:51;;9787:17;:53;;;;;9820:20;9808:9;:32;9787:53;9783:419;;;10026:25;10054:52;10095:10;10054:36;:20;10095:10;10054:36;:24;:36;:::i;:::-;:40;:52;:40;:52;:::i;:::-;10026:80;-1:-1:-1;10120:24:61;;-1:-1:-1;;;;10120:24:61;9783:419;10182:9;10175:16;;;;;9062:1146;;;;;;:::o;231:421:166:-;289:7;529:6;525:45;;-1:-1:-1;558:1:166;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;;644:1;-1:-1:-1;231:421:166;;;;;:::o;782:296::-;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;;782:296;-1:-1:-1;;;;782:296:166:o",
source:'/*\n    Copyright 2018 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\n\nimport { ReentrancyGuard } from "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol";\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\n\nimport { ICore } from "../interfaces/ICore.sol";\nimport { IRebalancingSetToken } from "../interfaces/IRebalancingSetToken.sol";\nimport { ISetToken } from "../interfaces/ISetToken.sol";\nimport { IVault } from "../interfaces/IVault.sol";\nimport { ModuleCoreState } from "./lib/ModuleCoreState.sol";\n\n\n/**\n * @title RebalanceAuctionModule\n * @author Set Protocol\n *\n * The RebalanceAuctionModule is a smart contract that exposes bidding and failed rebalance functionality.\n */\ncontract RebalanceAuctionModule is\n    ModuleCoreState,\n    ReentrancyGuard\n{\n    using SafeMath for uint256;\n\n    /* ============ Events ============ */\n\n    event BidPlaced(\n        address indexed rebalancingSetToken,\n        address indexed bidder,\n        uint256 executionQuantity,\n        address[] combinedTokenAddresses,\n        uint256[] inflowTokenUnits,\n        uint256[] outflowTokenUnits\n    );\n\n    /* ============ Constructor ============ */\n\n    /**\n     * Constructor function for RebalanceAuctionModule\n     *\n     * @param _core       The address of Core\n     * @param _vault      The address of Vault\n     */\n    constructor(\n        address _core,\n        address _vault\n    )\n        public\n        ModuleCoreState(\n            _core,\n            _vault\n        )\n    {}\n\n    /* ============ Public Functions ============ */\n\n    /**\n     * Bid on rebalancing a given quantity of sets held by a rebalancing token\n     * The tokens are attributed to the user in the vault.\n     *\n     * @param  _rebalancingSetToken    Address of the rebalancing token being bid on\n     * @param  _quantity               Number of currentSets to rebalance\n     * @param  _allowPartialFill       Set to true if want to partially fill bid when quantity\n                                       is greater than currentRemainingSets\n     */\n    function bid(\n        address _rebalancingSetToken,\n        uint256 _quantity,\n        bool _allowPartialFill\n    )\n        external\n        nonReentrant\n    {\n        // If user allows partial fills calculate partial fill (if necessary)\n        uint256 executionQuantity = calculateExecutionQuantity(\n            _rebalancingSetToken,\n            _quantity,\n            _allowPartialFill\n        );\n\n        // Place bid and retrieve token inflows and outflows\n        address[] memory tokenArray;\n        uint256[] memory inflowUnitArray;\n        uint256[] memory outflowUnitArray;\n        (\n            tokenArray,\n            inflowUnitArray,\n            outflowUnitArray\n        ) = IRebalancingSetToken(_rebalancingSetToken).placeBid(executionQuantity);\n\n        // Retrieve tokens from bidder and deposit in vault for rebalancing set token\n        coreInstance.batchDepositModule(\n            msg.sender,\n            _rebalancingSetToken,\n            tokenArray,\n            inflowUnitArray\n        );\n\n        // Transfer ownership of tokens in vault from rebalancing set token to bidder\n        coreInstance.batchTransferBalanceModule(\n            tokenArray,\n            _rebalancingSetToken,\n            msg.sender,\n            outflowUnitArray\n        );\n\n        // Log bid placed event\n        emit BidPlaced(\n            _rebalancingSetToken,\n            msg.sender,\n            executionQuantity,\n            tokenArray,\n            inflowUnitArray,\n            outflowUnitArray\n        );\n    }\n\n    /**\n     * Bid on rebalancing a given quantity of sets held by a rebalancing token\n     * The tokens are returned to the user.\n     *\n     * @param  _rebalancingSetToken    Address of the rebalancing token being bid on\n     * @param  _quantity               Number of currentSets to rebalance\n     * @param  _allowPartialFill       Set to true if want to partially fill bid when quantity\n                                       is greater than currentRemainingSets\n     */\n    function bidAndWithdraw(\n        address _rebalancingSetToken,\n        uint256 _quantity,\n        bool _allowPartialFill\n    )\n        external\n        nonReentrant\n    {\n        // If user allows partial fills calculate partial fill (if necessary)\n        uint256 executionQuantity = calculateExecutionQuantity(\n            _rebalancingSetToken,\n            _quantity,\n            _allowPartialFill\n        );\n\n        // Place bid and retrieve token inflows and outflows\n        address[] memory tokenArray;\n        uint256[] memory inflowUnitArray;\n        uint256[] memory outflowUnitArray;\n        (\n            tokenArray,\n            inflowUnitArray,\n            outflowUnitArray\n        ) = IRebalancingSetToken(_rebalancingSetToken).placeBid(executionQuantity);\n\n        // Retrieve tokens from bidder and deposit in vault for rebalancing set token\n        coreInstance.batchDepositModule(\n            msg.sender,\n            _rebalancingSetToken,\n            tokenArray,\n            inflowUnitArray\n        );\n\n        // Withdraw tokens from Rebalancing Set Token vault account to bidder\n        coreInstance.batchWithdrawModule(\n            _rebalancingSetToken,\n            msg.sender,\n            tokenArray,\n            outflowUnitArray\n        );\n\n        // Log bid placed event\n        emit BidPlaced(\n            _rebalancingSetToken,\n            msg.sender,\n            executionQuantity,\n            tokenArray,\n            inflowUnitArray,\n            outflowUnitArray\n        );\n    }\n\n    /**\n     * If a Rebalancing Set Token Rebalance has failed (it includes paused token or exceeds gas limits)\n     * and been put in Drawdown state, user\'s can withdraw their portion of the components collateralizing\n     * the Rebalancing Set Token. This burns the user\'s portion of the Rebalancing Set Token.\n     *\n     * @param  _rebalancingSetToken    Address of the rebalancing token to withdraw from\n     */\n    function redeemFromFailedRebalance(\n        address _rebalancingSetToken\n    )\n        external\n        nonReentrant\n    {\n        // Create Rebalancing Set Token instance\n        IRebalancingSetToken rebalancingSetToken = IRebalancingSetToken(_rebalancingSetToken);\n\n        // Make sure the rebalancingSetToken is tracked by Core\n        require(\n            coreInstance.validSets(_rebalancingSetToken),\n            "RebalanceAuctionModule.redeemFromFailedRebalance: Invalid or disabled SetToken address"\n        );\n\n        // Get getFailedAuctionWithdrawComponents from RebalancingSetToken\n        address[] memory withdrawComponents = rebalancingSetToken.getFailedAuctionWithdrawComponents();\n\n        // Get Rebalancing Set Token\'s total supply\n        uint256 setTotalSupply = rebalancingSetToken.totalSupply();\n\n        // Get caller\'s balance\n        uint256 callerBalance = rebalancingSetToken.balanceOf(msg.sender);\n\n        // Get RebalancingSetToken component amounts and calculate caller\'s portion of each token\n        uint256 transferArrayLength = withdrawComponents.length;\n        uint256[] memory componentTransferAmount = new uint256[](transferArrayLength);\n        for (uint256 i = 0; i < transferArrayLength; i++) {\n            uint256 tokenCollateralAmount = vaultInstance.getOwnerBalance(\n                withdrawComponents[i],\n                _rebalancingSetToken\n            );\n            componentTransferAmount[i] = tokenCollateralAmount.mul(callerBalance).div(setTotalSupply);\n        }\n\n        // Burn caller\'s balance of Rebalancing Set Token\n        rebalancingSetToken.burn(\n            msg.sender,\n            callerBalance\n        );\n\n        // Transfer token amounts to caller in Vault from Rebalancing Set Token\n        coreInstance.batchTransferBalanceModule(\n            withdrawComponents,\n            _rebalancingSetToken,\n            msg.sender,\n            componentTransferAmount\n        );\n    }\n\n    /* ============ Internal Functions ============ */\n\n    /**\n     * Get execution quantity in event bid quantity exceeds remainingCurrentSets\n     *\n     * @param  _rebalancingSetToken    Address of the rebalancing token being bid on\n     * @param  _quantity               Number of currentSets to rebalance\n     * @param  _allowPartialFill       Set to true if want to partially fill bid when quantity\n                                       is greater than currentRemainingSets\n     * @return executionQuantity       Array of token addresses invovled in rebalancing\n     */\n    function calculateExecutionQuantity(\n        address _rebalancingSetToken,\n        uint256 _quantity,\n        bool _allowPartialFill\n    )\n        internal\n        view\n        returns (uint256)\n    {\n        // Make sure the rebalancingSetToken is tracked by Core\n        require(\n            coreInstance.validSets(_rebalancingSetToken),\n            "RebalanceAuctionModule.bid: Invalid or disabled SetToken address"\n        );\n\n        // Receive bidding parameters of current auction\n        uint256[] memory biddingParameters = IRebalancingSetToken(_rebalancingSetToken).getBiddingParameters();\n        uint256 minimumBid = biddingParameters[0];\n        uint256 remainingCurrentSets = biddingParameters[1];\n\n        if (_allowPartialFill && _quantity > remainingCurrentSets) {     \n            // If quantity is greater than remainingCurrentSets round amount to nearest multiple of\n            // minimumBid that is less than remainingCurrentSets\n            uint256 executionQuantity = remainingCurrentSets.div(minimumBid).mul(minimumBid);\n            return executionQuantity;\n        } else {\n            return _quantity;\n        }\n    }\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/RebalanceAuctionModule.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.585Z",devdoc:{author:"Set Protocol * The RebalanceAuctionModule is a smart contract that exposes bidding and failed rebalance functionality.",methods:{"bid(address,uint256,bool)":{params:{_allowPartialFill:"Set to true if want to partially fill bid when quantity is greater than currentRemainingSets",_quantity:"Number of currentSets to rebalance",_rebalancingSetToken:"Address of the rebalancing token being bid on"}},"bidAndWithdraw(address,uint256,bool)":{params:{_allowPartialFill:"Set to true if want to partially fill bid when quantity is greater than currentRemainingSets",_quantity:"Number of currentSets to rebalance",_rebalancingSetToken:"Address of the rebalancing token being bid on"}},constructor:{params:{_core:"The address of Core",_vault:"The address of Vault"}},"redeemFromFailedRebalance(address)":{params:{_rebalancingSetToken:"Address of the rebalancing token to withdraw from"}}},title:"RebalanceAuctionModule"},userdoc:{methods:{"bid(address,uint256,bool)":{notice:"Bid on rebalancing a given quantity of sets held by a rebalancing token The tokens are attributed to the user in the vault."},"bidAndWithdraw(address,uint256,bool)":{notice:"Bid on rebalancing a given quantity of sets held by a rebalancing token The tokens are returned to the user."},constructor:"Constructor function for RebalanceAuctionModule","redeemFromFailedRebalance(address)":{notice:"If a Rebalancing Set Token Rebalance has failed (it includes paused token or exceeds gas limits) and been put in Drawdown state, user's can withdraw their portion of the components collateralizing the Rebalancing Set Token. This burns the user's portion of the Rebalancing Set Token."}}}};