"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SetTokenLibrary={contractName:"SetTokenLibrary",abi:[{constant:true,inputs:[{name:"_set",type:"address"},{name:"_tokens",type:"address[]"}],name:"validateTokensAreComponents",outputs:[],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"},{name:"_quantity",type:"uint256"}],name:"isMultipleOfSetNaturalUnit",outputs:[],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[{"name":"_set","type":"address"},{"name":"_tokens","type":"address[]"}],"name":"validateTokensAreComponents","outputs":[],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"},{"name":"_quantity","type":"uint256"}],"name":"isMultipleOfSetNaturalUnit","outputs":[],"payable":false,"stateMutability":"view","type":"function"}],"devdoc":{"methods":{"isMultipleOfSetNaturalUnit(address,uint256)":{"params":{"_quantity":"Quantity to validate","_set":"Address of the Set"}},"validateTokensAreComponents(address,address[])":{"params":{"_set":"Address of the Set","_tokens":"List of tokens to check"}}}},"userdoc":{"methods":{"isMultipleOfSetNaturalUnit(address,uint256)":{"notice":"Validates that passed in quantity is a multiple of the natural unit of the Set."},"validateTokensAreComponents(address,address[])":{"notice":"Validates that passed in tokens are all components of the Set"}}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/SetTokenLibrary.sol":"SetTokenLibrary"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICore.sol":{"keccak256":"0x5dc3db4398630ea52d2a40c9ddfa89d94e65c2770a12bab4d2a5c8eb573fb0a0","urls":["bzzr://25e90b53f61b388e0950b808e2296f82d427b66cfd6021212713436b2a592e31"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetToken.sol":{"keccak256":"0xfa6c0c07f8394d89b6b8f72e15778f8452a9341acb20cebb8421f3522aaca1bd","urls":["bzzr://ccf23bb78fd507bf8cbf5cf7ac2a660a1463b87a3689196e42b8f6862d1a6b11"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/SetTokenLibrary.sol":{"keccak256":"0x0c0952057a64c3af0ace01db29258145deff7d935bdc53d1bbab6fff87b3b146","urls":["bzzr://ad1944f45fade934870661a4e91c260625755760ff0ef047677547fbdc6a16bf"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]}},"version":1}',bytecode:"0x61056b610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100435760e060020a600035046303cd88708114610048578063494684571461005d575b600080fd5b61005b6100563660046102e7565b610070565b005b61005b61006b36600461033d565b61017c565b60005b81811015610176578373ffffffffffffffffffffffffffffffffffffffff166318c53aca8484848181106100a357fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e060020a0281526004016100df91906104d4565b60206040518083038186803b1580156100f757600080fd5b505afa15801561010b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061012f9190810190610377565b61016e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610165906104e2565b60405180910390fd5b600101610073565b50505050565b61020d8273ffffffffffffffffffffffffffffffffffffffff166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156101c857600080fd5b505afa1580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610200919081019061039d565b829063ffffffff61024816565b15610244576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610165906104f2565b5050565b60008161025457600080fd5b81838161025d57fe5b0690505b92915050565b6000610273823561050b565b9392505050565b60008083601f84011261028c57600080fd5b50813567ffffffffffffffff8111156102a457600080fd5b6020830191508360208202830111156102bc57600080fd5b9250929050565b60006102738251610529565b6000610273823561052e565b6000610273825161052e565b6000806000604084860312156102fc57600080fd5b60006103088686610267565b935050602084013567ffffffffffffffff81111561032557600080fd5b6103318682870161027a565b92509250509250925092565b6000806040838503121561035057600080fd5b600061035c8585610267565b925050602061036d858286016102cf565b9150509250929050565b60006020828403121561038957600080fd5b600061039584846102c3565b949350505050565b6000602082840312156103af57600080fd5b600061039584846102db565b6103c48161050b565b82525050565b60006103d7604e83610502565b7f536574546f6b656e4c6962726172792e76616c6964617465546f6b656e73417281527f65436f6d706f6e656e74733a20436f6d706f6e656e74206d757374206265206160208201527f206d656d626572206f6620536574000000000000000000000000000000000000604082015260600192915050565b600061045c605283610502565b7f536574546f6b656e4c6962726172792e69734d756c7469706c654f665365744e81527f61747572616c556e69743a205175616e74697479206973206e6f742061206d7560208201527f6c7469706c65206f66206e617420756e69740000000000000000000000000000604082015260600192915050565b6020810161026182846103bb565b60208082528101610261816103ca565b602080825281016102618161044f565b90815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8216610261565b151590565b9056fea265627a7a723058209da6ecdef7565f4375a7b89b516360d35b484c6c02026bd7364fc7ed0a64eed66c6578706572696d656e74616cf50037",deployedBytecode:"0x73000000000000000000000000000000000000000030146080604052600436106100435760e060020a600035046303cd88708114610048578063494684571461005d575b600080fd5b61005b6100563660046102e7565b610070565b005b61005b61006b36600461033d565b61017c565b60005b81811015610176578373ffffffffffffffffffffffffffffffffffffffff166318c53aca8484848181106100a357fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e060020a0281526004016100df91906104d4565b60206040518083038186803b1580156100f757600080fd5b505afa15801561010b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061012f9190810190610377565b61016e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610165906104e2565b60405180910390fd5b600101610073565b50505050565b61020d8273ffffffffffffffffffffffffffffffffffffffff166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156101c857600080fd5b505afa1580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610200919081019061039d565b829063ffffffff61024816565b15610244576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610165906104f2565b5050565b60008161025457600080fd5b81838161025d57fe5b0690505b92915050565b6000610273823561050b565b9392505050565b60008083601f84011261028c57600080fd5b50813567ffffffffffffffff8111156102a457600080fd5b6020830191508360208202830111156102bc57600080fd5b9250929050565b60006102738251610529565b6000610273823561052e565b6000610273825161052e565b6000806000604084860312156102fc57600080fd5b60006103088686610267565b935050602084013567ffffffffffffffff81111561032557600080fd5b6103318682870161027a565b92509250509250925092565b6000806040838503121561035057600080fd5b600061035c8585610267565b925050602061036d858286016102cf565b9150509250929050565b60006020828403121561038957600080fd5b600061039584846102c3565b949350505050565b6000602082840312156103af57600080fd5b600061039584846102db565b6103c48161050b565b82525050565b60006103d7604e83610502565b7f536574546f6b656e4c6962726172792e76616c6964617465546f6b656e73417281527f65436f6d706f6e656e74733a20436f6d706f6e656e74206d757374206265206160208201527f206d656d626572206f6620536574000000000000000000000000000000000000604082015260600192915050565b600061045c605283610502565b7f536574546f6b656e4c6962726172792e69734d756c7469706c654f665365744e81527f61747572616c556e69743a205175616e74697479206973206e6f742061206d7560208201527f6c7469706c65206f66206e617420756e69740000000000000000000000000000604082015260600192915050565b6020810161026182846103bb565b60208082528101610261816103ca565b602080825281016102618161044f565b90815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8216610261565b151590565b9056fea265627a7a723058209da6ecdef7565f4375a7b89b516360d35b484c6c02026bd7364fc7ed0a64eed66c6578706572696d656e74616cf50037",sourceMap:"842:2704:46:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",deployedSourceMap:"842:2704:46:-;;;;;;;;;;;-1:-1:-1;;;842:2704:46;;;;;;;;;;;;;;;;;1235:462;;;;;;;;;:::i;:::-;;1933:320;;;;;;;;;:::i;1235:462::-;1385:9;1380:311;1400:18;;;1380:311;;;1533:4;1523:32;;;1556:7;;1564:1;1556:10;;;;;;;;;;;;;;;1523:44;;;;;-1:-1:-1;;;1523:44:46;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1523:44:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1523:44:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1523:44:46;;;;;;;;;1498:181;;;;;;;;;;;;;;;;;;;;;;1420:3;;1380:311;;;;1235:462;;;:::o;1933:320::-;2089:44;2113:4;2103:27;;;:29;;;;;-1:-1:-1;;;2103:29:46;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2103:29:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2103:29:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2103:29:46;;;;;;;;;2089:9;;:44;:13;:44;:::i;:::-;:49;2068:178;;;;;;;;;;;;;;1933:320;;:::o;1739:121:166:-;1797:7;1824:6;1816:15;;;;;;1852:1;1848;:5;;;;;;1841:12;;1739:121;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;148:352;;;278:3;271:4;263:6;259:17;255:27;245:2;;296:1;293;286:12;245:2;-1:-1;316:20;;356:18;345:30;;342:2;;;388:1;385;378:12;342:2;422:4;414:6;410:17;398:29;;473:3;465:4;457:6;453:17;443:8;439:32;436:41;433:2;;;490:1;487;480:12;433:2;238:262;;;;;;508:116;;583:36;611:6;605:13;583:36;;631:118;;698:46;736:6;723:20;698:46;;756:122;;834:39;865:6;859:13;834:39;;885:522;;;;1041:2;1029:9;1020:7;1016:23;1012:32;1009:2;;;1057:1;1054;1047:12;1009:2;1092:1;1109:53;1154:7;1134:9;1109:53;;;1099:63;;1071:97;1227:2;1216:9;1212:18;1199:32;1251:18;1243:6;1240:30;1237:2;;;1283:1;1280;1273:12;1237:2;1311:80;1383:7;1374:6;1363:9;1359:22;1311:80;;;1301:90;;;;1178:219;1003:404;;;;;;1414:366;;;1535:2;1523:9;1514:7;1510:23;1506:32;1503:2;;;1551:1;1548;1541:12;1503:2;1586:1;1603:53;1648:7;1628:9;1603:53;;;1593:63;;1565:97;1693:2;1711:53;1756:7;1747:6;1736:9;1732:22;1711:53;;;1701:63;;1672:98;1497:283;;;;;;1787:257;;1899:2;1887:9;1878:7;1874:23;1870:32;1867:2;;;1915:1;1912;1905:12;1867:2;1950:1;1967:61;2020:7;2000:9;1967:61;;;1957:71;1861:183;-1:-1;;;;1861:183;2051:263;;2166:2;2154:9;2145:7;2141:23;2137:32;2134:2;;;2182:1;2179;2172:12;2134:2;2217:1;2234:64;2290:7;2270:9;2234:64;;2321:120;2404:31;2429:5;2404:31;;;2399:3;2392:44;2386:55;;;2449:566;;2609:67;2673:2;2668:3;2609:67;;;2709:66;2689:87;;2810:66;2805:2;2796:12;;2789:88;2911:66;2906:2;2897:12;;2890:88;3006:2;2997:12;;2595:420;-1:-1;;2595:420;3024:566;;3184:67;3248:2;3243:3;3184:67;;;3284:66;3264:87;;3385:66;3380:2;3371:12;;3364:88;3486:66;3481:2;3472:12;;3465:88;3581:2;3572:12;;3170:420;-1:-1;;3170:420;3598:213;3716:2;3701:18;;3730:71;3705:9;3774:6;3730:71;;3818:407;4009:2;4023:47;;;3994:18;;4084:131;3994:18;4084:131;;4232:407;4423:2;4437:47;;;4408:18;;4498:131;4408:18;4498:131;;4647:163;4750:19;;;4799:4;4790:14;;4743:67;4818:105;;5010:42;4999:54;;4887:31;4982:76;5177:92;5250:13;5243:21;;5226:43;5411:79;5480:5;5463:27",source:'/*\n    Copyright 2018 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\n\nimport { ICore} from "../interfaces/ICore.sol";\nimport { ISetToken} from "../interfaces/ISetToken.sol";\n\n\nlibrary SetTokenLibrary {\n    using SafeMath for uint256;\n\n    struct SetDetails {\n        uint256 naturalUnit;\n        address[] components;\n        uint256[] units;\n    }\n\n    /**\n     * Validates that passed in tokens are all components of the Set\n     *\n     * @param _set                      Address of the Set\n     * @param _tokens                   List of tokens to check\n     */\n    function validateTokensAreComponents(\n        address _set,\n        address[] calldata _tokens\n    )\n        external\n        view\n    {\n        for (uint256 i = 0; i < _tokens.length; i++) {\n            // Make sure all tokens are members of the Set\n            require(\n                ISetToken(_set).tokenIsComponent(_tokens[i]),\n                "SetTokenLibrary.validateTokensAreComponents: Component must be a member of Set"\n            );\n\n        }\n    }\n\n    /**\n     * Validates that passed in quantity is a multiple of the natural unit of the Set.\n     *\n     * @param _set                      Address of the Set\n     * @param _quantity                 Quantity to validate\n     */\n    function isMultipleOfSetNaturalUnit(\n        address _set,\n        uint256 _quantity\n    )\n        external\n        view\n    {\n        require(\n            _quantity.mod(ISetToken(_set).naturalUnit()) == 0,\n            "SetTokenLibrary.isMultipleOfSetNaturalUnit: Quantity is not a multiple of nat unit"\n        );\n    }\n\n    /**\n     * Validates that passed in quantity is a multiple of the natural unit of the Set.\n     *\n     * @param _core                     Address of Core\n     * @param _set                      Address of the Set\n     */\n    function requireValidSet(\n        ICore _core,\n        address _set\n    )\n        internal\n        view\n    {\n        require(\n            _core.validSets(_set),\n            "SetTokenLibrary: Must be an approved SetToken address"\n        );\n    }\n\n    /**\n     * Retrieves the Set\'s natural unit, components, and units.\n     *\n     * @param _set                      Address of the Set\n     * @return SetDetails               Struct containing the natural unit, components, and units\n     */\n    function getSetDetails(\n        address _set\n    )\n        internal\n        view\n        returns (SetDetails memory)\n    {\n        // Declare interface variables\n        ISetToken setToken = ISetToken(_set);\n\n        // Fetch set token properties\n        uint256 naturalUnit = setToken.naturalUnit();\n        address[] memory components = setToken.getComponents();\n        uint256[] memory units = setToken.getUnits();\n\n        return SetDetails({\n            naturalUnit: naturalUnit,\n            components: components,\n            units: units\n        });\n    }\n}',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/SetTokenLibrary.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.466Z",devdoc:{methods:{"isMultipleOfSetNaturalUnit(address,uint256)":{params:{_quantity:"Quantity to validate",_set:"Address of the Set"}},"validateTokensAreComponents(address,address[])":{params:{_set:"Address of the Set",_tokens:"List of tokens to check"}}}},userdoc:{methods:{"isMultipleOfSetNaturalUnit(address,uint256)":{notice:"Validates that passed in quantity is a multiple of the natural unit of the Set."},"validateTokensAreComponents(address,address[])":{notice:"Validates that passed in tokens are all components of the Set"}}}};