"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ERC20Wrapper={contractName:"ERC20Wrapper",abi:[{constant:true,inputs:[{name:"_token",type:"address"},{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[{"name":"_token","type":"address"},{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"devdoc":{"author":"Set Protocol * This library contains functions for interacting wtih ERC20 tokens, even those not fully compliant. For all functions we will only accept tokens that return a null or true value, any other values will cause the operation to revert.","methods":{"balanceOf(address,address)":{"params":{"_owner":"The owner who\'s balance is being checked","_token":"The address of the ERC20 token"},"return":"uint256        The _owner\'s amount of tokens"},"transfer(address,address,uint256)":{"params":{"_quantity":"The amount of tokens to transfer","_to":"The address to transfer to","_token":"The address of the ERC20 token"}},"transferFrom(address,address,address,uint256)":{"params":{"_from":"The address to transfer from","_quantity":"The number of tokens to transfer","_to":"The address to transfer to","_token":"The address of the ERC20 token"}}},"title":"ERC20Wrapper"},"userdoc":{"methods":{"balanceOf(address,address)":{"notice":"Check balance owner\'s balance of ERC20 token"},"transfer(address,address,uint256)":{"notice":"Transfers tokens from an address. Handle\'s tokens that return true or null. If other value returned, reverts."},"transferFrom(address,address,address,uint256)":{"notice":"Transfers tokens from an address (that has set allowance on the proxy). Handle\'s tokens that return true or null. If other value returned, reverts."}}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/ERC20Wrapper.sol":"ERC20Wrapper"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/ERC20Wrapper.sol":{"keccak256":"0x09fdf2adbbcbe2ce6cf3924c8cae4e206cd501c3daca55d43c847d310150ceb8","urls":["bzzr://f2866ffe2b523888937071b65dd86d89a6e61161fd2d1ce1b9b52ea23914337d"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/IERC20.sol":{"keccak256":"0xe4f71b1797f6421de91c6ce3b55199c5845693a58eddfd417a60b81d0198a9dd","urls":["bzzr://a6a4cebcffaff1db8ef9b78ea58d2d7391cc2b1ed533a1e1309286989f6d4ea0"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"set-protocol-contract-utils/contracts/lib/CommonMath.sol":{"keccak256":"0x3d1d08c6efc2a973fe2c02ddcb02fd99a8c8eb75f74dcbd93e8e15864eee2b6b","urls":["bzzr://580815dd1cf648a4521d923e59087de21143d9c48115ab71579a1f5a8f3d36af"]}},"version":1}',bytecode:"0x61042d610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004e5760e060020a600035046315dacbea8114610053578063beabacc81461009e578063f7888aec146100e1575b600080fd5b81801561005f57600080fd5b5061009c6004803603608081101561007657600080fd5b50600160a060020a03813581169160208101358216916040820135169060600135610121565b005b8180156100aa57600080fd5b5061009c600480360360608110156100c157600080fd5b50600160a060020a0381358116916020810135909116906040013561020f565b61010f600480360360408110156100f757600080fd5b50600160a060020a03813581169160200135166102ec565b60408051918252519081900360200190f35b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a0385811660048301528481166024830152604482018490529151918616916323b872dd9160648082019260009290919082900301818387803b15801561019457600080fd5b505af11580156101a8573d6000803e3d6000fd5b505050506101b461037a565b610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806103b0602b913960400191505060405180910390fd5b50505050565b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561027257600080fd5b505af1158015610286573d6000803e3d6000fd5b5050505061029261037a565b6102e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806103db6027913960400191505060405180910390fd5b505050565b600082600160a060020a03166370a08231836040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b15801561034757600080fd5b505afa15801561035b573d6000803e3d6000fd5b505050506040513d602081101561037157600080fd5b50519392505050565b6000803d8015610391576020811461039a576103a6565b600191506103a6565b60206000803e60005191505b5060011490509056fe4552433230577261707065722e7472616e7366657246726f6d3a204261642072657475726e2076616c75654552433230577261707065722e7472616e736665723a204261642072657475726e2076616c7565a165627a7a72305820f348535274a7ed9cc692f6f39c5a28bd2e3e7cc3517740604c830a536606b90c0029",deployedBytecode:"0x730000000000000000000000000000000000000000301460806040526004361061004e5760e060020a600035046315dacbea8114610053578063beabacc81461009e578063f7888aec146100e1575b600080fd5b81801561005f57600080fd5b5061009c6004803603608081101561007657600080fd5b50600160a060020a03813581169160208101358216916040820135169060600135610121565b005b8180156100aa57600080fd5b5061009c600480360360608110156100c157600080fd5b50600160a060020a0381358116916020810135909116906040013561020f565b61010f600480360360408110156100f757600080fd5b50600160a060020a03813581169160200135166102ec565b60408051918252519081900360200190f35b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a0385811660048301528481166024830152604482018490529151918616916323b872dd9160648082019260009290919082900301818387803b15801561019457600080fd5b505af11580156101a8573d6000803e3d6000fd5b505050506101b461037a565b610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806103b0602b913960400191505060405180910390fd5b50505050565b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561027257600080fd5b505af1158015610286573d6000803e3d6000fd5b5050505061029261037a565b6102e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806103db6027913960400191505060405180910390fd5b505050565b600082600160a060020a03166370a08231836040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b15801561034757600080fd5b505afa15801561035b573d6000803e3d6000fd5b505050506040513d602081101561037157600080fd5b50519392505050565b6000803d8015610391576020811461039a576103a6565b600191506103a6565b60206000803e60005191505b5060011490509056fe4552433230577261707065722e7472616e7366657246726f6d3a204261642072657475726e2076616c75654552433230577261707065722e7472616e736665723a204261642072657475726e2076616c7565a165627a7a72305820f348535274a7ed9cc692f6f39c5a28bd2e3e7cc3517740604c830a536606b90c0029",sourceMap:"1048:5198:118:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",deployedSourceMap:"1048:5198:118:-;;;;;;;;;;;-1:-1:-1;;;1048:5198:118;;;;;;;;;;;;;;;;;;;;;;3286:382;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3286:382:118;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;3286:382:118;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2515:336;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2515:336:118;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2515:336:118;;;;;;;;;;;;;;;;;:::i;1399:189::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1399:189:118;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3286:382;3440:50;;;;;;-1:-1:-1;;;;;3440:50:118;;;;;;;;;;;;;;;;;;;;;;:27;;;;;;:50;;;;;-1:-1:-1;;3440:50:118;;;;;;;;-1:-1:-1;3440:27:118;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;3440:50:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3440:50:118;;;;3578:14;:12;:14::i;:::-;3557:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3286:382;;;;:::o;2515:336::-;2649:6;-1:-1:-1;;;;;2642:23:118;;2666:3;2671:9;2642:39;;;;;-1:-1:-1;;;2642:39:118;;;;;;;-1:-1:-1;;;;;2642:39:118;-1:-1:-1;;;;;2642:39:118;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2642:39:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2642:39:118;;;;2765:14;:12;:14::i;:::-;2744:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:336;;;:::o;1399:189::-;1519:7;1556:6;-1:-1:-1;;;;;1549:24:118;;1574:6;1549:32;;;;;-1:-1:-1;;;1549:32:118;;;;;;;-1:-1:-1;;;;;1549:32:118;-1:-1:-1;;;;;1549:32:118;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1549:32:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1549:32:118;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1549:32:118;;1399:189;-1:-1:-1;;;1399:189:118:o;5392:852::-;5467:4;;5651:14;5728:57;;;;5837:4;5832:220;;;;5644:497;;5728:57;5770:1;5755:16;;5728:57;;5832:220;5937:4;5932:3;5927;5912:30;6034:3;6028:10;6013:25;;5644:497;-1:-1:-1;6236:1:118;6221:16;;-1:-1:-1;5392:852:118;:::o",source:'/*\n    Copyright 2018 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\n\nimport { CommonMath } from "set-protocol-contract-utils/contracts/lib/CommonMath.sol";\n\nimport { IERC20 } from "./IERC20.sol";\n\n\n/**\n * @title ERC20Wrapper\n * @author Set Protocol\n *\n * This library contains functions for interacting wtih ERC20 tokens, even those not fully compliant.\n * For all functions we will only accept tokens that return a null or true value, any other values will\n * cause the operation to revert.\n */\nlibrary ERC20Wrapper {\n\n    // ============ Internal Functions ============\n\n    /**\n     * Check balance owner\'s balance of ERC20 token\n     *\n     * @param  _token          The address of the ERC20 token\n     * @param  _owner          The owner who\'s balance is being checked\n     * @return  uint256        The _owner\'s amount of tokens\n     */\n    function balanceOf(\n        address _token,\n        address _owner\n    )\n        external\n        view\n        returns (uint256)\n    {\n        return IERC20(_token).balanceOf(_owner);\n    }\n\n    /**\n     * Checks spender\'s allowance to use token\'s on owner\'s behalf.\n     *\n     * @param  _token          The address of the ERC20 token\n     * @param  _owner          The token owner address\n     * @param  _spender        The address the allowance is being checked on\n     * @return  uint256        The spender\'s allowance on behalf of owner\n     */\n    function allowance(\n        address _token,\n        address _owner,\n        address _spender\n    )\n        internal\n        view\n        returns (uint256)\n    {\n        return IERC20(_token).allowance(_owner, _spender);\n    }\n\n    /**\n     * Transfers tokens from an address. Handle\'s tokens that return true or null.\n     * If other value returned, reverts.\n     *\n     * @param  _token          The address of the ERC20 token\n     * @param  _to             The address to transfer to\n     * @param  _quantity       The amount of tokens to transfer\n     */\n    function transfer(\n        address _token,\n        address _to,\n        uint256 _quantity\n    )\n        external\n    {\n        IERC20(_token).transfer(_to, _quantity);\n\n        // Check that transfer returns true or null\n        require(\n            checkSuccess(),\n            "ERC20Wrapper.transfer: Bad return value"\n        );\n    }\n\n    /**\n     * Transfers tokens from an address (that has set allowance on the proxy).\n     * Handle\'s tokens that return true or null. If other value returned, reverts.\n     *\n     * @param  _token          The address of the ERC20 token\n     * @param  _from           The address to transfer from\n     * @param  _to             The address to transfer to\n     * @param  _quantity       The number of tokens to transfer\n     */\n    function transferFrom(\n        address _token,\n        address _from,\n        address _to,\n        uint256 _quantity\n    )\n        external\n    {\n        IERC20(_token).transferFrom(_from, _to, _quantity);\n\n        // Check that transferFrom returns true or null\n        require(\n            checkSuccess(),\n            "ERC20Wrapper.transferFrom: Bad return value"\n        );\n    }\n\n    /**\n     * Grants spender ability to spend on owner\'s behalf.\n     * Handle\'s tokens that return true or null. If other value returned, reverts.\n     *\n     * @param  _token          The address of the ERC20 token\n     * @param  _spender        The address to approve for transfer\n     * @param  _quantity       The amount of tokens to approve spender for\n     */\n    function approve(\n        address _token,\n        address _spender,\n        uint256 _quantity\n    )\n        internal\n    {\n        IERC20(_token).approve(_spender, _quantity);\n\n        // Check that approve returns true or null\n        require(\n            checkSuccess(),\n            "ERC20Wrapper.approve: Bad return value"\n        );\n    }\n\n    /**\n     * Ensure\'s the owner has granted enough allowance for system to\n     * transfer tokens.\n     *\n     * @param  _token          The address of the ERC20 token\n     * @param  _owner          The address of the token owner\n     * @param  _spender        The address to grant/check allowance for\n     * @param  _quantity       The amount to see if allowed for\n     */\n    function ensureAllowance(\n        address _token,\n        address _owner,\n        address _spender,\n        uint256 _quantity\n    )\n        internal\n    {\n        uint256 currentAllowance = allowance(_token, _owner, _spender);\n        if (currentAllowance < _quantity) {\n            approve(\n                _token,\n                _spender,\n                CommonMath.maxUInt256()\n            );\n        }\n    }\n\n    // ============ Private Functions ============\n\n    /**\n     * Checks the return value of the previous function up to 32 bytes. Returns true if the previous\n     * function returned 0 bytes or 1.\n     */\n    function checkSuccess(\n    )\n        private\n        pure\n        returns (bool)\n    {\n        // default to failure\n        uint256 returnValue = 0;\n\n        assembly {\n            // check number of bytes returned from last function call\n            switch returndatasize\n\n            // no bytes returned: assume success\n            case 0x0 {\n                returnValue := 1\n            }\n\n            // 32 bytes returned\n            case 0x20 {\n                // copy 32 bytes into scratch space\n                returndatacopy(0x0, 0x0, 0x20)\n\n                // load those bytes into returnValue\n                returnValue := mload(0x0)\n            }\n\n            // not sure what was returned: dont mark as success\n            default { }\n        }\n\n        // check if returned value is one or nothing\n        return returnValue == 1;\n    }\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/ERC20Wrapper.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:37.023Z",devdoc:{author:"Set Protocol * This library contains functions for interacting wtih ERC20 tokens, even those not fully compliant. For all functions we will only accept tokens that return a null or true value, any other values will cause the operation to revert.",methods:{"balanceOf(address,address)":{params:{_owner:"The owner who's balance is being checked",_token:"The address of the ERC20 token"},"return":"uint256        The _owner's amount of tokens"},"transfer(address,address,uint256)":{params:{_quantity:"The amount of tokens to transfer",_to:"The address to transfer to",_token:"The address of the ERC20 token"}},"transferFrom(address,address,address,uint256)":{params:{_from:"The address to transfer from",_quantity:"The number of tokens to transfer",_to:"The address to transfer to",_token:"The address of the ERC20 token"}}},title:"ERC20Wrapper"},userdoc:{methods:{"balanceOf(address,address)":{notice:"Check balance owner's balance of ERC20 token"},"transfer(address,address,uint256)":{notice:"Transfers tokens from an address. Handle's tokens that return true or null. If other value returned, reverts."},"transferFrom(address,address,address,uint256)":{notice:"Transfers tokens from an address (that has set allowance on the proxy). Handle's tokens that return true or null. If other value returned, reverts."}}}};