"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.IWrapperFunctions={contractName:"IWrapperFunctions",abi:[{constant:false,inputs:[{components:[{name:"makerAddress",type:"address"},{name:"takerAddress",type:"address"},{name:"feeRecipientAddress",type:"address"},{name:"senderAddress",type:"address"},{name:"makerAssetAmount",type:"uint256"},{name:"takerAssetAmount",type:"uint256"},{name:"makerFee",type:"uint256"},{name:"takerFee",type:"uint256"},{name:"expirationTimeSeconds",type:"uint256"},{name:"salt",type:"uint256"},{name:"makerAssetData",type:"bytes"},{name:"takerAssetData",type:"bytes"}],name:"order",type:"tuple"},{name:"takerAssetFillAmount",type:"uint256"},{name:"signature",type:"bytes"}],name:"fillOrKillOrder",outputs:[{components:[{name:"makerAssetFilledAmount",type:"uint256"},{name:"takerAssetFilledAmount",type:"uint256"},{name:"makerFeePaid",type:"uint256"},{name:"takerFeePaid",type:"uint256"}],name:"fillResults",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{components:[{name:"makerAddress",type:"address"},{name:"takerAddress",type:"address"},{name:"feeRecipientAddress",type:"address"},{name:"senderAddress",type:"address"},{name:"makerAssetAmount",type:"uint256"},{name:"takerAssetAmount",type:"uint256"},{name:"makerFee",type:"uint256"},{name:"takerFee",type:"uint256"},{name:"expirationTimeSeconds",type:"uint256"},{name:"salt",type:"uint256"},{name:"makerAssetData",type:"bytes"},{name:"takerAssetData",type:"bytes"}],name:"order",type:"tuple"},{name:"takerAssetFillAmount",type:"uint256"},{name:"signature",type:"bytes"}],name:"fillOrderNoThrow",outputs:[{components:[{name:"makerAssetFilledAmount",type:"uint256"},{name:"takerAssetFilledAmount",type:"uint256"},{name:"makerFeePaid",type:"uint256"},{name:"takerFeePaid",type:"uint256"}],name:"fillResults",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{components:[{name:"makerAddress",type:"address"},{name:"takerAddress",type:"address"},{name:"feeRecipientAddress",type:"address"},{name:"senderAddress",type:"address"},{name:"makerAssetAmount",type:"uint256"},{name:"takerAssetAmount",type:"uint256"},{name:"makerFee",type:"uint256"},{name:"takerFee",type:"uint256"},{name:"expirationTimeSeconds",type:"uint256"},{name:"salt",type:"uint256"},{name:"makerAssetData",type:"bytes"},{name:"takerAssetData",type:"bytes"}],name:"orders",type:"tuple[]"},{name:"takerAssetFillAmounts",type:"uint256[]"},{name:"signatures",type:"bytes[]"}],name:"batchFillOrders",outputs:[{components:[{name:"makerAssetFilledAmount",type:"uint256"},{name:"takerAssetFilledAmount",type:"uint256"},{name:"makerFeePaid",type:"uint256"},{name:"takerFeePaid",type:"uint256"}],name:"totalFillResults",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{components:[{name:"makerAddress",type:"address"},{name:"takerAddress",type:"address"},{name:"feeRecipientAddress",type:"address"},{name:"senderAddress",type:"address"},{name:"makerAssetAmount",type:"uint256"},{name:"takerAssetAmount",type:"uint256"},{name:"makerFee",type:"uint256"},{name:"takerFee",type:"uint256"},{name:"expirationTimeSeconds",type:"uint256"},{name:"salt",type:"uint256"},{name:"makerAssetData",type:"bytes"},{name:"takerAssetData",type:"bytes"}],name:"orders",type:"tuple[]"},{name:"takerAssetFillAmounts",type:"uint256[]"},{name:"signatures",type:"bytes[]"}],name:"batchFillOrKillOrders",outputs:[{components:[{name:"makerAssetFilledAmount",type:"uint256"},{name:"takerAssetFilledAmount",type:"uint256"},{name:"makerFeePaid",type:"uint256"},{name:"takerFeePaid",type:"uint256"}],name:"totalFillResults",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{components:[{name:"makerAddress",type:"address"},{name:"takerAddress",type:"address"},{name:"feeRecipientAddress",type:"address"},{name:"senderAddress",type:"address"},{name:"makerAssetAmount",type:"uint256"},{name:"takerAssetAmount",type:"uint256"},{name:"makerFee",type:"uint256"},{name:"takerFee",type:"uint256"},{name:"expirationTimeSeconds",type:"uint256"},{name:"salt",type:"uint256"},{name:"makerAssetData",type:"bytes"},{name:"takerAssetData",type:"bytes"}],name:"orders",type:"tuple[]"},{name:"takerAssetFillAmounts",type:"uint256[]"},{name:"signatures",type:"bytes[]"}],name:"batchFillOrdersNoThrow",outputs:[{components:[{name:"makerAssetFilledAmount",type:"uint256"},{name:"takerAssetFilledAmount",type:"uint256"},{name:"makerFeePaid",type:"uint256"},{name:"takerFeePaid",type:"uint256"}],name:"totalFillResults",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{components:[{name:"makerAddress",type:"address"},{name:"takerAddress",type:"address"},{name:"feeRecipientAddress",type:"address"},{name:"senderAddress",type:"address"},{name:"makerAssetAmount",type:"uint256"},{name:"takerAssetAmount",type:"uint256"},{name:"makerFee",type:"uint256"},{name:"takerFee",type:"uint256"},{name:"expirationTimeSeconds",type:"uint256"},{name:"salt",type:"uint256"},{name:"makerAssetData",type:"bytes"},{name:"takerAssetData",type:"bytes"}],name:"orders",type:"tuple[]"},{name:"takerAssetFillAmount",type:"uint256"},{name:"signatures",type:"bytes[]"}],name:"marketSellOrders",outputs:[{components:[{name:"makerAssetFilledAmount",type:"uint256"},{name:"takerAssetFilledAmount",type:"uint256"},{name:"makerFeePaid",type:"uint256"},{name:"takerFeePaid",type:"uint256"}],name:"totalFillResults",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{components:[{name:"makerAddress",type:"address"},{name:"takerAddress",type:"address"},{name:"feeRecipientAddress",type:"address"},{name:"senderAddress",type:"address"},{name:"makerAssetAmount",type:"uint256"},{name:"takerAssetAmount",type:"uint256"},{name:"makerFee",type:"uint256"},{name:"takerFee",type:"uint256"},{name:"expirationTimeSeconds",type:"uint256"},{name:"salt",type:"uint256"},{name:"makerAssetData",type:"bytes"},{name:"takerAssetData",type:"bytes"}],name:"orders",type:"tuple[]"},{name:"takerAssetFillAmount",type:"uint256"},{name:"signatures",type:"bytes[]"}],name:"marketSellOrdersNoThrow",outputs:[{components:[{name:"makerAssetFilledAmount",type:"uint256"},{name:"takerAssetFilledAmount",type:"uint256"},{name:"makerFeePaid",type:"uint256"},{name:"takerFeePaid",type:"uint256"}],name:"totalFillResults",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{components:[{name:"makerAddress",type:"address"},{name:"takerAddress",type:"address"},{name:"feeRecipientAddress",type:"address"},{name:"senderAddress",type:"address"},{name:"makerAssetAmount",type:"uint256"},{name:"takerAssetAmount",type:"uint256"},{name:"makerFee",type:"uint256"},{name:"takerFee",type:"uint256"},{name:"expirationTimeSeconds",type:"uint256"},{name:"salt",type:"uint256"},{name:"makerAssetData",type:"bytes"},{name:"takerAssetData",type:"bytes"}],name:"orders",type:"tuple[]"},{name:"makerAssetFillAmount",type:"uint256"},{name:"signatures",type:"bytes[]"}],name:"marketBuyOrders",outputs:[{components:[{name:"makerAssetFilledAmount",type:"uint256"},{name:"takerAssetFilledAmount",type:"uint256"},{name:"makerFeePaid",type:"uint256"},{name:"takerFeePaid",type:"uint256"}],name:"totalFillResults",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{components:[{name:"makerAddress",type:"address"},{name:"takerAddress",type:"address"},{name:"feeRecipientAddress",type:"address"},{name:"senderAddress",type:"address"},{name:"makerAssetAmount",type:"uint256"},{name:"takerAssetAmount",type:"uint256"},{name:"makerFee",type:"uint256"},{name:"takerFee",type:"uint256"},{name:"expirationTimeSeconds",type:"uint256"},{name:"salt",type:"uint256"},{name:"makerAssetData",type:"bytes"},{name:"takerAssetData",type:"bytes"}],name:"orders",type:"tuple[]"},{name:"makerAssetFillAmount",type:"uint256"},{name:"signatures",type:"bytes[]"}],name:"marketBuyOrdersNoThrow",outputs:[{components:[{name:"makerAssetFilledAmount",type:"uint256"},{name:"takerAssetFilledAmount",type:"uint256"},{name:"makerFeePaid",type:"uint256"},{name:"takerFeePaid",type:"uint256"}],name:"totalFillResults",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{components:[{name:"makerAddress",type:"address"},{name:"takerAddress",type:"address"},{name:"feeRecipientAddress",type:"address"},{name:"senderAddress",type:"address"},{name:"makerAssetAmount",type:"uint256"},{name:"takerAssetAmount",type:"uint256"},{name:"makerFee",type:"uint256"},{name:"takerFee",type:"uint256"},{name:"expirationTimeSeconds",type:"uint256"},{name:"salt",type:"uint256"},{name:"makerAssetData",type:"bytes"},{name:"takerAssetData",type:"bytes"}],name:"orders",type:"tuple[]"}],name:"batchCancelOrders",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":false,"inputs":[{"components":[{"name":"makerAddress","type":"address"},{"name":"takerAddress","type":"address"},{"name":"feeRecipientAddress","type":"address"},{"name":"senderAddress","type":"address"},{"name":"makerAssetAmount","type":"uint256"},{"name":"takerAssetAmount","type":"uint256"},{"name":"makerFee","type":"uint256"},{"name":"takerFee","type":"uint256"},{"name":"expirationTimeSeconds","type":"uint256"},{"name":"salt","type":"uint256"},{"name":"makerAssetData","type":"bytes"},{"name":"takerAssetData","type":"bytes"}],"name":"orders","type":"tuple[]"},{"name":"takerAssetFillAmounts","type":"uint256[]"},{"name":"signatures","type":"bytes[]"}],"name":"batchFillOrders","outputs":[{"components":[{"name":"makerAssetFilledAmount","type":"uint256"},{"name":"takerAssetFilledAmount","type":"uint256"},{"name":"makerFeePaid","type":"uint256"},{"name":"takerFeePaid","type":"uint256"}],"name":"totalFillResults","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"components":[{"name":"makerAddress","type":"address"},{"name":"takerAddress","type":"address"},{"name":"feeRecipientAddress","type":"address"},{"name":"senderAddress","type":"address"},{"name":"makerAssetAmount","type":"uint256"},{"name":"takerAssetAmount","type":"uint256"},{"name":"makerFee","type":"uint256"},{"name":"takerFee","type":"uint256"},{"name":"expirationTimeSeconds","type":"uint256"},{"name":"salt","type":"uint256"},{"name":"makerAssetData","type":"bytes"},{"name":"takerAssetData","type":"bytes"}],"name":"order","type":"tuple"},{"name":"takerAssetFillAmount","type":"uint256"},{"name":"signature","type":"bytes"}],"name":"fillOrderNoThrow","outputs":[{"components":[{"name":"makerAssetFilledAmount","type":"uint256"},{"name":"takerAssetFilledAmount","type":"uint256"},{"name":"makerFeePaid","type":"uint256"},{"name":"takerFeePaid","type":"uint256"}],"name":"fillResults","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"components":[{"name":"makerAddress","type":"address"},{"name":"takerAddress","type":"address"},{"name":"feeRecipientAddress","type":"address"},{"name":"senderAddress","type":"address"},{"name":"makerAssetAmount","type":"uint256"},{"name":"takerAssetAmount","type":"uint256"},{"name":"makerFee","type":"uint256"},{"name":"takerFee","type":"uint256"},{"name":"expirationTimeSeconds","type":"uint256"},{"name":"salt","type":"uint256"},{"name":"makerAssetData","type":"bytes"},{"name":"takerAssetData","type":"bytes"}],"name":"orders","type":"tuple[]"}],"name":"batchCancelOrders","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"components":[{"name":"makerAddress","type":"address"},{"name":"takerAddress","type":"address"},{"name":"feeRecipientAddress","type":"address"},{"name":"senderAddress","type":"address"},{"name":"makerAssetAmount","type":"uint256"},{"name":"takerAssetAmount","type":"uint256"},{"name":"makerFee","type":"uint256"},{"name":"takerFee","type":"uint256"},{"name":"expirationTimeSeconds","type":"uint256"},{"name":"salt","type":"uint256"},{"name":"makerAssetData","type":"bytes"},{"name":"takerAssetData","type":"bytes"}],"name":"orders","type":"tuple[]"},{"name":"takerAssetFillAmounts","type":"uint256[]"},{"name":"signatures","type":"bytes[]"}],"name":"batchFillOrKillOrders","outputs":[{"components":[{"name":"makerAssetFilledAmount","type":"uint256"},{"name":"takerAssetFilledAmount","type":"uint256"},{"name":"makerFeePaid","type":"uint256"},{"name":"takerFeePaid","type":"uint256"}],"name":"totalFillResults","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"components":[{"name":"makerAddress","type":"address"},{"name":"takerAddress","type":"address"},{"name":"feeRecipientAddress","type":"address"},{"name":"senderAddress","type":"address"},{"name":"makerAssetAmount","type":"uint256"},{"name":"takerAssetAmount","type":"uint256"},{"name":"makerFee","type":"uint256"},{"name":"takerFee","type":"uint256"},{"name":"expirationTimeSeconds","type":"uint256"},{"name":"salt","type":"uint256"},{"name":"makerAssetData","type":"bytes"},{"name":"takerAssetData","type":"bytes"}],"name":"orders","type":"tuple[]"},{"name":"takerAssetFillAmounts","type":"uint256[]"},{"name":"signatures","type":"bytes[]"}],"name":"batchFillOrdersNoThrow","outputs":[{"components":[{"name":"makerAssetFilledAmount","type":"uint256"},{"name":"takerAssetFilledAmount","type":"uint256"},{"name":"makerFeePaid","type":"uint256"},{"name":"takerFeePaid","type":"uint256"}],"name":"totalFillResults","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"components":[{"name":"makerAddress","type":"address"},{"name":"takerAddress","type":"address"},{"name":"feeRecipientAddress","type":"address"},{"name":"senderAddress","type":"address"},{"name":"makerAssetAmount","type":"uint256"},{"name":"takerAssetAmount","type":"uint256"},{"name":"makerFee","type":"uint256"},{"name":"takerFee","type":"uint256"},{"name":"expirationTimeSeconds","type":"uint256"},{"name":"salt","type":"uint256"},{"name":"makerAssetData","type":"bytes"},{"name":"takerAssetData","type":"bytes"}],"name":"order","type":"tuple"},{"name":"takerAssetFillAmount","type":"uint256"},{"name":"signature","type":"bytes"}],"name":"fillOrKillOrder","outputs":[{"components":[{"name":"makerAssetFilledAmount","type":"uint256"},{"name":"takerAssetFilledAmount","type":"uint256"},{"name":"makerFeePaid","type":"uint256"},{"name":"takerFeePaid","type":"uint256"}],"name":"fillResults","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"components":[{"name":"makerAddress","type":"address"},{"name":"takerAddress","type":"address"},{"name":"feeRecipientAddress","type":"address"},{"name":"senderAddress","type":"address"},{"name":"makerAssetAmount","type":"uint256"},{"name":"takerAssetAmount","type":"uint256"},{"name":"makerFee","type":"uint256"},{"name":"takerFee","type":"uint256"},{"name":"expirationTimeSeconds","type":"uint256"},{"name":"salt","type":"uint256"},{"name":"makerAssetData","type":"bytes"},{"name":"takerAssetData","type":"bytes"}],"name":"orders","type":"tuple[]"},{"name":"takerAssetFillAmount","type":"uint256"},{"name":"signatures","type":"bytes[]"}],"name":"marketSellOrders","outputs":[{"components":[{"name":"makerAssetFilledAmount","type":"uint256"},{"name":"takerAssetFilledAmount","type":"uint256"},{"name":"makerFeePaid","type":"uint256"},{"name":"takerFeePaid","type":"uint256"}],"name":"totalFillResults","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"components":[{"name":"makerAddress","type":"address"},{"name":"takerAddress","type":"address"},{"name":"feeRecipientAddress","type":"address"},{"name":"senderAddress","type":"address"},{"name":"makerAssetAmount","type":"uint256"},{"name":"takerAssetAmount","type":"uint256"},{"name":"makerFee","type":"uint256"},{"name":"takerFee","type":"uint256"},{"name":"expirationTimeSeconds","type":"uint256"},{"name":"salt","type":"uint256"},{"name":"makerAssetData","type":"bytes"},{"name":"takerAssetData","type":"bytes"}],"name":"orders","type":"tuple[]"},{"name":"makerAssetFillAmount","type":"uint256"},{"name":"signatures","type":"bytes[]"}],"name":"marketBuyOrdersNoThrow","outputs":[{"components":[{"name":"makerAssetFilledAmount","type":"uint256"},{"name":"takerAssetFilledAmount","type":"uint256"},{"name":"makerFeePaid","type":"uint256"},{"name":"takerFeePaid","type":"uint256"}],"name":"totalFillResults","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"components":[{"name":"makerAddress","type":"address"},{"name":"takerAddress","type":"address"},{"name":"feeRecipientAddress","type":"address"},{"name":"senderAddress","type":"address"},{"name":"makerAssetAmount","type":"uint256"},{"name":"takerAssetAmount","type":"uint256"},{"name":"makerFee","type":"uint256"},{"name":"takerFee","type":"uint256"},{"name":"expirationTimeSeconds","type":"uint256"},{"name":"salt","type":"uint256"},{"name":"makerAssetData","type":"bytes"},{"name":"takerAssetData","type":"bytes"}],"name":"orders","type":"tuple[]"},{"name":"takerAssetFillAmount","type":"uint256"},{"name":"signatures","type":"bytes[]"}],"name":"marketSellOrdersNoThrow","outputs":[{"components":[{"name":"makerAssetFilledAmount","type":"uint256"},{"name":"takerAssetFilledAmount","type":"uint256"},{"name":"makerFeePaid","type":"uint256"},{"name":"takerFeePaid","type":"uint256"}],"name":"totalFillResults","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"components":[{"name":"makerAddress","type":"address"},{"name":"takerAddress","type":"address"},{"name":"feeRecipientAddress","type":"address"},{"name":"senderAddress","type":"address"},{"name":"makerAssetAmount","type":"uint256"},{"name":"takerAssetAmount","type":"uint256"},{"name":"makerFee","type":"uint256"},{"name":"takerFee","type":"uint256"},{"name":"expirationTimeSeconds","type":"uint256"},{"name":"salt","type":"uint256"},{"name":"makerAssetData","type":"bytes"},{"name":"takerAssetData","type":"bytes"}],"name":"orders","type":"tuple[]"},{"name":"makerAssetFillAmount","type":"uint256"},{"name":"signatures","type":"bytes[]"}],"name":"marketBuyOrders","outputs":[{"components":[{"name":"makerAssetFilledAmount","type":"uint256"},{"name":"takerAssetFilledAmount","type":"uint256"},{"name":"makerFeePaid","type":"uint256"},{"name":"takerFeePaid","type":"uint256"}],"name":"totalFillResults","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"methods":{"batchCancelOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":{"details":"Synchronously cancels multiple orders in a single transaction.","params":{"orders":"Array of order specifications."}},"batchFillOrKillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])":{"details":"Synchronously executes multiple calls of fillOrKill.","params":{"orders":"Array of order specifications.","signatures":"Proofs that orders have been created by makers.","takerAssetFillAmounts":"Array of desired amounts of takerAsset to sell in orders."},"return":"Amounts filled and fees paid by makers and taker."},"batchFillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])":{"details":"Synchronously executes multiple calls of fillOrder.","params":{"orders":"Array of order specifications.","signatures":"Proofs that orders have been created by makers.","takerAssetFillAmounts":"Array of desired amounts of takerAsset to sell in orders."},"return":"Amounts filled and fees paid by makers and taker."},"batchFillOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])":{"details":"Fills an order with specified parameters and ECDSA signature.      Returns false if the transaction would otherwise revert.","params":{"orders":"Array of order specifications.","signatures":"Proofs that orders have been created by makers.","takerAssetFillAmounts":"Array of desired amounts of takerAsset to sell in orders."},"return":"Amounts filled and fees paid by makers and taker."},"fillOrKillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)":{"details":"Fills the input order. Reverts if exact takerAssetFillAmount not filled.","params":{"order":"LibOrder.Order struct containing order specifications.","signature":"Proof that order has been created by maker.","takerAssetFillAmount":"Desired amount of takerAsset to sell."}},"fillOrderNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)":{"details":"Fills an order with specified parameters and ECDSA signature.      Returns false if the transaction would otherwise revert.","params":{"order":"LibOrder.Order struct containing order specifications.","signature":"Proof that order has been created by maker.","takerAssetFillAmount":"Desired amount of takerAsset to sell."},"return":"Amounts filled and fees paid by maker and taker."},"marketBuyOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])":{"details":"Synchronously executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.","params":{"makerAssetFillAmount":"Desired amount of makerAsset to buy.","orders":"Array of order specifications.","signatures":"Proofs that orders have been signed by makers."},"return":"Amounts filled and fees paid by makers and taker."},"marketBuyOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])":{"details":"Synchronously executes multiple fill orders in a single transaction until total amount is bought by taker.      Returns false if the transaction would otherwise revert.","params":{"makerAssetFillAmount":"Desired amount of makerAsset to buy.","orders":"Array of order specifications.","signatures":"Proofs that orders have been signed by makers."},"return":"Amounts filled and fees paid by makers and taker."},"marketSellOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])":{"details":"Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.","params":{"orders":"Array of order specifications.","signatures":"Proofs that orders have been created by makers.","takerAssetFillAmount":"Desired amount of takerAsset to sell."},"return":"Amounts filled and fees paid by makers and taker."},"marketSellOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])":{"details":"Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.      Returns false if the transaction would otherwise revert.","params":{"orders":"Array of order specifications.","signatures":"Proofs that orders have been signed by makers.","takerAssetFillAmount":"Desired amount of takerAsset to sell."},"return":"Amounts filled and fees paid by makers and taker."}}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/external/0x/Exchange/interfaces/IWrapperFunctions.sol":"IWrapperFunctions"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/external/0x/Exchange/interfaces/IWrapperFunctions.sol":{"keccak256":"0x7f802191c4dd4b6d58de94f0334363267f72836f04deffbe315852031a1aa41f","urls":["bzzr://8589855736f9a687f271ad400af2e86af17da251523159dabde3cc5b2c28be9e"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/external/0x/Exchange/libs/LibEIP712.sol":{"keccak256":"0x16dc66e08199422c0bd0f2be5e0379b1b9403379d5f8ef823e9d911bce09fb81","urls":["bzzr://d4a8943b40e1395887e425628079d27cca609c6da2d72b9c3d07d3a56993f405"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/external/0x/Exchange/libs/LibFillResults.sol":{"keccak256":"0x2064e95b6a24345edcff3a17df6bd6aba63f68cce9a2d3e548cc78baca791cc1","urls":["bzzr://635d39afec35c25154c552ccdcd95c124df20e31d4a6f3f8a70892515c80f0c8"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/external/0x/Exchange/libs/LibOrder.sol":{"keccak256":"0x6b6a23c65daa2c2559575452593183394afd0b757e01e4ae25e32787b03c4158","urls":["bzzr://33c081a5303948e958cb95a5efd25415e0266ae2023c912977c6ee888798f4a5"]}},"version":1}',bytecode:"0x",deployedBytecode:"0x",sourceMap:"",deployedSourceMap:"",source:'/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the "License");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an "AS IS" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity 0.5.7;\npragma experimental ABIEncoderV2;\n\nimport "../libs/LibOrder.sol";\nimport "../libs/LibFillResults.sol";\n\ncontract IWrapperFunctions {\n    /// @dev Fills the input order. Reverts if exact takerAssetFillAmount not filled.\n    /// @param order LibOrder.Order struct containing order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param signature Proof that order has been created by maker.\n    function fillOrKillOrder(\n        LibOrder.Order memory order,\n        uint256 takerAssetFillAmount,\n        bytes memory signature\n    )\n        public\n        returns (LibFillResults.FillResults memory fillResults);\n\n    /// @dev Fills an order with specified parameters and ECDSA signature.\n    ///      Returns false if the transaction would otherwise revert.\n    /// @param order LibOrder.Order struct containing order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param signature Proof that order has been created by maker.\n    /// @return Amounts filled and fees paid by maker and taker.\n    function fillOrderNoThrow(\n        LibOrder.Order memory order,\n        uint256 takerAssetFillAmount,\n        bytes memory signature\n    )\n        public\n        returns (LibFillResults.FillResults memory fillResults);\n\n    /// @dev Synchronously executes multiple calls of fillOrder.\n    /// @param orders Array of order specifications.\n    /// @param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n    /// @param signatures Proofs that orders have been created by makers.\n    /// @return Amounts filled and fees paid by makers and taker.\n    function batchFillOrders(\n        LibOrder.Order[] memory orders,\n        uint256[] memory takerAssetFillAmounts,\n        bytes[] memory signatures\n    )\n        public\n        returns (LibFillResults.FillResults memory totalFillResults);\n\n    /// @dev Synchronously executes multiple calls of fillOrKill.\n    /// @param orders Array of order specifications.\n    /// @param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n    /// @param signatures Proofs that orders have been created by makers.\n    /// @return Amounts filled and fees paid by makers and taker.\n    function batchFillOrKillOrders(\n        LibOrder.Order[] memory orders,\n        uint256[] memory takerAssetFillAmounts,\n        bytes[] memory signatures\n    )\n        public\n        returns (LibFillResults.FillResults memory totalFillResults);\n\n    /// @dev Fills an order with specified parameters and ECDSA signature.\n    ///      Returns false if the transaction would otherwise revert.\n    /// @param orders Array of order specifications.\n    /// @param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n    /// @param signatures Proofs that orders have been created by makers.\n    /// @return Amounts filled and fees paid by makers and taker.\n    function batchFillOrdersNoThrow(\n        LibOrder.Order[] memory orders,\n        uint256[] memory takerAssetFillAmounts,\n        bytes[] memory signatures\n    )\n        public\n        returns (LibFillResults.FillResults memory totalFillResults);\n\n    /// @dev Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\n    /// @param orders Array of order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param signatures Proofs that orders have been created by makers.\n    /// @return Amounts filled and fees paid by makers and taker.\n    function marketSellOrders(\n        LibOrder.Order[] memory orders,\n        uint256 takerAssetFillAmount,\n        bytes[] memory signatures\n    )\n        public\n        returns (LibFillResults.FillResults memory totalFillResults);\n\n    /// @dev Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\n    ///      Returns false if the transaction would otherwise revert.\n    /// @param orders Array of order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param signatures Proofs that orders have been signed by makers.\n    /// @return Amounts filled and fees paid by makers and taker.\n    function marketSellOrdersNoThrow(\n        LibOrder.Order[] memory orders,\n        uint256 takerAssetFillAmount,\n        bytes[] memory signatures\n    )\n        public\n        returns (LibFillResults.FillResults memory totalFillResults);\n\n    /// @dev Synchronously executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.\n    /// @param orders Array of order specifications.\n    /// @param makerAssetFillAmount Desired amount of makerAsset to buy.\n    /// @param signatures Proofs that orders have been signed by makers.\n    /// @return Amounts filled and fees paid by makers and taker.\n    function marketBuyOrders(\n        LibOrder.Order[] memory orders,\n        uint256 makerAssetFillAmount,\n        bytes[] memory signatures\n    )\n        public\n        returns (LibFillResults.FillResults memory totalFillResults);\n\n    /// @dev Synchronously executes multiple fill orders in a single transaction until total amount is bought by taker.\n    ///      Returns false if the transaction would otherwise revert.\n    /// @param orders Array of order specifications.\n    /// @param makerAssetFillAmount Desired amount of makerAsset to buy.\n    /// @param signatures Proofs that orders have been signed by makers.\n    /// @return Amounts filled and fees paid by makers and taker.\n    function marketBuyOrdersNoThrow(\n        LibOrder.Order[] memory orders,\n        uint256 makerAssetFillAmount,\n        bytes[] memory signatures\n    )\n        public\n        returns (LibFillResults.FillResults memory totalFillResults);\n\n    /// @dev Synchronously cancels multiple orders in a single transaction.\n    /// @param orders Array of order specifications.\n    function batchCancelOrders(LibOrder.Order[] memory orders)\n        public;\n}\n',
sourcePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/external/0x/Exchange/interfaces/IWrapperFunctions.sol",ast:{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/external/0x/Exchange/interfaces/IWrapperFunctions.sol",exportedSymbols:{IWrapperFunctions:[20557]},id:20558,nodeType:"SourceUnit",nodes:[{id:20431,literals:["solidity","0.5",".7"],nodeType:"PragmaDirective",src:"580:22:101"},{id:20432,literals:["experimental","ABIEncoderV2"],nodeType:"PragmaDirective",src:"603:33:101"},{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/external/0x/Exchange/libs/LibOrder.sol",file:"../libs/LibOrder.sol",id:20433,nodeType:"ImportDirective",scope:20558,sourceUnit:20753,src:"638:30:101",symbolAliases:[],unitAlias:""},{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/external/0x/Exchange/libs/LibFillResults.sol",file:"../libs/LibFillResults.sol",id:20434,nodeType:"ImportDirective",scope:20558,sourceUnit:20686,src:"669:36:101",symbolAliases:[],unitAlias:""},{baseContracts:[],contractDependencies:[],contractKind:"contract",documentation:null,fullyImplemented:false,id:20557,linearizedBaseContracts:[20557],name:"IWrapperFunctions",nodeType:"ContractDefinition",nodes:[{body:null,documentation:"@dev Fills the input order. Reverts if exact takerAssetFillAmount not filled.\n @param order LibOrder.Order struct containing order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param signature Proof that order has been created by maker.",id:20445,implemented:false,kind:"function",modifiers:[],name:"fillOrKillOrder",nodeType:"FunctionDefinition",parameters:{id:20441,nodeType:"ParameterList",parameters:[{constant:false,id:20436,name:"order",nodeType:"VariableDeclaration",scope:20445,src:"1079:27:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_memory_ptr",typeString:"struct LibOrder.Order"},typeName:{contractScope:null,id:20435,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"1079:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},value:null,visibility:"internal"},{constant:false,id:20438,name:"takerAssetFillAmount",nodeType:"VariableDeclaration",scope:20445,src:"1116:28:101",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:20437,name:"uint256",nodeType:"ElementaryTypeName",src:"1116:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"},{constant:false,id:20440,name:"signature",nodeType:"VariableDeclaration",scope:20445,src:"1154:22:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_bytes_memory_ptr",typeString:"bytes"},typeName:{id:20439,name:"bytes",nodeType:"ElementaryTypeName",src:"1154:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},value:null,visibility:"internal"}],src:"1069:113:101"},returnParameters:{id:20444,nodeType:"ParameterList",parameters:[{constant:false,id:20443,name:"fillResults",nodeType:"VariableDeclaration",scope:20445,src:"1215:45:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20442,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"1215:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"1214:47:101"},scope:20557,src:"1045:217:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Fills an order with specified parameters and ECDSA signature.\n      Returns false if the transaction would otherwise revert.\n @param order LibOrder.Order struct containing order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param signature Proof that order has been created by maker.\n @return Amounts filled and fees paid by maker and taker.",id:20456,implemented:false,kind:"function",modifiers:[],name:"fillOrderNoThrow",nodeType:"FunctionDefinition",parameters:{id:20452,nodeType:"ParameterList",parameters:[{constant:false,id:20447,name:"order",nodeType:"VariableDeclaration",scope:20456,src:"1732:27:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_memory_ptr",typeString:"struct LibOrder.Order"},typeName:{contractScope:null,id:20446,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"1732:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},value:null,visibility:"internal"},{constant:false,id:20449,name:"takerAssetFillAmount",nodeType:"VariableDeclaration",scope:20456,src:"1769:28:101",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:20448,name:"uint256",nodeType:"ElementaryTypeName",src:"1769:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"},{constant:false,id:20451,name:"signature",nodeType:"VariableDeclaration",scope:20456,src:"1807:22:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_bytes_memory_ptr",typeString:"bytes"},typeName:{id:20450,name:"bytes",nodeType:"ElementaryTypeName",src:"1807:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},value:null,visibility:"internal"}],src:"1722:113:101"},returnParameters:{id:20455,nodeType:"ParameterList",parameters:[{constant:false,id:20454,name:"fillResults",nodeType:"VariableDeclaration",scope:20456,src:"1868:45:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20453,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"1868:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"1867:47:101"},scope:20557,src:"1697:218:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously executes multiple calls of fillOrder.\n @param orders Array of order specifications.\n @param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n @param signatures Proofs that orders have been created by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20470,implemented:false,kind:"function",modifiers:[],name:"batchFillOrders",nodeType:"FunctionDefinition",parameters:{id:20466,nodeType:"ParameterList",parameters:[{constant:false,id:20459,name:"orders",nodeType:"VariableDeclaration",scope:20470,src:"2308:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20457,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"2308:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20458,length:null,nodeType:"ArrayTypeName",src:"2308:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20462,name:"takerAssetFillAmounts",nodeType:"VariableDeclaration",scope:20470,src:"2348:38:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_uint256_$dyn_memory_ptr",typeString:"uint256[]"},typeName:{baseType:{id:20460,name:"uint256",nodeType:"ElementaryTypeName",src:"2348:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},id:20461,length:null,nodeType:"ArrayTypeName",src:"2348:9:101",typeDescriptions:{typeIdentifier:"t_array$_t_uint256_$dyn_storage_ptr",typeString:"uint256[]"}},value:null,visibility:"internal"},{constant:false,id:20465,name:"signatures",nodeType:"VariableDeclaration",scope:20470,src:"2396:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20463,name:"bytes",nodeType:"ElementaryTypeName",src:"2396:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20464,length:null,nodeType:"ArrayTypeName",src:"2396:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"2298:129:101"},returnParameters:{id:20469,nodeType:"ParameterList",parameters:[{constant:false,id:20468,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20470,src:"2460:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20467,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"2460:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"2459:52:101"},scope:20557,src:"2274:238:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously executes multiple calls of fillOrKill.\n @param orders Array of order specifications.\n @param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n @param signatures Proofs that orders have been created by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20484,implemented:false,kind:"function",modifiers:[],name:"batchFillOrKillOrders",nodeType:"FunctionDefinition",parameters:{id:20480,nodeType:"ParameterList",parameters:[{constant:false,id:20473,name:"orders",nodeType:"VariableDeclaration",scope:20484,src:"2912:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20471,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"2912:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20472,length:null,nodeType:"ArrayTypeName",src:"2912:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20476,name:"takerAssetFillAmounts",nodeType:"VariableDeclaration",scope:20484,src:"2952:38:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_uint256_$dyn_memory_ptr",typeString:"uint256[]"},typeName:{baseType:{id:20474,name:"uint256",nodeType:"ElementaryTypeName",src:"2952:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},id:20475,length:null,nodeType:"ArrayTypeName",src:"2952:9:101",typeDescriptions:{typeIdentifier:"t_array$_t_uint256_$dyn_storage_ptr",typeString:"uint256[]"}},value:null,visibility:"internal"},{constant:false,id:20479,name:"signatures",nodeType:"VariableDeclaration",scope:20484,src:"3000:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20477,name:"bytes",nodeType:"ElementaryTypeName",src:"3000:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20478,length:null,nodeType:"ArrayTypeName",src:"3000:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"2902:129:101"},returnParameters:{id:20483,nodeType:"ParameterList",parameters:[{constant:false,id:20482,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20484,src:"3064:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20481,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"3064:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"3063:52:101"},scope:20557,src:"2872:244:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Fills an order with specified parameters and ECDSA signature.\n      Returns false if the transaction would otherwise revert.\n @param orders Array of order specifications.\n @param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n @param signatures Proofs that orders have been created by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20498,implemented:false,kind:"function",modifiers:[],name:"batchFillOrdersNoThrow",nodeType:"FunctionDefinition",parameters:{id:20494,nodeType:"ParameterList",parameters:[{constant:false,id:20487,name:"orders",nodeType:"VariableDeclaration",scope:20498,src:"3596:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20485,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"3596:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20486,length:null,nodeType:"ArrayTypeName",src:"3596:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20490,name:"takerAssetFillAmounts",nodeType:"VariableDeclaration",scope:20498,src:"3636:38:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_uint256_$dyn_memory_ptr",typeString:"uint256[]"},typeName:{baseType:{id:20488,name:"uint256",nodeType:"ElementaryTypeName",src:"3636:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},id:20489,length:null,nodeType:"ArrayTypeName",src:"3636:9:101",typeDescriptions:{typeIdentifier:"t_array$_t_uint256_$dyn_storage_ptr",typeString:"uint256[]"}},value:null,visibility:"internal"},{constant:false,id:20493,name:"signatures",nodeType:"VariableDeclaration",scope:20498,src:"3684:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20491,name:"bytes",nodeType:"ElementaryTypeName",src:"3684:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20492,length:null,nodeType:"ArrayTypeName",src:"3684:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"3586:129:101"},returnParameters:{id:20497,nodeType:"ParameterList",parameters:[{constant:false,id:20496,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20498,src:"3748:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20495,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"3748:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"3747:52:101"},scope:20557,src:"3555:245:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\n @param orders Array of order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param signatures Proofs that orders have been created by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20511,implemented:false,kind:"function",modifiers:[],name:"marketSellOrders",nodeType:"FunctionDefinition",parameters:{id:20507,nodeType:"ParameterList",parameters:[{constant:false,id:20501,name:"orders",nodeType:"VariableDeclaration",scope:20511,src:"4223:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20499,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"4223:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20500,length:null,nodeType:"ArrayTypeName",src:"4223:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20503,name:"takerAssetFillAmount",nodeType:"VariableDeclaration",scope:20511,src:"4263:28:101",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:20502,name:"uint256",nodeType:"ElementaryTypeName",src:"4263:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"},{constant:false,id:20506,name:"signatures",nodeType:"VariableDeclaration",scope:20511,src:"4301:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20504,name:"bytes",nodeType:"ElementaryTypeName",src:"4301:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20505,length:null,nodeType:"ArrayTypeName",src:"4301:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"4213:119:101"},returnParameters:{id:20510,nodeType:"ParameterList",parameters:[{constant:false,id:20509,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20511,src:"4365:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20508,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"4365:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"4364:52:101"},scope:20557,src:"4188:229:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\n      Returns false if the transaction would otherwise revert.\n @param orders Array of order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param signatures Proofs that orders have been signed by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20524,implemented:false,kind:"function",modifiers:[],name:"marketSellOrdersNoThrow",nodeType:"FunctionDefinition",parameters:{id:20520,nodeType:"ParameterList",parameters:[{constant:false,id:20514,name:"orders",nodeType:"VariableDeclaration",scope:20524,src:"4916:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20512,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"4916:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20513,length:null,nodeType:"ArrayTypeName",src:"4916:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20516,name:"takerAssetFillAmount",nodeType:"VariableDeclaration",scope:20524,src:"4956:28:101",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:20515,name:"uint256",nodeType:"ElementaryTypeName",src:"4956:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"},{constant:false,id:20519,name:"signatures",nodeType:"VariableDeclaration",scope:20524,src:"4994:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20517,name:"bytes",nodeType:"ElementaryTypeName",src:"4994:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20518,length:null,nodeType:"ArrayTypeName",src:"4994:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"4906:119:101"},returnParameters:{id:20523,nodeType:"ParameterList",parameters:[{constant:false,id:20522,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20524,src:"5058:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20521,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"5058:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"5057:52:101"},scope:20557,src:"4874:236:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.\n @param orders Array of order specifications.\n @param makerAssetFillAmount Desired amount of makerAsset to buy.\n @param signatures Proofs that orders have been signed by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20537,implemented:false,kind:"function",modifiers:[],name:"marketBuyOrders",nodeType:"FunctionDefinition",parameters:{id:20533,nodeType:"ParameterList",parameters:[{constant:false,id:20527,name:"orders",nodeType:"VariableDeclaration",scope:20537,src:"5532:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20525,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"5532:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20526,length:null,nodeType:"ArrayTypeName",src:"5532:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20529,name:"makerAssetFillAmount",nodeType:"VariableDeclaration",scope:20537,src:"5572:28:101",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:20528,name:"uint256",nodeType:"ElementaryTypeName",src:"5572:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"},{constant:false,id:20532,name:"signatures",nodeType:"VariableDeclaration",scope:20537,src:"5610:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20530,name:"bytes",nodeType:"ElementaryTypeName",src:"5610:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20531,length:null,nodeType:"ArrayTypeName",src:"5610:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"5522:119:101"},returnParameters:{id:20536,nodeType:"ParameterList",parameters:[{constant:false,id:20535,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20537,src:"5674:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20534,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"5674:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"5673:52:101"},scope:20557,src:"5498:228:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously executes multiple fill orders in a single transaction until total amount is bought by taker.\n      Returns false if the transaction would otherwise revert.\n @param orders Array of order specifications.\n @param makerAssetFillAmount Desired amount of makerAsset to buy.\n @param signatures Proofs that orders have been signed by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20550,implemented:false,kind:"function",modifiers:[],name:"marketBuyOrdersNoThrow",nodeType:"FunctionDefinition",parameters:{id:20546,nodeType:"ParameterList",parameters:[{constant:false,id:20540,name:"orders",nodeType:"VariableDeclaration",scope:20550,src:"6228:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20538,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"6228:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20539,length:null,nodeType:"ArrayTypeName",src:"6228:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20542,name:"makerAssetFillAmount",nodeType:"VariableDeclaration",scope:20550,src:"6268:28:101",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:20541,name:"uint256",nodeType:"ElementaryTypeName",src:"6268:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"},{constant:false,id:20545,name:"signatures",nodeType:"VariableDeclaration",scope:20550,src:"6306:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20543,name:"bytes",nodeType:"ElementaryTypeName",src:"6306:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20544,length:null,nodeType:"ArrayTypeName",src:"6306:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"6218:119:101"},returnParameters:{id:20549,nodeType:"ParameterList",parameters:[{constant:false,id:20548,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20550,src:"6370:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20547,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"6370:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"6369:52:101"},scope:20557,src:"6187:235:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously cancels multiple orders in a single transaction.\n @param orders Array of order specifications.",id:20556,implemented:false,kind:"function",modifiers:[],name:"batchCancelOrders",nodeType:"FunctionDefinition",parameters:{id:20554,nodeType:"ParameterList",parameters:[{constant:false,id:20553,name:"orders",nodeType:"VariableDeclaration",scope:20556,src:"6584:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20551,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"6584:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20552,length:null,nodeType:"ArrayTypeName",src:"6584:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"}],src:"6583:32:101"},returnParameters:{id:20555,nodeType:"ParameterList",parameters:[],src:"6630:0:101"},scope:20557,src:"6557:74:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"}],scope:20558,src:"707:5926:101"}],src:"580:6054:101"},legacyAST:{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/external/0x/Exchange/interfaces/IWrapperFunctions.sol",exportedSymbols:{IWrapperFunctions:[20557]},id:20558,nodeType:"SourceUnit",nodes:[{id:20431,literals:["solidity","0.5",".7"],nodeType:"PragmaDirective",src:"580:22:101"},{id:20432,literals:["experimental","ABIEncoderV2"],nodeType:"PragmaDirective",src:"603:33:101"},{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/external/0x/Exchange/libs/LibOrder.sol",file:"../libs/LibOrder.sol",id:20433,nodeType:"ImportDirective",scope:20558,sourceUnit:20753,src:"638:30:101",symbolAliases:[],unitAlias:""},{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-contracts/contracts/external/0x/Exchange/libs/LibFillResults.sol",file:"../libs/LibFillResults.sol",id:20434,nodeType:"ImportDirective",scope:20558,sourceUnit:20686,src:"669:36:101",symbolAliases:[],unitAlias:""},{baseContracts:[],contractDependencies:[],contractKind:"contract",documentation:null,fullyImplemented:false,id:20557,linearizedBaseContracts:[20557],name:"IWrapperFunctions",nodeType:"ContractDefinition",nodes:[{body:null,documentation:"@dev Fills the input order. Reverts if exact takerAssetFillAmount not filled.\n @param order LibOrder.Order struct containing order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param signature Proof that order has been created by maker.",id:20445,implemented:false,kind:"function",modifiers:[],name:"fillOrKillOrder",
nodeType:"FunctionDefinition",parameters:{id:20441,nodeType:"ParameterList",parameters:[{constant:false,id:20436,name:"order",nodeType:"VariableDeclaration",scope:20445,src:"1079:27:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_memory_ptr",typeString:"struct LibOrder.Order"},typeName:{contractScope:null,id:20435,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"1079:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},value:null,visibility:"internal"},{constant:false,id:20438,name:"takerAssetFillAmount",nodeType:"VariableDeclaration",scope:20445,src:"1116:28:101",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:20437,name:"uint256",nodeType:"ElementaryTypeName",src:"1116:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"},{constant:false,id:20440,name:"signature",nodeType:"VariableDeclaration",scope:20445,src:"1154:22:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_bytes_memory_ptr",typeString:"bytes"},typeName:{id:20439,name:"bytes",nodeType:"ElementaryTypeName",src:"1154:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},value:null,visibility:"internal"}],src:"1069:113:101"},returnParameters:{id:20444,nodeType:"ParameterList",parameters:[{constant:false,id:20443,name:"fillResults",nodeType:"VariableDeclaration",scope:20445,src:"1215:45:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20442,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"1215:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"1214:47:101"},scope:20557,src:"1045:217:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Fills an order with specified parameters and ECDSA signature.\n      Returns false if the transaction would otherwise revert.\n @param order LibOrder.Order struct containing order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param signature Proof that order has been created by maker.\n @return Amounts filled and fees paid by maker and taker.",id:20456,implemented:false,kind:"function",modifiers:[],name:"fillOrderNoThrow",nodeType:"FunctionDefinition",parameters:{id:20452,nodeType:"ParameterList",parameters:[{constant:false,id:20447,name:"order",nodeType:"VariableDeclaration",scope:20456,src:"1732:27:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_memory_ptr",typeString:"struct LibOrder.Order"},typeName:{contractScope:null,id:20446,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"1732:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},value:null,visibility:"internal"},{constant:false,id:20449,name:"takerAssetFillAmount",nodeType:"VariableDeclaration",scope:20456,src:"1769:28:101",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:20448,name:"uint256",nodeType:"ElementaryTypeName",src:"1769:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"},{constant:false,id:20451,name:"signature",nodeType:"VariableDeclaration",scope:20456,src:"1807:22:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_bytes_memory_ptr",typeString:"bytes"},typeName:{id:20450,name:"bytes",nodeType:"ElementaryTypeName",src:"1807:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},value:null,visibility:"internal"}],src:"1722:113:101"},returnParameters:{id:20455,nodeType:"ParameterList",parameters:[{constant:false,id:20454,name:"fillResults",nodeType:"VariableDeclaration",scope:20456,src:"1868:45:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20453,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"1868:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"1867:47:101"},scope:20557,src:"1697:218:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously executes multiple calls of fillOrder.\n @param orders Array of order specifications.\n @param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n @param signatures Proofs that orders have been created by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20470,implemented:false,kind:"function",modifiers:[],name:"batchFillOrders",nodeType:"FunctionDefinition",parameters:{id:20466,nodeType:"ParameterList",parameters:[{constant:false,id:20459,name:"orders",nodeType:"VariableDeclaration",scope:20470,src:"2308:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20457,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"2308:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20458,length:null,nodeType:"ArrayTypeName",src:"2308:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20462,name:"takerAssetFillAmounts",nodeType:"VariableDeclaration",scope:20470,src:"2348:38:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_uint256_$dyn_memory_ptr",typeString:"uint256[]"},typeName:{baseType:{id:20460,name:"uint256",nodeType:"ElementaryTypeName",src:"2348:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},id:20461,length:null,nodeType:"ArrayTypeName",src:"2348:9:101",typeDescriptions:{typeIdentifier:"t_array$_t_uint256_$dyn_storage_ptr",typeString:"uint256[]"}},value:null,visibility:"internal"},{constant:false,id:20465,name:"signatures",nodeType:"VariableDeclaration",scope:20470,src:"2396:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20463,name:"bytes",nodeType:"ElementaryTypeName",src:"2396:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20464,length:null,nodeType:"ArrayTypeName",src:"2396:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"2298:129:101"},returnParameters:{id:20469,nodeType:"ParameterList",parameters:[{constant:false,id:20468,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20470,src:"2460:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20467,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"2460:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"2459:52:101"},scope:20557,src:"2274:238:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously executes multiple calls of fillOrKill.\n @param orders Array of order specifications.\n @param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n @param signatures Proofs that orders have been created by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20484,implemented:false,kind:"function",modifiers:[],name:"batchFillOrKillOrders",nodeType:"FunctionDefinition",parameters:{id:20480,nodeType:"ParameterList",parameters:[{constant:false,id:20473,name:"orders",nodeType:"VariableDeclaration",scope:20484,src:"2912:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20471,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"2912:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20472,length:null,nodeType:"ArrayTypeName",src:"2912:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20476,name:"takerAssetFillAmounts",nodeType:"VariableDeclaration",scope:20484,src:"2952:38:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_uint256_$dyn_memory_ptr",typeString:"uint256[]"},typeName:{baseType:{id:20474,name:"uint256",nodeType:"ElementaryTypeName",src:"2952:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},id:20475,length:null,nodeType:"ArrayTypeName",src:"2952:9:101",typeDescriptions:{typeIdentifier:"t_array$_t_uint256_$dyn_storage_ptr",typeString:"uint256[]"}},value:null,visibility:"internal"},{constant:false,id:20479,name:"signatures",nodeType:"VariableDeclaration",scope:20484,src:"3000:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20477,name:"bytes",nodeType:"ElementaryTypeName",src:"3000:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20478,length:null,nodeType:"ArrayTypeName",src:"3000:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"2902:129:101"},returnParameters:{id:20483,nodeType:"ParameterList",parameters:[{constant:false,id:20482,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20484,src:"3064:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20481,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"3064:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"3063:52:101"},scope:20557,src:"2872:244:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Fills an order with specified parameters and ECDSA signature.\n      Returns false if the transaction would otherwise revert.\n @param orders Array of order specifications.\n @param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n @param signatures Proofs that orders have been created by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20498,implemented:false,kind:"function",modifiers:[],name:"batchFillOrdersNoThrow",nodeType:"FunctionDefinition",parameters:{id:20494,nodeType:"ParameterList",parameters:[{constant:false,id:20487,name:"orders",nodeType:"VariableDeclaration",scope:20498,src:"3596:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20485,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"3596:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20486,length:null,nodeType:"ArrayTypeName",src:"3596:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20490,name:"takerAssetFillAmounts",nodeType:"VariableDeclaration",scope:20498,src:"3636:38:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_uint256_$dyn_memory_ptr",typeString:"uint256[]"},typeName:{baseType:{id:20488,name:"uint256",nodeType:"ElementaryTypeName",src:"3636:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},id:20489,length:null,nodeType:"ArrayTypeName",src:"3636:9:101",typeDescriptions:{typeIdentifier:"t_array$_t_uint256_$dyn_storage_ptr",typeString:"uint256[]"}},value:null,visibility:"internal"},{constant:false,id:20493,name:"signatures",nodeType:"VariableDeclaration",scope:20498,src:"3684:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20491,name:"bytes",nodeType:"ElementaryTypeName",src:"3684:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20492,length:null,nodeType:"ArrayTypeName",src:"3684:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"3586:129:101"},returnParameters:{id:20497,nodeType:"ParameterList",parameters:[{constant:false,id:20496,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20498,src:"3748:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20495,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"3748:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"3747:52:101"},scope:20557,src:"3555:245:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\n @param orders Array of order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param signatures Proofs that orders have been created by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20511,implemented:false,kind:"function",modifiers:[],name:"marketSellOrders",nodeType:"FunctionDefinition",parameters:{id:20507,nodeType:"ParameterList",parameters:[{constant:false,id:20501,name:"orders",nodeType:"VariableDeclaration",scope:20511,src:"4223:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20499,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"4223:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20500,length:null,nodeType:"ArrayTypeName",src:"4223:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20503,name:"takerAssetFillAmount",nodeType:"VariableDeclaration",scope:20511,src:"4263:28:101",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:20502,name:"uint256",nodeType:"ElementaryTypeName",src:"4263:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"},{constant:false,id:20506,name:"signatures",nodeType:"VariableDeclaration",scope:20511,src:"4301:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20504,name:"bytes",nodeType:"ElementaryTypeName",src:"4301:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20505,length:null,nodeType:"ArrayTypeName",src:"4301:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"4213:119:101"},returnParameters:{id:20510,nodeType:"ParameterList",parameters:[{constant:false,id:20509,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20511,src:"4365:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20508,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"4365:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"4364:52:101"},scope:20557,src:"4188:229:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\n      Returns false if the transaction would otherwise revert.\n @param orders Array of order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param signatures Proofs that orders have been signed by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20524,implemented:false,kind:"function",modifiers:[],name:"marketSellOrdersNoThrow",nodeType:"FunctionDefinition",parameters:{id:20520,nodeType:"ParameterList",parameters:[{constant:false,id:20514,name:"orders",nodeType:"VariableDeclaration",scope:20524,src:"4916:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20512,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"4916:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20513,length:null,nodeType:"ArrayTypeName",src:"4916:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20516,name:"takerAssetFillAmount",nodeType:"VariableDeclaration",scope:20524,src:"4956:28:101",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:20515,name:"uint256",nodeType:"ElementaryTypeName",src:"4956:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"},{constant:false,id:20519,name:"signatures",nodeType:"VariableDeclaration",scope:20524,src:"4994:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20517,name:"bytes",nodeType:"ElementaryTypeName",src:"4994:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20518,length:null,nodeType:"ArrayTypeName",src:"4994:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"4906:119:101"},returnParameters:{id:20523,nodeType:"ParameterList",parameters:[{constant:false,id:20522,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20524,src:"5058:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20521,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"5058:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"5057:52:101"},scope:20557,src:"4874:236:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.\n @param orders Array of order specifications.\n @param makerAssetFillAmount Desired amount of makerAsset to buy.\n @param signatures Proofs that orders have been signed by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20537,implemented:false,kind:"function",modifiers:[],name:"marketBuyOrders",nodeType:"FunctionDefinition",parameters:{id:20533,nodeType:"ParameterList",parameters:[{constant:false,id:20527,name:"orders",nodeType:"VariableDeclaration",scope:20537,src:"5532:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20525,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"5532:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20526,length:null,nodeType:"ArrayTypeName",src:"5532:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20529,name:"makerAssetFillAmount",nodeType:"VariableDeclaration",scope:20537,src:"5572:28:101",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:20528,name:"uint256",nodeType:"ElementaryTypeName",src:"5572:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"},{constant:false,id:20532,name:"signatures",nodeType:"VariableDeclaration",scope:20537,src:"5610:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20530,name:"bytes",nodeType:"ElementaryTypeName",src:"5610:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20531,length:null,nodeType:"ArrayTypeName",src:"5610:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"5522:119:101"},returnParameters:{id:20536,nodeType:"ParameterList",parameters:[{constant:false,id:20535,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20537,src:"5674:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20534,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"5674:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"5673:52:101"},scope:20557,src:"5498:228:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously executes multiple fill orders in a single transaction until total amount is bought by taker.\n      Returns false if the transaction would otherwise revert.\n @param orders Array of order specifications.\n @param makerAssetFillAmount Desired amount of makerAsset to buy.\n @param signatures Proofs that orders have been signed by makers.\n @return Amounts filled and fees paid by makers and taker.",id:20550,implemented:false,kind:"function",modifiers:[],name:"marketBuyOrdersNoThrow",nodeType:"FunctionDefinition",parameters:{id:20546,nodeType:"ParameterList",parameters:[{constant:false,id:20540,name:"orders",nodeType:"VariableDeclaration",scope:20550,src:"6228:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20538,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"6228:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20539,length:null,nodeType:"ArrayTypeName",src:"6228:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"},{constant:false,id:20542,name:"makerAssetFillAmount",nodeType:"VariableDeclaration",scope:20550,src:"6268:28:101",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:20541,name:"uint256",nodeType:"ElementaryTypeName",src:"6268:7:101",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"},{constant:false,id:20545,name:"signatures",nodeType:"VariableDeclaration",scope:20550,src:"6306:25:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_memory_$dyn_memory_ptr",typeString:"bytes[]"},typeName:{baseType:{id:20543,name:"bytes",nodeType:"ElementaryTypeName",src:"6306:5:101",typeDescriptions:{typeIdentifier:"t_bytes_storage_ptr",typeString:"bytes"}},id:20544,length:null,nodeType:"ArrayTypeName",src:"6306:7:101",typeDescriptions:{typeIdentifier:"t_array$_t_bytes_storage_$dyn_storage_ptr",typeString:"bytes[]"}},value:null,visibility:"internal"}],src:"6218:119:101"},returnParameters:{id:20549,nodeType:"ParameterList",parameters:[{constant:false,id:20548,name:"totalFillResults",nodeType:"VariableDeclaration",scope:20550,src:"6370:50:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_memory_ptr",typeString:"struct LibFillResults.FillResults"},typeName:{contractScope:null,id:20547,name:"LibFillResults.FillResults",nodeType:"UserDefinedTypeName",referencedDeclaration:20677,src:"6370:26:101",typeDescriptions:{typeIdentifier:"t_struct$_FillResults_$20677_storage_ptr",typeString:"struct LibFillResults.FillResults"}},value:null,visibility:"internal"}],src:"6369:52:101"},scope:20557,src:"6187:235:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:null,documentation:"@dev Synchronously cancels multiple orders in a single transaction.\n @param orders Array of order specifications.",id:20556,implemented:false,kind:"function",modifiers:[],name:"batchCancelOrders",nodeType:"FunctionDefinition",parameters:{id:20554,nodeType:"ParameterList",parameters:[{constant:false,id:20553,name:"orders",nodeType:"VariableDeclaration",scope:20556,src:"6584:30:101",stateVariable:false,storageLocation:"memory",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_memory_$dyn_memory_ptr",typeString:"struct LibOrder.Order[]"},typeName:{baseType:{contractScope:null,id:20551,name:"LibOrder.Order",nodeType:"UserDefinedTypeName",referencedDeclaration:20744,src:"6584:14:101",typeDescriptions:{typeIdentifier:"t_struct$_Order_$20744_storage_ptr",typeString:"struct LibOrder.Order"}},id:20552,length:null,nodeType:"ArrayTypeName",src:"6584:16:101",typeDescriptions:{typeIdentifier:"t_array$_t_struct$_Order_$20744_storage_$dyn_storage_ptr",typeString:"struct LibOrder.Order[]"}},value:null,visibility:"internal"}],src:"6583:32:101"},returnParameters:{id:20555,nodeType:"ParameterList",parameters:[],src:"6630:0:101"},scope:20557,src:"6557:74:101",stateMutability:"nonpayable",superFunction:null,visibility:"public"}],scope:20558,src:"707:5926:101"}],src:"580:6054:101"},compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-04-07T04:29:24.726Z",devdoc:{methods:{"batchCancelOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":{details:"Synchronously cancels multiple orders in a single transaction.",params:{orders:"Array of order specifications."}},"batchFillOrKillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])":{details:"Synchronously executes multiple calls of fillOrKill.",params:{orders:"Array of order specifications.",signatures:"Proofs that orders have been created by makers.",takerAssetFillAmounts:"Array of desired amounts of takerAsset to sell in orders."},"return":"Amounts filled and fees paid by makers and taker."},"batchFillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])":{details:"Synchronously executes multiple calls of fillOrder.",params:{orders:"Array of order specifications.",signatures:"Proofs that orders have been created by makers.",takerAssetFillAmounts:"Array of desired amounts of takerAsset to sell in orders."},"return":"Amounts filled and fees paid by makers and taker."},"batchFillOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])":{details:"Fills an order with specified parameters and ECDSA signature.      Returns false if the transaction would otherwise revert.",params:{orders:"Array of order specifications.",signatures:"Proofs that orders have been created by makers.",takerAssetFillAmounts:"Array of desired amounts of takerAsset to sell in orders."},"return":"Amounts filled and fees paid by makers and taker."},"fillOrKillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)":{details:"Fills the input order. Reverts if exact takerAssetFillAmount not filled.",params:{order:"LibOrder.Order struct containing order specifications.",signature:"Proof that order has been created by maker.",takerAssetFillAmount:"Desired amount of takerAsset to sell."}},"fillOrderNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)":{details:"Fills an order with specified parameters and ECDSA signature.      Returns false if the transaction would otherwise revert.",params:{order:"LibOrder.Order struct containing order specifications.",signature:"Proof that order has been created by maker.",takerAssetFillAmount:"Desired amount of takerAsset to sell."},"return":"Amounts filled and fees paid by maker and taker."},"marketBuyOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])":{details:"Synchronously executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.",params:{makerAssetFillAmount:"Desired amount of makerAsset to buy.",orders:"Array of order specifications.",signatures:"Proofs that orders have been signed by makers."},"return":"Amounts filled and fees paid by makers and taker."},"marketBuyOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])":{
details:"Synchronously executes multiple fill orders in a single transaction until total amount is bought by taker.      Returns false if the transaction would otherwise revert.",params:{makerAssetFillAmount:"Desired amount of makerAsset to buy.",orders:"Array of order specifications.",signatures:"Proofs that orders have been signed by makers."},"return":"Amounts filled and fees paid by makers and taker."},"marketSellOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])":{details:"Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.",params:{orders:"Array of order specifications.",signatures:"Proofs that orders have been created by makers.",takerAssetFillAmount:"Desired amount of takerAsset to sell."},"return":"Amounts filled and fees paid by makers and taker."},"marketSellOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])":{details:"Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.      Returns false if the transaction would otherwise revert.",params:{orders:"Array of order specifications.",signatures:"Proofs that orders have been signed by makers.",takerAssetFillAmount:"Desired amount of takerAsset to sell."},"return":"Amounts filled and fees paid by makers and taker."}}},userdoc:{methods:{}}};