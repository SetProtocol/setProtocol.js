"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.InvalidReturnTokenMock={contractName:"InvalidReturnTokenMock",abi:[{constant:true,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"decimals",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"},{inputs:[{name:"initialAccount",type:"address"},{name:"initialBalance",type:"uint256"},{name:"_name",type:"string"},{name:"_symbol",type:"string"},{name:"_decimals",type:"uint256"}],payable:false,stateMutability:"nonpayable",type:"constructor"},{anonymous:false,inputs:[{indexed:true,name:"from",type:"address"},{indexed:true,name:"to",type:"address"},{indexed:false,name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"owner",type:"address"},{indexed:true,name:"spender",type:"address"},{indexed:false,name:"value",type:"uint256"}],name:"Approval",type:"event"},{constant:false,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_spender",type:"address"},{name:"_addedValue",type:"uint256"}],name:"increaseApproval",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_spender",type:"address"},{name:"_subtractedValue",type:"uint256"}],name:"decreaseApproval",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_subtractedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_addedValue","type":"uint256"}],"name":"increaseApproval","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"initialAccount","type":"address"},{"name":"initialBalance","type":"uint256"},{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_decimals","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"}],"devdoc":{"methods":{"allowance(address,address)":{"details":"Function to check the amount of tokens that an owner allowed to a spender.","params":{"_owner":"address The address which owns the funds.","_spender":"address The address which will spend the funds."},"return":"A uint256 specifying the amount of tokens still available for the spender."},"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender\'s allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"_owner":"The address to query the the balance of."},"return":"An uint256 representing the amount owned by the passed address."},"decreaseApproval(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol","params":{"_spender":"The address which will spend the funds.","_subtractedValue":"The amount of tokens to decrease the allowance by."}},"increaseApproval(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol","params":{"_addedValue":"The amount of tokens to increase the allowance by.","_spender":"The address which will spend the funds."}},"transfer(address,uint256)":{"details":"Transfer token for a specified address","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/tokens/InvalidReturnTokenMock.sol":"InvalidReturnTokenMock"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/tokens/InvalidReturnTokenMock.sol":{"keccak256":"0xc7f5878482286872421208ab2050e052d958655c5174bbb80f460019681330a4","urls":["bzzr://abba9afc9c07c41175121fe97767315b26a85955b868dcab94879c17c82bac97"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]}},"version":1}',bytecode:"0x608060405234801561001057600080fd5b50604051610a5c380380610a5c833981018060405260a081101561003357600080fd5b815160208301516040840180519294919382019264010000000081111561005957600080fd5b8201602081018481111561006c57600080fd5b815164010000000081118282018710171561008657600080fd5b505092919060200180516401000000008111156100a257600080fd5b820160208101848111156100b557600080fd5b81516401000000008111828201871017156100cf57600080fd5b5050602091820151600160a060020a03881660009081528084526040902087905560058790558551919450925061010c916003919086019061012e565b50815161012090600490602085019061012e565b50600255506101c992505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061016f57805160ff191683800117855561019c565b8280016001018555821561019c579182015b8281111561019c578251825591602001919060010190610181565b506101a89291506101ac565b5090565b6101c691905b808211156101a857600081556001016101b2565b90565b610884806101d86000396000f3fe608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063661884631161008e57806366188463146101cc57806370a08231146101f857806395d89b411461021e578063a9059cbb14610226578063d73dd62314610252578063dd62ed3e1461027e576100c6565b806306fdde03146100cb578063095ea7b31461014857806318160ddd1461018657806323b872dd1461018e578063313ce567146101c4575b600080fd5b6100d36102ac565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101746004803603604081101561015e57600080fd5b50600160a060020a03813516906020013561033a565b60408051918252519081900360200190f35b6101746103a0565b610174600480360360608110156101a457600080fd5b50600160a060020a038135811691602081013590911690604001356103a6565b61017461051b565b610174600480360360408110156101e257600080fd5b50600160a060020a038135169060200135610521565b6101746004803603602081101561020e57600080fd5b5035600160a060020a0316610611565b6100d361062c565b6101746004803603604081101561023c57600080fd5b50600160a060020a038135169060200135610687565b6101746004803603604081101561026857600080fd5b50600160a060020a038135169060200135610766565b6101746004803603604081101561029457600080fd5b50600160a060020a03813581169160200135166107ff565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103325780601f1061030757610100808354040283529160200191610332565b820191906000526020600020905b81548152906001019060200180831161031557829003601f168201915b505050505081565b336000818152600160209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600492915050565b60055481565b6000600160a060020a0383166103bb57600080fd5b600160a060020a0384166000908152602081905260409020548211156103e057600080fd5b600160a060020a038416600090815260016020908152604080832033845290915290205482111561041057600080fd5b600160a060020a038416600090815260208190526040902054610439908363ffffffff61082a16565b600160a060020a03808616600090815260208190526040808220939093559085168152205461046e908363ffffffff61083f16565b600160a060020a038085166000908152602081815260408083209490945591871681526001825282812033825290915220546104b0908363ffffffff61082a16565b600160a060020a03808616600081815260016020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060049392505050565b60025481565b336000908152600160209081526040808320600160a060020a03861684529091528120548083111561057657336000908152600160209081526040808320600160a060020a03881684529091528120556105ab565b610586818463ffffffff61082a16565b336000908152600160209081526040808320600160a060020a03891684529091529020555b336000818152600160209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060049392505050565b600160a060020a031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103325780601f1061030757610100808354040283529160200191610332565b6000600160a060020a03831661069c57600080fd5b336000908152602081905260409020548211156106b857600080fd5b336000908152602081905260409020546106d8908363ffffffff61082a16565b3360009081526020819052604080822092909255600160a060020a0385168152205461070a908363ffffffff61083f16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600492915050565b336000908152600160209081526040808320600160a060020a038616845290915281205461079a908363ffffffff61083f16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600492915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561083957600080fd5b50900390565b60008282018381101561085157600080fd5b939250505056fea165627a7a72305820ce2a3f8ca4beffcb83f594ae9b0e2509428aeb93f9e52f52f5212d83bd0de8ba0029",deployedBytecode:"0x608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063661884631161008e57806366188463146101cc57806370a08231146101f857806395d89b411461021e578063a9059cbb14610226578063d73dd62314610252578063dd62ed3e1461027e576100c6565b806306fdde03146100cb578063095ea7b31461014857806318160ddd1461018657806323b872dd1461018e578063313ce567146101c4575b600080fd5b6100d36102ac565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101746004803603604081101561015e57600080fd5b50600160a060020a03813516906020013561033a565b60408051918252519081900360200190f35b6101746103a0565b610174600480360360608110156101a457600080fd5b50600160a060020a038135811691602081013590911690604001356103a6565b61017461051b565b610174600480360360408110156101e257600080fd5b50600160a060020a038135169060200135610521565b6101746004803603602081101561020e57600080fd5b5035600160a060020a0316610611565b6100d361062c565b6101746004803603604081101561023c57600080fd5b50600160a060020a038135169060200135610687565b6101746004803603604081101561026857600080fd5b50600160a060020a038135169060200135610766565b6101746004803603604081101561029457600080fd5b50600160a060020a03813581169160200135166107ff565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103325780601f1061030757610100808354040283529160200191610332565b820191906000526020600020905b81548152906001019060200180831161031557829003601f168201915b505050505081565b336000818152600160209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600492915050565b60055481565b6000600160a060020a0383166103bb57600080fd5b600160a060020a0384166000908152602081905260409020548211156103e057600080fd5b600160a060020a038416600090815260016020908152604080832033845290915290205482111561041057600080fd5b600160a060020a038416600090815260208190526040902054610439908363ffffffff61082a16565b600160a060020a03808616600090815260208190526040808220939093559085168152205461046e908363ffffffff61083f16565b600160a060020a038085166000908152602081815260408083209490945591871681526001825282812033825290915220546104b0908363ffffffff61082a16565b600160a060020a03808616600081815260016020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060049392505050565b60025481565b336000908152600160209081526040808320600160a060020a03861684529091528120548083111561057657336000908152600160209081526040808320600160a060020a03881684529091528120556105ab565b610586818463ffffffff61082a16565b336000908152600160209081526040808320600160a060020a03891684529091529020555b336000818152600160209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060049392505050565b600160a060020a031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103325780601f1061030757610100808354040283529160200191610332565b6000600160a060020a03831661069c57600080fd5b336000908152602081905260409020548211156106b857600080fd5b336000908152602081905260409020546106d8908363ffffffff61082a16565b3360009081526020819052604080822092909255600160a060020a0385168152205461070a908363ffffffff61083f16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600492915050565b336000908152600160209081526040808320600160a060020a038616845290915281205461079a908363ffffffff61083f16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600492915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561083957600080fd5b50900390565b60008282018381101561085157600080fd5b939250505056fea165627a7a72305820ce2a3f8ca4beffcb83f594ae9b0e2509428aeb93f9e52f52f5212d83bd0de8ba0029",sourceMap:"116:5273:155:-;;;585:309;8:9:-1;5:2;;;30:1;27;20:12;5:2;585:309:155;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;585:309:155;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;585:309:155;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;585:309:155;;;;;-1:-1:-1;;;;;748:24:155;;:8;:24;;;;;;585:309;748:24;;:41;;;795:11;:28;;;829:12;;585:309;;-1:-1:-1;585:309:155;-1:-1:-1;829:12:155;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;847:16:155;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;869:8:155;:20;-1:-1:-1;116:5273:155;;-1:-1:-1;;;116:5273:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;116:5273:155;;;-1:-1:-1;116:5273:155;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",deployedSourceMap:"116:5273:155:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;116:5273:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;318:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;318:18:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3061:212;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3061:212:155;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;364:26;;;:::i;1971:472::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1971:472:155;;;;;;;;;;;;;;;;;:::i;291:23::-;;;:::i;4954:433::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4954:433:155;;;;;;;;:::i;1595:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1595:101:155;-1:-1:-1;;;;;1595:101:155;;:::i;340:20::-;;;:::i;1048:345::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1048:345:155;;;;;;;;:::i;4199:298::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4199:298:155;;;;;;;;:::i;3592:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3592:155:155;;;;;;;;;;:::i;318:18::-;;;;;;;;;;;;;;;-1:-1:-1;;318:18:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3061:212::-;3175:10;3150:7;3167:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3167:29:155;;;;;;;;;;;:38;;;3216;;;;;;;3150:7;;3167:29;;3175:10;;3216:38;;;;;;;;-1:-1:-1;3267:1:155;3061:212;;;;:::o;364:26::-;;;;:::o;1971:472::-;2079:7;-1:-1:-1;;;;;2104:17:155;;2096:26;;;;;;-1:-1:-1;;;;;2146:15:155;;:8;:15;;;;;;;;;;;2136:25;;;2128:34;;;;;;-1:-1:-1;;;;;2186:14:155;;;;;;:7;:14;;;;;;;;2201:10;2186:26;;;;;;;;2176:36;;;2168:45;;;;;;-1:-1:-1;;;;;2238:15:155;;:8;:15;;;;;;;;;;;:27;;2258:6;2238:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;2220:15:155;;;:8;:15;;;;;;;;;;;:45;;;;2287:13;;;;;;;:25;;2305:6;2287:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;2271:13:155;;;:8;:13;;;;;;;;;;;:41;;;;2347:14;;;;;:7;:14;;;;;2362:10;2347:26;;;;;;;:38;;2378:6;2347:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;2318:14:155;;;;;;;:7;:14;;;;;;;;2333:10;2318:26;;;;;;;;:67;;;;2396:28;;;;;;;;;;;2318:14;;2396:28;;;;;;;;;;;-1:-1:-1;2437:1:155;1971:472;;;;;:::o;291:23::-;;;;:::o;4954:433::-;5106:10;5062:7;5098:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;5098:29:155;;;;;;;;;;5137:27;;;5133:164;;;5182:10;5206:1;5174:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;5174:29:155;;;;;;;;;:33;5133:164;;;5260:30;:8;5273:16;5260:30;:12;:30;:::i;:::-;5236:10;5228:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;5228:29:155;;;;;;;;;:62;5133:164;5316:10;5338:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;5307:61:155;;5338:29;;;;;;;;;;;5307:61;;;;;;;;;5316:10;5307:61;;;;;;;;;;;-1:-1:-1;5381:1:155;;4954:433;-1:-1:-1;;;4954:433:155:o;1595:101::-;-1:-1:-1;;;;;1675:16:155;1653:7;1675:16;;;;;;;;;;;;1595:101::o;340:20::-;;;;;;;;;;;;;;;-1:-1:-1;;340:20:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1048:345;1133:7;-1:-1:-1;;;;;1158:17:155;;1150:26;;;;;;1209:10;1200:8;:20;;;;;;;;;;;1190:30;;;1182:39;;;;;;1260:10;1251:8;:20;;;;;;;;;;;:32;;1276:6;1251:32;:24;:32;:::i;:::-;1237:10;1228:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;1305:13:155;;;;;;:25;;1323:6;1305:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1289:13:155;;:8;:13;;;;;;;;;;;;:41;;;;1341:33;;;;;;;1289:13;;1350:10;;1341:33;;;;;;;;;;-1:-1:-1;1387:1:155;1048:345;;;;:::o;4199:298::-;4367:10;4302:7;4359:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4359:29:155;;;;;;;;;;:46;;4393:11;4359:46;:33;:46;:::i;:::-;4327:10;4319:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4319:29:155;;;;;;;;;;;;:87;;;4417:61;;;;;;4319:29;;4417:61;;;;;;;;;;;-1:-1:-1;4491:1:155;4199:298;;;;:::o;3592:155::-;-1:-1:-1;;;;;3717:15:155;;;3693:7;3717:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;3592:155::o;1211:145:166:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:166;;;1211:145::o;1439:::-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;;1576:1;1439:145;-1:-1:-1;;;1439:145:166:o",source:'pragma solidity 0.5.7;\n\nimport "openzeppelin-solidity/contracts/math/SafeMath.sol";\n\n// mock class using BasicToken\ncontract InvalidReturnTokenMock {\n\n  using SafeMath for uint;\n  mapping(address => uint256) balances;\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n  uint256 public decimals;\n  string public name;\n  string public symbol;\n  uint256 public totalSupply;\n\n  event Transfer(\n    address indexed from,\n    address indexed to,\n    uint256 value\n  );\n\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n\n  constructor(\n    address initialAccount,\n    uint256 initialBalance,\n    string memory _name,\n    string memory _symbol,\n    uint256 _decimals)\n    public\n  {\n    balances[initialAccount] = initialBalance;\n    totalSupply = initialBalance;\n    name = _name;\n    symbol = _symbol;\n    decimals = _decimals;\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(\n    address _to,\n    uint256 _value\n  )\n    external\n    returns (uint256)\n  {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return 4;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) external view returns (uint256) {\n    return balances[_owner];\n  }\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    external\n    returns (uint256)\n  {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return 4;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender\'s allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(\n    address _spender,\n    uint256 _value\n  )\n    external\n    returns (uint256)\n  {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return 4;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(\n    address _owner,\n    address _spender\n   )\n    external\n    view\n    returns (uint256)\n  {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(\n    address _spender,\n    uint256 _addedValue\n  )\n    external\n    returns (uint256)\n  {\n    allowed[msg.sender][_spender] = (\n      allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return 4;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(\n    address _spender,\n    uint256 _subtractedValue\n  )\n    external\n    returns (uint256)\n  {\n    uint256 oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return 4;\n  }\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/tokens/InvalidReturnTokenMock.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:37.113Z",devdoc:{methods:{"allowance(address,address)":{details:"Function to check the amount of tokens that an owner allowed to a spender.",params:{_owner:"address The address which owns the funds.",_spender:"address The address which will spend the funds."},"return":"A uint256 specifying the amount of tokens still available for the spender."},"approve(address,uint256)":{details:"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",params:{_spender:"The address which will spend the funds.",_value:"The amount of tokens to be spent."}},"balanceOf(address)":{details:"Gets the balance of the specified address.",params:{_owner:"The address to query the the balance of."},"return":"An uint256 representing the amount owned by the passed address."},"decreaseApproval(address,uint256)":{details:"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",params:{_spender:"The address which will spend the funds.",_subtractedValue:"The amount of tokens to decrease the allowance by."}},"increaseApproval(address,uint256)":{details:"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",params:{_addedValue:"The amount of tokens to increase the allowance by.",_spender:"The address which will spend the funds."}},"transfer(address,uint256)":{details:"Transfer token for a specified address",params:{_to:"The address to transfer to.",_value:"The amount to be transferred."}},"transferFrom(address,address,uint256)":{details:"Transfer tokens from one address to another",params:{_from:"address The address which you want to send tokens from",_to:"address The address which you want to transfer to",_value:"uint256 the amount of tokens to be transferred"}}}},userdoc:{methods:{}}};