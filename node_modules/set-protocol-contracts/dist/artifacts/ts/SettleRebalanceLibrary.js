"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SettleRebalanceLibrary={contractName:"SettleRebalanceLibrary",abi:[{constant:true,inputs:[{name:"_totalSupply",type:"uint256"},{name:"_naturalUnit",type:"uint256"},{name:"_nextSet",type:"address"},{name:"_vaultAddress",type:"address"}],name:"calculateNextSetIssueQuantity",outputs:[{name:"",type:"uint256"},{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_vaultAddress",type:"address"},{components:[{name:"naturalUnit",type:"uint256"},{name:"components",type:"address[]"},{name:"units",type:"uint256[]"}],name:"_setToken",type:"tuple"}],name:"calculateMaxIssueAmount",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[{"name":"_totalSupply","type":"uint256"},{"name":"_naturalUnit","type":"uint256"},{"name":"_nextSet","type":"address"},{"name":"_vaultAddress","type":"address"}],"name":"calculateNextSetIssueQuantity","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_vaultAddress","type":"address"},{"components":[{"name":"naturalUnit","type":"uint256"},{"name":"components","type":"address[]"},{"name":"units","type":"uint256[]"}],"name":"_setToken","type":"tuple"}],"name":"calculateMaxIssueAmount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"devdoc":{"author":"Set Protocol * Default implementation of Rebalancing Set Token settle rebalance and related functions.","methods":{"calculateMaxIssueAmount(address,SetTokenLibrary.SetDetails)":{"params":{"_setToken":"nextSet details","_vaultAddress":"Vault address"},"return":"uint256          maxIssueAmount"},"calculateNextSetIssueQuantity(uint256,uint256,address,address)":{"params":{"_naturalUnit":"Natural unit of rebalancing set token","_nextSet":"Address of next set","_totalSupply":"Total supply of rebalancing set token","_vaultAddress":"Vault address"},"return":"uint256             Amount of nextSets to issueuint256             New unitShares for the rebalancingSetToken"},"settleRebalance(uint256,uint256,uint256,uint256,address,address,address,uint8)":{"params":{"_coreAddress":"Core address","_minimumBid":"Minimum bid allowed, used to see if valid settle","_naturalUnit":"Natural unit of rebalancing set token","_nextSet":"Address of next set","_remainingCurrentSets":"Amount of currentSets remaining","_totalSupply":"Total supply of rebalancing set token","_vaultAddress":"Vault address"},"return":"uint256                 Amount of nextSets to issue"}},"title":"SettleRebalanceLibrary"},"userdoc":{"methods":{"calculateMaxIssueAmount(address,SetTokenLibrary.SetDetails)":{"notice":"Get the maximum possible issue amount of nextSet based on number of components owned by rebalancing set token."},"calculateNextSetIssueQuantity(uint256,uint256,address,address)":{"notice":"Calculate the amount of nextSets to issue by using the component amounts in the vault, unitShares following from this calculation."},"settleRebalance(uint256,uint256,uint256,uint256,address,address,address,uint8)":{"notice":"Calculate the amount of nextSets to issue by using the component amounts in the vault, new unitShares follow from this calculation"}}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/rebalancing-libraries/SettleRebalanceLibrary.sol":"SettleRebalanceLibrary"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICore.sol":{"keccak256":"0x5dc3db4398630ea52d2a40c9ddfa89d94e65c2770a12bab4d2a5c8eb573fb0a0","urls":["bzzr://25e90b53f61b388e0950b808e2296f82d427b66cfd6021212713436b2a592e31"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetToken.sol":{"keccak256":"0xfa6c0c07f8394d89b6b8f72e15778f8452a9341acb20cebb8421f3522aaca1bd","urls":["bzzr://ccf23bb78fd507bf8cbf5cf7ac2a660a1463b87a3689196e42b8f6862d1a6b11"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IVault.sol":{"keccak256":"0xf8a6d376173be39f5744492866db5dd3f91453a124d23679ff164ff3817f2f4f","urls":["bzzr://896c0a8329175c1620e1a22467778b835defe0e61847e5a8427a306f42391e64"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/RebalancingLibrary.sol":{"keccak256":"0x7f9dd2f95b2ee71a98b94cb9b0df15874aa134e7480d04a1fcf36aff166a55f4","urls":["bzzr://f43a5563ec5df095151eee30cf7a0941b5a971917c27c7b34d9586b36563ab5b"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/SetTokenLibrary.sol":{"keccak256":"0x0c0952057a64c3af0ace01db29258145deff7d935bdc53d1bbab6fff87b3b146","urls":["bzzr://ad1944f45fade934870661a4e91c260625755760ff0ef047677547fbdc6a16bf"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/rebalancing-libraries/SettleRebalanceLibrary.sol":{"keccak256":"0xde1bb9e3815e2a7717ef9faeb1dc05611f6620a6a2c724422064153cbc11ce3e","urls":["bzzr://ddf28ae5ab248857c8f56c8c808867a247ff7ae5b68252875958cdada1c8b971"]},"openzeppelin-solidity/contracts/math/Math.sol":{"keccak256":"0x775160984ceb0931bf67e718fb23afd6fc2a5d38a6e2378ebb438a039ed2269e","urls":["bzzr://209e27ad1c13e3e9b157915e0269ee4c3b6f0a494660dcc4acf1faf102e1a7ad"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"set-protocol-contract-utils/contracts/lib/CommonMath.sol":{"keccak256":"0x3d1d08c6efc2a973fe2c02ddcb02fd99a8c8eb75f74dcbd93e8e15864eee2b6b","urls":["bzzr://580815dd1cf648a4521d923e59087de21143d9c48115ab71579a1f5a8f3d36af"]}},"version":1}',bytecode:"0x610d3c610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004e5760e060020a6000350463084f9bce8114610053578063495c23bd14610089578063ec85e975146100aa575b600080fd5b81801561005f57600080fd5b5061007361006e3660046109d7565b6100bd565b6040516100809190610c6e565b60405180910390f35b61009c610097366004610976565b61021e565b604051610080929190610c7c565b6100736100b8366004610894565b6102a2565b600060ff8216600214610105576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fc90610c5e565b60405180910390fd5b86881061013e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fc90610c3e565b60008061014d8b89898861021e565b909250905080610189576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fc90610c4e565b6040517fa57de4cf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87169063a57de4cf906101dd908a908690600401610c23565b600060405180830381600087803b1580156101f757600080fd5b505af115801561020b573d6000803e3d6000fd5b50929d9c50505050505050505050505050565b6000806102296105dd565b610232856103c1565b9050600061024085836102a2565b90506000610254898963ffffffff61058716565b835190915060009061027c90610270858263ffffffff61058716565b9063ffffffff6105a916565b90506000610290828463ffffffff61058716565b919b919a509098505050505050505050565b6000806102ad6105d7565b90508360005b8460200151518110156103b55760008273ffffffffffffffffffffffffffffffffffffffff16631f98ade3876020015184815181106102ee57fe5b6020026020010151306040518363ffffffff1660e060020a028152600401610317929190610c08565b60206040518083038186803b15801561032f57600080fd5b505afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103679190810190610958565b9050600061039d87600001516102708960400151868151811061038657fe5b60200260200101518561058790919063ffffffff16565b9050848110156103ab578094505b50506001016102b3565b50909150505b92915050565b6103c96105dd565b600082905060008173ffffffffffffffffffffffffffffffffffffffff166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561041957600080fd5b505afa15801561042d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104519190810190610958565b905060608273ffffffffffffffffffffffffffffffffffffffff166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b15801561049e57600080fd5b505afa1580156104b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104da91908101906108e6565b905060608373ffffffffffffffffffffffffffffffffffffffff1663027aa9f56040518163ffffffff1660e060020a02815260040160006040518083038186803b15801561052757600080fd5b505afa15801561053b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105639190810190610923565b60408051606081018252948552602085019390935291830191909152509392505050565b600080821161059557600080fd5b60008284816105a057fe5b04949350505050565b6000826105b8575060006103bb565b828202828482816105c557fe5b04146105d057600080fd5b9392505050565b60001990565b60405180606001604052806000815260200160608152602001606081525090565b60006105d08235610cdb565b60006105d08251610cdb565b600082601f83011261062757600080fd5b813561063a61063582610cb1565b610c8a565b9150818183526020840193506020810190508385602084028201111561065f57600080fd5b60005b8381101561068b578161067588826105fe565b8452506020928301929190910190600101610662565b5050505092915050565b600082601f8301126106a657600080fd5b81516106b461063582610cb1565b915081818352602084019350602081019050838560208402820111156106d957600080fd5b60005b8381101561068b57816106ef888261060a565b84525060209283019291909101906001016106dc565b600082601f83011261071657600080fd5b813561072461063582610cb1565b9150818183526020840193506020810190508385602084028201111561074957600080fd5b60005b8381101561068b578161075f8882610870565b845250602092830192919091019060010161074c565b600082601f83011261078657600080fd5b815161079461063582610cb1565b915081818352602084019350602081019050838560208402820111156107b957600080fd5b60005b8381101561068b57816107cf888261087c565b84525060209283019291909101906001016107bc565b6000606082840312156107f757600080fd5b6108016060610c8a565b9050600061080f8484610870565b825250602082013567ffffffffffffffff81111561082c57600080fd5b61083884828501610616565b602083015250604082013567ffffffffffffffff81111561085857600080fd5b61086484828501610705565b60408301525092915050565b60006105d08235610cf9565b60006105d08251610cf9565b60006105d08235610cfc565b600080604083850312156108a757600080fd5b60006108b385856105fe565b925050602083013567ffffffffffffffff8111156108d057600080fd5b6108dc858286016107e5565b9150509250929050565b6000602082840312156108f857600080fd5b815167ffffffffffffffff81111561090f57600080fd5b61091b84828501610695565b949350505050565b60006020828403121561093557600080fd5b815167ffffffffffffffff81111561094c57600080fd5b61091b84828501610775565b60006020828403121561096a57600080fd5b600061091b848461087c565b6000806000806080858703121561098c57600080fd5b60006109988787610870565b94505060206109a987828801610870565b93505060406109ba878288016105fe565b92505060606109cb878288016105fe565b91505092959194509250565b600080600080600080600080610100898b0312156109f457600080fd5b6000610a008b8b610870565b9850506020610a118b828c01610870565b9750506040610a228b828c01610870565b9650506060610a338b828c01610870565b9550506080610a448b828c016105fe565b94505060a0610a558b828c016105fe565b93505060c0610a668b828c016105fe565b92505060e0610a778b828c01610888565b9150509295985092959890939650565b610a9081610cdb565b82525050565b6000610aa3603c83610cd2565b7f526562616c616e63696e67536574546f6b656e2e736574746c65526562616c6181527f6e63653a20526562616c616e6365206e6f7420636f6d706c6574656400000000602082015260400192915050565b6000610b02606283610cd2565b7f526562616c616e63696e67536574546f6b656e2e736574746c65526562616c6181527f6e63653a204661696c656420726562616c616e63652c20756e6974736861726560208201527f7320657175616c7320302e2043616c6c20656e644661696c656441756374696f60408201527f6e2e000000000000000000000000000000000000000000000000000000000000606082015260800192915050565b6000610bad603c83610cd2565b7f526562616c616e63696e67536574546f6b656e2e736574746c65526562616c6181527f6e63653a205374617465206d75737420626520526562616c616e636500000000602082015260400192915050565b610a9081610cf9565b60408101610c168285610a87565b6105d06020830184610a87565b60408101610c318285610a87565b6105d06020830184610bff565b602080825281016103bb81610a96565b602080825281016103bb81610af5565b602080825281016103bb81610ba0565b602081016103bb8284610bff565b60408101610c318285610bff565b60405181810167ffffffffffffffff81118282101715610ca957600080fd5b604052919050565b600067ffffffffffffffff821115610cc857600080fd5b5060209081020190565b90815260200190565b600073ffffffffffffffffffffffffffffffffffffffff82166103bb565b90565b60ff169056fea265627a7a72305820691f4c14a6240ddafe64f1866b4874cf629f78d5c6c44bff80d235e8a6bf5ad26c6578706572696d656e74616cf50037",deployedBytecode:"0x730000000000000000000000000000000000000000301460806040526004361061004e5760e060020a6000350463084f9bce8114610053578063495c23bd14610089578063ec85e975146100aa575b600080fd5b81801561005f57600080fd5b5061007361006e3660046109d7565b6100bd565b6040516100809190610c6e565b60405180910390f35b61009c610097366004610976565b61021e565b604051610080929190610c7c565b6100736100b8366004610894565b6102a2565b600060ff8216600214610105576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fc90610c5e565b60405180910390fd5b86881061013e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fc90610c3e565b60008061014d8b89898861021e565b909250905080610189576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fc90610c4e565b6040517fa57de4cf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87169063a57de4cf906101dd908a908690600401610c23565b600060405180830381600087803b1580156101f757600080fd5b505af115801561020b573d6000803e3d6000fd5b50929d9c50505050505050505050505050565b6000806102296105dd565b610232856103c1565b9050600061024085836102a2565b90506000610254898963ffffffff61058716565b835190915060009061027c90610270858263ffffffff61058716565b9063ffffffff6105a916565b90506000610290828463ffffffff61058716565b919b919a509098505050505050505050565b6000806102ad6105d7565b90508360005b8460200151518110156103b55760008273ffffffffffffffffffffffffffffffffffffffff16631f98ade3876020015184815181106102ee57fe5b6020026020010151306040518363ffffffff1660e060020a028152600401610317929190610c08565b60206040518083038186803b15801561032f57600080fd5b505afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103679190810190610958565b9050600061039d87600001516102708960400151868151811061038657fe5b60200260200101518561058790919063ffffffff16565b9050848110156103ab578094505b50506001016102b3565b50909150505b92915050565b6103c96105dd565b600082905060008173ffffffffffffffffffffffffffffffffffffffff166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561041957600080fd5b505afa15801561042d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104519190810190610958565b905060608273ffffffffffffffffffffffffffffffffffffffff166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b15801561049e57600080fd5b505afa1580156104b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104da91908101906108e6565b905060608373ffffffffffffffffffffffffffffffffffffffff1663027aa9f56040518163ffffffff1660e060020a02815260040160006040518083038186803b15801561052757600080fd5b505afa15801561053b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105639190810190610923565b60408051606081018252948552602085019390935291830191909152509392505050565b600080821161059557600080fd5b60008284816105a057fe5b04949350505050565b6000826105b8575060006103bb565b828202828482816105c557fe5b04146105d057600080fd5b9392505050565b60001990565b60405180606001604052806000815260200160608152602001606081525090565b60006105d08235610cdb565b60006105d08251610cdb565b600082601f83011261062757600080fd5b813561063a61063582610cb1565b610c8a565b9150818183526020840193506020810190508385602084028201111561065f57600080fd5b60005b8381101561068b578161067588826105fe565b8452506020928301929190910190600101610662565b5050505092915050565b600082601f8301126106a657600080fd5b81516106b461063582610cb1565b915081818352602084019350602081019050838560208402820111156106d957600080fd5b60005b8381101561068b57816106ef888261060a565b84525060209283019291909101906001016106dc565b600082601f83011261071657600080fd5b813561072461063582610cb1565b9150818183526020840193506020810190508385602084028201111561074957600080fd5b60005b8381101561068b578161075f8882610870565b845250602092830192919091019060010161074c565b600082601f83011261078657600080fd5b815161079461063582610cb1565b915081818352602084019350602081019050838560208402820111156107b957600080fd5b60005b8381101561068b57816107cf888261087c565b84525060209283019291909101906001016107bc565b6000606082840312156107f757600080fd5b6108016060610c8a565b9050600061080f8484610870565b825250602082013567ffffffffffffffff81111561082c57600080fd5b61083884828501610616565b602083015250604082013567ffffffffffffffff81111561085857600080fd5b61086484828501610705565b60408301525092915050565b60006105d08235610cf9565b60006105d08251610cf9565b60006105d08235610cfc565b600080604083850312156108a757600080fd5b60006108b385856105fe565b925050602083013567ffffffffffffffff8111156108d057600080fd5b6108dc858286016107e5565b9150509250929050565b6000602082840312156108f857600080fd5b815167ffffffffffffffff81111561090f57600080fd5b61091b84828501610695565b949350505050565b60006020828403121561093557600080fd5b815167ffffffffffffffff81111561094c57600080fd5b61091b84828501610775565b60006020828403121561096a57600080fd5b600061091b848461087c565b6000806000806080858703121561098c57600080fd5b60006109988787610870565b94505060206109a987828801610870565b93505060406109ba878288016105fe565b92505060606109cb878288016105fe565b91505092959194509250565b600080600080600080600080610100898b0312156109f457600080fd5b6000610a008b8b610870565b9850506020610a118b828c01610870565b9750506040610a228b828c01610870565b9650506060610a338b828c01610870565b9550506080610a448b828c016105fe565b94505060a0610a558b828c016105fe565b93505060c0610a668b828c016105fe565b92505060e0610a778b828c01610888565b9150509295985092959890939650565b610a9081610cdb565b82525050565b6000610aa3603c83610cd2565b7f526562616c616e63696e67536574546f6b656e2e736574746c65526562616c6181527f6e63653a20526562616c616e6365206e6f7420636f6d706c6574656400000000602082015260400192915050565b6000610b02606283610cd2565b7f526562616c616e63696e67536574546f6b656e2e736574746c65526562616c6181527f6e63653a204661696c656420726562616c616e63652c20756e6974736861726560208201527f7320657175616c7320302e2043616c6c20656e644661696c656441756374696f60408201527f6e2e000000000000000000000000000000000000000000000000000000000000606082015260800192915050565b6000610bad603c83610cd2565b7f526562616c616e63696e67536574546f6b656e2e736574746c65526562616c6181527f6e63653a205374617465206d75737420626520526562616c616e636500000000602082015260400192915050565b610a9081610cf9565b60408101610c168285610a87565b6105d06020830184610a87565b60408101610c318285610a87565b6105d06020830184610bff565b602080825281016103bb81610a96565b602080825281016103bb81610af5565b602080825281016103bb81610ba0565b602081016103bb8284610bff565b60408101610c318285610bff565b60405181810167ffffffffffffffff81118282101715610ca957600080fd5b604052919050565b600067ffffffffffffffff821115610cc857600080fd5b5060209081020190565b90815260200190565b600073ffffffffffffffffffffffffffffffffffffffff82166103bb565b90565b60ff169056fea265627a7a72305820691f4c14a6240ddafe64f1866b4874cf629f78d5c6c44bff80d235e8a6bf5ad26c6578706572696d656e74616cf50037",sourceMap:"1356:5493:84:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",deployedSourceMap:"1356:5493:84:-;;;;;;;;;;;-1:-1:-1;;;1356:5493:84;;;;;;;;;;;;;;;;;;;;;;2201:1447;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2201:1447:84;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4219:1281;;;;;;;;;:::i;:::-;;;;;;;;;5795:1052;;;;;;;;;:::i;2201:1447::-;2510:7;2611:60;;;2636:34;2611:60;2590:167;;;;;;;;;;;;;;;;;;;;;;2871:11;2847:21;:35;2826:142;;;;;;;;;;;;;;3020:19;3049:22;3147:140;3190:12;3216;3242:8;3264:13;3147:29;:140::i;:::-;3081:206;;-1:-1:-1;3081:206:84;-1:-1:-1;3319:18:84;3298:163;;;;;;;;;;;;;;3520:89;;;;;:32;;;;;;:89;;3566:8;;3588:11;;3520:89;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3520:89:84;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;3627:14:84;;2201:1447;-1:-1:-1;;;;;;;;;;;;;2201:1447:84:o;4219:1281::-;4426:7;4435;4516:46;;:::i;:::-;4565:39;4595:8;4565:29;:39::i;:::-;4516:88;;4614:22;4639:86;4676:13;4703:12;4639:23;:86::i;:::-;4614:111;-1:-1:-1;4825:31:84;4859:30;:12;4876;4859:30;:16;:30;:::i;:::-;5264:24;;4825:64;;-1:-1:-1;5193:19:84;;5215:74;;:44;:14;5264:24;5215:44;:18;:44;:::i;:::-;:48;:74;:48;:74;:::i;:::-;5193:96;-1:-1:-1;5384:21:84;5408:40;5193:96;5424:23;5408:40;:15;:40;:::i;:::-;5466:11;;;;-1:-1:-1;4219:1281:84;;-1:-1:-1;;;;;;;;;4219:1281:84:o;5795:1052::-;5963:7;5986:22;6011:23;:21;:23::i;:::-;5986:48;-1:-1:-1;6074:13:84;6044:20;6099:710;6123:9;:20;;;:27;6119:1;:31;6099:710;;;6249:23;6275:13;:29;;;6322:9;:20;;;6343:1;6322:23;;;;;;;;;;;;;;6371:4;6275:115;;;;;-1:-1:-1;;;6275:115:84;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6275:115:84;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6275:115:84;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6275:115:84;;;;;;;;;6249:141;;6575:28;6606:66;6650:9;:21;;;6606:39;6626:9;:15;;;6642:1;6626:18;;;;;;;;;;;;;;6606:15;:19;;:39;;;;:::i;:66::-;6575:97;;6713:14;6690:20;:37;6686:113;;;6764:20;6747:37;;6686:113;-1:-1:-1;;6152:3:84;;6099:710;;;-1:-1:-1;6826:14:84;;-1:-1:-1;;5795:1052:84;;;;;:::o;2980:564:46:-;3078:17;;:::i;:::-;3150:18;3181:4;3150:36;;3235:19;3257:8;:20;;;:22;;;;;-1:-1:-1;;;3257:22:46;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3257:22:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3257:22:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3257:22:46;;;;;;;;;3235:44;;3289:27;3319:8;:22;;;:24;;;;;-1:-1:-1;;;3319:24:46;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3319:24:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3319:24:46;;;;;;39:16:-1;36:1;17:17;2:54;101:4;3319:24:46;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;3319:24:46;;;;;;;;;3289:54;;3353:22;3378:8;:17;;;:19;;;;;-1:-1:-1;;;3378:19:46;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3378:19:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3378:19:46;;;;;;39:16:-1;36:1;17:17;2:54;101:4;3378:19:46;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;3378:19:46;;;;;;;;;3415:122;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3415:122:46;2980:564;-1:-1:-1;;;2980:564:46:o;782:296:166:-;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;;782:296;-1:-1:-1;;;;782:296:166:o;231:421::-;289:7;529:6;525:45;;-1:-1:-1;558:1:166;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;;644:1;231:421;-1:-1:-1;;;231:421:166:o;1220:118:176:-;-1:-1:-1;;1220:118:176;:::o;1356:5493:84:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;130:122;;208:39;239:6;233:13;208:39;;277:699;;390:3;383:4;375:6;371:17;367:27;357:2;;408:1;405;398:12;357:2;445:6;432:20;467:76;482:60;535:6;482:60;;;467:76;;;458:85;;560:5;585:6;578:5;571:21;615:4;607:6;603:17;593:27;;637:4;632:3;628:14;621:21;;690:6;737:3;729:4;721:6;717:17;712:3;708:27;705:36;702:2;;;754:1;751;744:12;702:2;779:1;764:206;789:6;786:1;783:13;764:206;;;847:3;869:37;902:3;890:10;869:37;;;857:50;;-1:-1;930:4;921:14;;;;949;;;;;811:1;804:9;764:206;;;768:14;350:626;;;;;;;;1002:722;;1130:3;1123:4;1115:6;1111:17;1107:27;1097:2;;1148:1;1145;1138:12;1097:2;1178:6;1172:13;1200:80;1215:64;1272:6;1215:64;;1200:80;1191:89;;1297:5;1322:6;1315:5;1308:21;1352:4;1344:6;1340:17;1330:27;;1374:4;1369:3;1365:14;1358:21;;1427:6;1474:3;1466:4;1458:6;1454:17;1449:3;1445:27;1442:36;1439:2;;;1491:1;1488;1481:12;1439:2;1516:1;1501:217;1526:6;1523:1;1520:13;1501:217;;;1584:3;1606:48;1650:3;1638:10;1606:48;;;1594:61;;-1:-1;1678:4;1669:14;;;;1697;;;;;1548:1;1541:9;1501:217;;1750:699;;1863:3;1856:4;1848:6;1844:17;1840:27;1830:2;;1881:1;1878;1871:12;1830:2;1918:6;1905:20;1940:76;1955:60;2008:6;1955:60;;1940:76;1931:85;;2033:5;2058:6;2051:5;2044:21;2088:4;2080:6;2076:17;2066:27;;2110:4;2105:3;2101:14;2094:21;;2163:6;2210:3;2202:4;2194:6;2190:17;2185:3;2181:27;2178:36;2175:2;;;2227:1;2224;2217:12;2175:2;2252:1;2237:206;2262:6;2259:1;2256:13;2237:206;;;2320:3;2342:37;2375:3;2363:10;2342:37;;;2330:50;;-1:-1;2403:4;2394:14;;;;2422;;;;;2284:1;2277:9;2237:206;;2475:722;;2603:3;2596:4;2588:6;2584:17;2580:27;2570:2;;2621:1;2618;2611:12;2570:2;2651:6;2645:13;2673:80;2688:64;2745:6;2688:64;;2673:80;2664:89;;2770:5;2795:6;2788:5;2781:21;2825:4;2817:6;2813:17;2803:27;;2847:4;2842:3;2838:14;2831:21;;2900:6;2947:3;2939:4;2931:6;2927:17;2922:3;2918:27;2915:36;2912:2;;;2964:1;2961;2954:12;2912:2;2989:1;2974:217;2999:6;2996:1;2993:13;2974:217;;;3057:3;3079:48;3123:3;3111:10;3079:48;;;3067:61;;-1:-1;3151:4;3142:14;;;;3170;;;;;3021:1;3014:9;2974:217;;3245:841;;3362:4;3350:9;3345:3;3341:19;3337:30;3334:2;;;3380:1;3377;3370:12;3334:2;3398:20;3413:4;3398:20;;;3389:29;-1:-1;3475:1;3506:49;3551:3;3531:9;3506:49;;;3482:74;;-1:-1;3651:2;3636:18;;3623:32;3675:18;3664:30;;3661:2;;;3707:1;3704;3697:12;3661:2;3742:70;3808:3;3799:6;3788:9;3784:22;3742:70;;;3735:4;3728:5;3724:16;3717:96;3577:247;3903:2;3892:9;3888:18;3875:32;3927:18;3919:6;3916:30;3913:2;;;3959:1;3956;3949:12;3913:2;3994:70;4060:3;4051:6;4040:9;4036:22;3994:70;;;3987:4;3980:5;3976:16;3969:96;3834:242;3328:758;;;;;4093:118;;4160:46;4198:6;4185:20;4160:46;;4218:122;;4296:39;4327:6;4321:13;4296:39;;4347:114;;4412:44;4448:6;4435:20;4412:44;;4468:508;;;4617:2;4605:9;4596:7;4592:23;4588:32;4585:2;;;4633:1;4630;4623:12;4585:2;4668:1;4685:53;4730:7;4710:9;4685:53;;;4675:63;;4647:97;4803:2;4792:9;4788:18;4775:32;4827:18;4819:6;4816:30;4813:2;;;4859:1;4856;4849:12;4813:2;4879:81;4952:7;4943:6;4932:9;4928:22;4879:81;;;4869:91;;4754:212;4579:397;;;;;;4983:392;;5123:2;5111:9;5102:7;5098:23;5094:32;5091:2;;;5139:1;5136;5129:12;5091:2;5174:24;;5218:18;5207:30;;5204:2;;;5250:1;5247;5240:12;5204:2;5270:89;5351:7;5342:6;5331:9;5327:22;5270:89;;;5260:99;5085:290;-1:-1;;;;5085:290;5382:392;;5522:2;5510:9;5501:7;5497:23;5493:32;5490:2;;;5538:1;5535;5528:12;5490:2;5573:24;;5617:18;5606:30;;5603:2;;;5649:1;5646;5639:12;5603:2;5669:89;5750:7;5741:6;5730:9;5726:22;5669:89;;5781:263;;5896:2;5884:9;5875:7;5871:23;5867:32;5864:2;;;5912:1;5909;5902:12;5864:2;5947:1;5964:64;6020:7;6000:9;5964:64;;6051:617;;;;;6206:3;6194:9;6185:7;6181:23;6177:33;6174:2;;;6223:1;6220;6213:12;6174:2;6258:1;6275:53;6320:7;6300:9;6275:53;;;6265:63;;6237:97;6365:2;6383:53;6428:7;6419:6;6408:9;6404:22;6383:53;;;6373:63;;6344:98;6473:2;6491:53;6536:7;6527:6;6516:9;6512:22;6491:53;;;6481:63;;6452:98;6581:2;6599:53;6644:7;6635:6;6624:9;6620:22;6599:53;;;6589:63;;6560:98;6168:500;;;;;;;;6675:1117;;;;;;;;;6896:3;6884:9;6875:7;6871:23;6867:33;6864:2;;;6913:1;6910;6903:12;6864:2;6948:1;6965:53;7010:7;6990:9;6965:53;;;6955:63;;6927:97;7055:2;7073:53;7118:7;7109:6;7098:9;7094:22;7073:53;;;7063:63;;7034:98;7163:2;7181:53;7226:7;7217:6;7206:9;7202:22;7181:53;;;7171:63;;7142:98;7271:2;7289:53;7334:7;7325:6;7314:9;7310:22;7289:53;;;7279:63;;7250:98;7379:3;7398:53;7443:7;7434:6;7423:9;7419:22;7398:53;;;7388:63;;7358:99;7488:3;7507:53;7552:7;7543:6;7532:9;7528:22;7507:53;;;7497:63;;7467:99;7597:3;7616:53;7661:7;7652:6;7641:9;7637:22;7616:53;;;7606:63;;7576:99;7706:3;7725:51;7768:7;7759:6;7748:9;7744:22;7725:51;;;7715:61;;7685:97;6858:934;;;;;;;;;;;;7799:120;7882:31;7907:5;7882:31;;;7877:3;7870:44;7864:55;;;7927:465;;8087:67;8151:2;8146:3;8087:67;;;8187:66;8167:87;;8288:66;8283:2;8274:12;;8267:88;8383:2;8374:12;;8073:319;-1:-1;;8073:319;8401:668;;8561:67;8625:2;8620:3;8561:67;;;8661:66;8641:87;;8762:66;8757:2;8748:12;;8741:88;8863:66;8858:2;8849:12;;8842:88;8964:66;8959:2;8950:12;;8943:88;9059:3;9050:13;;8547:522;-1:-1;;8547:522;9078:465;;9238:67;9302:2;9297:3;9238:67;;;9338:66;9318:87;;9439:66;9434:2;9425:12;;9418:88;9534:2;9525:12;;9224:319;-1:-1;;9224:319;9551:120;9634:31;9659:5;9634:31;;9813:324;9959:2;9944:18;;9973:71;9948:9;10017:6;9973:71;;;10055:72;10123:2;10112:9;10108:18;10099:6;10055:72;;10144:324;10290:2;10275:18;;10304:71;10279:9;10348:6;10304:71;;;10386:72;10454:2;10443:9;10439:18;10430:6;10386:72;;10475:407;10666:2;10680:47;;;10651:18;;10741:131;10651:18;10741:131;;10889:407;11080:2;11094:47;;;11065:18;;11155:131;11065:18;11155:131;;11303:407;11494:2;11508:47;;;11479:18;;11569:131;11479:18;11569:131;;11717:229;11843:2;11828:18;;11857:79;11832:9;11909:6;11857:79;;11953:348;12107:2;12092:18;;12121:79;12096:9;12173:6;12121:79;;12308:256;12370:2;12364:9;12396:17;;;12471:18;12456:34;;12492:22;;;12453:62;12450:2;;;12528:1;12525;12518:12;12450:2;12544;12537:22;12348:216;;-1:-1;12348:216;12571:254;;12726:18;12718:6;12715:30;12712:2;;;12758:1;12755;12748:12;12712:2;-1:-1;12787:4;12775:17;;;12805:15;;12649:176;13624:163;13727:19;;;13776:4;13767:14;;13720:67;13795:105;;13987:42;13976:54;;13864:31;13959:76;14042:79;14111:5;14094:27;14461:88;14539:4;14528:16;;14511:38",source:'/*\n    Copyright 2018 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { Math } from "openzeppelin-solidity/contracts/math/Math.sol";\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\nimport { CommonMath } from "set-protocol-contract-utils/contracts/lib/CommonMath.sol";\n\nimport { ICore } from "../../interfaces/ICore.sol";\nimport { IVault } from "../../interfaces/IVault.sol";\nimport { ISetToken } from "../../interfaces/ISetToken.sol";\nimport { RebalancingLibrary } from "../../lib/RebalancingLibrary.sol";\nimport { SetTokenLibrary } from "../../lib/SetTokenLibrary.sol";\n\n\n/**\n * @title SettleRebalanceLibrary\n * @author Set Protocol\n *\n * Default implementation of Rebalancing Set Token settle rebalance and related functions.\n */\nlibrary SettleRebalanceLibrary {\n    using SafeMath for uint256;\n    /* ============ Internal Functions ============ */\n\n    /**\n     * Calculate the amount of nextSets to issue by using the component amounts in the\n     * vault, new unitShares follow from this calculation\n     *\n     * @param   _totalSupply            Total supply of rebalancing set token\n     * @param   _remainingCurrentSets   Amount of currentSets remaining\n     * @param   _minimumBid             Minimum bid allowed, used to see if valid settle\n     * @param   _naturalUnit            Natural unit of rebalancing set token\n     * @param   _nextSet                Address of next set\n     * @param   _coreAddress            Core address\n     * @param   _vaultAddress           Vault address\n     * @return  uint256                 Amount of nextSets to issue\n     */\n    function settleRebalance(\n        uint256 _totalSupply,\n        uint256 _remainingCurrentSets,\n        uint256 _minimumBid,\n        uint256 _naturalUnit,\n        address _nextSet,\n        address _coreAddress,\n        address _vaultAddress,\n        uint8 _rebalanceState\n    )\n        public\n        returns (uint256)\n    {\n        // Must be in Rebalance state to call settlement\n        require(\n            _rebalanceState == uint8(RebalancingLibrary.State.Rebalance),\n            "RebalancingSetToken.settleRebalance: State must be Rebalance"\n        );\n\n        // Make sure all currentSets have been rebalanced\n        require(\n            _remainingCurrentSets < _minimumBid,\n            "RebalancingSetToken.settleRebalance: Rebalance not completed"\n        );\n\n        // Calculate next Set quantities\n        uint256 issueAmount;\n        uint256 nextUnitShares;\n        (\n            issueAmount,\n            nextUnitShares\n        ) = calculateNextSetIssueQuantity(\n            _totalSupply,\n            _naturalUnit,\n            _nextSet,\n            _vaultAddress\n        );\n\n        require(\n            nextUnitShares > 0,\n            "RebalancingSetToken.settleRebalance: Failed rebalance, unitshares equals 0. Call endFailedAuction."\n        );\n\n        // Issue nextSet to RebalancingSetToken\n        ICore(_coreAddress).issueInVault(\n            _nextSet,\n            issueAmount\n        );\n\n        return nextUnitShares;\n    }\n\n    /**\n     * Calculate the amount of nextSets to issue by using the component amounts in the\n     * vault, unitShares following from this calculation.\n     *\n     * @param   _totalSupply        Total supply of rebalancing set token\n     * @param   _naturalUnit        Natural unit of rebalancing set token\n     * @param   _nextSet            Address of next set\n     * @param   _vaultAddress       Vault address\n     * @return  uint256             Amount of nextSets to issue\n     * @return  uint256             New unitShares for the rebalancingSetToken\n     */\n    function calculateNextSetIssueQuantity(\n        uint256 _totalSupply,\n        uint256 _naturalUnit,\n        address _nextSet,\n        address _vaultAddress\n    )\n        public\n        view\n        returns (uint256, uint256)\n    {\n        // Collect data necessary to compute issueAmounts\n        SetTokenLibrary.SetDetails memory nextSetToken = SetTokenLibrary.getSetDetails(_nextSet);\n        uint256 maxIssueAmount = calculateMaxIssueAmount(\n            _vaultAddress,\n            nextSetToken\n        );\n\n        // Calculate the amount of naturalUnits worth of rebalancingSetToken outstanding\n        uint256 naturalUnitsOutstanding = _totalSupply.div(_naturalUnit);\n\n        // Issue amount of Sets that is closest multiple of nextNaturalUnit to the maxIssueAmount\n        // Since the initial division will round down to the nearest whole number when we multiply\n        // by that same number we will return the closest multiple less than the maxIssueAmount\n        uint256 issueAmount = maxIssueAmount.div(nextSetToken.naturalUnit).mul(nextSetToken.naturalUnit);\n\n        // Divide final issueAmount by naturalUnitsOutstanding to get newUnitShares\n        uint256 newUnitShares = issueAmount.div(naturalUnitsOutstanding);\n        return (issueAmount, newUnitShares);\n    }\n\n    /**\n     * Get the maximum possible issue amount of nextSet based on number of components owned by rebalancing\n     * set token.\n     *\n     * @param _vaultAddress     Vault address\n     * @param _setToken         nextSet details\n     * @return uint256          maxIssueAmount\n     */\n    function calculateMaxIssueAmount(\n        address _vaultAddress,\n        SetTokenLibrary.SetDetails memory _setToken\n    )\n        public\n        view\n        returns (uint256)\n    {\n        uint256 maxIssueAmount = CommonMath.maxUInt256();\n        IVault vaultInstance = IVault(_vaultAddress);\n\n        for (uint256 i = 0; i < _setToken.components.length; i++) {\n            // Get amount of components in vault owned by rebalancingSetToken\n            uint256 componentAmount = vaultInstance.getOwnerBalance(\n                _setToken.components[i],\n                address(this)\n            );\n\n            // Calculate amount of Sets that can be issued from those components, if less than amount for other\n            // components then set that as maxIssueAmount\n            uint256 componentIssueAmount = componentAmount.div(_setToken.units[i]).mul(_setToken.naturalUnit);\n            if (componentIssueAmount < maxIssueAmount) {\n                maxIssueAmount = componentIssueAmount;\n            }\n        }\n\n        return maxIssueAmount;\n    }\n}\n',
sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/rebalancing-libraries/SettleRebalanceLibrary.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.914Z",devdoc:{author:"Set Protocol * Default implementation of Rebalancing Set Token settle rebalance and related functions.",methods:{"calculateMaxIssueAmount(address,SetTokenLibrary.SetDetails)":{params:{_setToken:"nextSet details",_vaultAddress:"Vault address"},"return":"uint256          maxIssueAmount"},"calculateNextSetIssueQuantity(uint256,uint256,address,address)":{params:{_naturalUnit:"Natural unit of rebalancing set token",_nextSet:"Address of next set",_totalSupply:"Total supply of rebalancing set token",_vaultAddress:"Vault address"},"return":"uint256             Amount of nextSets to issueuint256             New unitShares for the rebalancingSetToken"},"settleRebalance(uint256,uint256,uint256,uint256,address,address,address,uint8)":{params:{_coreAddress:"Core address",_minimumBid:"Minimum bid allowed, used to see if valid settle",_naturalUnit:"Natural unit of rebalancing set token",_nextSet:"Address of next set",_remainingCurrentSets:"Amount of currentSets remaining",_totalSupply:"Total supply of rebalancing set token",_vaultAddress:"Vault address"},"return":"uint256                 Amount of nextSets to issue"}},title:"SettleRebalanceLibrary"},userdoc:{methods:{"calculateMaxIssueAmount(address,SetTokenLibrary.SetDetails)":{notice:"Get the maximum possible issue amount of nextSet based on number of components owned by rebalancing set token."},"calculateNextSetIssueQuantity(uint256,uint256,address,address)":{notice:"Calculate the amount of nextSets to issue by using the component amounts in the vault, unitShares following from this calculation."},"settleRebalance(uint256,uint256,uint256,uint256,address,address,address,uint8)":{notice:"Calculate the amount of nextSets to issue by using the component amounts in the vault, new unitShares follow from this calculation"}}}};