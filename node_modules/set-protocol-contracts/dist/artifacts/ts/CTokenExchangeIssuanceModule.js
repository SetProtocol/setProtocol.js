"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.CTokenExchangeIssuanceModule={contractName:"CTokenExchangeIssuanceModule",abi:[{constant:true,inputs:[],name:"vaultInstance",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"transferProxy",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"coreInstance",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"core",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"vault",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"cTokenWhiteList",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{inputs:[{name:"_core",type:"address"},{name:"_vault",type:"address"},{name:"_transferProxy",type:"address"},{name:"_cTokenWhiteList",type:"address"}],payable:false,stateMutability:"nonpayable",type:"constructor"},{anonymous:false,inputs:[{indexed:false,name:"setAddress",type:"address"},{indexed:true,name:"callerAddress",type:"address"},{indexed:false,name:"quantity",type:"uint256"},{indexed:false,name:"sendTokens",type:"address[]"},{indexed:false,name:"sendTokenAmounts",type:"uint256[]"}],name:"LogExchangeIssue",type:"event"},{anonymous:false,inputs:[{indexed:false,name:"setAddress",type:"address"},{indexed:true,name:"callerAddress",type:"address"},{indexed:false,name:"quantity",type:"uint256"},{indexed:false,name:"receiveTokens",type:"address[]"},{indexed:false,name:"receiveTokenAmounts",type:"uint256[]"}],name:"LogExchangeRedeem",type:"event"},{constant:false,inputs:[{components:[{name:"setAddress",type:"address"},{name:"quantity",type:"uint256"},{name:"sendTokenExchangeIds",type:"uint8[]"},{name:"sendTokens",type:"address[]"},{name:"sendTokenAmounts",type:"uint256[]"},{name:"receiveTokens",type:"address[]"},{name:"receiveTokenAmounts",type:"uint256[]"}],name:"_exchangeIssuanceParams",type:"tuple"},{name:"_orderData",type:"bytes"}],name:"exchangeIssue",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{components:[{name:"setAddress",type:"address"},{name:"quantity",type:"uint256"},{name:"sendTokenExchangeIds",type:"uint8[]"},{name:"sendTokens",type:"address[]"},{name:"sendTokenAmounts",type:"uint256[]"},{name:"receiveTokens",type:"address[]"},{name:"receiveTokenAmounts",type:"uint256[]"}],name:"_exchangeIssuanceParams",type:"tuple"},{name:"_orderData",type:"bytes"}],name:"exchangeRedeem",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":false,"inputs":[{"components":[{"name":"setAddress","type":"address"},{"name":"quantity","type":"uint256"},{"name":"sendTokenExchangeIds","type":"uint8[]"},{"name":"sendTokens","type":"address[]"},{"name":"sendTokenAmounts","type":"uint256[]"},{"name":"receiveTokens","type":"address[]"},{"name":"receiveTokenAmounts","type":"uint256[]"}],"name":"_exchangeIssuanceParams","type":"tuple"},{"name":"_orderData","type":"bytes"}],"name":"exchangeRedeem","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"components":[{"name":"setAddress","type":"address"},{"name":"quantity","type":"uint256"},{"name":"sendTokenExchangeIds","type":"uint8[]"},{"name":"sendTokens","type":"address[]"},{"name":"sendTokenAmounts","type":"uint256[]"},{"name":"receiveTokens","type":"address[]"},{"name":"receiveTokenAmounts","type":"uint256[]"}],"name":"_exchangeIssuanceParams","type":"tuple"},{"name":"_orderData","type":"bytes"}],"name":"exchangeIssue","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vaultInstance","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"transferProxy","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"coreInstance","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"core","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vault","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"cTokenWhiteList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_core","type":"address"},{"name":"_vault","type":"address"},{"name":"_transferProxy","type":"address"},{"name":"_cTokenWhiteList","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"setAddress","type":"address"},{"indexed":true,"name":"callerAddress","type":"address"},{"indexed":false,"name":"quantity","type":"uint256"},{"indexed":false,"name":"sendTokens","type":"address[]"},{"indexed":false,"name":"sendTokenAmounts","type":"uint256[]"}],"name":"LogExchangeIssue","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"setAddress","type":"address"},{"indexed":true,"name":"callerAddress","type":"address"},{"indexed":false,"name":"quantity","type":"uint256"},{"indexed":false,"name":"receiveTokens","type":"address[]"},{"indexed":false,"name":"receiveTokenAmounts","type":"uint256[]"}],"name":"LogExchangeRedeem","type":"event"}],"devdoc":{"author":"Set Protocol * The CTokenExchangeIssuanceModule facilitates the exchangeIssue and exchangeRedeem functions which allows the issuance and redemption of Sets containing cTokens using exchange orders and Compound functions.  Note: This module is not compatible with Compound Ether (cETH).","methods":{"constructor":{"params":{"_cTokenWhiteList":"The instance of cTokenWhiteList contract","_core":"The address of Core","_transferProxy":"The address of TransferProxy","_vault":"The address of Vault"}},"exchangeIssue((address,uint256,uint8[],address[],uint256[],address[],uint256[]),bytes)":{"params":{"_exchangeIssuanceParams":"A Struct containing exchange issuance metadata","_orderData":"Bytes array containing the exchange orders to execute"}},"exchangeRedeem((address,uint256,uint8[],address[],uint256[],address[],uint256[]),bytes)":{"params":{"_exchangeIssuanceParams":"A Struct containing exchange issuance metadata","_orderData":"Bytes array containing the exchange orders to execute"}}},"title":"CTokenExchangeIssuanceModule"},"userdoc":{"methods":{"constructor":"Constructor function for CTokenExchangeIssuanceModule","exchangeIssue((address,uint256,uint8[],address[],uint256[],address[],uint256[]),bytes)":{"notice":"Performs trades via exchange wrappers to acquire components, mints cToken from underlying, and issues a Set to the caller"},"exchangeRedeem((address,uint256,uint8[],address[],uint256[],address[],uint256[]),bytes)":{"notice":"Redeems a Set, redeems cToken to underlying, and performs trades via exchange wrappers for specified receive tokens. The receive tokens are attributed to the caller."}}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/CTokenExchangeIssuanceModule.sol":"CTokenExchangeIssuanceModule"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IAddressToAddressWhiteList.sol":{"keccak256":"0x41d753215ef7bdf88734589bd55afdb524722d1e34589ab8194f5b64f95fa455","urls":["bzzr://b6a819b457dddc2c2aa4d23fb2eb5ea27cbd6994a7361e7ced7e8e89e7552a88"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICToken.sol":{"keccak256":"0x661dd1d6e349160dd01e275b8138c9c78fe296abbb7d54ecdbc03b6be35cc5e8","urls":["bzzr://731700a131b20732ffba3070eaa6e0cdec2f42c7493d5af3f24e605cb3022fcb"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICore.sol":{"keccak256":"0x5dc3db4398630ea52d2a40c9ddfa89d94e65c2770a12bab4d2a5c8eb573fb0a0","urls":["bzzr://25e90b53f61b388e0950b808e2296f82d427b66cfd6021212713436b2a592e31"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IExchangeWrapper.sol":{"keccak256":"0xbe6c55b4ddd26e1fcda74a09c5202f1c938a23edc3cbe6328780bd8eb05e7fde","urls":["bzzr://fdba29705c0defefa87e4102dc401125a4df8ac76f06555718e39365f316810f"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetToken.sol":{"keccak256":"0xfa6c0c07f8394d89b6b8f72e15778f8452a9341acb20cebb8421f3522aaca1bd","urls":["bzzr://ccf23bb78fd507bf8cbf5cf7ac2a660a1463b87a3689196e42b8f6862d1a6b11"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ITransferProxy.sol":{"keccak256":"0x962d54385cc4760c550cd2f16bfdb53e967def4c5d3acb7b3d0b3d7a49f902de","urls":["bzzr://cb8994c8bae7fa1d55d240f44396f4156b45c81afa6fcfa608fd5e4bf9f1a919"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IVault.sol":{"keccak256":"0xf8a6d376173be39f5744492866db5dd3f91453a124d23679ff164ff3817f2f4f","urls":["bzzr://896c0a8329175c1620e1a22467778b835defe0e61847e5a8427a306f42391e64"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/ExchangeHeaderLibrary.sol":{"keccak256":"0x58b3405fe4aab096766b34705ec80d87085180110e21aba02cce2e6ea507d808","urls":["bzzr://0b6941c5bdb138ebe0080bbe5f6c43e56878e0bc30ff3c2461f0e3b53b8a6113"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/ExchangeWrapperLibrary.sol":{"keccak256":"0xcf95f40c291b1d8fb9adab6e0896f91bb8f2f6397d24e741ab82aab1192d3930","urls":["bzzr://3c75694fc0cbc623a02f7db596ffc72c64f8f662624101b87e390c0578407aaf"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/ExchangeWrapperLibraryV2.sol":{"keccak256":"0x92acd5054efb89467456183e7086e6022f9aed0c2044d00aeab382bcc8c86c4f","urls":["bzzr://92084a7a6cc58333b93b929171cdf455cec92ae314dd8c7f082778f0bd825e54"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/SetTokenLibrary.sol":{"keccak256":"0x0c0952057a64c3af0ace01db29258145deff7d935bdc53d1bbab6fff87b3b146","urls":["bzzr://ad1944f45fade934870661a4e91c260625755760ff0ef047677547fbdc6a16bf"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/CTokenExchangeIssuanceModule.sol":{"keccak256":"0xc0b95915984f937754b64d06dcdb94f6a358aa46f4d1f40aa78328acf8be71b1","urls":["bzzr://ce8469b5f295634596790f038480be56d25386e8d2adf903d236642cbbd67abc"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/ExchangeIssuanceModule.sol":{"keccak256":"0x58e9eafe4b035ac34722c0252a4d44c8b105347097512b4864231cff5f2da987","urls":["bzzr://87537cc050df534a0c294945028b118166a0d7c36c179a269025534a9d3c74cd"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/lib/CTokenWhiteListed.sol":{"keccak256":"0x6b27a239d09111f262ccac7d644411c66d59debb0b0c98687e296d90cdfe91b9","urls":["bzzr://fe647de4323877924f1a3a2c3b7168321f73b74d7f64700c7164715b51379b44"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/lib/ExchangeExecution.sol":{"keccak256":"0x5ba2bf0b1fbbde60920d522a0632a1bc1233c910a012ba653a4d2d223a1972c3","urls":["bzzr://45d664915f179c68857a0045ad32c8ce494f7644b903fd0f59a32061e6a0c020"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/lib/ExchangeIssuanceLibrary.sol":{"keccak256":"0xad04bacfe5bb25a8cb0ca84f3a406e9c10a45e75c13ebdf24f27801399b2cbeb","urls":["bzzr://f6a28d02f730cfb64f3082d7cb2780cbb07c8939648f7466d21eae21defa6367"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/lib/ModuleCoreState.sol":{"keccak256":"0x75a216727092c78a7adb0016e4ed49bc174b4e8725b0e6b0689f86c4d20bcba7","urls":["bzzr://29bbd30e5a474c131c8ae83c00cf82f3bf2162e6f4699cb04f7c06507302e50c"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/external/0x/LibBytes.sol":{"keccak256":"0x8617740051ffe434ec5737fa1cf53fdd3c6dd901d6f8c3b379754d9928daa752","urls":["bzzr://52865a32d5c247782bf2fda7bb606c579caa924875108b96d7ea388ef19991fc"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/ERC20Wrapper.sol":{"keccak256":"0x09fdf2adbbcbe2ce6cf3924c8cae4e206cd501c3daca55d43c847d310150ceb8","urls":["bzzr://f2866ffe2b523888937071b65dd86d89a6e61161fd2d1ce1b9b52ea23914337d"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/IERC20.sol":{"keccak256":"0xe4f71b1797f6421de91c6ce3b55199c5845693a58eddfd417a60b81d0198a9dd","urls":["bzzr://a6a4cebcffaff1db8ef9b78ea58d2d7391cc2b1ed533a1e1309286989f6d4ea0"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125","urls":["bzzr://3bc299fd722679f1313dc1387e2efc0591dcddc3727b6a7ccc98132c6e02f323"]},"set-protocol-contract-utils/contracts/lib/AddressArrayUtils.sol":{"keccak256":"0xb716eab4e8c5a336a2f19078928530829af097912bd1b925644f914b63601f08","urls":["bzzr://d8a21d39779beb316adb5180d08dcba1941eeccd9412ff08feb21a631c18c269"]},"set-protocol-contract-utils/contracts/lib/CommonMath.sol":{"keccak256":"0x3d1d08c6efc2a973fe2c02ddcb02fd99a8c8eb75f74dcbd93e8e15864eee2b6b","urls":["bzzr://580815dd1cf648a4521d923e59087de21143d9c48115ab71579a1f5a8f3d36af"]},"set-protocol-contract-utils/contracts/lib/CompoundUtils.sol":{"keccak256":"0x2fae8240526a689d919a67792626c9df1e8048a59eed6643ff4ce685a87a36dc","urls":["bzzr://5a5709236aaa10d93f1746e765fd4e10693277f5cbc3e24d5173738f87a01072"]}},"version":1}',bytecode:"0x60806040523480156200001157600080fd5b50604051608080620041f78339810180604052620000339190810190620004b1565b60008054600160a060020a03808716600160a060020a031992831681178455600280548416909117905560018054828816908416811782556003805485169091179055600490815560058054928616929093168217909255604080517fe7d22fdb0000000000000000000000000000000000000000000000000000000081529051869486946060949363e7d22fdb9381830193929091829003018186803b158015620000de57600080fd5b505afa158015620000f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200011d91908101906200051b565b905060005b8151811015620002665760008282815181106200013b57fe5b60209081029190910101516005546040517f3ccc0522000000000000000000000000000000000000000000000000000000008152919250600091600160a060020a0390911690633ccc05229062000197908590600401620005f1565b60206040518083038186803b158015620001b057600080fd5b505afa158015620001c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620001eb919081019062000488565b90506200021f81836200020b6401000000006200231b6200029582021704565b640100000000620023216200029b82021704565b6200023d81876200020b6401000000006200231b6200029582021704565b6200025b82876200020b6401000000006200231b6200029582021704565b505060010162000122565b505060068054600160a060020a031916600160a060020a03959095169490941790935550620006b09350505050565b60001990565b6040517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0384169063095ea7b390620002e4908590859060040162000607565b602060405180830381600087803b158015620002ff57600080fd5b505af115801562000314573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200033a919081019062000553565b506200034e64010000000062000395810204565b62000390576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003879062000626565b60405180910390fd5b505050565b6000803d8015620003af5760208114620003b957620003c5565b60019150620003c5565b60206000803e60005191505b50600114905090565b6000620003dc825162000689565b9392505050565b600082601f830112620003f557600080fd5b81516200040c62000406826200065f565b62000638565b915081818352602084019350602081019050838560208402820111156200043257600080fd5b60005b838110156200046257816200044b8882620003ce565b845250602092830192919091019060010162000435565b5050505092915050565b6000620003dc82516200069e565b6000620003dc8251620006a3565b6000602082840312156200049b57600080fd5b6000620004a98484620003ce565b949350505050565b60008060008060808587031215620004c857600080fd5b6000620004d68787620003ce565b9450506020620004e987828801620003ce565b9350506040620004fc87828801620003ce565b92505060606200050f878288016200047a565b91505092959194509250565b6000602082840312156200052e57600080fd5b81516001604060020a038111156200054557600080fd5b620004a984828501620003e3565b6000602082840312156200056657600080fd5b6000620004a984846200046c565b6200057f8162000689565b82525050565b60006200059460268362000680565b7f4552433230577261707065722e617070726f76653a204261642072657475726e81527f2076616c75650000000000000000000000000000000000000000000000000000602082015260400192915050565b6200057f816200069b565b6020810162000601828462000574565b92915050565b6040810162000617828562000574565b620003dc6020830184620005e6565b60208082528101620006018162000585565b6040518181016001604060020a03811182821017156200065757600080fd5b604052919050565b60006001604060020a038211156200067657600080fd5b5060209081020190565b90815260200190565b6000600160a060020a03821662000601565b90565b151590565b6000620006018262000689565b613b3780620006c06000396000f3fe608060405234801561001057600080fd5b506004361061008c5760003560e060020a90048063a05cb7551161005f578063a05cb755146100ec578063f2f4eb26146100f4578063fbfa77cf146100fc578063ff598601146101045761008c565b8063188eec69146100915780633d0419d9146100a657806363dc4f95146100b95780636e667db3146100d7575b600080fd5b6100a461009f366004612bee565b61010c565b005b6100a46100b4366004612bee565b61036c565b6100c161053e565b6040516100ce9190613873565b60405180910390f35b6100df61054d565b6040516100ce9190613675565b6100c161055c565b6100df61056b565b6100df61057a565b6100c1610589565b600480546001019081905561012083610598565b825160608401516040517f03cd887000000000000000000000000000000000000000000000000000000000815273__SetTokenLibrary_______________________926303cd8870926101759260040161378b565b60006040518083038186803b15801561018d57600080fd5b505af41580156101a1573d6000803e3d6000fd5b5050600254855160208701516040517f5990ca08000000000000000000000000000000000000000000000000000000008152600160a060020a039093169450635990ca0893506101f992339230929091600401613703565b600060405180830381600087803b15801561021357600080fd5b505af1158015610227573d6000803e3d6000fd5b505050506060610236846106a7565b905061024f8460400151856060015186608001516107e7565b61025883610b30565b60015460a085015161027591600160a060020a0316908333610ceb565b60025460a085015160c08601516040517ffe93620e000000000000000000000000000000000000000000000000000000008152600160a060020a039093169263fe93620e926102cc923392839291906004016136b8565b600060405180830381600087803b1580156102e657600080fd5b505af11580156102fa573d6000803e3d6000fd5b5050505061030b8460000151610dd7565b8351602085015160a086015160c087015160405133947f06c4316d43c46a4ded573b4dee3cf64d66b87d192f4f6bd88b830ae18b29c7c0946103509491939092613858565b60405180910390a250600454811461036757600080fd5b505050565b600480546001019081905561038083610598565b825160a08401516040517f03cd887000000000000000000000000000000000000000000000000000000000815273__SetTokenLibrary_______________________926303cd8870926103d59260040161378b565b60006040518083038186803b1580156103ed57600080fd5b505af4158015610401573d6000803e3d6000fd5b5050505061041c836040015184606001518560800151611181565b6060610427846106a7565b905061043283610b30565b6104448460a001518560c001516112cb565b60015460a085015161046191600160a060020a0316908333610ceb565b610473846000015185602001516114b3565b600254845160208601516040517f7c68561f000000000000000000000000000000000000000000000000000000008152600160a060020a0390931692637c68561f926104c792339283929190600401613683565b600060405180830381600087803b1580156104e157600080fd5b505af11580156104f5573d6000803e3d6000fd5b505085516020870151606088015160808901516040513396507fc7fce5271a7dcbf20bd48128dcbf6f2df01bceda67919e43870de3be7f1b069095506103509493929190613858565b600354600160a060020a031681565b600654600160a060020a031681565b600254600160a060020a031681565b600054600160a060020a031681565b600154600160a060020a031681565b600554600160a060020a031681565b60025481516040517ffef3ee73000000000000000000000000000000000000000000000000000000008152600160a060020a039092169163fef3ee73916105e191600401613675565b60206040518083038186803b1580156105f957600080fd5b505afa15801561060d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106319190810190612bd0565b6106595760405160e560020a62461bcd02815260040161065090613931565b60405180910390fd5b61066b81600001518260200151611911565b60005460408201516060830151608084015161069293600160a060020a03169291906119dc565b6106a48160a001518260c00151611b43565b50565b6060808260a00151516040519080825280602002602001820160405280156106d9578160200160208202803883390190505b50905060005b8360a00151518110156107de5760035460a08501518051600092600160a060020a031691631f98ade3918590811061071357fe5b6020026020010151336040518363ffffffff1660e060020a02815260040161073c929190613739565b60206040518083038186803b15801561075457600080fd5b505afa158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061078c9190810190612c8c565b905060008560c0015183815181106107a057fe5b602002602001015190506107bd8183611bfa90919063ffffffff16565b8484815181106107c957fe5b602090810291909101015250506001016106df565b5090505b919050565b60005b8251811015610b2a576002548451600091600160a060020a0316906356fe27849087908590811061081757fe5b60200260200101516040518263ffffffff1660e060020a02815260040161083e91906139df565b60206040518083038186803b15801561085657600080fd5b505afa15801561086a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061088e9190810190612b48565b9050600084838151811061089e57fe5b6020026020010151905060008484815181106108b657fe5b602090810291909101015160055460405160e160020a634d8c928d028152919250600091600160a060020a0390911690639b19251a906108fa908690600401613675565b60206040518083038186803b15801561091257600080fd5b505afa158015610926573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061094a9190810190612b48565b9050600160a060020a03811615610aae576109658383611c15565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815260009073__ERC20Wrapper__________________________9063f7888aec906109ba908590309060040161371e565b60206040518083038186803b1580156109d257600080fd5b505af41580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a0a9190810190612c8c565b600654909150610a279083903090600160a060020a031684611d3d565b6002546040517ffd496ebf000000000000000000000000000000000000000000000000000000008152600160a060020a039091169063fd496ebf90610a76908590859030908b906004016137fb565b600060405180830381600087803b158015610a9057600080fd5b505af1158015610aa4573d6000803e3d6000fd5b5050505050610b1a565b60025460405160e260020a630387f4cd028152600160a060020a0390911690630e1fd33490610ae7903090889088908890600401613762565b600060405180830381600087803b158015610b0157600080fd5b505af1158015610b15573d6000803e3d6000fd5b505050505b5050600190920191506107ea9050565b50505050565b6000805b825181101561036757610b456125a7565b610b4f8483611d6d565b60025481516040517f56fe2784000000000000000000000000000000000000000000000000000000008152929350600092600160a060020a03909216916356fe278491610b9e916004016139df565b60206040518083038186803b158015610bb657600080fd5b505afa158015610bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bee9190810190612b48565b9050600160a060020a038116610c195760405160e560020a62461bcd02815260040161065090613881565b6000610c2d6002846000015160ff16611db8565b905084811615610c525760405160e560020a62461bcd028152600401610650906139a1565b6000610c70610c5f611df7565b60408601519063ffffffff611bfa16565b90506060610c7f888784611dfc565b9050610c896125c7565b506040805180820190915233815260208681015160ff1690820152600054610cbc90600160a060020a0316828785611e3b565b610ccc878463ffffffff611bfa16565b9650610cde888563ffffffff611bfa16565b9750505050505050610b34565b8360005b8451811015610dcf57600082600160a060020a0316631f98ade3878481518110610d1557fe5b6020026020010151866040518363ffffffff1660e060020a028152600401610d3e92919061371e565b60206040518083038186803b158015610d5657600080fd5b505afa158015610d6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d8e9190810190612c8c565b9050848281518110610d9c57fe5b6020026020010151811015610dc65760405160e560020a62461bcd02815260040161065090613891565b50600101610cef565b505050505050565b606081600160a060020a03166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b158015610e1557600080fd5b505afa158015610e29573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e519190810190612b66565b905060005b8151811015610367576000828281518110610e6d57fe5b60209081029190910101516003546040517f1f98ade3000000000000000000000000000000000000000000000000000000008152919250600091600160a060020a0390911690631f98ade390610ec9908590309060040161371e565b60206040518083038186803b158015610ee157600080fd5b505afa158015610ef5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f199190810190612c8c565b905080156111775760055460405160e160020a634d8c928d028152600091600160a060020a031690639b19251a90610f55908690600401613675565b60206040518083038186803b158015610f6d57600080fd5b505afa158015610f81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fa59190810190612b48565b9050600160a060020a0381161561110957610fc08383611c15565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815260009073__ERC20Wrapper__________________________9063f7888aec90611015908590309060040161371e565b60206040518083038186803b15801561102d57600080fd5b505af4158015611041573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110659190810190612c8c565b6006549091506110829083903090600160a060020a031684611d3d565b6002546040517ffd496ebf000000000000000000000000000000000000000000000000000000008152600160a060020a039091169063fd496ebf906110d1908590859030903390600401613823565b600060405180830381600087803b1580156110eb57600080fd5b505af11580156110ff573d6000803e3d6000fd5b5050505050611175565b60025460405160e260020a630387f4cd028152600160a060020a0390911690630e1fd33490611142903090339088908890600401613754565b600060405180830381600087803b15801561115c57600080fd5b505af1158015611170573d6000803e3d6000fd5b505050505b505b5050600101610e56565b60005b8251811015610b2a576002548451600091600160a060020a0316906356fe2784908790859081106111b157fe5b60200260200101516040518263ffffffff1660e060020a0281526004016111d891906139df565b60206040518083038186803b1580156111f057600080fd5b505afa158015611204573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112289190810190612b48565b6002548551919250600160a060020a03169063fd496ebf9086908590811061124c57fe5b602002602001015185858151811061126057fe5b602002602001015133856040518563ffffffff1660e060020a02815260040161128c94939291906137c6565b600060405180830381600087803b1580156112a657600080fd5b505af11580156112ba573d6000803e3d6000fd5b505060019093019250611184915050565b60005b82518110156103675760008382815181106112e557fe5b6020026020010151905060008383815181106112fd57fe5b602090810291909101015160055460405160e160020a634d8c928d028152919250600091600160a060020a0390911690639b19251a90611341908690600401613675565b60206040518083038186803b15801561135957600080fd5b505afa15801561136d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113919190810190612b48565b9050600160a060020a038116156114a8576000839050600081600160a060020a031663bd6d894d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156113e757600080fd5b505af11580156113fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061141f9190810190612c8c565b9050600061142d8583611f6f565b60025460405160e260020a630387f4cd028152919250600160a060020a031690630e1fd33490611467903390309089908790600401613703565b600060405180830381600087803b15801561148157600080fd5b505af1158015611495573d6000803e3d6000fd5b505050506114a4838583611fa3565b5050505b5050506001016112ce565b6000829050606081600160a060020a03166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b1580156114f657600080fd5b505afa15801561150a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115329190810190612b66565b9050606082600160a060020a031663027aa9f56040518163ffffffff1660e060020a02815260040160006040518083038186803b15801561157257600080fd5b505afa158015611586573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115ae9190810190612b9b565b9050600083600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156115ee57600080fd5b505afa158015611602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116269190810190612c8c565b9050600061163a868363ffffffff61217d16565b905060005b845181101561190757600085828151811061165657fe5b60209081029190910101516003546040517f1f98ade3000000000000000000000000000000000000000000000000000000008152919250600091600160a060020a0390911690631f98ade3906116b29085903390600401613739565b60206040518083038186803b1580156116ca57600080fd5b505afa1580156116de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117029190810190612c8c565b9050600061172c87858151811061171557fe5b60200260200101518661219f90919063ffffffff16565b60055460405160e160020a634d8c928d028152919250600091600160a060020a0390911690639b19251a90611765908790600401613675565b60206040518083038186803b15801561177d57600080fd5b505afa158015611791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117b59190810190612b48565b9050600160a060020a038116158015906117ce57508183105b156118f757600083830390506000859050600081600160a060020a031663bd6d894d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561181f57600080fd5b505af1158015611833573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118579190810190612c8c565b905060006118658483611f6f565b6002546040517ffd496ebf000000000000000000000000000000000000000000000000000000008152919250600160a060020a03169063fd496ebf906118b59088908590339030906004016137c6565b600060405180830381600087803b1580156118cf57600080fd5b505af11580156118e3573d6000803e3d6000fd5b505050506118f2838683611fa3565b505050505b50506001909201915061163f9050565b5050505050505050565b600081116119345760405160e560020a62461bcd02815260040161065090613961565b6119b882600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561197357600080fd5b505afa158015611987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119ab9190810190612c8c565b829063ffffffff6121c616565b156119d85760405160e560020a62461bcd02815260040161065090613941565b5050565b6000825111611a005760405160e560020a62461bcd028152600401610650906138c1565b81518351148015611a12575080518251145b611a315760405160e560020a62461bcd02815260040161065090613971565b8360005b8451811015610dcf576000600160a060020a031682600160a060020a03166356fe2784878481518110611a6457fe5b60200260200101516040518263ffffffff1660e060020a028152600401611a8b91906139df565b60206040518083038186803b158015611aa357600080fd5b505afa158015611ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611adb9190810190612b48565b600160a060020a03161415611b055760405160e560020a62461bcd028152600401610650906138d1565b6000838281518110611b1357fe5b602002602001015111611b3b5760405160e560020a62461bcd02815260040161065090613991565b600101611a35565b815180611b655760405160e560020a62461bcd02815260040161065090613911565b611b6e836121e3565b15611b8e5760405160e560020a62461bcd02815260040161065090613921565b81518114611bb15760405160e560020a62461bcd028152600401610650906138e1565b60005b81811015610b2a576000838281518110611bca57fe5b602002602001015111611bf25760405160e560020a62461bcd02815260040161065090613951565b600101611bb4565b600082820183811015611c0c57600080fd5b90505b92915050565b60025460405160e260020a630387f4cd028152600160a060020a0390911690630e1fd33490611c4e903090819087908790600401613762565b600060405180830381600087803b158015611c6857600080fd5b505af1158015611c7c573d6000803e3d6000fd5b50506040517fdb006a7500000000000000000000000000000000000000000000000000000000815260009250600160a060020a038516915063db006a7590611cc89085906004016139d1565b602060405180830381600087803b158015611ce257600080fd5b505af1158015611cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d1a9190810190612c8c565b905080156103675760405160e560020a62461bcd02815260040161065090613981565b6000611d4a858585612279565b905081811015611d6657611d668584611d6161231b565b612321565b5050505050565b611d756125a7565b611d7d6125a7565b6000611d9884611d8c876123e2565b9063ffffffff611bfa16565b805183526020808201519084015260409081015190830152509392505050565b6000808311611dc657600080fd5b600160005b83811015611def5781611de4818763ffffffff61219f16565b925050600101611dcb565b509392505050565b606090565b606080611e3085611e1b611e0e611df7565b879063ffffffff611bfa16565b611e2b878763ffffffff611bfa16565b6123e8565b9150505b9392505050565b611e436125de565b6040517fc58c1db8000000000000000000000000000000000000000000000000000000008152600160a060020a0384169063c58c1db890611e8a90879086906004016139b1565b600060405180830381600087803b158015611ea457600080fd5b505af1158015611eb8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ee09190810190612c57565b8451815160208301516040517fcaaa3ada000000000000000000000000000000000000000000000000000000008152939450600160a060020a0389169363caaa3ada93611f369389939192909190600401613770565b600060405180830381600087803b158015611f5057600080fd5b505af1158015611f64573d6000803e3d6000fd5b505050505050505050565b600080611f82848463ffffffff61219f16565b90506000611f8e61247f565b9050611f9a828261248b565b95945050505050565b611faf82308584611d3d565b6040517fa0712d68000000000000000000000000000000000000000000000000000000008152600090600160a060020a0385169063a0712d6890611ff79085906004016139d1565b602060405180830381600087803b15801561201157600080fd5b505af1158015612025573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120499190810190612c8c565b9050801561206c5760405160e560020a62461bcd02815260040161065090613901565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815260009073__ERC20Wrapper__________________________9063f7888aec906120c1908890309060040161371e565b60206040518083038186803b1580156120d957600080fd5b505af41580156120ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121119190810190612c8c565b60065490915061212e9086903090600160a060020a031684611d3d565b6002546040517fde30f6ee000000000000000000000000000000000000000000000000000000008152600160a060020a039091169063de30f6ee90611f3690309033908a908790600401613754565b600080821161218b57600080fd5b600082848161219657fe5b04949350505050565b6000826121ae57506000611c0f565b828202828482816121bb57fe5b0414611c0c57600080fd5b6000816121d257600080fd5b8183816121db57fe5b069392505050565b60008151600014156121f7575060006107e2565b60005b600183510381101561227057600181015b83518110156122675783818151811061222057fe5b6020026020010151600160a060020a031684838151811061223d57fe5b6020026020010151600160a060020a0316141561225f576001925050506107e2565b60010161220b565b506001016121fa565b50600092915050565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600090600160a060020a0385169063dd62ed3e906122c3908690869060040161371e565b60206040518083038186803b1580156122db57600080fd5b505afa1580156122ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506123139190810190612c8c565b949350505050565b60001990565b6040517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0384169063095ea7b39061236890859085906004016137ab565b602060405180830381600087803b15801561238257600080fd5b505af1158015612396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506123ba9190810190612bd0565b506123c36124cd565b6103675760405160e560020a62461bcd028152600401610650906138f1565b60200190565b60608183111561240d5760405160e560020a62461bcd028152600401610650906138a1565b83518211156124315760405160e560020a62461bcd028152600401610650906138b1565b8282036040519080825280601f01601f19166020018201604052801561245e576020820181803883390190505b509050611e3461246d826123e2565b84612477876123e2565b018351612502565b670de0b6b3a764000090565b60008061249e848463ffffffff6121c616565b116124b8576124b3838363ffffffff61217d16565b611c0c565b611c0c6001611d8c858563ffffffff61217d16565b6000803d80156124e457602081146124ed576124f9565b600191506124f9565b60206000803e60005191505b50600114905090565b602081101561252c576001816020036101000a038019835116818551168082178652505050610367565b8282141561253957610367565b828211156125735760208103905080820181840181515b8285101561256b578451865260209586019590940193612550565b905250610367565b60208103905080820181840183515b8186121561259e5782518252601f199283019290910190612582565b85525050505050565b604080516060810182526000808252602082018190529181019190915290565b604080518082019091526000808252602082015290565b604051806040016040528060608152602001606081525090565b6000611c0c8235613a6a565b6000611c0c8251613a6a565b600082601f83011261262157600080fd5b813561263461262f82613a14565b6139ed565b9150818183526020840193506020810190508385602084028201111561265957600080fd5b60005b83811015612685578161266f88826125f8565b845250602092830192919091019060010161265c565b5050505092915050565b600082601f8301126126a057600080fd5b81516126ae61262f82613a14565b915081818352602084019350602081019050838560208402820111156126d357600080fd5b60005b8381101561268557816126e98882612604565b84525060209283019291909101906001016126d6565b600082601f83011261271057600080fd5b815161271e61262f82613a14565b9150818183526020840193506020810190508385602084028201111561274357600080fd5b60005b8381101561268557816127598882612604565b8452506020928301929190910190600101612746565b600082601f83011261278057600080fd5b813561278e61262f82613a14565b915081818352602084019350602081019050838560208402820111156127b357600080fd5b60005b8381101561268557816127c98882612b24565b84525060209283019291909101906001016127b6565b600082601f8301126127f057600080fd5b81516127fe61262f82613a14565b9150818183526020840193506020810190508385602084028201111561282357600080fd5b60005b8381101561268557816128398882612b30565b8452506020928301929190910190600101612826565b600082601f83011261286057600080fd5b815161286e61262f82613a14565b9150818183526020840193506020810190508385602084028201111561289357600080fd5b60005b8381101561268557816128a98882612b30565b8452506020928301929190910190600101612896565b600082601f8301126128d057600080fd5b81356128de61262f82613a14565b9150818183526020840193506020810190508385602084028201111561290357600080fd5b60005b8381101561268557816129198882612b3c565b8452506020928301929190910190600101612906565b6000611c0c8251613a84565b600082601f83011261294c57600080fd5b813561295a61262f82613a35565b9150808252602083016020830185838301111561297657600080fd5b612981838284613a9b565b50505092915050565b600060e0828403121561299c57600080fd5b6129a660e06139ed565b905060006129b484846125f8565b82525060206129c584848301612b24565b602083015250604082013567ffffffffffffffff8111156129e557600080fd5b6129f1848285016128bf565b604083015250606082013567ffffffffffffffff811115612a1157600080fd5b612a1d84828501612610565b606083015250608082013567ffffffffffffffff811115612a3d57600080fd5b612a498482850161276f565b60808301525060a082013567ffffffffffffffff811115612a6957600080fd5b612a7584828501612610565b60a08301525060c082013567ffffffffffffffff811115612a9557600080fd5b612aa18482850161276f565b60c08301525092915050565b600060408284031215612abf57600080fd5b612ac960406139ed565b825190915067ffffffffffffffff811115612ae357600080fd5b612aef8482850161268f565b825250602082015167ffffffffffffffff811115612b0c57600080fd5b612b18848285016127df565b60208301525092915050565b6000611c0c8235613a7b565b6000611c0c8251613a7b565b6000611c0c8235613a7e565b600060208284031215612b5a57600080fd5b60006123138484612604565b600060208284031215612b7857600080fd5b815167ffffffffffffffff811115612b8f57600080fd5b612313848285016126ff565b600060208284031215612bad57600080fd5b815167ffffffffffffffff811115612bc457600080fd5b6123138482850161284f565b600060208284031215612be257600080fd5b6000612313848461292f565b60008060408385031215612c0157600080fd5b823567ffffffffffffffff811115612c1857600080fd5b612c248582860161298a565b925050602083013567ffffffffffffffff811115612c4157600080fd5b612c4d8582860161293b565b9150509250929050565b600060208284031215612c6957600080fd5b815167ffffffffffffffff811115612c8057600080fd5b61231384828501612aad565b600060208284031215612c9e57600080fd5b60006123138484612b30565b6000612cb68383612cd9565b505060200190565b6000612cb68383613663565b612cd381613a89565b82525050565b612cd381613a6a565b6000612ced82613a5d565b612cf78185613a61565b9350612d02836123e2565b60005b82811015612d2d57612d18868351612caa565b9550612d23826123e2565b9150600101612d05565b5093949350505050565b6000612d4282613a5d565b612d4c8185613a61565b9350612d57836123e2565b60005b82811015612d2d57612d6d868351612caa565b9550612d78826123e2565b9150600101612d5a565b6000612d8d82613a5d565b612d978185613a61565b9350612da2836123e2565b60005b82811015612d2d57612db8868351612cbe565b9550612dc3826123e2565b9150600101612da5565b6000612dd882613a5d565b612de28185613a61565b9350612df2818560208601613aa7565b612dfb81613ad3565b9093019392505050565b612cd381613a90565b6000612e1b604d83613a61565b7f45786368616e6765457865637574696f6e2e6578656375746545786368616e6781527f654f72646572733a20496e76616c6964206f722064697361626c65642045786360208201527f68616e6765206164647265737300000000000000000000000000000000000000604082015260600192915050565b6000612ea0606583613a61565b600080516020613ade83398151915281527f506f737445786368616e676552656365697665546f6b656e42616c616e63657360208201527f3a20496e73756666696369656e74207265636569766520746f6b656e2061637160408201527f7569726564000000000000000000000000000000000000000000000000000000606082015260800192915050565b6000612f39601a83613a61565b7f46524f4d5f4c4553535f5448414e5f544f5f5245515549524544000000000000815260200192915050565b6000612f72601c83613a61565b7f544f5f4c4553535f5448414e5f4c454e4754485f524551554952454400000000815260200192915050565b6000612fab605483613a61565b600080516020613ade83398151915281527f53656e64546f6b656e506172616d733a2053656e6420746f6b656e20696e707560208201527f7473206d757374206e6f7420626520656d707479000000000000000000000000604082015260600192915050565b600061301e604783613a61565b600080516020613ade83398151915281527f53656e64546f6b656e506172616d733a204d7573742062652076616c6964206560208201527f786368616e676500000000000000000000000000000000000000000000000000604082015260600192915050565b6000613091605e83613a61565b600080516020613ade83398151915281527f52656365697665546f6b656e733a205265636569766520746f6b656e7320616e60208201527f6420616d6f756e7473206d75737420626520657175616c206c656e6774680000604082015260600192915050565b6000613104602683613a61565b7f4552433230577261707065722e617070726f76653a204261642072657475726e81527f2076616c75650000000000000000000000000000000000000000000000000000602082015260400192915050565b6000613163603d83613a61565b7f43546f6b656e45786368616e676549737375616e63654d6f64756c652e6d696e81527f7443546f6b656e3a204572726f72206d696e74696e672063546f6b656e000000602082015260400192915050565b60006131c2604f83613a61565b600080516020613ade83398151915281527f52656365697665546f6b656e733a205265636569766520746f6b656e73206d7560208201527f7374206e6f7420626520656d7074790000000000000000000000000000000000604082015260600192915050565b6000613235605683613a61565b600080516020613ade83398151915281527f52656365697665546f6b656e733a205265636569766520746f6b656e73206d7560208201527f7374206e6f742068617665206475706c69636174657300000000000000000000604082015260600192915050565b60006132a8605683613a61565b7f45786368616e6765457865637574696f6e2e76616c696461746545786368616e81527f676549737375616e6365506172616d733a20496e76616c6964206f722064697360208201527f61626c656420536574546f6b656e206164647265737300000000000000000000604082015260600192915050565b600061332d605383613a61565b600080516020613ade83398151915281527f5175616e746974793a205175616e74697479206d757374206265206d756c746960208201527f706c65206f66206e61747572616c20756e697400000000000000000000000000604082015260600192915050565b60006133a0605183613a61565b600080516020613ade83398151915281527f52656365697665546f6b656e733a20436f6d706f6e656e7420616d6f756e747360208201527f206d75737420626520706f736974697665000000000000000000000000000000604082015260600192915050565b6000613413604383613a61565b600080516020613ade83398151915281527f5175616e746974793a205175616e74697479206d75737420626520706f73697460208201527f6976650000000000000000000000000000000000000000000000000000000000604082015260600192915050565b6000613486605d83613a61565b600080516020613ade83398151915281527f53656e64546f6b656e506172616d733a2053656e6420746f6b656e20696e707560208201527f7473206d757374206265206f66207468652073616d65206c656e677468000000604082015260600192915050565b60006134f9604183613a61565b7f43546f6b656e45786368616e676549737375616e63654d6f64756c652e72656481527f65656d43546f6b656e3a204572726f722072656465656d696e672063546f6b6560208201527f6e00000000000000000000000000000000000000000000000000000000000000604082015260600192915050565b600061357e604e83613a61565b600080516020613ade83398151915281527f53656e64546f6b656e506172616d733a2053656e6420616d6f756e7473206d7560208201527f737420626520706f736974697665000000000000000000000000000000000000604082015260600192915050565b60006135f1604083613a61565b7f45786368616e6765457865637574696f6e2e6578656375746545786368616e6781527f654f72646572733a2045786368616e676520616c72656164792063616c6c6564602082015260400192915050565b805160408301906136548482612cd9565b506020820151610b2a60208501825b612cd381613a7b565b612cd381613a7e565b60208101611c0f8284612cd9565b608081016136918287612cca565b61369e6020830186612cca565b6136ab6040830185612cd9565b611f9a6060830184613663565b608081016136c68287612cca565b6136d36020830186612cca565b81810360408301526136e58185612ce2565b905081810360608301526136f98184612d82565b9695505050505050565b608081016137118287612cca565b61369e6020830186612cd9565b6040810161372c8285612cd9565b611e346020830184612cd9565b604081016137478285612cd9565b611e346020830184612cca565b608081016136918287612cd9565b608081016137118287612cd9565b6080810161377e8287612cd9565b6136d36020830186612cd9565b604081016137998285612cd9565b81810360208301526123138184612d37565b604081016137b98285612cd9565b611e346020830184613663565b608081016137d48287612cd9565b6137e16020830186613663565b6137ee6040830185612cca565b611f9a6060830184612cd9565b608081016138098287612cd9565b6138166020830186613663565b6137ee6040830185612cd9565b608081016138318287612cd9565b61383e6020830186613663565b61384b6040830185612cd9565b611f9a6060830184612cca565b608081016138668287612cd9565b6136d36020830186613663565b60208101611c0f8284612e05565b60208082528101611c0f81612e0e565b60208082528101611c0f81612e93565b60208082528101611c0f81612f2c565b60208082528101611c0f81612f65565b60208082528101611c0f81612f9e565b60208082528101611c0f81613011565b60208082528101611c0f81613084565b60208082528101611c0f816130f7565b60208082528101611c0f81613156565b60208082528101611c0f816131b5565b60208082528101611c0f81613228565b60208082528101611c0f8161329b565b60208082528101611c0f81613320565b60208082528101611c0f81613393565b60208082528101611c0f81613406565b60208082528101611c0f81613479565b60208082528101611c0f816134ec565b60208082528101611c0f81613571565b60208082528101611c0f816135e4565b606081016139bf8285613643565b81810360408301526123138184612dcd565b60208101611c0f8284613663565b60208101611c0f828461366c565b60405181810167ffffffffffffffff81118282101715613a0c57600080fd5b604052919050565b600067ffffffffffffffff821115613a2b57600080fd5b5060209081020190565b600067ffffffffffffffff821115613a4c57600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b6000600160a060020a038216611c0f565b90565b60ff1690565b151590565b6000611c0f825b6000611c0f82613a6a565b82818337506000910152565b60005b83811015613ac2578181015183820152602001613aaa565b83811115610b2a5750506000910152565b601f01601f19169056fe45786368616e676549737375616e63654c6962726172792e76616c6964617465a265627a7a7230582007689ed9e322b2e95de1011ef3f85ebb59e76ef10153c836502d57d54de5c5916c6578706572696d656e74616cf50037",
deployedBytecode:"0x608060405234801561001057600080fd5b506004361061008c5760003560e060020a90048063a05cb7551161005f578063a05cb755146100ec578063f2f4eb26146100f4578063fbfa77cf146100fc578063ff598601146101045761008c565b8063188eec69146100915780633d0419d9146100a657806363dc4f95146100b95780636e667db3146100d7575b600080fd5b6100a461009f366004612bee565b61010c565b005b6100a46100b4366004612bee565b61036c565b6100c161053e565b6040516100ce9190613873565b60405180910390f35b6100df61054d565b6040516100ce9190613675565b6100c161055c565b6100df61056b565b6100df61057a565b6100c1610589565b600480546001019081905561012083610598565b825160608401516040517f03cd887000000000000000000000000000000000000000000000000000000000815273__SetTokenLibrary_______________________926303cd8870926101759260040161378b565b60006040518083038186803b15801561018d57600080fd5b505af41580156101a1573d6000803e3d6000fd5b5050600254855160208701516040517f5990ca08000000000000000000000000000000000000000000000000000000008152600160a060020a039093169450635990ca0893506101f992339230929091600401613703565b600060405180830381600087803b15801561021357600080fd5b505af1158015610227573d6000803e3d6000fd5b505050506060610236846106a7565b905061024f8460400151856060015186608001516107e7565b61025883610b30565b60015460a085015161027591600160a060020a0316908333610ceb565b60025460a085015160c08601516040517ffe93620e000000000000000000000000000000000000000000000000000000008152600160a060020a039093169263fe93620e926102cc923392839291906004016136b8565b600060405180830381600087803b1580156102e657600080fd5b505af11580156102fa573d6000803e3d6000fd5b5050505061030b8460000151610dd7565b8351602085015160a086015160c087015160405133947f06c4316d43c46a4ded573b4dee3cf64d66b87d192f4f6bd88b830ae18b29c7c0946103509491939092613858565b60405180910390a250600454811461036757600080fd5b505050565b600480546001019081905561038083610598565b825160a08401516040517f03cd887000000000000000000000000000000000000000000000000000000000815273__SetTokenLibrary_______________________926303cd8870926103d59260040161378b565b60006040518083038186803b1580156103ed57600080fd5b505af4158015610401573d6000803e3d6000fd5b5050505061041c836040015184606001518560800151611181565b6060610427846106a7565b905061043283610b30565b6104448460a001518560c001516112cb565b60015460a085015161046191600160a060020a0316908333610ceb565b610473846000015185602001516114b3565b600254845160208601516040517f7c68561f000000000000000000000000000000000000000000000000000000008152600160a060020a0390931692637c68561f926104c792339283929190600401613683565b600060405180830381600087803b1580156104e157600080fd5b505af11580156104f5573d6000803e3d6000fd5b505085516020870151606088015160808901516040513396507fc7fce5271a7dcbf20bd48128dcbf6f2df01bceda67919e43870de3be7f1b069095506103509493929190613858565b600354600160a060020a031681565b600654600160a060020a031681565b600254600160a060020a031681565b600054600160a060020a031681565b600154600160a060020a031681565b600554600160a060020a031681565b60025481516040517ffef3ee73000000000000000000000000000000000000000000000000000000008152600160a060020a039092169163fef3ee73916105e191600401613675565b60206040518083038186803b1580156105f957600080fd5b505afa15801561060d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106319190810190612bd0565b6106595760405160e560020a62461bcd02815260040161065090613931565b60405180910390fd5b61066b81600001518260200151611911565b60005460408201516060830151608084015161069293600160a060020a03169291906119dc565b6106a48160a001518260c00151611b43565b50565b6060808260a00151516040519080825280602002602001820160405280156106d9578160200160208202803883390190505b50905060005b8360a00151518110156107de5760035460a08501518051600092600160a060020a031691631f98ade3918590811061071357fe5b6020026020010151336040518363ffffffff1660e060020a02815260040161073c929190613739565b60206040518083038186803b15801561075457600080fd5b505afa158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061078c9190810190612c8c565b905060008560c0015183815181106107a057fe5b602002602001015190506107bd8183611bfa90919063ffffffff16565b8484815181106107c957fe5b602090810291909101015250506001016106df565b5090505b919050565b60005b8251811015610b2a576002548451600091600160a060020a0316906356fe27849087908590811061081757fe5b60200260200101516040518263ffffffff1660e060020a02815260040161083e91906139df565b60206040518083038186803b15801561085657600080fd5b505afa15801561086a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061088e9190810190612b48565b9050600084838151811061089e57fe5b6020026020010151905060008484815181106108b657fe5b602090810291909101015160055460405160e160020a634d8c928d028152919250600091600160a060020a0390911690639b19251a906108fa908690600401613675565b60206040518083038186803b15801561091257600080fd5b505afa158015610926573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061094a9190810190612b48565b9050600160a060020a03811615610aae576109658383611c15565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815260009073__ERC20Wrapper__________________________9063f7888aec906109ba908590309060040161371e565b60206040518083038186803b1580156109d257600080fd5b505af41580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a0a9190810190612c8c565b600654909150610a279083903090600160a060020a031684611d3d565b6002546040517ffd496ebf000000000000000000000000000000000000000000000000000000008152600160a060020a039091169063fd496ebf90610a76908590859030908b906004016137fb565b600060405180830381600087803b158015610a9057600080fd5b505af1158015610aa4573d6000803e3d6000fd5b5050505050610b1a565b60025460405160e260020a630387f4cd028152600160a060020a0390911690630e1fd33490610ae7903090889088908890600401613762565b600060405180830381600087803b158015610b0157600080fd5b505af1158015610b15573d6000803e3d6000fd5b505050505b5050600190920191506107ea9050565b50505050565b6000805b825181101561036757610b456125a7565b610b4f8483611d6d565b60025481516040517f56fe2784000000000000000000000000000000000000000000000000000000008152929350600092600160a060020a03909216916356fe278491610b9e916004016139df565b60206040518083038186803b158015610bb657600080fd5b505afa158015610bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bee9190810190612b48565b9050600160a060020a038116610c195760405160e560020a62461bcd02815260040161065090613881565b6000610c2d6002846000015160ff16611db8565b905084811615610c525760405160e560020a62461bcd028152600401610650906139a1565b6000610c70610c5f611df7565b60408601519063ffffffff611bfa16565b90506060610c7f888784611dfc565b9050610c896125c7565b506040805180820190915233815260208681015160ff1690820152600054610cbc90600160a060020a0316828785611e3b565b610ccc878463ffffffff611bfa16565b9650610cde888563ffffffff611bfa16565b9750505050505050610b34565b8360005b8451811015610dcf57600082600160a060020a0316631f98ade3878481518110610d1557fe5b6020026020010151866040518363ffffffff1660e060020a028152600401610d3e92919061371e565b60206040518083038186803b158015610d5657600080fd5b505afa158015610d6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d8e9190810190612c8c565b9050848281518110610d9c57fe5b6020026020010151811015610dc65760405160e560020a62461bcd02815260040161065090613891565b50600101610cef565b505050505050565b606081600160a060020a03166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b158015610e1557600080fd5b505afa158015610e29573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e519190810190612b66565b905060005b8151811015610367576000828281518110610e6d57fe5b60209081029190910101516003546040517f1f98ade3000000000000000000000000000000000000000000000000000000008152919250600091600160a060020a0390911690631f98ade390610ec9908590309060040161371e565b60206040518083038186803b158015610ee157600080fd5b505afa158015610ef5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f199190810190612c8c565b905080156111775760055460405160e160020a634d8c928d028152600091600160a060020a031690639b19251a90610f55908690600401613675565b60206040518083038186803b158015610f6d57600080fd5b505afa158015610f81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fa59190810190612b48565b9050600160a060020a0381161561110957610fc08383611c15565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815260009073__ERC20Wrapper__________________________9063f7888aec90611015908590309060040161371e565b60206040518083038186803b15801561102d57600080fd5b505af4158015611041573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110659190810190612c8c565b6006549091506110829083903090600160a060020a031684611d3d565b6002546040517ffd496ebf000000000000000000000000000000000000000000000000000000008152600160a060020a039091169063fd496ebf906110d1908590859030903390600401613823565b600060405180830381600087803b1580156110eb57600080fd5b505af11580156110ff573d6000803e3d6000fd5b5050505050611175565b60025460405160e260020a630387f4cd028152600160a060020a0390911690630e1fd33490611142903090339088908890600401613754565b600060405180830381600087803b15801561115c57600080fd5b505af1158015611170573d6000803e3d6000fd5b505050505b505b5050600101610e56565b60005b8251811015610b2a576002548451600091600160a060020a0316906356fe2784908790859081106111b157fe5b60200260200101516040518263ffffffff1660e060020a0281526004016111d891906139df565b60206040518083038186803b1580156111f057600080fd5b505afa158015611204573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112289190810190612b48565b6002548551919250600160a060020a03169063fd496ebf9086908590811061124c57fe5b602002602001015185858151811061126057fe5b602002602001015133856040518563ffffffff1660e060020a02815260040161128c94939291906137c6565b600060405180830381600087803b1580156112a657600080fd5b505af11580156112ba573d6000803e3d6000fd5b505060019093019250611184915050565b60005b82518110156103675760008382815181106112e557fe5b6020026020010151905060008383815181106112fd57fe5b602090810291909101015160055460405160e160020a634d8c928d028152919250600091600160a060020a0390911690639b19251a90611341908690600401613675565b60206040518083038186803b15801561135957600080fd5b505afa15801561136d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113919190810190612b48565b9050600160a060020a038116156114a8576000839050600081600160a060020a031663bd6d894d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156113e757600080fd5b505af11580156113fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061141f9190810190612c8c565b9050600061142d8583611f6f565b60025460405160e260020a630387f4cd028152919250600160a060020a031690630e1fd33490611467903390309089908790600401613703565b600060405180830381600087803b15801561148157600080fd5b505af1158015611495573d6000803e3d6000fd5b505050506114a4838583611fa3565b5050505b5050506001016112ce565b6000829050606081600160a060020a03166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b1580156114f657600080fd5b505afa15801561150a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115329190810190612b66565b9050606082600160a060020a031663027aa9f56040518163ffffffff1660e060020a02815260040160006040518083038186803b15801561157257600080fd5b505afa158015611586573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115ae9190810190612b9b565b9050600083600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156115ee57600080fd5b505afa158015611602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116269190810190612c8c565b9050600061163a868363ffffffff61217d16565b905060005b845181101561190757600085828151811061165657fe5b60209081029190910101516003546040517f1f98ade3000000000000000000000000000000000000000000000000000000008152919250600091600160a060020a0390911690631f98ade3906116b29085903390600401613739565b60206040518083038186803b1580156116ca57600080fd5b505afa1580156116de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117029190810190612c8c565b9050600061172c87858151811061171557fe5b60200260200101518661219f90919063ffffffff16565b60055460405160e160020a634d8c928d028152919250600091600160a060020a0390911690639b19251a90611765908790600401613675565b60206040518083038186803b15801561177d57600080fd5b505afa158015611791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117b59190810190612b48565b9050600160a060020a038116158015906117ce57508183105b156118f757600083830390506000859050600081600160a060020a031663bd6d894d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561181f57600080fd5b505af1158015611833573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118579190810190612c8c565b905060006118658483611f6f565b6002546040517ffd496ebf000000000000000000000000000000000000000000000000000000008152919250600160a060020a03169063fd496ebf906118b59088908590339030906004016137c6565b600060405180830381600087803b1580156118cf57600080fd5b505af11580156118e3573d6000803e3d6000fd5b505050506118f2838683611fa3565b505050505b50506001909201915061163f9050565b5050505050505050565b600081116119345760405160e560020a62461bcd02815260040161065090613961565b6119b882600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561197357600080fd5b505afa158015611987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119ab9190810190612c8c565b829063ffffffff6121c616565b156119d85760405160e560020a62461bcd02815260040161065090613941565b5050565b6000825111611a005760405160e560020a62461bcd028152600401610650906138c1565b81518351148015611a12575080518251145b611a315760405160e560020a62461bcd02815260040161065090613971565b8360005b8451811015610dcf576000600160a060020a031682600160a060020a03166356fe2784878481518110611a6457fe5b60200260200101516040518263ffffffff1660e060020a028152600401611a8b91906139df565b60206040518083038186803b158015611aa357600080fd5b505afa158015611ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611adb9190810190612b48565b600160a060020a03161415611b055760405160e560020a62461bcd028152600401610650906138d1565b6000838281518110611b1357fe5b602002602001015111611b3b5760405160e560020a62461bcd02815260040161065090613991565b600101611a35565b815180611b655760405160e560020a62461bcd02815260040161065090613911565b611b6e836121e3565b15611b8e5760405160e560020a62461bcd02815260040161065090613921565b81518114611bb15760405160e560020a62461bcd028152600401610650906138e1565b60005b81811015610b2a576000838281518110611bca57fe5b602002602001015111611bf25760405160e560020a62461bcd02815260040161065090613951565b600101611bb4565b600082820183811015611c0c57600080fd5b90505b92915050565b60025460405160e260020a630387f4cd028152600160a060020a0390911690630e1fd33490611c4e903090819087908790600401613762565b600060405180830381600087803b158015611c6857600080fd5b505af1158015611c7c573d6000803e3d6000fd5b50506040517fdb006a7500000000000000000000000000000000000000000000000000000000815260009250600160a060020a038516915063db006a7590611cc89085906004016139d1565b602060405180830381600087803b158015611ce257600080fd5b505af1158015611cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d1a9190810190612c8c565b905080156103675760405160e560020a62461bcd02815260040161065090613981565b6000611d4a858585612279565b905081811015611d6657611d668584611d6161231b565b612321565b5050505050565b611d756125a7565b611d7d6125a7565b6000611d9884611d8c876123e2565b9063ffffffff611bfa16565b805183526020808201519084015260409081015190830152509392505050565b6000808311611dc657600080fd5b600160005b83811015611def5781611de4818763ffffffff61219f16565b925050600101611dcb565b509392505050565b606090565b606080611e3085611e1b611e0e611df7565b879063ffffffff611bfa16565b611e2b878763ffffffff611bfa16565b6123e8565b9150505b9392505050565b611e436125de565b6040517fc58c1db8000000000000000000000000000000000000000000000000000000008152600160a060020a0384169063c58c1db890611e8a90879086906004016139b1565b600060405180830381600087803b158015611ea457600080fd5b505af1158015611eb8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ee09190810190612c57565b8451815160208301516040517fcaaa3ada000000000000000000000000000000000000000000000000000000008152939450600160a060020a0389169363caaa3ada93611f369389939192909190600401613770565b600060405180830381600087803b158015611f5057600080fd5b505af1158015611f64573d6000803e3d6000fd5b505050505050505050565b600080611f82848463ffffffff61219f16565b90506000611f8e61247f565b9050611f9a828261248b565b95945050505050565b611faf82308584611d3d565b6040517fa0712d68000000000000000000000000000000000000000000000000000000008152600090600160a060020a0385169063a0712d6890611ff79085906004016139d1565b602060405180830381600087803b15801561201157600080fd5b505af1158015612025573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120499190810190612c8c565b9050801561206c5760405160e560020a62461bcd02815260040161065090613901565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815260009073__ERC20Wrapper__________________________9063f7888aec906120c1908890309060040161371e565b60206040518083038186803b1580156120d957600080fd5b505af41580156120ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121119190810190612c8c565b60065490915061212e9086903090600160a060020a031684611d3d565b6002546040517fde30f6ee000000000000000000000000000000000000000000000000000000008152600160a060020a039091169063de30f6ee90611f3690309033908a908790600401613754565b600080821161218b57600080fd5b600082848161219657fe5b04949350505050565b6000826121ae57506000611c0f565b828202828482816121bb57fe5b0414611c0c57600080fd5b6000816121d257600080fd5b8183816121db57fe5b069392505050565b60008151600014156121f7575060006107e2565b60005b600183510381101561227057600181015b83518110156122675783818151811061222057fe5b6020026020010151600160a060020a031684838151811061223d57fe5b6020026020010151600160a060020a0316141561225f576001925050506107e2565b60010161220b565b506001016121fa565b50600092915050565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600090600160a060020a0385169063dd62ed3e906122c3908690869060040161371e565b60206040518083038186803b1580156122db57600080fd5b505afa1580156122ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506123139190810190612c8c565b949350505050565b60001990565b6040517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0384169063095ea7b39061236890859085906004016137ab565b602060405180830381600087803b15801561238257600080fd5b505af1158015612396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506123ba9190810190612bd0565b506123c36124cd565b6103675760405160e560020a62461bcd028152600401610650906138f1565b60200190565b60608183111561240d5760405160e560020a62461bcd028152600401610650906138a1565b83518211156124315760405160e560020a62461bcd028152600401610650906138b1565b8282036040519080825280601f01601f19166020018201604052801561245e576020820181803883390190505b509050611e3461246d826123e2565b84612477876123e2565b018351612502565b670de0b6b3a764000090565b60008061249e848463ffffffff6121c616565b116124b8576124b3838363ffffffff61217d16565b611c0c565b611c0c6001611d8c858563ffffffff61217d16565b6000803d80156124e457602081146124ed576124f9565b600191506124f9565b60206000803e60005191505b50600114905090565b602081101561252c576001816020036101000a038019835116818551168082178652505050610367565b8282141561253957610367565b828211156125735760208103905080820181840181515b8285101561256b578451865260209586019590940193612550565b905250610367565b60208103905080820181840183515b8186121561259e5782518252601f199283019290910190612582565b85525050505050565b604080516060810182526000808252602082018190529181019190915290565b604080518082019091526000808252602082015290565b604051806040016040528060608152602001606081525090565b6000611c0c8235613a6a565b6000611c0c8251613a6a565b600082601f83011261262157600080fd5b813561263461262f82613a14565b6139ed565b9150818183526020840193506020810190508385602084028201111561265957600080fd5b60005b83811015612685578161266f88826125f8565b845250602092830192919091019060010161265c565b5050505092915050565b600082601f8301126126a057600080fd5b81516126ae61262f82613a14565b915081818352602084019350602081019050838560208402820111156126d357600080fd5b60005b8381101561268557816126e98882612604565b84525060209283019291909101906001016126d6565b600082601f83011261271057600080fd5b815161271e61262f82613a14565b9150818183526020840193506020810190508385602084028201111561274357600080fd5b60005b8381101561268557816127598882612604565b8452506020928301929190910190600101612746565b600082601f83011261278057600080fd5b813561278e61262f82613a14565b915081818352602084019350602081019050838560208402820111156127b357600080fd5b60005b8381101561268557816127c98882612b24565b84525060209283019291909101906001016127b6565b600082601f8301126127f057600080fd5b81516127fe61262f82613a14565b9150818183526020840193506020810190508385602084028201111561282357600080fd5b60005b8381101561268557816128398882612b30565b8452506020928301929190910190600101612826565b600082601f83011261286057600080fd5b815161286e61262f82613a14565b9150818183526020840193506020810190508385602084028201111561289357600080fd5b60005b8381101561268557816128a98882612b30565b8452506020928301929190910190600101612896565b600082601f8301126128d057600080fd5b81356128de61262f82613a14565b9150818183526020840193506020810190508385602084028201111561290357600080fd5b60005b8381101561268557816129198882612b3c565b8452506020928301929190910190600101612906565b6000611c0c8251613a84565b600082601f83011261294c57600080fd5b813561295a61262f82613a35565b9150808252602083016020830185838301111561297657600080fd5b612981838284613a9b565b50505092915050565b600060e0828403121561299c57600080fd5b6129a660e06139ed565b905060006129b484846125f8565b82525060206129c584848301612b24565b602083015250604082013567ffffffffffffffff8111156129e557600080fd5b6129f1848285016128bf565b604083015250606082013567ffffffffffffffff811115612a1157600080fd5b612a1d84828501612610565b606083015250608082013567ffffffffffffffff811115612a3d57600080fd5b612a498482850161276f565b60808301525060a082013567ffffffffffffffff811115612a6957600080fd5b612a7584828501612610565b60a08301525060c082013567ffffffffffffffff811115612a9557600080fd5b612aa18482850161276f565b60c08301525092915050565b600060408284031215612abf57600080fd5b612ac960406139ed565b825190915067ffffffffffffffff811115612ae357600080fd5b612aef8482850161268f565b825250602082015167ffffffffffffffff811115612b0c57600080fd5b612b18848285016127df565b60208301525092915050565b6000611c0c8235613a7b565b6000611c0c8251613a7b565b6000611c0c8235613a7e565b600060208284031215612b5a57600080fd5b60006123138484612604565b600060208284031215612b7857600080fd5b815167ffffffffffffffff811115612b8f57600080fd5b612313848285016126ff565b600060208284031215612bad57600080fd5b815167ffffffffffffffff811115612bc457600080fd5b6123138482850161284f565b600060208284031215612be257600080fd5b6000612313848461292f565b60008060408385031215612c0157600080fd5b823567ffffffffffffffff811115612c1857600080fd5b612c248582860161298a565b925050602083013567ffffffffffffffff811115612c4157600080fd5b612c4d8582860161293b565b9150509250929050565b600060208284031215612c6957600080fd5b815167ffffffffffffffff811115612c8057600080fd5b61231384828501612aad565b600060208284031215612c9e57600080fd5b60006123138484612b30565b6000612cb68383612cd9565b505060200190565b6000612cb68383613663565b612cd381613a89565b82525050565b612cd381613a6a565b6000612ced82613a5d565b612cf78185613a61565b9350612d02836123e2565b60005b82811015612d2d57612d18868351612caa565b9550612d23826123e2565b9150600101612d05565b5093949350505050565b6000612d4282613a5d565b612d4c8185613a61565b9350612d57836123e2565b60005b82811015612d2d57612d6d868351612caa565b9550612d78826123e2565b9150600101612d5a565b6000612d8d82613a5d565b612d978185613a61565b9350612da2836123e2565b60005b82811015612d2d57612db8868351612cbe565b9550612dc3826123e2565b9150600101612da5565b6000612dd882613a5d565b612de28185613a61565b9350612df2818560208601613aa7565b612dfb81613ad3565b9093019392505050565b612cd381613a90565b6000612e1b604d83613a61565b7f45786368616e6765457865637574696f6e2e6578656375746545786368616e6781527f654f72646572733a20496e76616c6964206f722064697361626c65642045786360208201527f68616e6765206164647265737300000000000000000000000000000000000000604082015260600192915050565b6000612ea0606583613a61565b600080516020613ade83398151915281527f506f737445786368616e676552656365697665546f6b656e42616c616e63657360208201527f3a20496e73756666696369656e74207265636569766520746f6b656e2061637160408201527f7569726564000000000000000000000000000000000000000000000000000000606082015260800192915050565b6000612f39601a83613a61565b7f46524f4d5f4c4553535f5448414e5f544f5f5245515549524544000000000000815260200192915050565b6000612f72601c83613a61565b7f544f5f4c4553535f5448414e5f4c454e4754485f524551554952454400000000815260200192915050565b6000612fab605483613a61565b600080516020613ade83398151915281527f53656e64546f6b656e506172616d733a2053656e6420746f6b656e20696e707560208201527f7473206d757374206e6f7420626520656d707479000000000000000000000000604082015260600192915050565b600061301e604783613a61565b600080516020613ade83398151915281527f53656e64546f6b656e506172616d733a204d7573742062652076616c6964206560208201527f786368616e676500000000000000000000000000000000000000000000000000604082015260600192915050565b6000613091605e83613a61565b600080516020613ade83398151915281527f52656365697665546f6b656e733a205265636569766520746f6b656e7320616e60208201527f6420616d6f756e7473206d75737420626520657175616c206c656e6774680000604082015260600192915050565b6000613104602683613a61565b7f4552433230577261707065722e617070726f76653a204261642072657475726e81527f2076616c75650000000000000000000000000000000000000000000000000000602082015260400192915050565b6000613163603d83613a61565b7f43546f6b656e45786368616e676549737375616e63654d6f64756c652e6d696e81527f7443546f6b656e3a204572726f72206d696e74696e672063546f6b656e000000602082015260400192915050565b60006131c2604f83613a61565b600080516020613ade83398151915281527f52656365697665546f6b656e733a205265636569766520746f6b656e73206d7560208201527f7374206e6f7420626520656d7074790000000000000000000000000000000000604082015260600192915050565b6000613235605683613a61565b600080516020613ade83398151915281527f52656365697665546f6b656e733a205265636569766520746f6b656e73206d7560208201527f7374206e6f742068617665206475706c69636174657300000000000000000000604082015260600192915050565b60006132a8605683613a61565b7f45786368616e6765457865637574696f6e2e76616c696461746545786368616e81527f676549737375616e6365506172616d733a20496e76616c6964206f722064697360208201527f61626c656420536574546f6b656e206164647265737300000000000000000000604082015260600192915050565b600061332d605383613a61565b600080516020613ade83398151915281527f5175616e746974793a205175616e74697479206d757374206265206d756c746960208201527f706c65206f66206e61747572616c20756e697400000000000000000000000000604082015260600192915050565b60006133a0605183613a61565b600080516020613ade83398151915281527f52656365697665546f6b656e733a20436f6d706f6e656e7420616d6f756e747360208201527f206d75737420626520706f736974697665000000000000000000000000000000604082015260600192915050565b6000613413604383613a61565b600080516020613ade83398151915281527f5175616e746974793a205175616e74697479206d75737420626520706f73697460208201527f6976650000000000000000000000000000000000000000000000000000000000604082015260600192915050565b6000613486605d83613a61565b600080516020613ade83398151915281527f53656e64546f6b656e506172616d733a2053656e6420746f6b656e20696e707560208201527f7473206d757374206265206f66207468652073616d65206c656e677468000000604082015260600192915050565b60006134f9604183613a61565b7f43546f6b656e45786368616e676549737375616e63654d6f64756c652e72656481527f65656d43546f6b656e3a204572726f722072656465656d696e672063546f6b6560208201527f6e00000000000000000000000000000000000000000000000000000000000000604082015260600192915050565b600061357e604e83613a61565b600080516020613ade83398151915281527f53656e64546f6b656e506172616d733a2053656e6420616d6f756e7473206d7560208201527f737420626520706f736974697665000000000000000000000000000000000000604082015260600192915050565b60006135f1604083613a61565b7f45786368616e6765457865637574696f6e2e6578656375746545786368616e6781527f654f72646572733a2045786368616e676520616c72656164792063616c6c6564602082015260400192915050565b805160408301906136548482612cd9565b506020820151610b2a60208501825b612cd381613a7b565b612cd381613a7e565b60208101611c0f8284612cd9565b608081016136918287612cca565b61369e6020830186612cca565b6136ab6040830185612cd9565b611f9a6060830184613663565b608081016136c68287612cca565b6136d36020830186612cca565b81810360408301526136e58185612ce2565b905081810360608301526136f98184612d82565b9695505050505050565b608081016137118287612cca565b61369e6020830186612cd9565b6040810161372c8285612cd9565b611e346020830184612cd9565b604081016137478285612cd9565b611e346020830184612cca565b608081016136918287612cd9565b608081016137118287612cd9565b6080810161377e8287612cd9565b6136d36020830186612cd9565b604081016137998285612cd9565b81810360208301526123138184612d37565b604081016137b98285612cd9565b611e346020830184613663565b608081016137d48287612cd9565b6137e16020830186613663565b6137ee6040830185612cca565b611f9a6060830184612cd9565b608081016138098287612cd9565b6138166020830186613663565b6137ee6040830185612cd9565b608081016138318287612cd9565b61383e6020830186613663565b61384b6040830185612cd9565b611f9a6060830184612cca565b608081016138668287612cd9565b6136d36020830186613663565b60208101611c0f8284612e05565b60208082528101611c0f81612e0e565b60208082528101611c0f81612e93565b60208082528101611c0f81612f2c565b60208082528101611c0f81612f65565b60208082528101611c0f81612f9e565b60208082528101611c0f81613011565b60208082528101611c0f81613084565b60208082528101611c0f816130f7565b60208082528101611c0f81613156565b60208082528101611c0f816131b5565b60208082528101611c0f81613228565b60208082528101611c0f8161329b565b60208082528101611c0f81613320565b60208082528101611c0f81613393565b60208082528101611c0f81613406565b60208082528101611c0f81613479565b60208082528101611c0f816134ec565b60208082528101611c0f81613571565b60208082528101611c0f816135e4565b606081016139bf8285613643565b81810360408301526123138184612dcd565b60208101611c0f8284613663565b60208101611c0f828461366c565b60405181810167ffffffffffffffff81118282101715613a0c57600080fd5b604052919050565b600067ffffffffffffffff821115613a2b57600080fd5b5060209081020190565b600067ffffffffffffffff821115613a4c57600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b6000600160a060020a038216611c0f565b90565b60ff1690565b151590565b6000611c0f825b6000611c0f82613a6a565b82818337506000910152565b60005b83811015613ac2578181015183820152602001613aaa565b83811115610b2a5750506000910152565b601f01601f19169056fe45786368616e676549737375616e63654c6962726172792e76616c6964617465a265627a7a7230582007689ed9e322b2e95de1011ef3f85ebb59e76ef10153c836502d57d54de5c5916c6578706572696d656e74616cf50037",sourceMap:"1807:20534:59:-;;;2441:390;8:9:-1;5:2;;;30:1;27;20:12;5:2;2441:390:59;;;;;;;;;;;;;;;;;;;;;;1652:4:69;:12;;-1:-1:-1;;;;;1652:12:69;;;-1:-1:-1;;;;;;1652:12:69;;;;;;;1739;:27;;;;;;;;;1652:12;1834:14;;;;;;;;;;;;1924:13;:30;;;;;;;;;560:13:171;:17;;;1759:15:66;:34;;;;;;;;;;;;;;1932:33;;;;;;;;2725:14:59;;2753:16;;1897:32:66;;1759:34;1932:31;;:33;;;;1652:4:69;1932:33:66;;;;;;;1759:34;1932:33;;;5:2:-1;;;;30:1;27;20:12;5:2;1932:33:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1932:33:66;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1932:33:66;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;1932:33:66;;;;;;;;;1897:68;-1:-1:-1;1981:9:66;1976:899;2000:15;:22;1996:1;:26;1976:899;;;2043:21;2067:15;2083:1;2067:18;;;;;;;;;;;;;;;;;;2127:15;;:39;;;;;2067:18;;-1:-1:-1;2099:25:66;;-1:-1:-1;;;;;2127:15:66;;;;:24;;:39;;2067:18;;2127:39;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2127:39:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2127:39:66;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2127:39:66;;;;;;;;;2099:67;-1:-1:-1;2257:141:66;2099:67;2330:13;2361:23;:21;;;;;;:23;:::i;:::-;2257:20;;;;;;:141;:::i;:::-;2496:142;2534:17;2569:14;2601:23;:21;;;;;;:23;:::i;2496:142::-;2726:138;2764:13;2795:14;2827:23;:21;;;;;;:23;:::i;2726:138::-;-1:-1:-1;;2024:3:66;;1976:899;;;-1:-1:-1;;2794:13:59;:30;;-1:-1:-1;;;;;;2794:30:59;-1:-1:-1;;;;;2794:30:59;;;;;;;;;;;-1:-1:-1;1807:20534:59;;-1:-1:-1;;;;1807:20534:59;1220:118:176;-1:-1:-1;;1220:118:176;:::o;4042:342:118:-;4173:43;;;;;-1:-1:-1;;;;;4173:22:118;;;;;:43;;4196:8;;4206:9;;4173:43;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4173:43:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4173:43:118;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4173:43:118;;;;;;;;;-1:-1:-1;4299:14:118;:12;;;;:14;:::i;:::-;4278:99;;;;;;;;;;;;;;;;;;;;;;4042:342;;;:::o;5392:852::-;5467:4;;5651:14;5728:57;;;;5837:4;5832:220;;;;5644:497;;5728:57;5770:1;5755:16;;5728:57;;5832:220;5937:4;5932:3;5927;5912:30;6034:3;6028:10;6013:25;;5644:497;-1:-1:-1;6236:1:118;6221:16;;-1:-1:-1;5392:852:118;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;152:722;;280:3;273:4;265:6;261:17;257:27;247:2;;298:1;295;288:12;247:2;328:6;322:13;350:80;365:64;422:6;365:64;;;350:80;;;341:89;;447:5;472:6;465:5;458:21;502:4;494:6;490:17;480:27;;524:4;519:3;515:14;508:21;;577:6;624:3;616:4;608:6;604:17;599:3;595:27;592:36;589:2;;;641:1;638;631:12;589:2;666:1;651:217;676:6;673:1;670:13;651:217;;;734:3;756:48;800:3;788:10;756:48;;;744:61;;-1:-1;828:4;819:14;;;;847;;;;;698:1;691:9;651:217;;;655:14;240:634;;;;;;;;882:116;;957:36;985:6;979:13;957:36;;1005:192;;1118:74;1184:6;1178:13;1118:74;;1204:263;;1319:2;1307:9;1298:7;1294:23;1290:32;1287:2;;;1335:1;1332;1325:12;1287:2;1370:1;1387:64;1443:7;1423:9;1387:64;;;1377:74;1281:186;-1:-1;;;;1281:186;1474:742;;;;;1675:3;1663:9;1654:7;1650:23;1646:33;1643:2;;;1692:1;1689;1682:12;1643:2;1727:1;1744:64;1800:7;1780:9;1744:64;;;1734:74;;1706:108;1845:2;1863:64;1919:7;1910:6;1899:9;1895:22;1863:64;;;1853:74;;1824:109;1964:2;1982:64;2038:7;2029:6;2018:9;2014:22;1982:64;;;1972:74;;1943:109;2083:2;2101:99;2192:7;2183:6;2172:9;2168:22;2101:99;;;2091:109;;2062:144;1637:579;;;;;;;;2223:392;;2363:2;2351:9;2342:7;2338:23;2334:32;2331:2;;;2379:1;2376;2369:12;2331:2;2414:24;;-1:-1;;;;;2447:30;;2444:2;;;2490:1;2487;2480:12;2444:2;2510:89;2591:7;2582:6;2571:9;2567:22;2510:89;;2622:257;;2734:2;2722:9;2713:7;2709:23;2705:32;2702:2;;;2750:1;2747;2740:12;2702:2;2785:1;2802:61;2855:7;2835:9;2802:61;;2886:120;2969:31;2994:5;2969:31;;;2964:3;2957:44;2951:55;;;3014:465;;3174:67;3238:2;3233:3;3174:67;;;3274:66;3254:87;;3375:66;3370:2;3361:12;;3354:88;3470:2;3461:12;;3160:319;-1:-1;;3160:319;3487:120;3570:31;3595:5;3570:31;;3614:213;3732:2;3717:18;;3746:71;3721:9;3790:6;3746:71;;;3703:124;;;;;3834:324;3980:2;3965:18;;3994:71;3969:9;4038:6;3994:71;;;4076:72;4144:2;4133:9;4129:18;4120:6;4076:72;;4165:407;4356:2;4370:47;;;4341:18;;4431:131;4341:18;4431:131;;4579:256;4641:2;4635:9;4667:17;;;-1:-1;;;;;4727:34;;4763:22;;;4724:62;4721:2;;;4799:1;4796;4789:12;4721:2;4815;4808:22;4619:216;;-1:-1;4619:216;4842:258;;-1:-1;;;;;4993:6;4990:30;4987:2;;;5033:1;5030;5023:12;4987:2;-1:-1;5062:4;5050:17;;;5080:15;;4924:176;5108:163;5211:19;;;5260:4;5251:14;;5204:67;5279:105;;-1:-1;;;;;5460:54;;5348:31;5443:76;5526:79;5595:5;5578:27;5724:92;5797:13;5790:21;;5773:43;5823:140;;5927:31;5952:5;5927:31;;5910:53;1807:20534:59;;;;;;",
deployedSourceMap:"1807:20534:59:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1807:20534:59;;;;;;;;-1:-1:-1;;;1807:20534:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6150:2422;;;;;;;;;:::i;:::-;;3246:2492;;;;;;;;;:::i;1234:27:69:-;;;:::i;:::-;;;;;;;;;;;;;;;;2022:28:59;;;:::i;:::-;;;;;;;;1168:25:69;;;:::i;1049:19::-;;;:::i;1108:20::-;;;:::i;1224:49:66:-;;;:::i;6150:2422:59:-;993:13:171;:18;;1010:1;993:18;;;;;6393:55:59;6424:23;6393:30;:55::i;:::-;6582:34;;6630;;;;6525:149;;;;;:15;;:43;;:149;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6525:149:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6763:12:59;;6853:34;;6901:32;;;;6763:180;;;;;-1:-1:-1;;;;;6763:12:59;;;;-1:-1:-1;6763:25:59;;-1:-1:-1;6763:180:59;;6802:10;;6834:4;;6853:34;;6763:180;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6763:180:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6763:180:59;;;;7007:33;7043:76;7086:23;7043:29;:76::i;:::-;7007:112;;7237:212;7293:23;:44;;;7351:23;:34;;;7399:23;:40;;;7237:42;:212::i;:::-;7557:33;7579:10;7557:21;:33::i;:::-;7754:5;;7773:37;;;;7676:198;;-1:-1:-1;;;;;7754:5:59;;7824:16;7854:10;7676:64;:198::i;:::-;7947:12;;8041:37;;;;8092:43;;;;7947:198;;;;;-1:-1:-1;;;;;7947:12:59;;;;:32;;:198;;7993:10;;;;8041:37;8092:43;7947:198;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7947:198:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7947:198:59;;;;8227:69;8261:23;:34;;;8227:33;:69::i;:::-;8343:34;;8415:32;;;;8461:37;;;;8512:43;;;;8312:253;;8391:10;;8312:253;;;;8343:34;;8415:32;;8312:253;;;;;;;;;;1067:1:171;1102:13;;1086:12;:29;1078:38;;;;;;6150:2422:59;;;:::o;3246:2492::-;993:13:171;:18;;1010:1;993:18;;;;;3522:55:59;3553:23;3522:30;:55::i;:::-;3714:34;;3762:37;;;;3657:152;;;;;:15;;:43;;:152;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3657:152:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3657:152:59;;;;3885:206;3935:23;:44;;;3993:23;:34;;;4041:23;:40;;;3885:36;:206::i;:::-;4155:33;4191:76;4234:23;4191:29;:76::i;:::-;4155:112;;4375:33;4397:10;4375:21;:33::i;:::-;4547:152;4595:23;:37;;;4646:23;:43;;;4547:34;:152::i;:::-;4863:5;;4882:37;;;;4785:198;;-1:-1:-1;;;;;4863:5:59;;4933:16;4963:10;4785:64;:198::i;:::-;5122:125;5157:23;:34;;;5205:23;:32;;;5122:21;:125::i;:::-;5293:12;;5379:34;;5427:32;;;;5293:176;;;;;-1:-1:-1;;;;;5293:12:59;;;;:24;;:176;;5331:10;;;;5379:34;5427:32;5293:176;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5293:176:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5515:34:59;;5587:32;;;;5633:34;;;;5681:40;;;;5485:246;;5563:10;;-1:-1:-1;5485:246:59;;-1:-1:-1;5485:246:59;;5515:34;5587:32;5633:34;5681:40;5485:246;;1234:27:69;;;-1:-1:-1;;;;;1234:27:69;;:::o;2022:28:59:-;;;-1:-1:-1;;;;;2022:28:59;;:::o;1168:25:69:-;;;-1:-1:-1;;;;;1168:25:69;;:::o;1049:19::-;;;-1:-1:-1;;;;;1049:19:69;;:::o;1108:20::-;;;-1:-1:-1;;;;;1108:20:69;;:::o;1224:49:66:-;;;-1:-1:-1;;;;;1224:49:66;;:::o;5929:1126:67:-;6184:12;;6207:34;;6184:58;;;;;-1:-1:-1;;;;;6184:12:67;;;;:22;;:58;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6184:58:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6184:58:67;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6184:58:67;;;;;;;;;6163:191;;;;-1:-1:-1;;;;;6163:191:67;;;;;;;;;;;;;;;;;6407:144;6461:23;:34;;;6509:23;:32;;;6407:40;:144::i;:::-;6659:4;;6677:44;;;;6735:34;;;;6783:40;;;;6598:235;;-1:-1:-1;;;;;6659:4:67;;6677:44;6735:34;6598:47;:235::i;:::-;6885:163;6944:23;:37;;;6995:23;:43;;;6885:45;:163::i;:::-;5929:1126;:::o;4759:1006::-;4938:16;5025:33;5075:23;:37;;;:44;5061:59;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5061:59:67;-1:-1:-1;5025:95:67;-1:-1:-1;5135:9:67;5130:595;5154:23;:37;;;:44;5150:1;:48;5130:595;;;5295:13;;5342:37;;;;:40;;5272:20;;-1:-1:-1;;;;;5295:13:67;;:29;;5380:1;;5342:40;;;;;;;;;;;;5400:10;5295:129;;;;;-1:-1:-1;;;5295:129:67;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5295:129:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5295:129:67;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5295:129:67;;;;;;;;;5272:152;;5500:24;5527:23;:43;;;5571:1;5527:46;;;;;;;;;;;;;;5500:73;;5680:34;5697:16;5680:12;:16;;:34;;;;:::i;:::-;5658:16;5675:1;5658:19;;;;;;;;;;;;;;;;;:56;-1:-1:-1;;5200:3:67;;5130:595;;;-1:-1:-1;5742:16:67;-1:-1:-1;4759:1006:67;;;;:::o;13528:2509:59:-;13749:9;13744:2287;13768:11;:18;13764:1;:22;13744:2287;;;13833:12;;13858:24;;13807:23;;-1:-1:-1;;;;;13833:12:59;;:24;;13858:21;;13880:1;;13858:24;;;;;;;;;;;;13833:50;;;;;-1:-1:-1;;;13833:50:59;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13833:50:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13833:50:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13833:50:59;;;;;;;;;13807:76;;13897:31;13931:11;13943:1;13931:14;;;;;;;;;;;;;;13897:48;;13959:32;13994:17;14012:1;13994:20;;;;;;;;;;;;;;;;;;14147:15;;:50;;-1:-1:-1;;;;;14147:50:59;;13994:20;;-1:-1:-1;14119:25:59;;-1:-1:-1;;;;;14147:15:59;;;;:25;;:50;;14173:23;;14147:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14147:50:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14147:50:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14147:50:59;;;;;;;;;14119:78;-1:-1:-1;;;;;;14215:31:59;;;14211:1810;;14381:130;14423:23;14469:24;14381:12;:130::i;:::-;14673:114;;;;;14644:26;;14673:12;;:22;;:114;;14717:17;;14764:4;;14673:114;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14673:114:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14673:114:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14673:114:59;;;;;;;;;15043:13;;14644:143;;-1:-1:-1;14895:285:59;;14945:17;;15002:4;;-1:-1:-1;;;;;15043:13:59;14644:143;14895:28;:285::i;:::-;15275:12;;:257;;;;;-1:-1:-1;;;;;15275:12:59;;;;:27;;:257;;15324:17;;15373:18;;15433:4;;15481:15;;15275:257;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15275:257:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15275:257:59;;;;14211:1810;;;;15694:12;;:312;;-1:-1:-1;;;;;15694:312:59;;-1:-1:-1;;;;;15694:12:59;;;;:27;;:312;;15751:4;;15816:15;;15878:23;;15943:24;;15694:312;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15694:312:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15694:312:59;;;;14211:1810;-1:-1:-1;;13788:3:59;;;;;-1:-1:-1;13744:2287:59;;-1:-1:-1;13744:2287:59;;;13528:2509;;;:::o;1829:2621:67:-;2047:23;;2127:2317;2149:10;:17;2134:12;:32;2127:2317;;;2241:50;;:::i;:::-;2294:113;2353:10;2381:12;2294:41;:113::i;:::-;2533:12;;2558:15;;2533:41;;;;;2241:166;;-1:-1:-1;2507:23:67;;-1:-1:-1;;;;;2533:12:67;;;;:24;;:41;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2533:41:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2533:41:67;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2533:41:67;;;;;;;;;2507:67;-1:-1:-1;;;;;;2667:29:67;;2642:165;;;;-1:-1:-1;;;;;2642:165:67;;;;;;;;;2881:24;2908:40;2929:1;2932:6;:15;;;2908:40;;:20;:40::i;:::-;2881:67;-1:-1:-1;2988:34:67;;;2987:41;2962:164;;;;-1:-1:-1;;;;;2962:164:67;;;;;;;;;3191:26;3220:109;3269:46;:44;:46::i;:::-;3220:27;;;;;:109;:31;:109;:::i;:::-;3191:138;;3451:21;3475:143;3528:10;3556:12;3586:18;3475:35;:143::i;:::-;3451:167;;3710:57;;:::i;:::-;-1:-1:-1;3770:136:67;;;;;;;;;3834:10;3770:136;;;3874:17;;;;3770:136;;;;;;-1:-1:-1;4044:4:67;3991:160;;-1:-1:-1;;;;;4044:4:67;3770:136;4096:15;4129:8;3991:35;:160::i;:::-;4246:36;:12;4263:18;4246:36;:16;:36;:::i;:::-;4231:51;-1:-1:-1;4396:37:67;:15;4416:16;4396:37;:19;:37;:::i;:::-;4378:55;;2127:2317;;;;;;;;4439:809:68;4730:6;4708:12;4835:407;4859:14;:21;4855:1;:25;4835:407;;;4901:18;4922:5;-1:-1:-1;;;;;4922:21:68;;4961:14;4976:1;4961:17;;;;;;;;;;;;;;4996:12;4922:100;;;;;-1:-1:-1;;;4922:100:68;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4922:100:68;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4922:100:68;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4922:100:68;;;;;;;;;4901:121;;5076:17;5094:1;5076:20;;;;;;;;;;;;;;5062:10;:34;;5037:194;;;;-1:-1:-1;;;;;5037:194:68;;;;;;;;;-1:-1:-1;4882:3:68;;4835:407;;;;4439:809;;;;;:::o;20059:2280:59:-;20167:34;20214:11;-1:-1:-1;;;;;20204:36:59;;:38;;;;;-1:-1:-1;;;20204:38:59;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20204:38:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20204:38:59;;;;;;39:16:-1;36:1;17:17;2:54;101:4;20204:38:59;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;20204:38:59;;;;;;;;;20167:75;-1:-1:-1;20257:9:59;20252:2081;20276:17;:24;20272:1;:28;20252:2081;;;20321:31;20355:17;20373:1;20355:20;;;;;;;;;;;;;;;;;;20424:13;;:69;;;;;20355:20;;-1:-1:-1;20389:32:59;;-1:-1:-1;;;;;20424:13:59;;;;:29;;:69;;20355:20;;20487:4;;20424:69;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20424:69:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20424:69:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20424:69:59;;;;;;;;;20389:104;-1:-1:-1;20610:28:59;;20606:1717;;20686:15;;:50;;-1:-1:-1;;;;;20686:50:59;;20658:25;;-1:-1:-1;;;;;20686:15:59;;:25;;:50;;20712:23;;20686:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20686:50:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20686:50:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20686:50:59;;;;;;;;;20658:78;-1:-1:-1;;;;;;20758:31:59;;;20754:1555;;20925:142;20971:23;21021:24;20925:12;:142::i;:::-;21193:126;;;;;21164:26;;21193:12;;:22;;:126;;21241:17;;21292:4;;21193:126;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21193:126:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21193:126:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;21193:126:59;;;;;;;;;21561:13;;21164:155;;-1:-1:-1;21425:215:59;;21479:17;;21530:4;;-1:-1:-1;;;;;21561:13:59;21164:155;21425:28;:215::i;:::-;21727:12;;:211;;;;;-1:-1:-1;;;;;21727:12:59;;;;:27;;:211;;21780:17;;21823:18;;21875:4;;21906:10;;21727:211;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21727:211:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21727:211:59;;;;20754:1555;;;;22067:12;;:223;;-1:-1:-1;;;;;22067:223:59;;-1:-1:-1;;;;;22067:12:59;;;;:27;;:223;;22128:4;;22159:10;;22195:23;;22244:24;;22067:223;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22067:223:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22067:223:59;;;;20754:1555;20606:1717;;-1:-1:-1;;20302:3:59;;20252:2081;;19119:710;19334:9;19329:494;19353:11;:18;19349:1;:22;19329:494;;;19503:12;;19528:24;;19477:23;;-1:-1:-1;;;;;19503:12:59;;:24;;19528:21;;19550:1;;19528:24;;;;;;;;;;;;19503:50;;;;;-1:-1:-1;;;19503:50:59;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19503:50:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19503:50:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19503:50:59;;;;;;;;;19640:12;;19685:14;;19477:76;;-1:-1:-1;;;;;;19640:12:59;;:27;;19685:11;;19697:1;;19685:14;;;;;;;;;;;;19717:17;19735:1;19717:20;;;;;;;;;;;;;;19755:10;19783:15;19640:172;;;;;-1:-1:-1;;;19640:172:59;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19640:172:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;19373:3:59;;;;;-1:-1:-1;19329:494:59;;-1:-1:-1;;19329:494:59;8957:1462;9130:9;9125:1288;9149:14;:21;9145:1;:25;9125:1288;;;9191:31;9225:14;9240:1;9225:17;;;;;;;;;;;;;;9191:51;;9256:32;9291:20;9312:1;9291:23;;;;;;;;;;;;;;;;;;9443:15;;:50;;-1:-1:-1;;;;;9443:50:59;;9291:23;;-1:-1:-1;9415:25:59;;-1:-1:-1;;;;;9443:15:59;;;;:25;;:50;;9469:23;;9443:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9443:50:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9443:50:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9443:50:59;;;;;;;;;9415:78;-1:-1:-1;;;;;;9511:31:59;;;9507:896;;9562:22;9595:23;9562:57;;9755:20;9778:14;-1:-1:-1;;;;;9778:34:59;;:36;;;;;-1:-1:-1;;;9778:36:59;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9778:36:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9778:36:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9778:36:59;;;;;;;;;9755:59;;9832:26;9861:79;9901:24;9927:12;9861:39;:79::i;:::-;10048:12;;:191;;-1:-1:-1;;;;;10048:191:59;;9832:108;;-1:-1:-1;;;;;;10048:12:59;;:27;;:191;;10097:10;;10137:4;;10164:17;;9832:108;;10048:191;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10048:191:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10048:191:59;;;;10323:65;10334:14;10350:17;10369:18;10323:10;:65::i;:::-;9507:896;;;;-1:-1:-1;;;9172:3:59;;9125:1288;;10687:2421;10842:17;10872:11;10842:42;;10895:34;10932:7;-1:-1:-1;;;;;10932:21:59;;:23;;;;;-1:-1:-1;;;10932:23:59;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10932:23:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10932:23:59;;;;;;39:16:-1;36:1;17:17;2:54;101:4;10932:23:59;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;10932:23:59;;;;;;;;;10895:60;;10965:29;10997:7;-1:-1:-1;;;;;10997:16:59;;:18;;;;;-1:-1:-1;;;10997:18:59;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10997:18:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10997:18:59;;;;;;39:16:-1;36:1;17:17;2:54;101:4;10997:18:59;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;10997:18:59;;;;;;;;;10965:50;;11025:26;11054:7;-1:-1:-1;;;;;11054:19:59;;:21;;;;;-1:-1:-1;;;11054:21:59;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11054:21:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11054:21:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11054:21:59;;;;;;;;;11025:50;-1:-1:-1;11240:30:59;11273:33;:9;11025:50;11273:33;:13;:33;:::i;:::-;11240:66;-1:-1:-1;11322:9:59;11317:1785;11341:17;:24;11337:1;:28;11317:1785;;;11386:31;11420:17;11438:1;11420:20;;;;;;;;;;;;;;;;;;11549:13;;:66;;;;;11420:20;;-1:-1:-1;11514:32:59;;-1:-1:-1;;;;;11549:13:59;;;;:29;;:66;;11420:20;;11604:10;;11549:66;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11549:66:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11549:66:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11549:66:59;;;;;;;;;11514:101;;11687:24;11714:43;11741:12;11754:1;11741:15;;;;;;;;;;;;;;11714:22;:26;;:43;;;;:::i;:::-;11959:15;;:50;;-1:-1:-1;;;;;11959:50:59;;11687:70;;-1:-1:-1;11931:25:59;;-1:-1:-1;;;;;11959:15:59;;;;:25;;:50;;11985:23;;11959:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11959:50:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11959:50:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11959:50:59;;;;;;;;;11931:78;-1:-1:-1;;;;;;12027:31:59;;;;;;:78;;;12089:16;12062:24;:43;12027:78;12023:1069;;;12202:22;12246:24;12227:16;:43;12202:68;;12289:22;12322:23;12289:57;;12482:20;12505:14;-1:-1:-1;;;;;12505:34:59;;:36;;;;;-1:-1:-1;;;12505:36:59;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12505:36:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12505:36:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12505:36:59;;;;;;;;;12482:59;;12559:26;12588:69;12628:14;12644:12;12588:39;:69::i;:::-;12737:12;;:191;;;;;12559:98;;-1:-1:-1;;;;;;12737:12:59;;:27;;:191;;12786:17;;12559:98;;12865:10;;12905:4;;12737:191;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12737:191:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12737:191:59;;;;13012:65;13023:14;13039:17;13058:18;13012:10;:65::i;:::-;12023:1069;;;;;-1:-1:-1;;11367:3:59;;;;;-1:-1:-1;11317:1785:59;;-1:-1:-1;11317:1785:59;;;10687:2421;;;;;;;:::o;1802:578:68:-;2017:1;2005:9;:13;1984:127;;;;-1:-1:-1;;;;;1984:127:68;;;;;;;;;2215:44;2239:4;-1:-1:-1;;;;;2229:27:68;;:29;;;;;-1:-1:-1;;;2229:29:68;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2229:29:68;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2229:29:68;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2229:29:68;;;;;;;;;2215:9;;:44;:13;:44;:::i;:::-;:49;2194:179;;;;-1:-1:-1;;;;;2194:179:68;;;;;;;;;1802:578;;:::o;5820:1260::-;6096:1;6075:11;:18;:22;6054:153;;;;-1:-1:-1;;;;;6054:153:68;;;;;;;;;6271:11;:18;6239:21;:28;:50;:113;;;;;6328:17;:24;6306:11;:18;:46;6239:113;6218:253;;;;-1:-1:-1;;;;;6218:253:68;;;;;;;;;6501:5;6482:10;6518:556;6542:21;:28;6538:1;:32;6518:556;;;6719:1;-1:-1:-1;;;;;6665:56:68;:4;-1:-1:-1;;;;;6665:16:68;;6682:21;6704:1;6682:24;;;;;;;;;;;;;;6665:42;;;;;-1:-1:-1;;;6665:42:68;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6665:42:68;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6665:42:68;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6665:42:68;;;;;;;;;-1:-1:-1;;;;;6665:56:68;;;6640:186;;;;-1:-1:-1;;;;;6640:186:68;;;;;;;;;6950:1;6927:17;6945:1;6927:20;;;;;;;;;;;;;;:24;6902:161;;;;-1:-1:-1;;;;;6902:161:68;;;;;;;;;6572:3;;6518:556;;2735:1284;2933:21;;3046:22;3025:148;;;;-1:-1:-1;;;;;3025:148:68;;;;;;;;;3261:29;:14;:27;:29::i;:::-;3260:30;3239:163;;;;-1:-1:-1;;;;;3239:163:68;;;;;;;;;3545:20;:27;3523:18;:49;3502:190;;;;-1:-1:-1;;;;;3502:190:68;;;;;;;;;3708:9;3703:310;3727:18;3723:1;:22;3703:310;;;3886:1;3860:20;3881:1;3860:23;;;;;;;;;;;;;;:27;3835:167;;;;-1:-1:-1;;;;;3835:167:68;;;;;;;;;3747:3;;3703:310;;1439:145:166;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;;1576:1;-1:-1:-1;1439:145:166;;;;;:::o;17942:683:59:-;18147:12;;:224;;-1:-1:-1;;;;;18147:224:59;;-1:-1:-1;;;;;18147:12:59;;;;:27;;:224;;18196:4;;;;18289:7;;18328:15;;18147:224;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18147:224:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;18446:31:59;;;;;18421:22;;-1:-1:-1;;;;;;18446:14:59;;;-1:-1:-1;18446:14:59;;:31;;18461:15;;18446:31;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18446:31:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18446:31:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18446:31:59;;;;;;;;;18421:56;-1:-1:-1;18508:19:59;;18487:131;;;;-1:-1:-1;;;;;18487:131:59;;;;;;;;4766:412:118;4929:24;4956:35;4966:6;4974;4982:8;4956:9;:35::i;:::-;4929:62;;5024:9;5005:16;:28;5001:171;;;5049:112;5074:6;5098:8;5124:23;:21;:23::i;:::-;5049:7;:112::i;:::-;4766:412;;;;;:::o;1708:606:40:-;1848:21;;:::i;:::-;1885:28;;:::i;:::-;1924:23;1950:40;1982:7;1950:27;:10;:25;:27::i;:::-;:31;:40;:31;:40;:::i;:::-;2048:22;;2024:47;;2158:2;2137:24;;;2131:31;2114:15;;;2107:56;2243:2;2222:24;;;2216:31;2199:15;;;2192:56;-1:-1:-1;2024:47:40;1708:606;-1:-1:-1;;;1708:606:40:o;1995:416:176:-;2107:7;2142:1;2138;:5;2130:14;;;;;;2172:1;2155:14;2183:198;2207:3;2203:1;:7;2183:198;;;2255:6;2349:21;2255:6;2368:1;2349:21;:18;:21;:::i;:::-;2340:30;-1:-1:-1;;2212:3:176;;2183:198;;;-1:-1:-1;2398:6:176;1995:416;-1:-1:-1;;;1995:416:176:o;1219:129:40:-;1338:2;1219:129;:::o;2760:419::-;2937:12;2965:21;2989:157;3017:10;3041:43;3059:24;:22;:24::i;:::-;3041:13;;:43;:17;:43;:::i;:::-;3098:38;:13;3116:19;3098:38;:17;:38;:::i;:::-;2989:14;:157::i;:::-;2965:181;-1:-1:-1;;2760:419:40;;;;;;:::o;3146:687:41:-;3387:63;;:::i;:::-;3453:103;;;;;-1:-1:-1;;;;;3453:43:41;;;;;:103;;3510:13;;3537:9;;3453:103;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3453:103:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3453:103:41;;;;;;39:16:-1;36:1;17:17;2:54;101:4;3453:103:41;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;3453:103:41;;;;;;;;;3704:20;;3738:29;;3781:35;;;;3629:197;;;;;3387:169;;-1:-1:-1;;;;;;3629:31:41;;;;;:197;;3674:16;;3704:20;;3738:29;;3781:35;3629:197;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3629:197:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3629:197:41;;;;3146:687;;;;;:::o;1322:450:178:-;1466:7;;1613:38;:13;1631:19;1613:38;:17;:38;:::i;:::-;1601:50;;1661:9;1673:24;:22;:24::i;:::-;1661:36;;1741:24;1760:1;1763;1741:18;:24::i;:::-;1734:31;1322:450;-1:-1:-1;;;;;1322:450:178:o;16327:1381:59:-;16560:160;16602:18;16642:4;16669:7;16691:19;16560:28;:160::i;:::-;16794:33;;;;;16771:20;;-1:-1:-1;;;;;16794:12:59;;;;;:33;;16807:19;;16794:33;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16794:33:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16794:33:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;16794:33:59;;;;;;;;;16771:56;-1:-1:-1;16858:17:59;;16837:125;;;;-1:-1:-1;;;;;16837:125:59;;;;;;;;;17095:89;;;;;17070:22;;17095:12;;:22;;:89;;17139:7;;17169:4;;17095:89;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17095:89:59;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17095:89:59;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;17095:89:59;;;;;;;;;17422:13;;17070:114;;-1:-1:-1;17323:150:59;;17373:7;;17403:4;;-1:-1:-1;;;;;17422:13:59;17070:114;17323:28;:150::i;:::-;17556:12;;:145;;;;;-1:-1:-1;;;;;17556:12:59;;;;:26;;:145;;17604:4;;17623:10;;17655:7;;17677:14;;17556:145;;;;782:296:166;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;;782:296;-1:-1:-1;;;;782:296:166:o;231:421::-;289:7;529:6;525:45;;-1:-1:-1;558:1:166;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;1739:121;1797:7;1824:6;1816:15;;;;;;1852:1;1848;:5;;;;;;;1739:121;-1:-1:-1;;;1739:121:166:o;6035:387:172:-;6100:4;6120:1;:8;6132:1;6120:13;6116:57;;;-1:-1:-1;6157:5:172;6150:12;;6116:57;6187:9;6182:212;6217:1;6206;:8;:12;6202:1;:16;6182:212;;;6260:1;6256:5;;6239:145;6267:1;:8;6263:1;:12;6239:145;;;6312:1;6314;6312:4;;;;;;;;;;;;;;-1:-1:-1;;;;;6304:12:172;:1;6306;6304:4;;;;;;;;;;;;;;-1:-1:-1;;;;;6304:12:172;;6300:70;;;6347:4;6340:11;;;;;;6300:70;6277:3;;6239:145;;;-1:-1:-1;6220:3:172;;6182:212;;;-1:-1:-1;6410:5:172;;6035:387;-1:-1:-1;;6035:387:172:o;1953:225:118:-;2129:42;;;;;2099:7;;-1:-1:-1;;;;;2129:24:118;;;;;:42;;2154:6;;2162:8;;2129:42;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2129:42:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2129:42:118;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2129:42:118;;;;;;;;;2122:49;1953:225;-1:-1:-1;;;;1953:225:118:o;1220:118:176:-;-1:-1:-1;;1220:118:176;:::o;4042:342:118:-;4173:43;;;;;-1:-1:-1;;;;;4173:22:118;;;;;:43;;4196:8;;4206:9;;4173:43;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4173:43:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4173:43:118;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4173:43:118;;;;;;;;;;4299:14;:12;:14::i;:::-;4278:99;;;;-1:-1:-1;;;;;4278:99:118;;;;;;;;848:228:113;1027:2;1016:14;;848:228::o;7313:673::-;7417:19;7481:2;7473:4;:10;;7452:83;;;;-1:-1:-1;;;;;7452:83:113;;;;;;;;;7675:1;:8;7669:2;:14;;7545:192;;;;-1:-1:-1;;;;;7545:192:113;;;;;;;;;7830:4;7825:2;:9;7815:20;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;7815:20:113;87:34:-1;135:17;;-1:-1;7815:20:113;;7806:29;;7845:111;7866:23;:6;:21;:23::i;:::-;7924:4;7903:18;:1;:16;:18::i;:::-;:25;7942:6;:13;7845:7;:111::i;964:119:176:-;798:8;964:119;:::o;2513:163::-;2598:7;;2628:8;:1;2634;2628:8;:5;:8;:::i;:::-;:12;:41;;2661:8;:1;2667;2661:8;:5;:8;:::i;:::-;2628:41;;;2643:15;2656:1;2643:8;:1;2649;2643:8;:5;:8;:::i;5392:852:118:-;5467:4;;5651:14;5728:57;;;;5837:4;5832:220;;;;5644:497;;5728:57;5770:1;5755:16;;5728:57;;5832:220;5937:4;5932:3;5927;5912:30;6034:3;6028:10;6013:25;;5644:497;-1:-1:-1;6236:1:118;6221:16;;-1:-1:-1;5392:852:118;:::o;2838:4167:113:-;2988:2;2979:6;:11;2975:4024;;;3277:1;3267:6;3263:2;3259:15;3254:3;3250:25;3246:33;3328:4;3324:9;3315:6;3309:13;3305:29;3377:4;3370;3364:11;3360:22;3418:1;3415;3412:8;3406:4;3399:22;3216:219;;;;;;3539:4;3529:6;:14;3525:59;;;3563:7;;3525:59;4273:4;4264:6;:13;4260:2729;;;4599:2;4591:6;4587:15;4577:25;;4647:6;4639;4635:19;4697:6;4691:4;4687:17;5004:4;4998:11;5207:198;5225:4;5217:6;5214:16;5207:198;;;5273:13;;5260:27;;5334:2;5370:13;;;;5322:15;;;;5207:198;;;5474:18;;-1:-1:-1;4306:1204:113;;;5755:2;5747:6;5743:15;5733:25;;5803:6;5795;5791:19;5853:6;5847:4;5843:17;6163:6;6157:13;6677:191;6694:4;6688;6684:15;6677:191;;;6742:11;;6729:25;;-1:-1:-1;;6787:13:113;;;;6833;;;;6677:191;;;6938:19;;-1:-1:-1;;2838:4167:113;;;:::o;1807:20534:59:-;;;;;;;;;-1:-1:-1;1807:20534:59;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;1807:20534:59;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;130:122;;208:39;239:6;233:13;208:39;;277:699;;390:3;383:4;375:6;371:17;367:27;357:2;;408:1;405;398:12;357:2;445:6;432:20;467:76;482:60;535:6;482:60;;;467:76;;;458:85;;560:5;585:6;578:5;571:21;615:4;607:6;603:17;593:27;;637:4;632:3;628:14;621:21;;690:6;737:3;729:4;721:6;717:17;712:3;708:27;705:36;702:2;;;754:1;751;744:12;702:2;779:1;764:206;789:6;786:1;783:13;764:206;;;847:3;869:37;902:3;890:10;869:37;;;857:50;;-1:-1;930:4;921:14;;;;949;;;;;811:1;804:9;764:206;;;768:14;350:626;;;;;;;;1002:714;;1126:3;1119:4;1111:6;1107:17;1103:27;1093:2;;1144:1;1141;1134:12;1093:2;1174:6;1168:13;1196:76;1211:60;1264:6;1211:60;;1196:76;1187:85;;1289:5;1314:6;1307:5;1300:21;1344:4;1336:6;1332:17;1322:27;;1366:4;1361:3;1357:14;1350:21;;1419:6;1466:3;1458:4;1450:6;1446:17;1441:3;1437:27;1434:36;1431:2;;;1483:1;1480;1473:12;1431:2;1508:1;1493:217;1518:6;1515:1;1512:13;1493:217;;;1576:3;1598:48;1642:3;1630:10;1598:48;;;1586:61;;-1:-1;1670:4;1661:14;;;;1689;;;;;1540:1;1533:9;1493:217;;1742:722;;1870:3;1863:4;1855:6;1851:17;1847:27;1837:2;;1888:1;1885;1878:12;1837:2;1918:6;1912:13;1940:80;1955:64;2012:6;1955:64;;1940:80;1931:89;;2037:5;2062:6;2055:5;2048:21;2092:4;2084:6;2080:17;2070:27;;2114:4;2109:3;2105:14;2098:21;;2167:6;2214:3;2206:4;2198:6;2194:17;2189:3;2185:27;2182:36;2179:2;;;2231:1;2228;2221:12;2179:2;2256:1;2241:217;2266:6;2263:1;2260:13;2241:217;;;2324:3;2346:48;2390:3;2378:10;2346:48;;;2334:61;;-1:-1;2418:4;2409:14;;;;2437;;;;;2288:1;2281:9;2241:217;;2490:699;;2603:3;2596:4;2588:6;2584:17;2580:27;2570:2;;2621:1;2618;2611:12;2570:2;2658:6;2645:20;2680:76;2695:60;2748:6;2695:60;;2680:76;2671:85;;2773:5;2798:6;2791:5;2784:21;2828:4;2820:6;2816:17;2806:27;;2850:4;2845:3;2841:14;2834:21;;2903:6;2950:3;2942:4;2934:6;2930:17;2925:3;2921:27;2918:36;2915:2;;;2967:1;2964;2957:12;2915:2;2992:1;2977:206;3002:6;2999:1;2996:13;2977:206;;;3060:3;3082:37;3115:3;3103:10;3082:37;;;3070:50;;-1:-1;3143:4;3134:14;;;;3162;;;;;3024:1;3017:9;2977:206;;3215:714;;3339:3;3332:4;3324:6;3320:17;3316:27;3306:2;;3357:1;3354;3347:12;3306:2;3387:6;3381:13;3409:76;3424:60;3477:6;3424:60;;3409:76;3400:85;;3502:5;3527:6;3520:5;3513:21;3557:4;3549:6;3545:17;3535:27;;3579:4;3574:3;3570:14;3563:21;;3632:6;3679:3;3671:4;3663:6;3659:17;3654:3;3650:27;3647:36;3644:2;;;3696:1;3693;3686:12;3644:2;3721:1;3706:217;3731:6;3728:1;3725:13;3706:217;;;3789:3;3811:48;3855:3;3843:10;3811:48;;;3799:61;;-1:-1;3883:4;3874:14;;;;3902;;;;;3753:1;3746:9;3706:217;;3955:722;;4083:3;4076:4;4068:6;4064:17;4060:27;4050:2;;4101:1;4098;4091:12;4050:2;4131:6;4125:13;4153:80;4168:64;4225:6;4168:64;;4153:80;4144:89;;4250:5;4275:6;4268:5;4261:21;4305:4;4297:6;4293:17;4283:27;;4327:4;4322:3;4318:14;4311:21;;4380:6;4427:3;4419:4;4411:6;4407:17;4402:3;4398:27;4395:36;4392:2;;;4444:1;4441;4434:12;4392:2;4469:1;4454:217;4479:6;4476:1;4473:13;4454:217;;;4537:3;4559:48;4603:3;4591:10;4559:48;;;4547:61;;-1:-1;4631:4;4622:14;;;;4650;;;;;4501:1;4494:9;4454:217;;4701:693;;4812:3;4805:4;4797:6;4793:17;4789:27;4779:2;;4830:1;4827;4820:12;4779:2;4867:6;4854:20;4889:74;4904:58;4955:6;4904:58;;4889:74;4880:83;;4980:5;5005:6;4998:5;4991:21;5035:4;5027:6;5023:17;5013:27;;5057:4;5052:3;5048:14;5041:21;;5110:6;5157:3;5149:4;5141:6;5137:17;5132:3;5128:27;5125:36;5122:2;;;5174:1;5171;5164:12;5122:2;5199:1;5184:204;5209:6;5206:1;5203:13;5184:204;;;5267:3;5289:35;5320:3;5308:10;5289:35;;;5277:48;;-1:-1;5348:4;5339:14;;;;5367;;;;;5231:1;5224:9;5184:204;;5402:116;;5477:36;5505:6;5499:13;5477:36;;5526:440;;5627:3;5620:4;5612:6;5608:17;5604:27;5594:2;;5645:1;5642;5635:12;5594:2;5682:6;5669:20;5704:64;5719:48;5760:6;5719:48;;5704:64;5695:73;;5788:6;5781:5;5774:21;5824:4;5816:6;5812:17;5857:4;5850:5;5846:16;5892:3;5883:6;5878:3;5874:16;5871:25;5868:2;;;5909:1;5906;5899:12;5868:2;5919:41;5953:6;5948:3;5943;5919:41;;;5587:379;;;;;;;;6034:1806;;6164:4;6152:9;6147:3;6143:19;6139:30;6136:2;;;6182:1;6179;6172:12;6136:2;6200:20;6215:4;6200:20;;;6191:29;-1:-1;6276:1;6307:49;6352:3;6332:9;6307:49;;;6283:74;;-1:-1;6422:2;6455:49;6500:3;6476:22;;;6455:49;;;6448:4;6441:5;6437:16;6430:75;6378:138;6610:2;6599:9;6595:18;6582:32;6634:18;6626:6;6623:30;6620:2;;;6666:1;6663;6656:12;6620:2;6701:68;6765:3;6756:6;6745:9;6741:22;6701:68;;;6694:4;6687:5;6683:16;6676:94;6526:255;6865:2;6854:9;6850:18;6837:32;6889:18;6881:6;6878:30;6875:2;;;6921:1;6918;6911:12;6875:2;6956:70;7022:3;7013:6;7002:9;6998:22;6956:70;;;6949:4;6942:5;6938:16;6931:96;6791:247;7128:3;7117:9;7113:19;7100:33;7153:18;7145:6;7142:30;7139:2;;;7185:1;7182;7175:12;7139:2;7220:70;7286:3;7277:6;7266:9;7262:22;7220:70;;;7213:4;7206:5;7202:16;7195:96;7048:254;7389:3;7378:9;7374:19;7361:33;7414:18;7406:6;7403:30;7400:2;;;7446:1;7443;7436:12;7400:2;7481:70;7547:3;7538:6;7527:9;7523:22;7481:70;;;7474:4;7467:5;7463:16;7456:96;7312:251;7656:3;7645:9;7641:19;7628:33;7681:18;7673:6;7670:30;7667:2;;;7713:1;7710;7703:12;7667:2;7748:70;7814:3;7805:6;7794:9;7790:22;7748:70;;;7741:4;7734:5;7730:16;7723:96;7573:257;6130:1710;;;;;7901:731;;8034:4;8022:9;8017:3;8013:19;8009:30;8006:2;;;8052:1;8049;8042:12;8006:2;8070:20;8085:4;8070:20;;;8149:24;;8061:29;;-1:-1;8193:18;8182:30;;8179:2;;;8225:1;8222;8215:12;8179:2;8259:81;8336:3;8327:6;8316:9;8312:22;8259:81;;;8235:106;;-1:-1;8438:2;8423:18;;8417:25;8462:18;8451:30;;8448:2;;;8494:1;8491;8484:12;8448:2;8529:81;8606:3;8597:6;8586:9;8582:22;8529:81;;;8522:4;8515:5;8511:16;8504:107;8362:260;8000:632;;;;;8639:118;;8706:46;8744:6;8731:20;8706:46;;8764:122;;8842:39;8873:6;8867:13;8842:39;;8893:114;;8958:44;8994:6;8981:20;8958:44;;9014:263;;9129:2;9117:9;9108:7;9104:23;9100:32;9097:2;;;9145:1;9142;9135:12;9097:2;9180:1;9197:64;9253:7;9233:9;9197:64;;9284:392;;9424:2;9412:9;9403:7;9399:23;9395:32;9392:2;;;9440:1;9437;9430:12;9392:2;9475:24;;9519:18;9508:30;;9505:2;;;9551:1;9548;9541:12;9505:2;9571:89;9652:7;9643:6;9632:9;9628:22;9571:89;;9683:392;;9823:2;9811:9;9802:7;9798:23;9794:32;9791:2;;;9839:1;9836;9829:12;9791:2;9874:24;;9918:18;9907:30;;9904:2;;;9950:1;9947;9940:12;9904:2;9970:89;10051:7;10042:6;10031:9;10027:22;9970:89;;10082:257;;10194:2;10182:9;10173:7;10169:23;10165:32;10162:2;;;10210:1;10207;10200:12;10162:2;10245:1;10262:61;10315:7;10295:9;10262:61;;10346:638;;;10517:2;10505:9;10496:7;10492:23;10488:32;10485:2;;;10533:1;10530;10523:12;10485:2;10568:31;;10619:18;10608:30;;10605:2;;;10651:1;10648;10641:12;10605:2;10671:94;10757:7;10748:6;10737:9;10733:22;10671:94;;;10661:104;;10547:224;10830:2;10819:9;10815:18;10802:32;10854:18;10846:6;10843:30;10840:2;;;10886:1;10883;10876:12;10840:2;10906:62;10960:7;10951:6;10940:9;10936:22;10906:62;;;10896:72;;10781:193;10479:505;;;;;;10991:408;;11139:2;11127:9;11118:7;11114:23;11110:32;11107:2;;;11155:1;11152;11145:12;11107:2;11190:24;;11234:18;11223:30;;11220:2;;;11266:1;11263;11256:12;11220:2;11286:97;11375:7;11366:6;11355:9;11351:22;11286:97;;11406:263;;11521:2;11509:9;11500:7;11496:23;11492:32;11489:2;;;11537:1;11534;11527:12;11489:2;11572:1;11589:64;11645:7;11625:9;11589:64;;11677:173;;11764:46;11806:3;11798:6;11764:46;;;-1:-1;;11839:4;11830:14;;11757:93;12057:173;;12144:46;12186:3;12178:6;12144:46;;12238:142;12329:45;12368:5;12329:45;;;12324:3;12317:58;12311:69;;;12387:110;12460:31;12485:5;12460:31;;12922:605;;13063:50;13107:5;13063:50;;;13126:86;13205:6;13200:3;13126:86;;;13119:93;;13232:52;13278:5;13232:52;;;13305:1;13290:215;13315:6;13312:1;13309:13;13290:215;;;13362:63;13421:3;13412:6;13406:13;13362:63;;;13355:70;;13442:56;13491:6;13442:56;;;13432:66;-1:-1;13337:1;13330:9;13290:215;;;-1:-1;13518:3;;13042:485;-1:-1;;;;13042:485;13566:629;;13715:50;13759:5;13715:50;;;13778:94;13865:6;13860:3;13778:94;;;13771:101;;13892:52;13938:5;13892:52;;;13965:1;13950:223;13975:6;13972:1;13969:13;13950:223;;;14022:71;14089:3;14080:6;14074:13;14022:71;;;14015:78;;14110:56;14159:6;14110:56;;;14100:66;-1:-1;13997:1;13990:9;13950:223;;14234:605;;14375:50;14419:5;14375:50;;;14438:86;14517:6;14512:3;14438:86;;;14431:93;;14544:52;14590:5;14544:52;;;14617:1;14602:215;14627:6;14624:1;14621:13;14602:215;;;14674:63;14733:3;14724:6;14718:13;14674:63;;;14667:70;;14754:56;14803:6;14754:56;;;14744:66;-1:-1;14649:1;14642:9;14602:215;;14847:343;;14957:38;14989:5;14957:38;;;15007:70;15070:6;15065:3;15007:70;;;15000:77;;15082:52;15127:6;15122:3;15115:4;15108:5;15104:16;15082:52;;;15155:29;15177:6;15155:29;;;15146:39;;;;14937:253;-1:-1;;;14937:253;15197:196;15315:72;15381:5;15315:72;;15725:566;;15885:67;15949:2;15944:3;15885:67;;;15985:66;15965:87;;16086:66;16081:2;16072:12;;16065:88;16187:66;16182:2;16173:12;;16166:88;16282:2;16273:12;;15871:420;-1:-1;;15871:420;16300:669;;16460:68;16524:3;16519;16460:68;;;-1:-1;;;;;;;;;;;16541:87;;16662:66;16657:2;16648:12;;16641:88;16763:66;16758:2;16749:12;;16742:88;16864:66;16859:2;16850:12;;16843:88;16959:3;16950:13;;16446:523;-1:-1;;16446:523;16978:364;;17138:67;17202:2;17197:3;17138:67;;;17238:66;17218:87;;17333:2;17324:12;;17124:218;-1:-1;;17124:218;17351:364;;17511:67;17575:2;17570:3;17511:67;;;17611:66;17591:87;;17706:2;17697:12;;17497:218;-1:-1;;17497:218;17724:566;;17884:67;17948:2;17943:3;17884:67;;;-1:-1;;;;;;;;;;;17964:87;;18085:66;18080:2;18071:12;;18064:88;18186:66;18181:2;18172:12;;18165:88;18281:2;18272:12;;17870:420;-1:-1;;17870:420;18299:566;;18459:67;18523:2;18518:3;18459:67;;;-1:-1;;;;;;;;;;;18539:87;;18660:66;18655:2;18646:12;;18639:88;18761:66;18756:2;18747:12;;18740:88;18856:2;18847:12;;18445:420;-1:-1;;18445:420;18874:566;;19034:67;19098:2;19093:3;19034:67;;;-1:-1;;;;;;;;;;;19114:87;;19235:66;19230:2;19221:12;;19214:88;19336:66;19331:2;19322:12;;19315:88;19431:2;19422:12;;19020:420;-1:-1;;19020:420;19449:465;;19609:67;19673:2;19668:3;19609:67;;;19709:66;19689:87;;19810:66;19805:2;19796:12;;19789:88;19905:2;19896:12;;19595:319;-1:-1;;19595:319;19923:465;;20083:67;20147:2;20142:3;20083:67;;;20183:66;20163:87;;20284:66;20279:2;20270:12;;20263:88;20379:2;20370:12;;20069:319;-1:-1;;20069:319;20397:566;;20557:67;20621:2;20616:3;20557:67;;;-1:-1;;;;;;;;;;;20637:87;;20758:66;20753:2;20744:12;;20737:88;20859:66;20854:2;20845:12;;20838:88;20954:2;20945:12;;20543:420;-1:-1;;20543:420;20972:566;;21132:67;21196:2;21191:3;21132:67;;;-1:-1;;;;;;;;;;;21212:87;;21333:66;21328:2;21319:12;;21312:88;21434:66;21429:2;21420:12;;21413:88;21529:2;21520:12;;21118:420;-1:-1;;21118:420;21547:566;;21707:67;21771:2;21766:3;21707:67;;;21807:66;21787:87;;21908:66;21903:2;21894:12;;21887:88;22009:66;22004:2;21995:12;;21988:88;22104:2;22095:12;;21693:420;-1:-1;;21693:420;22122:566;;22282:67;22346:2;22341:3;22282:67;;;-1:-1;;;;;;;;;;;22362:87;;22483:66;22478:2;22469:12;;22462:88;22584:66;22579:2;22570:12;;22563:88;22679:2;22670:12;;22268:420;-1:-1;;22268:420;22697:566;;22857:67;22921:2;22916:3;22857:67;;;-1:-1;;;;;;;;;;;22937:87;;23058:66;23053:2;23044:12;;23037:88;23159:66;23154:2;23145:12;;23138:88;23254:2;23245:12;;22843:420;-1:-1;;22843:420;23272:566;;23432:67;23496:2;23491:3;23432:67;;;-1:-1;;;;;;;;;;;23512:87;;23633:66;23628:2;23619:12;;23612:88;23734:66;23729:2;23720:12;;23713:88;23829:2;23820:12;;23418:420;-1:-1;;23418:420;23847:566;;24007:67;24071:2;24066:3;24007:67;;;-1:-1;;;;;;;;;;;24087:87;;24208:66;24203:2;24194:12;;24187:88;24309:66;24304:2;24295:12;;24288:88;24404:2;24395:12;;23993:420;-1:-1;;23993:420;24422:566;;24582:67;24646:2;24641:3;24582:67;;;24682:66;24662:87;;24783:66;24778:2;24769:12;;24762:88;24884:66;24879:2;24870:12;;24863:88;24979:2;24970:12;;24568:420;-1:-1;;24568:420;24997:566;;25157:67;25221:2;25216:3;25157:67;;;-1:-1;;;;;;;;;;;25237:87;;25358:66;25353:2;25344:12;;25337:88;25459:66;25454:2;25445:12;;25438:88;25554:2;25545:12;;25143:420;-1:-1;;25143:420;25572:465;;25732:67;25796:2;25791:3;25732:67;;;25832:66;25812:87;;25933:66;25928:2;25919:12;;25912:88;26028:2;26019:12;;25718:319;-1:-1;;25718:319;26144:488;26364:22;;26297:4;26288:14;;;26392:61;26292:3;26364:22;26392:61;;;26317:142;26537:4;26530:5;26526:16;26520:23;26549:62;26605:4;26600:3;26596:14;26583:11;26639:110;26712:31;26737:5;26712:31;;26883:114;26962:29;26985:5;26962:29;;27004:213;27122:2;27107:18;;27136:71;27111:9;27180:6;27136:71;;27224:579;27442:3;27427:19;;27457:79;27431:9;27509:6;27457:79;;;27547:80;27623:2;27612:9;27608:18;27599:6;27547:80;;;27638:72;27706:2;27695:9;27691:18;27682:6;27638:72;;;27721;27789:2;27778:9;27774:18;27765:6;27721:72;;27810:859;28120:3;28105:19;;28135:79;28109:9;28187:6;28135:79;;;28225:80;28301:2;28290:9;28286:18;28277:6;28225:80;;;28353:9;28347:4;28343:20;28338:2;28327:9;28323:18;28316:48;28378:104;28477:4;28468:6;28378:104;;;28370:112;;28530:9;28524:4;28520:20;28515:2;28504:9;28500:18;28493:48;28555:104;28654:4;28645:6;28555:104;;;28547:112;28091:578;-1:-1;;;;;;28091:578;28676:563;28886:3;28871:19;;28901:79;28875:9;28953:6;28901:79;;;28991:72;29059:2;29048:9;29044:18;29035:6;28991:72;;29246:324;29392:2;29377:18;;29406:71;29381:9;29450:6;29406:71;;;29488:72;29556:2;29545:9;29541:18;29532:6;29488:72;;29932:340;30086:2;30071:18;;30100:71;30075:9;30144:6;30100:71;;;30182:80;30258:2;30247:9;30243:18;30234:6;30182:80;;30279:563;30489:3;30474:19;;30504:71;30478:9;30548:6;30504:71;;30849:547;31051:3;31036:19;;31066:71;31040:9;31110:6;31066:71;;31403:827;31697:3;31682:19;;31712:71;31686:9;31756:6;31712:71;;;31794:72;31862:2;31851:9;31847:18;31838:6;31794:72;;32237:488;32437:2;32422:18;;32451:79;32426:9;32503:6;32451:79;;;32578:9;32572:4;32568:20;32563:2;32552:9;32548:18;32541:48;32603:112;32710:4;32701:6;32603:112;;32732:324;32878:2;32863:18;;32892:71;32867:9;32936:6;32892:71;;;32974:72;33042:2;33031:9;33027:18;33018:6;32974:72;;33063:563;33273:3;33258:19;;33288:71;33262:9;33332:6;33288:71;;;33370:72;33438:2;33427:9;33423:18;33414:6;33370:72;;;33453:80;33529:2;33518:9;33514:18;33505:6;33453:80;;;33544:72;33612:2;33601:9;33597:18;33588:6;33544:72;;33633:547;33835:3;33820:19;;33850:71;33824:9;33894:6;33850:71;;;33932:72;34000:2;33989:9;33985:18;33976:6;33932:72;;;34015;34083:2;34072:9;34068:18;34059:6;34015:72;;34187:563;34397:3;34382:19;;34412:71;34386:9;34456:6;34412:71;;;34494:72;34562:2;34551:9;34547:18;34538:6;34494:72;;;34577;34645:2;34634:9;34630:18;34621:6;34577:72;;;34660:80;34736:2;34725:9;34721:18;34712:6;34660:80;;34757:827;35051:3;35036:19;;35066:71;35040:9;35110:6;35066:71;;;35148:72;35216:2;35205:9;35201:18;35192:6;35148:72;;35591:283;35744:2;35729:18;;35758:106;35733:9;35837:6;35758:106;;36379:407;36570:2;36584:47;;;36555:18;;36645:131;36555:18;36645:131;;36793:407;36984:2;36998:47;;;36969:18;;37059:131;36969:18;37059:131;;37207:407;37398:2;37412:47;;;37383:18;;37473:131;37383:18;37473:131;;37621:407;37812:2;37826:47;;;37797:18;;37887:131;37797:18;37887:131;;38035:407;38226:2;38240:47;;;38211:18;;38301:131;38211:18;38301:131;;38449:407;38640:2;38654:47;;;38625:18;;38715:131;38625:18;38715:131;;38863:407;39054:2;39068:47;;;39039:18;;39129:131;39039:18;39129:131;;39277:407;39468:2;39482:47;;;39453:18;;39543:131;39453:18;39543:131;;39691:407;39882:2;39896:47;;;39867:18;;39957:131;39867:18;39957:131;;40105:407;40296:2;40310:47;;;40281:18;;40371:131;40281:18;40371:131;;40519:407;40710:2;40724:47;;;40695:18;;40785:131;40695:18;40785:131;;40933:407;41124:2;41138:47;;;41109:18;;41199:131;41109:18;41199:131;;41347:407;41538:2;41552:47;;;41523:18;;41613:131;41523:18;41613:131;;41761:407;41952:2;41966:47;;;41937:18;;42027:131;41937:18;42027:131;;42175:407;42366:2;42380:47;;;42351:18;;42441:131;42351:18;42441:131;;42589:407;42780:2;42794:47;;;42765:18;;42855:131;42765:18;42855:131;;43003:407;43194:2;43208:47;;;43179:18;;43269:131;43179:18;43269:131;;43417:407;43608:2;43622:47;;;43593:18;;43683:131;43593:18;43683:131;;43831:407;44022:2;44036:47;;;44007:18;;44097:131;44007:18;44097:131;;44245:528;44469:2;44454:18;;44483:131;44458:9;44587:6;44483:131;;;44662:9;44656:4;44652:20;44647:2;44636:9;44632:18;44625:48;44687:76;44758:4;44749:6;44687:76;;44780:213;44898:2;44883:18;;44912:71;44887:9;44956:6;44912:71;;45000:205;45114:2;45099:18;;45128:67;45103:9;45168:6;45128:67;;45212:256;45274:2;45268:9;45300:17;;;45375:18;45360:34;;45396:22;;;45357:62;45354:2;;;45432:1;45429;45422:12;45354:2;45448;45441:22;45252:216;;-1:-1;45252:216;45475:254;;45630:18;45622:6;45619:30;45616:2;;;45662:1;45659;45652:12;45616:2;-1:-1;45691:4;45679:17;;;45709:15;;45553:176;46786:258;;46929:18;46921:6;46918:30;46915:2;;;46961:1;46958;46951:12;46915:2;-1:-1;47034:4;47005;46982:17;;;;-1:-1;;46978:33;47024:15;;46852:192;47307:103;47393:12;;47377:33;47880:178;47998:19;;;48047:4;48038:14;;47991:67;48791:105;;-1:-1;;;;;48972:54;;48860:31;48955:76;49038:79;49107:5;49090:27;49124:88;49202:4;49191:16;;49174:38;49331:92;49404:13;49397:21;;49380:43;49746:129;;49833:37;49864:5;49882:191;;49996:72;50062:5;49996:72;;51075:145;51156:6;51151:3;51146;51133:30;-1:-1;51212:1;51194:16;;51187:27;51126:94;51229:268;51294:1;51301:101;51315:6;51312:1;51309:13;51301:101;;;51382:11;;;51376:18;51363:11;;;51356:39;51337:2;51330:10;51301:101;;;51417:6;51414:1;51411:13;51408:2;;;-1:-1;;51482:1;51464:16;;51457:27;51278:219;51505:97;51593:2;51573:14;-1:-1;;51569:28;;51553:49",
source:'/*\n    Copyright 2020 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\nimport { CommonMath } from "set-protocol-contract-utils/contracts/lib/CommonMath.sol";\nimport { CompoundUtils } from "set-protocol-contract-utils/contracts/lib/CompoundUtils.sol";\n\nimport { CTokenWhiteListed } from "./lib/CTokenWhiteListed.sol";\nimport { ERC20Wrapper } from "../../lib/ERC20Wrapper.sol";\nimport { ExchangeIssuanceLibrary } from "./lib/ExchangeIssuanceLibrary.sol";\nimport { ExchangeIssuanceModule } from "./ExchangeIssuanceModule.sol";\nimport { ICToken } from "../interfaces/ICToken.sol";\nimport { IAddressToAddressWhiteList } from "../interfaces/IAddressToAddressWhiteList.sol";\nimport { ISetToken } from "../interfaces/ISetToken.sol";\nimport { SetTokenLibrary } from "../lib/SetTokenLibrary.sol";\n\n\n/**\n * @title CTokenExchangeIssuanceModule\n * @author Set Protocol\n *\n * The CTokenExchangeIssuanceModule facilitates the exchangeIssue and exchangeRedeem functions which allows\n * the issuance and redemption of Sets containing cTokens using exchange orders and Compound functions. \n * Note: This module is not compatible with Compound Ether (cETH).\n */\ncontract CTokenExchangeIssuanceModule is\n    ExchangeIssuanceModule,\n    CTokenWhiteListed\n{\n    using SafeMath for uint256;\n\n    /* ============ State Variables ============ */\n\n    // Address of transferProxy\n    address public transferProxy;\n\n    /* ============ Constructor ============ */\n\n    /**\n     * Constructor function for CTokenExchangeIssuanceModule\n     *\n     * @param _core                The address of Core\n     * @param _vault               The address of Vault\n     * @param _transferProxy       The address of TransferProxy\n     * @param _cTokenWhiteList     The instance of cTokenWhiteList contract\n     */\n    constructor(\n        address _core,\n        address _vault,\n        address _transferProxy,\n        IAddressToAddressWhiteList _cTokenWhiteList\n    )\n        public\n        ExchangeIssuanceModule(\n            _core,\n            _vault\n        )\n        CTokenWhiteListed(\n            _transferProxy,\n            _cTokenWhiteList\n        )\n    {\n        transferProxy = _transferProxy;\n    }\n\n    /* ============ Public Functions ============ */\n\n    /**\n     * Performs trades via exchange wrappers to acquire components, mints cToken from underlying, and issues a Set to the caller\n     *\n     * @param _exchangeIssuanceParams              A Struct containing exchange issuance metadata\n     * @param _orderData                           Bytes array containing the exchange orders to execute\n     */\n    function exchangeIssue(\n        ExchangeIssuanceLibrary.ExchangeIssuanceParams memory _exchangeIssuanceParams,\n        bytes memory _orderData\n    )\n        public\n        nonReentrant\n    {\n        // Validate the issuance quantity, send token and receive token data\n        validateExchangeIssuanceParams(_exchangeIssuanceParams);\n\n        // Validate that all receiveTokens are components of the Set\n        SetTokenLibrary.validateTokensAreComponents(\n            _exchangeIssuanceParams.setAddress,\n            _exchangeIssuanceParams.receiveTokens\n        );\n\n        // Transfer the send tokens to the appropriate exchanges\n        transferSendTokensToExchangeWrappers(\n            _exchangeIssuanceParams.sendTokenExchangeIds,\n            _exchangeIssuanceParams.sendTokens,\n            _exchangeIssuanceParams.sendTokenAmounts\n        );\n\n        // Calculate expected receive token balances\n        uint256[] memory requiredBalances = calculateReceiveTokenBalances(\n            _exchangeIssuanceParams\n        );\n\n        // Execute the exchange orders using the encoded order data and deposits tokens in vault\n        executeExchangeOrders(_orderData);\n\n        // Withdraw underlying tokens required from vault, mint cTokens in the module, and return to vault under sender address\n        mintCTokensFromExchangedComponents(\n            _exchangeIssuanceParams.receiveTokens,\n            _exchangeIssuanceParams.receiveTokenAmounts\n        );\n\n        // Check that sender\'s receive token balances in Vault are correct\n        ExchangeIssuanceLibrary.validatePostExchangeReceiveTokenBalances(\n            vault,\n            _exchangeIssuanceParams.receiveTokens,\n            requiredBalances,\n            msg.sender\n        );\n\n        // Transfer remaining required underlying components from caller to module, mint cTokens and deposit in vault to caller\n        mintCTokensFromCaller(\n            _exchangeIssuanceParams.setAddress,\n            _exchangeIssuanceParams.quantity\n        );\n\n        // Issue Set to the caller\n        coreInstance.issueModule(\n            msg.sender,\n            msg.sender,\n            _exchangeIssuanceParams.setAddress,\n            _exchangeIssuanceParams.quantity\n        );\n\n        emit LogExchangeIssue(\n            _exchangeIssuanceParams.setAddress,\n            msg.sender,\n            _exchangeIssuanceParams.quantity,\n            _exchangeIssuanceParams.sendTokens,\n            _exchangeIssuanceParams.sendTokenAmounts\n        );\n    }\n\n    /**\n     * Redeems a Set, redeems cToken to underlying, and performs trades via exchange wrappers for specified receive tokens.\n     * The receive tokens are attributed to the caller.\n     *\n     * @param _exchangeIssuanceParams              A Struct containing exchange issuance metadata\n     * @param _orderData                           Bytes array containing the exchange orders to execute\n     */\n    function exchangeRedeem(\n        ExchangeIssuanceLibrary.ExchangeIssuanceParams memory _exchangeIssuanceParams,\n        bytes memory _orderData\n    )\n        public\n        nonReentrant\n    {\n        // Validate exchangeIssuanceParams\n        validateExchangeIssuanceParams(_exchangeIssuanceParams);\n\n        // Validate that all sendTokens are components of the Set\n        SetTokenLibrary.validateTokensAreComponents(\n            _exchangeIssuanceParams.setAddress,\n            _exchangeIssuanceParams.sendTokens\n        );\n\n        // Redeem Set into the vault, attributing components to this contract\n        coreInstance.redeemModule(\n            msg.sender,\n            address(this),\n            _exchangeIssuanceParams.setAddress,\n            _exchangeIssuanceParams.quantity\n        );\n\n        // Calculate expected receive token balances\n        uint256[] memory requiredBalances = calculateReceiveTokenBalances(\n            _exchangeIssuanceParams\n        );\n\n        // Withdraw underlying tokens required, redeem cTokens in the module, and send to exchange wrapper\n        redeemCTokensAndTransferToExchangeWrappers(\n            _exchangeIssuanceParams.sendTokenExchangeIds,\n            _exchangeIssuanceParams.sendTokens,\n            _exchangeIssuanceParams.sendTokenAmounts\n        );\n\n        // Execute the exchange orders using the encoded order data and deposits tokens in vault\n        executeExchangeOrders(_orderData);\n\n        // Check that sender\'s receive token balances in Vault are correct\n        ExchangeIssuanceLibrary.validatePostExchangeReceiveTokenBalances(\n            vault,\n            _exchangeIssuanceParams.receiveTokens,\n            requiredBalances,\n            msg.sender\n        );\n\n        // Withdraw receive tokens from the Vault to the user\n        coreInstance.batchWithdrawModule(\n            msg.sender,\n            msg.sender,\n            _exchangeIssuanceParams.receiveTokens,\n            _exchangeIssuanceParams.receiveTokenAmounts\n        );\n\n        // Withdraw any remaining non-exchanged components to the user\n        withdrawRemainingComponentsToUser(_exchangeIssuanceParams.setAddress);\n\n        emit LogExchangeRedeem(\n            _exchangeIssuanceParams.setAddress,\n            msg.sender,\n            _exchangeIssuanceParams.quantity,\n            _exchangeIssuanceParams.receiveTokens,\n            _exchangeIssuanceParams.receiveTokenAmounts\n        );\n    }\n\n    /* ============ Private Functions ============ */\n\n    /**\n     * Withdraw required underlying from vault, mint required amount of cTokens, and deposit back into vault\n     *\n     * @param _receiveTokens              Array of SetToken component addresses to receive\n     * @param _receiveTokenAmounts        Array of SetToken component required quantities to receive\n     */\n    function mintCTokensFromExchangedComponents(\n        address[] memory _receiveTokens,\n        uint256[] memory _receiveTokenAmounts\n    )\n        private\n    {\n        for (uint256 i = 0; i < _receiveTokens.length; i++) {\n            address currentComponentAddress = _receiveTokens[i];\n            uint256 currentComponentQuantity = _receiveTokenAmounts[i];\n\n            // If cToken, calculate required underlying tokens and transfer to module\n            address underlyingAddress = cTokenWhiteList.whitelist(currentComponentAddress);\n            if (underlyingAddress != address(0)) {\n                ICToken cTokenInstance = ICToken(currentComponentAddress);\n\n                // Calculate required amount of underlying. Calculated as cToken quantity * exchangeRate / 10 ** 18.\n                uint256 exchangeRate = cTokenInstance.exchangeRateCurrent();\n                uint256 underlyingQuantity = CompoundUtils.convertCTokenToUnderlying(currentComponentQuantity, exchangeRate);\n\n                // Withdraw send tokens from vault (owned by order sender) to the module\n                coreInstance.withdrawModule(\n                    msg.sender,\n                    address(this),\n                    underlyingAddress,\n                    underlyingQuantity\n                );\n\n                // Mint cToken and deposit to vault under sender\n                mintCToken(cTokenInstance, underlyingAddress, underlyingQuantity);\n            }\n        }\n    }\n\n    /**\n     * Transfer non-exchanged underlying tokens from caller, mint cTokens and deposit to the Vault under sender\n     * to the caller\n     *\n     * @param  _setAddress   Address of the Set\n     * @param  _quantity     Quantity of the Set to issue\n     */\n    function mintCTokensFromCaller(\n        address _setAddress,\n        uint256 _quantity\n    )\n        private\n    {\n        // Get SetToken details\n        ISetToken baseSet = ISetToken(_setAddress);\n\n        address[] memory baseSetComponents = baseSet.getComponents();\n        uint256[] memory baseSetUnits = baseSet.getUnits();\n        uint256 baseSetNaturalUnit = baseSet.naturalUnit();\n\n        // Calculate the number of natural units required. Note: validateExchangeIssuanceParams ensures quantity is a\n        // multiple of natural unit\n        uint256 quantityOfNaturalUnits = _quantity.div(baseSetNaturalUnit);\n\n        for (uint256 i = 0; i < baseSetComponents.length; i++) {\n            address currentComponentAddress = baseSetComponents[i];\n            // Get existing component quantity in the vault\n            uint256 currentComponentQuantity = vaultInstance.getOwnerBalance(currentComponentAddress, msg.sender);\n\n            // Calculate required quantity for component\n            uint256 requiredQuantity = quantityOfNaturalUnits.mul(baseSetUnits[i]);\n\n            // If cToken and balance of cToken in vault is less than required for issuing the Set\n            // transfer difference from user and mint cToken\n            address underlyingAddress = cTokenWhiteList.whitelist(currentComponentAddress);\n            if (underlyingAddress != address(0) && currentComponentQuantity < requiredQuantity) {\n                // Calculate amount of remaining cTokens needed to issue Set\n                uint256 quantityToMint = requiredQuantity - currentComponentQuantity;\n\n                ICToken cTokenInstance = ICToken(currentComponentAddress);\n\n                // Calculate required amount of underlying. Calculated as cToken quantity * exchangeRate / 10 ** 18.\n                uint256 exchangeRate = cTokenInstance.exchangeRateCurrent();\n                uint256 underlyingQuantity = CompoundUtils.convertCTokenToUnderlying(quantityToMint, exchangeRate);\n\n                // Transfer underlying from caller to module\n                coreInstance.transferModule(\n                    underlyingAddress,\n                    underlyingQuantity,\n                    msg.sender,\n                    address(this)\n                );\n\n                // Mint cToken and deposit to vault under sender\n                mintCToken(cTokenInstance, underlyingAddress, underlyingQuantity);\n            }\n        }\n    }\n\n    /**\n     * Withdraw required underlying from vault, redeem required amount of cTokens, and transfer to exchange wrappers\n     *\n     * @param _sendTokenExchangeIds    List of exchange wrapper enumerations corresponding to\n     * @param _sendTokens              Array of SetToken component addresses to send\n     * @param _sendTokenAmounts        Array of SetToken component required quantities to send\n     */\n    function redeemCTokensAndTransferToExchangeWrappers(\n        uint8[] memory _sendTokenExchangeIds,\n        address[] memory _sendTokens,\n        uint256[] memory _sendTokenAmounts\n    )\n        private\n    {\n        for (uint256 i = 0; i < _sendTokens.length; i++) {\n            address exchangeWrapper = coreInstance.exchangeIds(_sendTokenExchangeIds[i]);\n            address currentComponentAddress = _sendTokens[i];\n            uint256 currentComponentQuantity = _sendTokenAmounts[i];\n\n            // If cToken redeem cToken and replace send token and amounts with underlying\n            address underlyingAddress = cTokenWhiteList.whitelist(currentComponentAddress);\n            if (underlyingAddress != address(0)) {\n                // Withdraw cToken send tokens from vault (owned by this contract) to the module and redeem cToken\n                redeemCToken(\n                    ICToken(currentComponentAddress),\n                    currentComponentQuantity\n                );\n\n                // Get balance of underlying in the contract after cToken redemption to ensure tokens are flushed\n                uint256 underlyingQuantity = ERC20Wrapper.balanceOf(\n                    underlyingAddress,\n                    address(this)\n                );\n\n                // Ensure unlimited allowance for underlying component to transferProxy.\n                ERC20Wrapper.ensureAllowance(\n                    underlyingAddress,  // Token\n                    address(this),      // Owner\n                    transferProxy,      // Spender\n                    underlyingQuantity  // Set unlimited if allowance less than quantity\n                );\n\n                // Transfer send tokens to the appropriate exchange wrapper\n                coreInstance.transferModule(\n                    underlyingAddress,  // Token\n                    underlyingQuantity, // Quantity\n                    address(this),      // From address\n                    exchangeWrapper     // To address\n                );\n            } else {\n                // Withdraw non cToken send tokens from vault (owned by this contract) to the appropriate exchange wrapper\n                coreInstance.withdrawModule(\n                    address(this),              // From address in vault\n                    exchangeWrapper,            // To address\n                    currentComponentAddress,    // Token address\n                    currentComponentQuantity    // Token quantity\n                );\n            }\n        }\n    }\n\n    /**\n     * Mint cToken and deposit in vault under sender\n     *\n     * @param _cToken                Instance of cToken component to mint\n     * @param _underlyingAddress     Underlying component address\n     * @param _underlyingQuantity    Quantity of underlying to mint\n     */\n    function mintCToken(\n        ICToken _cToken,\n        address _underlyingAddress,\n        uint256 _underlyingQuantity\n    )\n        private\n    {\n        // Ensure unlimited allowance for underlying token to cToken contract.\n        ERC20Wrapper.ensureAllowance(\n            _underlyingAddress,\n            address(this),\n            address(_cToken),\n            _underlyingQuantity\n        );\n\n        // Mint cToken using underlying\n        uint256 mintResponse = _cToken.mint(_underlyingQuantity);\n        require(\n            mintResponse == 0,\n            "CTokenExchangeIssuanceModule.mintCToken: Error minting cToken"\n        );\n\n        // Get balance of cTokens minted in the contract to ensure tokens are flushed at the end\n        uint256 cTokenQuantity = ERC20Wrapper.balanceOf(\n            address(_cToken),\n            address(this)\n        );\n\n        // Ensure unlimited allowance for cToken to transferProxy. This is for the case if we add a new cToken to the whitelist\n        ERC20Wrapper.ensureAllowance(\n            address(_cToken),\n            address(this),\n            transferProxy,\n            cTokenQuantity\n        );\n\n        // Deposit transformed cTokens to vault (owned by order sender)\n        coreInstance.depositModule(\n            address(this),\n            msg.sender,\n            address(_cToken),\n            cTokenQuantity\n        );\n    }\n\n    /**\n     * Withdraw cToken from vault, and redeem cToken in module\n     *\n     * @param _cToken                Instance of cToken component to redeem\n     * @param _cTokenQuantity        Quantity of cToken to redeem\n     */\n    function redeemCToken(\n        ICToken _cToken,\n        uint256 _cTokenQuantity\n    )\n        private\n    {\n        // Withdraw cToken send tokens from vault (owned by this contract) to the module\n        coreInstance.withdrawModule(\n            address(this), // From address in vault\n            address(this), // To address\n            address(_cToken), // Token address\n            _cTokenQuantity // Token quantity\n        );\n\n        // Redeem cToken to underlying\n        uint256 redeemResponse = _cToken.redeem(_cTokenQuantity);\n        require(\n            redeemResponse == 0,\n            "CTokenExchangeIssuanceModule.redeemCToken: Error redeeming cToken"\n        );\n    }\n\n    /**\n     * Transfers send tokens from the user to the appropriate exchange wrapper. Used in exchange issue\n     *\n     * @param _sendTokenExchangeIds            List of exchange wrapper enumerations corresponding to\n     *                                         the wrapper that will handle the component\n     * @param _sendTokens                      Array of addresses of the payment tokens\n     * @param _sendTokenAmounts                Array of amounts of payment Tokens\n     */\n    function transferSendTokensToExchangeWrappers(\n        uint8[] memory _sendTokenExchangeIds,\n        address[] memory _sendTokens,\n        uint256[] memory _sendTokenAmounts\n    )\n        private\n    {\n        for (uint256 i = 0; i < _sendTokens.length; i++) {\n            // Get exchange address from state mapping based on header exchange info\n            address exchangeWrapper = coreInstance.exchangeIds(_sendTokenExchangeIds[i]);\n\n            // Transfer send tokens to the appropriate exchange wrapper\n            coreInstance.transferModule(\n                _sendTokens[i],\n                _sendTokenAmounts[i],\n                msg.sender,\n                exchangeWrapper\n            );\n        }\n    }\n\n    /**\n     * Withdraws any remaining un-exchanged cToken and non cToken components from the Vault in the possession of this contract\n     * to the caller\n     *\n     * @param  _setAddress   Address of the Base Set\n     */\n    function withdrawRemainingComponentsToUser(\n        address _setAddress\n    )\n        private\n    {\n        address[] memory baseSetComponents = ISetToken(_setAddress).getComponents();\n        for (uint256 i = 0; i < baseSetComponents.length; i++) {\n            address currentComponentAddress = baseSetComponents[i];\n            uint256 currentComponentQuantity = vaultInstance.getOwnerBalance(currentComponentAddress, address(this));\n\n            // Remaining cTokens are redeemed to underlying and all tokens are sent to the caller\n            if (currentComponentQuantity > 0) {\n                address underlyingAddress = cTokenWhiteList.whitelist(currentComponentAddress);\n                if (underlyingAddress != address(0)) {\n                    // Withdraw cToken send tokens from vault (owned by this contract) to the module and redeem\n                    redeemCToken(\n                        ICToken(currentComponentAddress),\n                        currentComponentQuantity\n                    );\n\n                    // Get balance of underlying after cToken redemption.\n                    uint256 underlyingQuantity = ERC20Wrapper.balanceOf(\n                        underlyingAddress,\n                        address(this)\n                    );\n\n                    // Ensure allowance for underlying component to transferProxy.\n                    ERC20Wrapper.ensureAllowance(\n                        underlyingAddress,\n                        address(this),\n                        transferProxy,\n                        underlyingQuantity\n                    );\n\n                    // Transfer underlying components to caller\n                    coreInstance.transferModule(\n                        underlyingAddress,\n                        underlyingQuantity,\n                        address(this),\n                        msg.sender\n                    );\n                } else {\n                    // Return the unexchanged non cToken components to the caller\n                    coreInstance.withdrawModule(\n                        address(this),\n                        msg.sender,\n                        currentComponentAddress,\n                        currentComponentQuantity\n                    );\n                }\n            }\n        }\n    }\n}',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/CTokenExchangeIssuanceModule.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.560Z",devdoc:{author:"Set Protocol * The CTokenExchangeIssuanceModule facilitates the exchangeIssue and exchangeRedeem functions which allows the issuance and redemption of Sets containing cTokens using exchange orders and Compound functions.  Note: This module is not compatible with Compound Ether (cETH).",methods:{constructor:{params:{_cTokenWhiteList:"The instance of cTokenWhiteList contract",_core:"The address of Core",_transferProxy:"The address of TransferProxy",_vault:"The address of Vault"}},"exchangeIssue((address,uint256,uint8[],address[],uint256[],address[],uint256[]),bytes)":{params:{_exchangeIssuanceParams:"A Struct containing exchange issuance metadata",_orderData:"Bytes array containing the exchange orders to execute"}},"exchangeRedeem((address,uint256,uint8[],address[],uint256[],address[],uint256[]),bytes)":{params:{_exchangeIssuanceParams:"A Struct containing exchange issuance metadata",_orderData:"Bytes array containing the exchange orders to execute"}}},title:"CTokenExchangeIssuanceModule"},userdoc:{methods:{constructor:"Constructor function for CTokenExchangeIssuanceModule","exchangeIssue((address,uint256,uint8[],address[],uint256[],address[],uint256[]),bytes)":{notice:"Performs trades via exchange wrappers to acquire components, mints cToken from underlying, and issues a Set to the caller"},"exchangeRedeem((address,uint256,uint8[],address[],uint256[],address[],uint256[]),bytes)":{notice:"Redeems a Set, redeems cToken to underlying, and performs trades via exchange wrappers for specified receive tokens. The receive tokens are attributed to the caller."}}}};