"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.RebalancingSetToken={contractName:"RebalancingSetToken",abi:[{constant:true,inputs:[],name:"unitShares",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"spender",type:"address"},{name:"value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"",type:"uint256"}],name:"failedAuctionWithdrawComponents",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"rebalanceInterval",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"from",type:"address"},{name:"to",type:"address"},{name:"value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"proposalPeriod",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"currentSet",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"spender",type:"address"},{name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"naturalUnit",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"startingCurrentSetAmount",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"manager",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"biddingParameters",outputs:[{name:"minimumBid",type:"uint256"},{name:"remainingCurrentSets",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"owner",type:"address"}],name:"balanceOf",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"auctionLibrary",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"spender",type:"address"},{name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"to",type:"address"},{name:"value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"proposalStartTime",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"lastRebalanceTimestamp",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"factory",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"nextSet",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"auctionPriceParameters",outputs:[{name:"auctionStartTime",type:"uint256"},{name:"auctionTimeToPivot",type:"uint256"},{name:"auctionStartPrice",type:"uint256"},{name:"auctionPivotPrice",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"core",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"rebalanceState",outputs:[{name:"",type:"uint8"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"vault",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"componentWhiteListAddress",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{inputs:[{name:"_factory",type:"address"},{name:"_manager",type:"address"},{name:"_initialSet",type:"address"},{name:"_initialUnitShares",type:"uint256"},{name:"_naturalUnit",type:"uint256"},{name:"_proposalPeriod",type:"uint256"},{name:"_rebalanceInterval",type:"uint256"},{name:"_componentWhiteList",type:"address"},{name:"_name",type:"string"},{name:"_symbol",type:"string"}],payable:false,stateMutability:"nonpayable",type:"constructor"},{anonymous:false,inputs:[{indexed:false,name:"newManager",type:"address"},{indexed:false,name:"oldManager",type:"address"}],name:"NewManagerAdded",type:"event"},{anonymous:false,inputs:[{indexed:false,name:"nextSet",type:"address"},{indexed:true,name:"auctionLibrary",type:"address"},{indexed:true,name:"proposalPeriodEndTime",type:"uint256"}],name:"RebalanceProposed",type:"event"},{anonymous:false,inputs:[{indexed:false,name:"oldSet",type:"address"},{indexed:false,name:"newSet",type:"address"}],name:"RebalanceStarted",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"from",type:"address"},{indexed:true,name:"to",type:"address"},{indexed:false,name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"owner",type:"address"},{indexed:true,name:"spender",type:"address"},{indexed:false,name:"value",type:"uint256"}],name:"Approval",type:"event"},{constant:false,inputs:[{name:"_nextSet",type:"address"},{name:"_auctionLibrary",type:"address"},{name:"_auctionTimeToPivot",type:"uint256"},{name:"_auctionStartPrice",type:"uint256"},{name:"_auctionPivotPrice",type:"uint256"}],name:"propose",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[],name:"startRebalance",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[],name:"settleRebalance",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_quantity",type:"uint256"}],name:"placeBid",outputs:[{name:"",type:"address[]"},{name:"",type:"uint256[]"},{name:"",type:"uint256[]"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[],name:"endFailedAuction",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"_quantity",type:"uint256"}],name:"getBidPrice",outputs:[{name:"",type:"uint256[]"},{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_issuer",type:"address"},{name:"_quantity",type:"uint256"}],name:"mint",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_from",type:"address"},{name:"_quantity",type:"uint256"}],name:"burn",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_newManager",type:"address"}],name:"setManager",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"getComponents",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"getUnits",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"getBiddingParameters",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"getAuctionPriceParameters",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_tokenAddress",type:"address"}],name:"tokenIsComponent",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"getCombinedTokenArrayLength",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"getCombinedTokenArray",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"getCombinedCurrentUnits",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"getCombinedNextSetUnits",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"getFailedAuctionWithdrawComponents",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"unitShares","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getUnits","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"failedAuctionWithdrawComponents","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rebalanceInterval","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_tokenAddress","type":"address"}],"name":"tokenIsComponent","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"proposalPeriod","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"currentSet","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_issuer","type":"address"},{"name":"_quantity","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"naturalUnit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"startingCurrentSetAmount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"manager","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"startRebalance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getCombinedTokenArrayLength","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"biddingParameters","outputs":[{"name":"minimumBid","type":"uint256"},{"name":"remainingCurrentSets","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"endFailedAuction","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_nextSet","type":"address"},{"name":"_auctionLibrary","type":"address"},{"name":"_auctionTimeToPivot","type":"uint256"},{"name":"_auctionStartPrice","type":"uint256"},{"name":"_auctionPivotPrice","type":"uint256"}],"name":"propose","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getCombinedTokenArray","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"auctionLibrary","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_quantity","type":"uint256"}],"name":"placeBid","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getComponents","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_quantity","type":"uint256"}],"name":"getBidPrice","outputs":[{"name":"","type":"uint256[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_quantity","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getAuctionPriceParameters","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getBiddingParameters","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"proposalStartTime","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastRebalanceTimestamp","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"factory","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"nextSet","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCombinedNextSetUnits","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newManager","type":"address"}],"name":"setManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"auctionPriceParameters","outputs":[{"name":"auctionStartTime","type":"uint256"},{"name":"auctionTimeToPivot","type":"uint256"},{"name":"auctionStartPrice","type":"uint256"},{"name":"auctionPivotPrice","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getFailedAuctionWithdrawComponents","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCombinedCurrentUnits","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"core","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rebalanceState","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"settleRebalance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vault","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"componentWhiteListAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_factory","type":"address"},{"name":"_manager","type":"address"},{"name":"_initialSet","type":"address"},{"name":"_initialUnitShares","type":"uint256"},{"name":"_naturalUnit","type":"uint256"},{"name":"_proposalPeriod","type":"uint256"},{"name":"_rebalanceInterval","type":"uint256"},{"name":"_componentWhiteList","type":"address"},{"name":"_name","type":"string"},{"name":"_symbol","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"newManager","type":"address"},{"indexed":false,"name":"oldManager","type":"address"}],"name":"NewManagerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"nextSet","type":"address"},{"indexed":true,"name":"auctionLibrary","type":"address"},{"indexed":true,"name":"proposalPeriodEndTime","type":"uint256"}],"name":"RebalanceProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldSet","type":"address"},{"indexed":false,"name":"newSet","type":"address"}],"name":"RebalanceStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"}],"devdoc":{"author":"Set Protocol * Implementation of Rebalancing Set token.","methods":{"allowance(address,address)":{"details":"Function to check the amount of tokens that an owner allowed to a spender.","params":{"owner":"address The address which owns the funds.","spender":"address The address which will spend the funds."},"return":"A uint256 specifying the amount of tokens still available for the spender."},"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender\'s allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729","params":{"spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"The address to query the balance of."},"return":"A uint256 representing the amount owned by the passed address."},"constructor":{"params":{"_componentWhiteList":"Address of component WhiteList contract","_factory":"Factory used to create the Rebalancing Set","_initialSet":"Initial set that collateralizes the Rebalancing set","_initialUnitShares":"Units of currentSet that equals one share","_manager":"Manager of the Rebalancing Set","_name":"The name of the new RebalancingSetToken","_naturalUnit":"The minimum multiple of Sets that can be issued or redeemed","_proposalPeriod":"Amount of time for users to inspect a rebalance proposal","_rebalanceInterval":"Minimum amount of time between rebalances","_symbol":"The symbol of the new RebalancingSetToken"}},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"spender":"The address which will spend the funds.","subtractedValue":"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"addedValue":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"name()":{"return":"the name of the token."},"propose(address,address,uint256,uint256,uint256)":{"params":{"_auctionLibrary":"The library used to calculate the Dutch Auction price","_auctionPivotPrice":"The price at which the price curve switches from linear to exponential","_auctionStartPrice":"The price to start the auction at","_auctionTimeToPivot":"The amount of time for the auction to go ffrom start to pivot price","_nextSet":"The Set to rebalance into"}},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{"details":"Total number of tokens in existence"},"transfer(address,uint256)":{"details":"Transfer token to a specified address","params":{"to":"The address to transfer to.","value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.","params":{"from":"address The address which you want to send tokens from","to":"address The address which you want to transfer to","value":"uint256 the amount of tokens to be transferred"}}},"title":"RebalancingSetToken"},"userdoc":{"methods":{"constructor":"Constructor function for Rebalancing Set Token","propose(address,address,uint256,uint256,uint256)":{"notice":"Function used to set the terms of the next rebalance and start the proposal period"}}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/RebalancingSetToken.sol":"RebalancingSetToken"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICore.sol":{"keccak256":"0x5dc3db4398630ea52d2a40c9ddfa89d94e65c2770a12bab4d2a5c8eb573fb0a0","urls":["bzzr://25e90b53f61b388e0950b808e2296f82d427b66cfd6021212713436b2a592e31"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalancingSetFactory.sol":{"keccak256":"0x781ccbdaa2b8908599e6cd5cdf077f2add7077b72acd064fb4ae560c00ddf62d","urls":["bzzr://93950fa7b8ce25f427edfe6a136c850ef41f1002eadd94ec957b8e6abe85812b"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetFactory.sol":{"keccak256":"0xf795ab9e9ac11340a600f235073b4ec4bdea92d3c01601ced1e5afd3c2718301","urls":["bzzr://eb4f00f66933560aa133ee90030b23d7a30937e6591a83d56b3935a927e8ca9f"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetToken.sol":{"keccak256":"0xfa6c0c07f8394d89b6b8f72e15778f8452a9341acb20cebb8421f3522aaca1bd","urls":["bzzr://ccf23bb78fd507bf8cbf5cf7ac2a660a1463b87a3689196e42b8f6862d1a6b11"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IVault.sol":{"keccak256":"0xf8a6d376173be39f5744492866db5dd3f91453a124d23679ff164ff3817f2f4f","urls":["bzzr://896c0a8329175c1620e1a22467778b835defe0e61847e5a8427a306f42391e64"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IWhiteList.sol":{"keccak256":"0x35158bdba86e9e08faf0bdf5e1756fb20ee0404e0b0b3c2d529e0e5b03b5adfd","urls":["bzzr://130cfe1fe490b464a6d42fd8613dd42a9f3375f24b6ab2dd91448f12895992ab"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/RebalancingLibrary.sol":{"keccak256":"0x7f9dd2f95b2ee71a98b94cb9b0df15874aa134e7480d04a1fcf36aff166a55f4","urls":["bzzr://f43a5563ec5df095151eee30cf7a0941b5a971917c27c7b34d9586b36563ab5b"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/SetTokenLibrary.sol":{"keccak256":"0x0c0952057a64c3af0ace01db29258145deff7d935bdc53d1bbab6fff87b3b146","urls":["bzzr://ad1944f45fade934870661a4e91c260625755760ff0ef047677547fbdc6a16bf"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/auction-price-libraries/IAuctionPriceCurve.sol":{"keccak256":"0x52e8b84f3475cb162f93666d1d32dd19cc8838a72c6934ebc22075e58a7acf1b","urls":["bzzr://5d6b372b7dcfab18dfa74013bedaadb1bb455d263dd414a30d01b05abbf5300c"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/RebalancingSetToken.sol":{"keccak256":"0xc9da32c5c445955d65255b0d78bee07873c8a137efa1068ac3ea01c75807fcd8","urls":["bzzr://5493fb97cda9f6877c1bb03a52f5bc4b5a2e223d45a885adadbbc00b56c69a18"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/rebalancing-libraries/FailAuctionLibrary.sol":{"keccak256":"0x95b1c746622d4cc08fdcd908aeeea68128133d1b5d9d953b38b9571d31d1ed4f","urls":["bzzr://086477cd43716f90cb9fb1cc9710b0bb42bd26ac6264cd226b5cdd193dbb513d"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/rebalancing-libraries/PlaceBidLibrary.sol":{"keccak256":"0xbbd96934b7990503df2abfdb64ed7ea3756c656f88ddea8e00c4400315419cb4","urls":["bzzr://5d6f7e2a3c53987bb0708431d76b20984153e92ec10fdca25dfebd93a74c8cbd"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/rebalancing-libraries/ProposeLibrary.sol":{"keccak256":"0xfb5026dbaa20cea64fe6c630f87835e566b6105834364dcbaee5379df5b16c78","urls":["bzzr://68966afebbd941f13db7b3e39ed16b8402ea7af9b002138f42f5aecec89f1606"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/rebalancing-libraries/SettleRebalanceLibrary.sol":{"keccak256":"0xde1bb9e3815e2a7717ef9faeb1dc05611f6620a6a2c724422064153cbc11ce3e","urls":["bzzr://ddf28ae5ab248857c8f56c8c808867a247ff7ae5b68252875958cdada1c8b971"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/rebalancing-libraries/StartRebalanceLibrary.sol":{"keccak256":"0x4522fc8f2284ee5335a484b0262c068e8474ee844f4ff227996343e0e7af853a","urls":["bzzr://7fa89da302f9b3e0457df23143b691c5a612ce60482ada921e9d53fd2dd82768"]},"openzeppelin-solidity/contracts/math/Math.sol":{"keccak256":"0x775160984ceb0931bf67e718fb23afd6fc2a5d38a6e2378ebb438a039ed2269e","urls":["bzzr://209e27ad1c13e3e9b157915e0269ee4c3b6f0a494660dcc4acf1faf102e1a7ad"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411","urls":["bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db"]},"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol":{"keccak256":"0xa60f7f7ce98ca2d75c8e02da982d3fe91176269fdab2589bbbb7cc65f2d7c9d3","urls":["bzzr://5edd2c9be304a1e8ed055e243daba5345f242008164f9a0565c33197b860323b"]},"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61","urls":["bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc"]},"set-protocol-contract-utils/contracts/lib/AddressArrayUtils.sol":{"keccak256":"0xb716eab4e8c5a336a2f19078928530829af097912bd1b925644f914b63601f08","urls":["bzzr://d8a21d39779beb316adb5180d08dcba1941eeccd9412ff08feb21a631c18c269"]},"set-protocol-contract-utils/contracts/lib/CommonMath.sol":{"keccak256":"0x3d1d08c6efc2a973fe2c02ddcb02fd99a8c8eb75f74dcbd93e8e15864eee2b6b","urls":["bzzr://580815dd1cf648a4521d923e59087de21143d9c48115ab71579a1f5a8f3d36af"]}},"version":1}',bytecode:"0x60806040523480156200001157600080fd5b50604051620039e8380380620039e883398101806040526200003791908101906200079f565b8181601282600390805190602001906200005392919062000652565b5081516200006990600490602085019062000652565b506005805460ff90921660ff19909216919091179055505086620000c4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000bb9062000b0c565b60405180910390fd5b60008a905080600160a060020a031663befbe99c6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200012157600080fd5b505af115801562000136573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200015c9190810190620008bd565b87101562000198576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000bb9062000ad6565b80600160a060020a0316638be5c4666040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620001f057600080fd5b505af115801562000205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200022b9190810190620008bd565b87111562000267576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000bb9062000b1e565b600160a060020a038a16620002aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000bb9062000ae8565b80600160a060020a031663f81d6d326040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200030257600080fd5b505af115801562000317573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200033d9190810190620008bd565b86101562000379576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000bb9062000abe565b80600160a060020a03166381b1c8206040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620003d157600080fd5b505af1158015620003e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200040c9190810190620008bd565b85101562000448576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000bb9062000afa565b8a600160a060020a031663f2f4eb266040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620004a057600080fd5b505af1158015620004b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620004db919081019062000776565b6005805461010060a860020a031916610100600160a060020a039384168102919091179182905560098054919092048316600160a060020a03199091161790819055604080517ffbfa77cf0000000000000000000000000000000000000000000000000000000081529051919092169163fbfa77cf916004808301926020929190829003018186803b1580156200057157600080fd5b505afa15801562000586573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620005ac919081019062000776565b60078054600160a060020a0319908116600160a060020a039384161791829055600a8054928416928216929092179091556008805482169683169687179055600b805482169096179095556006805486169c82169c909c17909b555050600d8054600e80548516998c1699909917909855600f9690965550600c939093556011919091556012554260105591909116919092161760a060020a60ff021916905562000bcd565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200069557805160ff1916838001178555620006c5565b82800160010185558215620006c5579182015b82811115620006c5578251825591602001919060010190620006a8565b50620006d3929150620006d7565b5090565b620006f491905b80821115620006d35760008155600101620006de565b90565b600062000705825162000b88565b9392505050565b600082601f8301126200071e57600080fd5b8151620007356200072f8262000b57565b62000b30565b915080825260208301602083018583830111156200075257600080fd5b6200075f83828462000b9a565b50505092915050565b6000620007058251620006f4565b6000602082840312156200078957600080fd5b6000620007978484620006f7565b949350505050565b6000806000806000806000806000806101408b8d031215620007c057600080fd5b6000620007ce8d8d620006f7565b9a50506020620007e18d828e01620006f7565b9950506040620007f48d828e01620006f7565b9850506060620008078d828e0162000768565b97505060806200081a8d828e0162000768565b96505060a06200082d8d828e0162000768565b95505060c0620008408d828e0162000768565b94505060e0620008538d828e01620006f7565b9350506101008b01516001604060020a038111156200087157600080fd5b6200087f8d828e016200070c565b9250506101208b01516001604060020a038111156200089d57600080fd5b620008ab8d828e016200070c565b9150509295989b9194979a5092959850565b600060208284031215620008d057600080fd5b600062000797848462000768565b6000620008ed603a8362000b7f565b600080516020620039c883398151915281527f2050726f706f73616c20706572696f6420746f6f2073686f7274000000000000602082015260400192915050565b60006200093d60358362000b7f565b600080516020620039c883398151915281527f204e61747572616c20556e697420746f6f206c6f770000000000000000000000602082015260400192915050565b60006200098d60388362000b7f565b600080516020620039c883398151915281527f20496e76616c6964206d616e6167657220616464726573730000000000000000602082015260400192915050565b6000620009dd603d8362000b7f565b600080516020620039c883398151915281527f20526562616c616e636520696e74657276616c20746f6f2073686f7274000000602082015260400192915050565b600062000a2d603d8362000b7f565b600080516020620039c883398151915281527f20556e697420736861726573206d75737420626520706f736974697665000000602082015260400192915050565b600062000a7d60378362000b7f565b600080516020620039c883398151915281527f204e61747572616c20556e697420746f6f206c61726765000000000000000000602082015260400192915050565b6020808252810162000ad081620008de565b92915050565b6020808252810162000ad0816200092e565b6020808252810162000ad0816200097e565b6020808252810162000ad081620009ce565b6020808252810162000ad08162000a1e565b6020808252810162000ad08162000a6e565b6040518181016001604060020a038111828210171562000b4f57600080fd5b604052919050565b60006001604060020a0382111562000b6e57600080fd5b506020601f91909101601f19160190565b90815260200190565b6000600160a060020a03821662000ad0565b60005b8381101562000bb757818101518382015260200162000b9d565b8381111562000bc7576000848401525b50505050565b612deb8062000bdd6000396000f3fe608060405234801561001057600080fd5b50600436106102bf5760003560e060020a9004806395d89b4111610186578063c45a0155116100ed578063f0284b1c116100a6578063f75af97f11610080578063f75af97f14610572578063fa2d8c9014610587578063fbfa77cf1461058f578063fccde48f14610597576102bf565b8063f0284b1c1461055a578063f056a9ae14610562578063f2f4eb261461056a576102bf565b8063c45a015514610504578063cb6316991461050c578063cdb026a114610514578063d0ebdbe71461051c578063d600ae481461052f578063dd62ed3e14610547576102bf565b8063a065172b1161013f578063a065172b146104be578063a2e59c91146104c6578063a457c2d7146104ce578063a9059cbb146104e1578063a9faafd9146104f4578063b83d8157146104fc576102bf565b806395d89b411461045057806396213fc7146104585780639979ef451461046057806399d50d5d146104825780639b013aee1461048a5780639dc29fac146104ab576102bf565b8063395093511161022a578063570f3167116101e3578063570f3167146103ef57806357d3810e146103f757806370a082311461040d57806375aff3c1146104205780637632b24b146104285780638618711c1461043b576102bf565b806339509351146103a757806340c10f19146103ba57806342a7cfd5146103cf5780634394380b146103d7578063481c6a75146103df5780634dce7057146103e7576102bf565b806318160ddd1161027c57806318160ddd1461035457806318c53aca1461035c57806323b872dd1461036f5780632c103c791461038257806330b866271461038a578063313ce56714610392576102bf565b80630193aea2146102c4578063027aa9f5146102e257806306fdde03146102f7578063095ea7b31461030c5780630ca60f861461032c57806316d1d9161461034c575b600080fd5b6102cc61059f565b6040516102d99190612a54565b60405180910390f35b6102ea6105a5565b6040516102d99190612981565b6102ff6105eb565b6040516102d991906129d3565b61031f61031a3660046120b5565b610681565b6040516102d991906129b7565b61033f61033a366004612197565b610698565b6040516102d9919061287e565b6102cc6106bf565b6102cc6106c5565b61031f61036a366004611f93565b6106cb565b61031f61037d366004611ff3565b6106df565b6102cc610737565b61033f61073d565b61039a61074c565b6040516102d99190612c6f565b61031f6103b53660046120b5565b610755565b6103cd6103c83660046120b5565b610791565b005b6102cc610850565b6102cc610856565b61033f61085c565b6103cd61086b565b6102cc610ab0565b6103ff610ab6565b6040516102d9929190612ad9565b6102cc61041b366004611f93565b610abf565b6103cd610ada565b6103cd610436366004612040565b610cbc565b610443610ecd565b6040516102d99190612937565b6102ff610f31565b61033f610f92565b61047361046e366004612197565b610fa1565b6040516102d993929190612948565b6104436110d1565b61049d610498366004612197565b61112d565b6040516102d9929190612992565b6103cd6104b93660046120b5565b6111fb565b6102ea61134f565b6102ea6113e5565b61031f6104dc3660046120b5565b61143b565b61031f6104ef3660046120b5565b611477565b6102cc611484565b6102cc61148a565b61033f611490565b61033f61149f565b6102ea6114ae565b6103cd61052a366004611f93565b611508565b6105376115a9565b6040516102d99493929190612b9b565b6102cc610555366004611fb9565b6115b8565b6104436115e3565b6102ea611643565b61033f61169c565b61057a6116b0565b6040516102d991906129c5565b6103cd6116c0565b61033f6117f9565b61033f611808565b600f5481565b60408051600180825281830190925260609182919060208083019080388339019050509050600f54816000815181106105da57fe5b602090810291909101015290505b90565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106775780601f1061064c57610100808354040283529160200191610677565b820191906000526020600020905b81548152906001019060200180831161065a57829003601f168201915b5050505050905090565b600061068e338484611817565b5060015b92915050565b602081815481106106a557fe5b600091825260209091200154600160a060020a0316905081565b60125481565b60025490565b600e54600160a060020a0390811691161490565b60006106ec8484846118a5565b600160a060020a03841660009081526001602090815260408083203380855292529091205461072c918691610727908663ffffffff61196816565b611817565b5060015b9392505050565b60115481565b600e54600160a060020a031681565b60055460ff1690565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161068e918590610727908663ffffffff61197d16565b6005546101009004600160a060020a031633146107cc5760405160e560020a62461bcd0281526004016107c390612a24565b60405180910390fd5b6002600d5460a060020a900460ff1660038111156107e657fe5b14156108075760405160e560020a62461bcd0281526004016107c390612a04565b6003600d5460a060020a900460ff16600381111561082157fe5b14156108425760405160e560020a62461bcd0281526004016107c390612a14565b61084c828261198f565b5050565b600c5481565b60165481565b600d54600160a060020a031681565b73__StartRebalanceLibrary_________________638f1880c4601354601154600d60149054906101000a900460ff1660038111156108a657fe5b6040518463ffffffff1660e060020a0281526004016108c793929190612c47565b60006040518083038186803b1580156108df57600080fd5b505af41580156108f3573d6000803e3d6000fd5b5050600e546014546015546005546007546040517fa569cda100000000000000000000000000000000000000000000000000000000815273__StartRebalanceLibrary_________________975063a569cda1965061097095600160a060020a0390811695811694811693610100900481169216906004016128b5565b60006040518083038186803b15801561098857600080fd5b505af415801561099c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109c49190810190612162565b8051601b908155602080830151601c55604083015180516109e992601d920190611b50565b5060608201518051610a05916003840191602090910190611b50565b5060808201518051610a21916004840191602090910190611b9b565b5050601c546016555042601755600d805474ff0000000000000000000000000000000000000000191674020000000000000000000000000000000000000000179055600e546014546040517fe57340a36ab2ae0bdbec3486f504d5df3a525cd11937e20641f2c64ca126f1c192610aa692600160a060020a039182169291169061289a565b60405180910390a1565b601f5490565b601b54601c5482565b600160a060020a031660009081526020819052604090205490565b600073__SettleRebalanceLibrary________________63495c23bd610afe6106c5565b600c5460145460075460405160e060020a63ffffffff8716028152610b35949392600160a060020a03908116921690600401612af4565b604080518083038186803b158015610b4c57600080fd5b505af4158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b8491908101906121d3565b601654600e54600554600d549395506000945073__FailAuctionLibrary____________________93631ab90ff993928792600160a060020a039182169261010090910490911690601790601b9060a060020a900460ff166003811115610be757fe5b6040518863ffffffff1660e060020a028152600401610c0c9796959493929190612b29565b60206040518083038186803b158015610c2457600080fd5b505af4158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c5c9190810190612203565b90508060ff166003811115610c6d57fe5b600d805474ff0000000000000000000000000000000000000000191660a060020a836003811115610c9a57fe5b021790555042601055601f8054610cb391602091611c09565b5061084c611a3c565b610cc4611c49565b604051806080016040528060008152602001858152602001848152602001838152509050610cf0611c71565b604080516101008082018352600d54600160a060020a038082168452600e5481166020850152600554929092048216938301939093526008548116606083015260065416608082015260105460a082015260125460c08201529060e082019060a060020a900460ff166003811115610d6457fe5b60ff1690526040517f56ca7aa200000000000000000000000000000000000000000000000000000000815290915073__ProposeLibrary________________________906356ca7aa290610dc2908a908a90869088906004016128f7565b60006040518083038186803b158015610dda57600080fd5b505af4158015610dee573d6000803e3d6000fd5b505083516017555050602082015160185560408201516019556060820151601a5560148054600160a060020a0389811673ffffffffffffffffffffffffffffffffffffffff19928316179092556015805492891692909116919091179055426013819055600d805474ff0000000000000000000000000000000000000000191660a060020a179055601154610e83919061197d565b86600160a060020a03167f6a20b1a24d612c34a3b539bd9f3cc66319e62c01bafbc9fc9f5362e2bfbacb3c89604051610ebc919061287e565b60405180910390a350505050505050565b6060601b60040180548060200260200160405190810160405280929190818152602001828054801561067757602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610f0a575050505050905090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106775780601f1061064c57610100808354040283529160200191610677565b601554600160a060020a031681565b6005546040517f773d40cc0000000000000000000000000000000000000000000000000000000081526060918291829173__PlaceBidLibrary_______________________9163773d40cc9161100d9188916101009004600160a060020a031690601b90600401612a62565b60006040518083038186803b15801561102557600080fd5b505af4158015611039573d6000803e3d6000fd5b505050506060806110498661112d565b601c549193509150611061908763ffffffff61196816565b601c55601f805460408051602080840282018101909252828152859285928591908301828280156110bb57602002820191906000526020600020905b8154600160a060020a0316815260019091019060200180831161109d575b5050505050925094509450945050509193909250565b604080516001808252818301909252606091829190602080830190803883395050600e548251929350600160a060020a03169183915060009061111057fe5b600160a060020a0390921660209283029190910190910152905090565b601554600d54606091829173__PlaceBidLibrary_______________________91635a6bff16918691600160a060020a031690601b9060179060a060020a900460ff16600381111561117b57fe5b6040518663ffffffff1660e060020a02815260040161119e959493929190612a8f565b60006040518083038186803b1580156111b657600080fd5b505af41580156111ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111f291908101906120e5565b91509150915091565b6002600d5460a060020a900460ff16600381111561121557fe5b14156112365760405160e560020a62461bcd0281526004016107c390612a34565b6003600d5460a060020a900460ff16600381111561125057fe5b1415611313576009546040517f5e633498000000000000000000000000000000000000000000000000000000008152600160a060020a0390911690635e6334989061129f90339060040161288c565b60206040518083038186803b1580156112b757600080fd5b505afa1580156112cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112ef9190810190612144565b61130e5760405160e560020a62461bcd0281526004016107c390612a44565b611345565b6005546101009004600160a060020a031633146113455760405160e560020a62461bcd0281526004016107c3906129e4565b61084c8282611ab2565b60408051600480825260a08201909252606091829190602082016080803883390190505090506017600001548160008151811061138857fe5b602002602001018181525050601760010154816001815181106113a757fe5b602002602001018181525050601760020154816002815181106113c657fe5b602002602001018181525050601760030154816003815181106105da57fe5b604080516002808252606080830184529283929190602083019080388339019050509050601b600001548160008151811061141c57fe5b602002602001018181525050601b60010154816001815181106105da57fe5b336000818152600160209081526040808320600160a060020a0387168452909152812054909161068e918590610727908663ffffffff61196816565b600061068e3384846118a5565b60135481565b60105481565b600654600160a060020a031681565b601454600160a060020a031681565b6060601b60030180548060200260200160405190810160405280929190818152602001828054801561067757602002820191906000526020600020905b8154815260200190600101908083116114eb575050505050905090565b600d54600160a060020a031633146115355760405160e560020a62461bcd0281526004016107c3906129f4565b600d546040517ff9c15f5b74b4e002e8881b2d9810116b1d4d45461e6dd7ac8111381b592e2c6591611572918491600160a060020a03169061289a565b60405180910390a1600d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b601754601854601954601a5484565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6060602080548060200260200160405190810160405280929190818152602001828054801561067757602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610f0a575050505050905090565b6060601b60020180548060200260200160405190810160405280929190818152602001828054801561067757602002820191906000526020600020908154815260200190600101908083116114eb575050505050905090565b6005546101009004600160a060020a031681565b600d5460a060020a900460ff1681565b73__SettleRebalanceLibrary________________63084f9bce6116e26106c5565b601c54601b54600c54601454600554600754600d54600160a060020a03938416936101009093048316929091169060a060020a900460ff16600381111561172557fe5b6040518963ffffffff1660e060020a02815260040161174b989796959493929190612bd0565b60206040518083038186803b15801561176357600080fd5b505af4158015611777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061179b91908101906121b5565b600f55601454600e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0390921691909117905542601055600d805474ff0000000000000000000000000000000000000000191690556117f7611a3c565b565b600754600160a060020a031681565b600854600160a060020a031681565b600160a060020a03821661182a57600080fd5b600160a060020a03831661183d57600080fd5b600160a060020a0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611898908590612a54565b60405180910390a3505050565b600160a060020a0382166118b857600080fd5b600160a060020a0383166000908152602081905260409020546118e1908263ffffffff61196816565b600160a060020a038085166000908152602081905260408082209390935590841681522054611916908263ffffffff61197d16565b600160a060020a0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611898908590612a54565b60008282111561197757600080fd5b50900390565b60008282018381101561073057600080fd5b600160a060020a0382166119a257600080fd5b6002546119b5908263ffffffff61197d16565b600255600160a060020a0382166000908152602081905260409020546119e1908263ffffffff61197d16565b600160a060020a0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a30908590612a54565b60405180910390a35050565b6014805473ffffffffffffffffffffffffffffffffffffffff1990811690915560158054909116905560006016819055601781905560188190556019819055601a819055601b818155601c82905590611a96601d82611cb5565b611aa4600383016000611cb5565b61084c600483016000611cb5565b600160a060020a038216611ac557600080fd5b600254611ad8908263ffffffff61196816565b600255600160a060020a038216600090815260208190526040902054611b04908263ffffffff61196816565b600160a060020a0383166000818152602081905260408082209390935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a30908590612a54565b828054828255906000526020600020908101928215611b8b579160200282015b82811115611b8b578251825591602001919060010190611b70565b50611b97929150611cd6565b5090565b828054828255906000526020600020908101928215611bfd579160200282015b82811115611bfd578251825473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909116178255602090920191600190910190611bbb565b50611b97929150611cf0565b828054828255906000526020600020908101928215611bfd5760005260206000209182015b82811115611bfd578254825591600101919060010190611c2e565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b5080546000825590600052602060002090810190611cd39190611cd6565b50565b6105e891905b80821115611b975760008155600101611cdc565b6105e891905b80821115611b9757805473ffffffffffffffffffffffffffffffffffffffff19168155600101611cf6565b60006107308235612cee565b60006107308251612cee565b600082601f830112611d4a57600080fd5b8151611d5d611d5882612ca4565b612c7d565b91508181835260208401935060208101905083856020840282011115611d8257600080fd5b60005b83811015611dae5781611d988882611d2d565b8452506020928301929190910190600101611d85565b5050505092915050565b600082601f830112611dc957600080fd5b8151611dd7611d5882612ca4565b91508181835260208401935060208101905083856020840282011115611dfc57600080fd5b60005b83811015611dae5781611e128882611f7b565b8452506020928301929190910190600101611dff565b600082601f830112611e3957600080fd5b8151611e47611d5882612ca4565b91508181835260208401935060208101905083856020840282011115611e6c57600080fd5b60005b83811015611dae5781611e828882611f7b565b8452506020928301929190910190600101611e6f565b60006107308251612cf9565b600060a08284031215611eb657600080fd5b611ec060a0612c7d565b90506000611ece8484611f7b565b8252506020611edf84848301611f7b565b602083015250604082015167ffffffffffffffff811115611eff57600080fd5b611f0b84828501611db8565b604083015250606082015167ffffffffffffffff811115611f2b57600080fd5b611f3784828501611db8565b606083015250608082015167ffffffffffffffff811115611f5757600080fd5b611f6384828501611d39565b60808301525092915050565b600061073082356105e8565b600061073082516105e8565b60006107308251612d16565b600060208284031215611fa557600080fd5b6000611fb18484611d21565b949350505050565b60008060408385031215611fcc57600080fd5b6000611fd88585611d21565b9250506020611fe985828601611d21565b9150509250929050565b60008060006060848603121561200857600080fd5b60006120148686611d21565b935050602061202586828701611d21565b925050604061203686828701611f6f565b9150509250925092565b600080600080600060a0868803121561205857600080fd5b60006120648888611d21565b955050602061207588828901611d21565b945050604061208688828901611f6f565b935050606061209788828901611f6f565b92505060806120a888828901611f6f565b9150509295509295909350565b600080604083850312156120c857600080fd5b60006120d48585611d21565b9250506020611fe985828601611f6f565b600080604083850312156120f857600080fd5b825167ffffffffffffffff81111561210f57600080fd5b61211b85828601611e28565b925050602083015167ffffffffffffffff81111561213857600080fd5b611fe985828601611e28565b60006020828403121561215657600080fd5b6000611fb18484611e98565b60006020828403121561217457600080fd5b815167ffffffffffffffff81111561218b57600080fd5b611fb184828501611ea4565b6000602082840312156121a957600080fd5b6000611fb18484611f6f565b6000602082840312156121c757600080fd5b6000611fb18484611f7b565b600080604083850312156121e657600080fd5b60006121f28585611f7b565b9250506020611fe985828601611f7b565b60006020828403121561221557600080fd5b6000611fb18484611f87565b600061222d8383612250565b505060200190565b600061222d838361286c565b61224a81612d1c565b82525050565b61224a81612cee565b600061226482612cd7565b61226e8185612ce5565b935061227983612cc5565b60005b828110156122a45761228f868351612221565b955061229a82612cc5565b915060010161227c565b5093949350505050565b60006122b982612cdb565b6122c38185612ce5565b93506122ce83612ccb565b60005b828110156122a4576122eb866122e684612d8f565b612221565b95506122f682612cdf565b91506001016122d1565b600061230b82612cd7565b6123158185612ce5565b935061232083612cc5565b60005b828110156122a457612336868351612235565b955061234182612cc5565b9150600101612323565b600061235682612cdb565b6123608185612ce5565b935061236b83612ccb565b60005b828110156122a4576123888661238384612d9b565b612235565b955061239382612cdf565b915060010161236e565b61224a81612cf9565b61224a81612d27565b60006123ba82612cd7565b6123c48185612ce5565b93506123d4818560208601612d3d565b6123dd81612da7565b9093019392505050565b60006123f4602d83612ce5565b7f526562616c616e63696e67536574546f6b656e2e6275726e3a2053656e64657281527f206d75737420626520636f726500000000000000000000000000000000000000602082015260400192915050565b6000612453603a83612ce5565b7f526562616c616e63696e67536574546f6b656e2e7365744d616e616765723a2081527f53656e646572206d75737420626520746865206d616e61676572000000000000602082015260400192915050565b60006124b2603683612ce5565b7f526562616c616e63696e67536574546f6b656e2e6d696e743a2043616e6e6f7481527f206d696e7420647572696e6720526562616c616e636500000000000000000000602082015260400192915050565b6000612511603583612ce5565b7f526562616c616e63696e67536574546f6b656e2e6d696e743a2043616e6e6f7481527f206d696e7420647572696e672044726177646f776e0000000000000000000000602082015260400192915050565b6000612570602d83612ce5565b7f526562616c616e63696e67536574546f6b656e2e6d696e743a2053656e64657281527f206d75737420626520636f726500000000000000000000000000000000000000602082015260400192915050565b60006125cf603683612ce5565b7f526562616c616e63696e67536574546f6b656e2e6275726e3a2043616e6e6f7481527f206275726e20647572696e6720526562616c616e636500000000000000000000602082015260400192915050565b600061262e604083612ce5565b7f526562616c616e63696e67536574546f6b656e2e6275726e3a2053657420636181527f6e6e6f742062652072656465656d656420647572696e672044726177646f776e602082015260400192915050565b80516080830190612691848261286c565b5060208201516126a4602085018261286c565b5060408201516126b7604085018261286c565b5060608201516126ca606085018261286c565b50505050565b805460808301906126e081612d7c565b6126ea858261286c565b505060018201546126fa81612d7c565b612707602086018261286c565b5050600282015461271781612d7c565b612724604086018261286c565b5050600382015461273481612d7c565b612741606086018261286c565b5050505050565b805460009060a084019061275b81612d7c565b612765868261286c565b5050600183015461277581612d7c565b612782602087018261286c565b50600284018583036040870152612799838261234b565b9250506003840185830360608701526127b2838261234b565b9250506004840185830360808701526127cb83826122ae565b9695505050505050565b80516101008301906127e78482612250565b5060208201516127fa6020850182612250565b50604082015161280d6040850182612250565b5060608201516128206060850182612250565b5060808201516128336080850182612250565b5060a082015161284660a085018261286c565b5060c082015161285960c085018261286c565b5060e08201516126ca60e0850182612875565b61224a816105e8565b61224a81612d16565b602081016106928284612250565b602081016106928284612241565b604081016128a88285612250565b6107306020830184612250565b60a081016128c38288612250565b6128d06020830187612250565b6128dd6040830186612250565b6128ea6060830185612250565b6127cb6080830184612250565b6101c081016129068287612250565b6129136020830186612250565b61292060408301856127d5565b61292e610140830184612680565b95945050505050565b602080825281016107308184612259565b606080825281016129598186612259565b9050818103602083015261296d8185612300565b9050818103604083015261292e8184612300565b602080825281016107308184612300565b604080825281016129a38185612300565b90508181036020830152611fb18184612300565b60208101610692828461239d565b6020810161069282846123a6565b6020808252810161073081846123af565b60208082528101610692816123e7565b6020808252810161069281612446565b60208082528101610692816124a5565b6020808252810161069281612504565b6020808252810161069281612563565b60208082528101610692816125c2565b6020808252810161069281612621565b60208101610692828461286c565b60608101612a70828661286c565b612a7d6020830185612250565b818103604083015261292e8184612748565b6101008101612a9e828861286c565b612aab6020830187612250565b8181036040830152612abd8186612748565b9050612acc60608301856126d0565b6127cb60e0830184612875565b60408101612ae7828561286c565b610730602083018461286c565b60808101612b02828761286c565b612b0f602083018661286c565b612b1c6040830185612250565b61292e6060830184612250565b6101408101612b38828a61286c565b612b45602083018961286c565b612b526040830188612250565b612b5f6060830187612250565b612b6c60808301866126d0565b818103610100830152612b7f8185612748565b9050612b8f610120830184612875565b98975050505050505050565b60808101612ba9828761286c565b612bb6602083018661286c565b612bc3604083018561286c565b61292e606083018461286c565b6101008101612bdf828b61286c565b612bec602083018a61286c565b612bf9604083018961286c565b612c06606083018861286c565b612c136080830187612250565b612c2060a0830186612250565b612c2d60c0830185612250565b612c3a60e0830184612875565b9998505050505050505050565b60608101612c55828661286c565b612c62602083018561286c565b611fb16040830184612875565b602081016106928284612875565b60405181810167ffffffffffffffff81118282101715612c9c57600080fd5b604052919050565b600067ffffffffffffffff821115612cbb57600080fd5b5060209081020190565b60200190565b60009081526020902090565b5190565b5490565b60010190565b90815260200190565b600061069282612d0a565b151590565b600060048210611b9757fe5b600160a060020a031690565b60ff1690565b600061069282612d32565b600061069282612cfe565b600061069282612cee565b60005b83811015612d58578181015183820152602001612d40565b838111156126ca5750506000910152565b6000610692612d77836105e8565b612d0a565b6000610692612d8a836105e8565b6105e8565b60006106928254612d69565b60006106928254612d7c565b601f01601f19169056fea265627a7a72305820aea6f6b37f61bd6d2f13b8133a0f772555812ec1a5b7ca6cade4748f9e25f9896c6578706572696d656e74616cf50037526562616c616e63696e67536574546f6b656e2e636f6e7374727563746f723a",
deployedBytecode:"0x608060405234801561001057600080fd5b50600436106102bf5760003560e060020a9004806395d89b4111610186578063c45a0155116100ed578063f0284b1c116100a6578063f75af97f11610080578063f75af97f14610572578063fa2d8c9014610587578063fbfa77cf1461058f578063fccde48f14610597576102bf565b8063f0284b1c1461055a578063f056a9ae14610562578063f2f4eb261461056a576102bf565b8063c45a015514610504578063cb6316991461050c578063cdb026a114610514578063d0ebdbe71461051c578063d600ae481461052f578063dd62ed3e14610547576102bf565b8063a065172b1161013f578063a065172b146104be578063a2e59c91146104c6578063a457c2d7146104ce578063a9059cbb146104e1578063a9faafd9146104f4578063b83d8157146104fc576102bf565b806395d89b411461045057806396213fc7146104585780639979ef451461046057806399d50d5d146104825780639b013aee1461048a5780639dc29fac146104ab576102bf565b8063395093511161022a578063570f3167116101e3578063570f3167146103ef57806357d3810e146103f757806370a082311461040d57806375aff3c1146104205780637632b24b146104285780638618711c1461043b576102bf565b806339509351146103a757806340c10f19146103ba57806342a7cfd5146103cf5780634394380b146103d7578063481c6a75146103df5780634dce7057146103e7576102bf565b806318160ddd1161027c57806318160ddd1461035457806318c53aca1461035c57806323b872dd1461036f5780632c103c791461038257806330b866271461038a578063313ce56714610392576102bf565b80630193aea2146102c4578063027aa9f5146102e257806306fdde03146102f7578063095ea7b31461030c5780630ca60f861461032c57806316d1d9161461034c575b600080fd5b6102cc61059f565b6040516102d99190612a54565b60405180910390f35b6102ea6105a5565b6040516102d99190612981565b6102ff6105eb565b6040516102d991906129d3565b61031f61031a3660046120b5565b610681565b6040516102d991906129b7565b61033f61033a366004612197565b610698565b6040516102d9919061287e565b6102cc6106bf565b6102cc6106c5565b61031f61036a366004611f93565b6106cb565b61031f61037d366004611ff3565b6106df565b6102cc610737565b61033f61073d565b61039a61074c565b6040516102d99190612c6f565b61031f6103b53660046120b5565b610755565b6103cd6103c83660046120b5565b610791565b005b6102cc610850565b6102cc610856565b61033f61085c565b6103cd61086b565b6102cc610ab0565b6103ff610ab6565b6040516102d9929190612ad9565b6102cc61041b366004611f93565b610abf565b6103cd610ada565b6103cd610436366004612040565b610cbc565b610443610ecd565b6040516102d99190612937565b6102ff610f31565b61033f610f92565b61047361046e366004612197565b610fa1565b6040516102d993929190612948565b6104436110d1565b61049d610498366004612197565b61112d565b6040516102d9929190612992565b6103cd6104b93660046120b5565b6111fb565b6102ea61134f565b6102ea6113e5565b61031f6104dc3660046120b5565b61143b565b61031f6104ef3660046120b5565b611477565b6102cc611484565b6102cc61148a565b61033f611490565b61033f61149f565b6102ea6114ae565b6103cd61052a366004611f93565b611508565b6105376115a9565b6040516102d99493929190612b9b565b6102cc610555366004611fb9565b6115b8565b6104436115e3565b6102ea611643565b61033f61169c565b61057a6116b0565b6040516102d991906129c5565b6103cd6116c0565b61033f6117f9565b61033f611808565b600f5481565b60408051600180825281830190925260609182919060208083019080388339019050509050600f54816000815181106105da57fe5b602090810291909101015290505b90565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106775780601f1061064c57610100808354040283529160200191610677565b820191906000526020600020905b81548152906001019060200180831161065a57829003601f168201915b5050505050905090565b600061068e338484611817565b5060015b92915050565b602081815481106106a557fe5b600091825260209091200154600160a060020a0316905081565b60125481565b60025490565b600e54600160a060020a0390811691161490565b60006106ec8484846118a5565b600160a060020a03841660009081526001602090815260408083203380855292529091205461072c918691610727908663ffffffff61196816565b611817565b5060015b9392505050565b60115481565b600e54600160a060020a031681565b60055460ff1690565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161068e918590610727908663ffffffff61197d16565b6005546101009004600160a060020a031633146107cc5760405160e560020a62461bcd0281526004016107c390612a24565b60405180910390fd5b6002600d5460a060020a900460ff1660038111156107e657fe5b14156108075760405160e560020a62461bcd0281526004016107c390612a04565b6003600d5460a060020a900460ff16600381111561082157fe5b14156108425760405160e560020a62461bcd0281526004016107c390612a14565b61084c828261198f565b5050565b600c5481565b60165481565b600d54600160a060020a031681565b73__StartRebalanceLibrary_________________638f1880c4601354601154600d60149054906101000a900460ff1660038111156108a657fe5b6040518463ffffffff1660e060020a0281526004016108c793929190612c47565b60006040518083038186803b1580156108df57600080fd5b505af41580156108f3573d6000803e3d6000fd5b5050600e546014546015546005546007546040517fa569cda100000000000000000000000000000000000000000000000000000000815273__StartRebalanceLibrary_________________975063a569cda1965061097095600160a060020a0390811695811694811693610100900481169216906004016128b5565b60006040518083038186803b15801561098857600080fd5b505af415801561099c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109c49190810190612162565b8051601b908155602080830151601c55604083015180516109e992601d920190611b50565b5060608201518051610a05916003840191602090910190611b50565b5060808201518051610a21916004840191602090910190611b9b565b5050601c546016555042601755600d805474ff0000000000000000000000000000000000000000191674020000000000000000000000000000000000000000179055600e546014546040517fe57340a36ab2ae0bdbec3486f504d5df3a525cd11937e20641f2c64ca126f1c192610aa692600160a060020a039182169291169061289a565b60405180910390a1565b601f5490565b601b54601c5482565b600160a060020a031660009081526020819052604090205490565b600073__SettleRebalanceLibrary________________63495c23bd610afe6106c5565b600c5460145460075460405160e060020a63ffffffff8716028152610b35949392600160a060020a03908116921690600401612af4565b604080518083038186803b158015610b4c57600080fd5b505af4158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b8491908101906121d3565b601654600e54600554600d549395506000945073__FailAuctionLibrary____________________93631ab90ff993928792600160a060020a039182169261010090910490911690601790601b9060a060020a900460ff166003811115610be757fe5b6040518863ffffffff1660e060020a028152600401610c0c9796959493929190612b29565b60206040518083038186803b158015610c2457600080fd5b505af4158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c5c9190810190612203565b90508060ff166003811115610c6d57fe5b600d805474ff0000000000000000000000000000000000000000191660a060020a836003811115610c9a57fe5b021790555042601055601f8054610cb391602091611c09565b5061084c611a3c565b610cc4611c49565b604051806080016040528060008152602001858152602001848152602001838152509050610cf0611c71565b604080516101008082018352600d54600160a060020a038082168452600e5481166020850152600554929092048216938301939093526008548116606083015260065416608082015260105460a082015260125460c08201529060e082019060a060020a900460ff166003811115610d6457fe5b60ff1690526040517f56ca7aa200000000000000000000000000000000000000000000000000000000815290915073__ProposeLibrary________________________906356ca7aa290610dc2908a908a90869088906004016128f7565b60006040518083038186803b158015610dda57600080fd5b505af4158015610dee573d6000803e3d6000fd5b505083516017555050602082015160185560408201516019556060820151601a5560148054600160a060020a0389811673ffffffffffffffffffffffffffffffffffffffff19928316179092556015805492891692909116919091179055426013819055600d805474ff0000000000000000000000000000000000000000191660a060020a179055601154610e83919061197d565b86600160a060020a03167f6a20b1a24d612c34a3b539bd9f3cc66319e62c01bafbc9fc9f5362e2bfbacb3c89604051610ebc919061287e565b60405180910390a350505050505050565b6060601b60040180548060200260200160405190810160405280929190818152602001828054801561067757602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610f0a575050505050905090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106775780601f1061064c57610100808354040283529160200191610677565b601554600160a060020a031681565b6005546040517f773d40cc0000000000000000000000000000000000000000000000000000000081526060918291829173__PlaceBidLibrary_______________________9163773d40cc9161100d9188916101009004600160a060020a031690601b90600401612a62565b60006040518083038186803b15801561102557600080fd5b505af4158015611039573d6000803e3d6000fd5b505050506060806110498661112d565b601c549193509150611061908763ffffffff61196816565b601c55601f805460408051602080840282018101909252828152859285928591908301828280156110bb57602002820191906000526020600020905b8154600160a060020a0316815260019091019060200180831161109d575b5050505050925094509450945050509193909250565b604080516001808252818301909252606091829190602080830190803883395050600e548251929350600160a060020a03169183915060009061111057fe5b600160a060020a0390921660209283029190910190910152905090565b601554600d54606091829173__PlaceBidLibrary_______________________91635a6bff16918691600160a060020a031690601b9060179060a060020a900460ff16600381111561117b57fe5b6040518663ffffffff1660e060020a02815260040161119e959493929190612a8f565b60006040518083038186803b1580156111b657600080fd5b505af41580156111ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111f291908101906120e5565b91509150915091565b6002600d5460a060020a900460ff16600381111561121557fe5b14156112365760405160e560020a62461bcd0281526004016107c390612a34565b6003600d5460a060020a900460ff16600381111561125057fe5b1415611313576009546040517f5e633498000000000000000000000000000000000000000000000000000000008152600160a060020a0390911690635e6334989061129f90339060040161288c565b60206040518083038186803b1580156112b757600080fd5b505afa1580156112cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112ef9190810190612144565b61130e5760405160e560020a62461bcd0281526004016107c390612a44565b611345565b6005546101009004600160a060020a031633146113455760405160e560020a62461bcd0281526004016107c3906129e4565b61084c8282611ab2565b60408051600480825260a08201909252606091829190602082016080803883390190505090506017600001548160008151811061138857fe5b602002602001018181525050601760010154816001815181106113a757fe5b602002602001018181525050601760020154816002815181106113c657fe5b602002602001018181525050601760030154816003815181106105da57fe5b604080516002808252606080830184529283929190602083019080388339019050509050601b600001548160008151811061141c57fe5b602002602001018181525050601b60010154816001815181106105da57fe5b336000818152600160209081526040808320600160a060020a0387168452909152812054909161068e918590610727908663ffffffff61196816565b600061068e3384846118a5565b60135481565b60105481565b600654600160a060020a031681565b601454600160a060020a031681565b6060601b60030180548060200260200160405190810160405280929190818152602001828054801561067757602002820191906000526020600020905b8154815260200190600101908083116114eb575050505050905090565b600d54600160a060020a031633146115355760405160e560020a62461bcd0281526004016107c3906129f4565b600d546040517ff9c15f5b74b4e002e8881b2d9810116b1d4d45461e6dd7ac8111381b592e2c6591611572918491600160a060020a03169061289a565b60405180910390a1600d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b601754601854601954601a5484565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6060602080548060200260200160405190810160405280929190818152602001828054801561067757602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610f0a575050505050905090565b6060601b60020180548060200260200160405190810160405280929190818152602001828054801561067757602002820191906000526020600020908154815260200190600101908083116114eb575050505050905090565b6005546101009004600160a060020a031681565b600d5460a060020a900460ff1681565b73__SettleRebalanceLibrary________________63084f9bce6116e26106c5565b601c54601b54600c54601454600554600754600d54600160a060020a03938416936101009093048316929091169060a060020a900460ff16600381111561172557fe5b6040518963ffffffff1660e060020a02815260040161174b989796959493929190612bd0565b60206040518083038186803b15801561176357600080fd5b505af4158015611777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061179b91908101906121b5565b600f55601454600e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0390921691909117905542601055600d805474ff0000000000000000000000000000000000000000191690556117f7611a3c565b565b600754600160a060020a031681565b600854600160a060020a031681565b600160a060020a03821661182a57600080fd5b600160a060020a03831661183d57600080fd5b600160a060020a0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611898908590612a54565b60405180910390a3505050565b600160a060020a0382166118b857600080fd5b600160a060020a0383166000908152602081905260409020546118e1908263ffffffff61196816565b600160a060020a038085166000908152602081905260408082209390935590841681522054611916908263ffffffff61197d16565b600160a060020a0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611898908590612a54565b60008282111561197757600080fd5b50900390565b60008282018381101561073057600080fd5b600160a060020a0382166119a257600080fd5b6002546119b5908263ffffffff61197d16565b600255600160a060020a0382166000908152602081905260409020546119e1908263ffffffff61197d16565b600160a060020a0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a30908590612a54565b60405180910390a35050565b6014805473ffffffffffffffffffffffffffffffffffffffff1990811690915560158054909116905560006016819055601781905560188190556019819055601a819055601b818155601c82905590611a96601d82611cb5565b611aa4600383016000611cb5565b61084c600483016000611cb5565b600160a060020a038216611ac557600080fd5b600254611ad8908263ffffffff61196816565b600255600160a060020a038216600090815260208190526040902054611b04908263ffffffff61196816565b600160a060020a0383166000818152602081905260408082209390935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611a30908590612a54565b828054828255906000526020600020908101928215611b8b579160200282015b82811115611b8b578251825591602001919060010190611b70565b50611b97929150611cd6565b5090565b828054828255906000526020600020908101928215611bfd579160200282015b82811115611bfd578251825473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909116178255602090920191600190910190611bbb565b50611b97929150611cf0565b828054828255906000526020600020908101928215611bfd5760005260206000209182015b82811115611bfd578254825591600101919060010190611c2e565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b5080546000825590600052602060002090810190611cd39190611cd6565b50565b6105e891905b80821115611b975760008155600101611cdc565b6105e891905b80821115611b9757805473ffffffffffffffffffffffffffffffffffffffff19168155600101611cf6565b60006107308235612cee565b60006107308251612cee565b600082601f830112611d4a57600080fd5b8151611d5d611d5882612ca4565b612c7d565b91508181835260208401935060208101905083856020840282011115611d8257600080fd5b60005b83811015611dae5781611d988882611d2d565b8452506020928301929190910190600101611d85565b5050505092915050565b600082601f830112611dc957600080fd5b8151611dd7611d5882612ca4565b91508181835260208401935060208101905083856020840282011115611dfc57600080fd5b60005b83811015611dae5781611e128882611f7b565b8452506020928301929190910190600101611dff565b600082601f830112611e3957600080fd5b8151611e47611d5882612ca4565b91508181835260208401935060208101905083856020840282011115611e6c57600080fd5b60005b83811015611dae5781611e828882611f7b565b8452506020928301929190910190600101611e6f565b60006107308251612cf9565b600060a08284031215611eb657600080fd5b611ec060a0612c7d565b90506000611ece8484611f7b565b8252506020611edf84848301611f7b565b602083015250604082015167ffffffffffffffff811115611eff57600080fd5b611f0b84828501611db8565b604083015250606082015167ffffffffffffffff811115611f2b57600080fd5b611f3784828501611db8565b606083015250608082015167ffffffffffffffff811115611f5757600080fd5b611f6384828501611d39565b60808301525092915050565b600061073082356105e8565b600061073082516105e8565b60006107308251612d16565b600060208284031215611fa557600080fd5b6000611fb18484611d21565b949350505050565b60008060408385031215611fcc57600080fd5b6000611fd88585611d21565b9250506020611fe985828601611d21565b9150509250929050565b60008060006060848603121561200857600080fd5b60006120148686611d21565b935050602061202586828701611d21565b925050604061203686828701611f6f565b9150509250925092565b600080600080600060a0868803121561205857600080fd5b60006120648888611d21565b955050602061207588828901611d21565b945050604061208688828901611f6f565b935050606061209788828901611f6f565b92505060806120a888828901611f6f565b9150509295509295909350565b600080604083850312156120c857600080fd5b60006120d48585611d21565b9250506020611fe985828601611f6f565b600080604083850312156120f857600080fd5b825167ffffffffffffffff81111561210f57600080fd5b61211b85828601611e28565b925050602083015167ffffffffffffffff81111561213857600080fd5b611fe985828601611e28565b60006020828403121561215657600080fd5b6000611fb18484611e98565b60006020828403121561217457600080fd5b815167ffffffffffffffff81111561218b57600080fd5b611fb184828501611ea4565b6000602082840312156121a957600080fd5b6000611fb18484611f6f565b6000602082840312156121c757600080fd5b6000611fb18484611f7b565b600080604083850312156121e657600080fd5b60006121f28585611f7b565b9250506020611fe985828601611f7b565b60006020828403121561221557600080fd5b6000611fb18484611f87565b600061222d8383612250565b505060200190565b600061222d838361286c565b61224a81612d1c565b82525050565b61224a81612cee565b600061226482612cd7565b61226e8185612ce5565b935061227983612cc5565b60005b828110156122a45761228f868351612221565b955061229a82612cc5565b915060010161227c565b5093949350505050565b60006122b982612cdb565b6122c38185612ce5565b93506122ce83612ccb565b60005b828110156122a4576122eb866122e684612d8f565b612221565b95506122f682612cdf565b91506001016122d1565b600061230b82612cd7565b6123158185612ce5565b935061232083612cc5565b60005b828110156122a457612336868351612235565b955061234182612cc5565b9150600101612323565b600061235682612cdb565b6123608185612ce5565b935061236b83612ccb565b60005b828110156122a4576123888661238384612d9b565b612235565b955061239382612cdf565b915060010161236e565b61224a81612cf9565b61224a81612d27565b60006123ba82612cd7565b6123c48185612ce5565b93506123d4818560208601612d3d565b6123dd81612da7565b9093019392505050565b60006123f4602d83612ce5565b7f526562616c616e63696e67536574546f6b656e2e6275726e3a2053656e64657281527f206d75737420626520636f726500000000000000000000000000000000000000602082015260400192915050565b6000612453603a83612ce5565b7f526562616c616e63696e67536574546f6b656e2e7365744d616e616765723a2081527f53656e646572206d75737420626520746865206d616e61676572000000000000602082015260400192915050565b60006124b2603683612ce5565b7f526562616c616e63696e67536574546f6b656e2e6d696e743a2043616e6e6f7481527f206d696e7420647572696e6720526562616c616e636500000000000000000000602082015260400192915050565b6000612511603583612ce5565b7f526562616c616e63696e67536574546f6b656e2e6d696e743a2043616e6e6f7481527f206d696e7420647572696e672044726177646f776e0000000000000000000000602082015260400192915050565b6000612570602d83612ce5565b7f526562616c616e63696e67536574546f6b656e2e6d696e743a2053656e64657281527f206d75737420626520636f726500000000000000000000000000000000000000602082015260400192915050565b60006125cf603683612ce5565b7f526562616c616e63696e67536574546f6b656e2e6275726e3a2043616e6e6f7481527f206275726e20647572696e6720526562616c616e636500000000000000000000602082015260400192915050565b600061262e604083612ce5565b7f526562616c616e63696e67536574546f6b656e2e6275726e3a2053657420636181527f6e6e6f742062652072656465656d656420647572696e672044726177646f776e602082015260400192915050565b80516080830190612691848261286c565b5060208201516126a4602085018261286c565b5060408201516126b7604085018261286c565b5060608201516126ca606085018261286c565b50505050565b805460808301906126e081612d7c565b6126ea858261286c565b505060018201546126fa81612d7c565b612707602086018261286c565b5050600282015461271781612d7c565b612724604086018261286c565b5050600382015461273481612d7c565b612741606086018261286c565b5050505050565b805460009060a084019061275b81612d7c565b612765868261286c565b5050600183015461277581612d7c565b612782602087018261286c565b50600284018583036040870152612799838261234b565b9250506003840185830360608701526127b2838261234b565b9250506004840185830360808701526127cb83826122ae565b9695505050505050565b80516101008301906127e78482612250565b5060208201516127fa6020850182612250565b50604082015161280d6040850182612250565b5060608201516128206060850182612250565b5060808201516128336080850182612250565b5060a082015161284660a085018261286c565b5060c082015161285960c085018261286c565b5060e08201516126ca60e0850182612875565b61224a816105e8565b61224a81612d16565b602081016106928284612250565b602081016106928284612241565b604081016128a88285612250565b6107306020830184612250565b60a081016128c38288612250565b6128d06020830187612250565b6128dd6040830186612250565b6128ea6060830185612250565b6127cb6080830184612250565b6101c081016129068287612250565b6129136020830186612250565b61292060408301856127d5565b61292e610140830184612680565b95945050505050565b602080825281016107308184612259565b606080825281016129598186612259565b9050818103602083015261296d8185612300565b9050818103604083015261292e8184612300565b602080825281016107308184612300565b604080825281016129a38185612300565b90508181036020830152611fb18184612300565b60208101610692828461239d565b6020810161069282846123a6565b6020808252810161073081846123af565b60208082528101610692816123e7565b6020808252810161069281612446565b60208082528101610692816124a5565b6020808252810161069281612504565b6020808252810161069281612563565b60208082528101610692816125c2565b6020808252810161069281612621565b60208101610692828461286c565b60608101612a70828661286c565b612a7d6020830185612250565b818103604083015261292e8184612748565b6101008101612a9e828861286c565b612aab6020830187612250565b8181036040830152612abd8186612748565b9050612acc60608301856126d0565b6127cb60e0830184612875565b60408101612ae7828561286c565b610730602083018461286c565b60808101612b02828761286c565b612b0f602083018661286c565b612b1c6040830185612250565b61292e6060830184612250565b6101408101612b38828a61286c565b612b45602083018961286c565b612b526040830188612250565b612b5f6060830187612250565b612b6c60808301866126d0565b818103610100830152612b7f8185612748565b9050612b8f610120830184612875565b98975050505050505050565b60808101612ba9828761286c565b612bb6602083018661286c565b612bc3604083018561286c565b61292e606083018461286c565b6101008101612bdf828b61286c565b612bec602083018a61286c565b612bf9604083018961286c565b612c06606083018861286c565b612c136080830187612250565b612c2060a0830186612250565b612c2d60c0830185612250565b612c3a60e0830184612875565b9998505050505050505050565b60608101612c55828661286c565b612c62602083018561286c565b611fb16040830184612875565b602081016106928284612875565b60405181810167ffffffffffffffff81118282101715612c9c57600080fd5b604052919050565b600067ffffffffffffffff821115612cbb57600080fd5b5060209081020190565b60200190565b60009081526020902090565b5190565b5490565b60010190565b90815260200190565b600061069282612d0a565b151590565b600060048210611b9757fe5b600160a060020a031690565b60ff1690565b600061069282612d32565b600061069282612cfe565b600061069282612cee565b60005b83811015612d58578181015183820152602001612d40565b838111156126ca5750506000910152565b6000610692612d77836105e8565b612d0a565b6000610692612d8a836105e8565b6105e8565b60006106928254612d69565b60006106928254612d7c565b601f01601f19169056fea265627a7a72305820aea6f6b37f61bd6d2f13b8133a0f772555812ec1a5b7ca6cade4748f9e25f9896c6578706572696d656e74616cf50037",sourceMap:"1900:19416:73:-;;;4561:2315;8:9:-1;5:2;;;30:1;27;20:12;5:2;4561:2315:73;;;;;;;;;;;;;;;;;;;;;;;;4942:5;4961:7;4982:2;501:4:169;493:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;515:16:169;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:169;:20;;-1:-1:-1;;541:20:169;;;;;;;;;;;;-1:-1:-1;5081:22:73;;-1:-1:-1;5060:130:73;;;;-1:-1:-1;;;;;5060:130:73;;;;;;;;;;;;;;;;;5201:35;5262:8;5201:70;;5319:12;-1:-1:-1;;;;;5319:31:73;;:33;;;;;-1:-1:-1;;;5319:33:73;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5319:33:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5319:33:73;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5319:33:73;;;;;;;;;5303:12;:49;;5282:149;;;;-1:-1:-1;;;;;5282:149:73;;;;;;;;;5479:12;-1:-1:-1;;;;;5479:31:73;;:33;;;;;-1:-1:-1;;;5479:33:73;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5479:33:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5479:33:73;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5479:33:73;;;;;;;;;5463:12;:49;;5442:151;;;;-1:-1:-1;;;;;5442:151:73;;;;;;;;;-1:-1:-1;5672:22:73;;5651:125;;;;-1:-1:-1;;;;;5651:125:73;;;;;;;;;5906:12;-1:-1:-1;;;;;5906:34:73;;:36;;;;;-1:-1:-1;;;5906:36:73;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5906:36:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5906:36:73;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5906:36:73;;;;;;;;;5887:15;:55;;5866:160;;;;-1:-1:-1;;;;;5866:160:73;;;;;;;;;6079:12;-1:-1:-1;;;;;6079:37:73;;:39;;;;;-1:-1:-1;;;6079:39:73;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6079:39:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6079:39:73;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6079:39:73;;;;;;;;;6057:18;:61;;6036:169;;;;-1:-1:-1;;;;;6036:169:73;;;;;;;;;6246:8;-1:-1:-1;;;;;6223:37:73;;:39;;;;;-1:-1:-1;;;6223:39:73;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6223:39:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6223:39:73;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6223:39:73;;;;;;;;;6216:4;:46;;-1:-1:-1;;6216:46:73;-1:-1:-1;;6216:46:73;;;;;;;;;;;;;6272:12;:26;;6293:4;;;;;;-1:-1:-1;;6272:26:73;;;;;;;;6316:20;;;;;;;;:12;;;;;:18;;:20;;;;;;;;;;;;;;:12;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;6316:20:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6316:20:73;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6316:20:73;;;;;;;;;6308:5;:28;;-1:-1:-1;;6308:28:73;;;-1:-1:-1;6308:28:73;;;;;;;;6346:13;:29;;6369:5;;;6346:29;;;;;;;;;;6385:25;:47;;;;;;;;;;;;6442:26;:60;;;;;;;;;;6512:7;:18;;;;;;;;;;;;;;-1:-1:-1;;6540:7:73;:18;;6568:10;:24;;;;;;;;;;;;;;6602:10;:31;;;;-1:-1:-1;6643:11:73;:26;;;;6680:14;:32;;;;6722:17;:38;6795:15;6770:22;:40;6540:18;;;;;;;;;-1:-1:-1;;6820:49:73;;;1900:19416;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1900:19416:73;;;-1:-1:-1;1900:19416:73;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;135:444;;248:3;241:4;233:6;229:17;225:27;215:2;;266:1;263;256:12;215:2;296:6;290:13;318:65;333:49;375:6;333:49;;;318:65;;;309:74;;403:6;396:5;389:21;439:4;431:6;427:17;472:4;465:5;461:16;507:3;498:6;493:3;489:16;486:25;483:2;;;524:1;521;514:12;483:2;534:39;566:6;561:3;556;534:39;;;208:371;;;;;;;;587:122;;665:39;696:6;690:13;665:39;;716:263;;831:2;819:9;810:7;806:23;802:32;799:2;;;847:1;844;837:12;799:2;882:1;899:64;955:7;935:9;899:64;;;889:74;793:186;-1:-1;;;;793:186;986:1692;;;;;;;;;;;1274:3;1262:9;1253:7;1249:23;1245:33;1242:2;;;1291:1;1288;1281:12;1242:2;1326:1;1343:64;1399:7;1379:9;1343:64;;;1333:74;;1305:108;1444:2;1462:64;1518:7;1509:6;1498:9;1494:22;1462:64;;;1452:74;;1423:109;1563:2;1581:64;1637:7;1628:6;1617:9;1613:22;1581:64;;;1571:74;;1542:109;1682:2;1700:64;1756:7;1747:6;1736:9;1732:22;1700:64;;;1690:74;;1661:109;1801:3;1820:64;1876:7;1867:6;1856:9;1852:22;1820:64;;;1810:74;;1780:110;1921:3;1940:64;1996:7;1987:6;1976:9;1972:22;1940:64;;;1930:74;;1900:110;2041:3;2060:64;2116:7;2107:6;2096:9;2092:22;2060:64;;;2050:74;;2020:110;2161:3;2180:64;2236:7;2227:6;2216:9;2212:22;2180:64;;;2302:3;2287:19;;2281:26;2170:74;;-1:-1;2281:26;-1:-1;;2316:30;;2313:2;;;2359:1;2356;2349:12;2313:2;2379:74;2445:7;2436:6;2425:9;2421:22;2379:74;;;2511:3;2496:19;;2490:26;2369:84;;-1:-1;2490:26;-1:-1;;2525:30;;2522:2;;;2568:1;2565;2558:12;2522:2;2588:74;2654:7;2645:6;2634:9;2630:22;2588:74;;;2578:84;;2469:199;1236:1442;;;;;;;;;;;;;;2685:263;;2800:2;2788:9;2779:7;2775:23;2771:32;2768:2;;;2816:1;2813;2806:12;2768:2;2851:1;2868:64;2924:7;2904:9;2868:64;;2956:465;;3116:67;3180:2;3175:3;3116:67;;;-1:-1;;;;;;;;;;;3196:87;;3317:66;3312:2;3303:12;;3296:88;3412:2;3403:12;;3102:319;-1:-1;;3102:319;3430:465;;3590:67;3654:2;3649:3;3590:67;;;-1:-1;;;;;;;;;;;3670:87;;3791:66;3786:2;3777:12;;3770:88;3886:2;3877:12;;3576:319;-1:-1;;3576:319;3904:465;;4064:67;4128:2;4123:3;4064:67;;;-1:-1;;;;;;;;;;;4144:87;;4265:66;4260:2;4251:12;;4244:88;4360:2;4351:12;;4050:319;-1:-1;;4050:319;4378:465;;4538:67;4602:2;4597:3;4538:67;;;-1:-1;;;;;;;;;;;4618:87;;4739:66;4734:2;4725:12;;4718:88;4834:2;4825:12;;4524:319;-1:-1;;4524:319;4852:465;;5012:67;5076:2;5071:3;5012:67;;;-1:-1;;;;;;;;;;;5092:87;;5213:66;5208:2;5199:12;;5192:88;5308:2;5299:12;;4998:319;-1:-1;;4998:319;5326:465;;5486:67;5550:2;5545:3;5486:67;;;-1:-1;;;;;;;;;;;5566:87;;5687:66;5682:2;5673:12;;5666:88;5782:2;5773:12;;5472:319;-1:-1;;5472:319;5799:407;5990:2;6004:47;;;5975:18;;6065:131;5975:18;6065:131;;;6057:139;5961:245;-1:-1;;5961:245;6213:407;6404:2;6418:47;;;6389:18;;6479:131;6389:18;6479:131;;6627:407;6818:2;6832:47;;;6803:18;;6893:131;6803:18;6893:131;;7041:407;7232:2;7246:47;;;7217:18;;7307:131;7217:18;7307:131;;7455:407;7646:2;7660:47;;;7631:18;;7721:131;7631:18;7721:131;;7869:407;8060:2;8074:47;;;8045:18;;8135:131;8045:18;8135:131;;8283:256;8345:2;8339:9;8371:17;;;8467:22;;;-1:-1;8431:34;;8428:62;8425:2;;;8503:1;8500;8493:12;8425:2;8519;8512:22;8323:216;;-1:-1;8323:216;8546:259;;-1:-1;8679:30;;8676:2;;;8722:1;8719;8712:12;8676:2;-1:-1;;;8766:4;8743:17;;;;8739:33;8795:4;8785:15;;8613:192;8813:163;8916:19;;;8965:4;8956:14;;8909:67;8984:105;;-1:-1;9165:54;;9053:31;9148:76;9318:268;9383:1;9390:101;9404:6;9401:1;9398:13;9390:101;;;9471:11;;;9465:18;9452:11;;;9445:39;9426:2;9419:10;9390:101;;;9506:6;9503:1;9500:13;9497:2;;;9571:1;9562:6;9557:3;9553:16;9546:27;9497:2;9367:219;;;;;;1900:19416:73;;;;;;",deployedSourceMap:"1900:19416:73:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1900:19416:73;;;;;;-1:-1:-1;;;1900:19416:73;;;;;-1:-1:-1;1900:19416:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:25;;;:::i;:::-;;;;;;;;;;;;;;;;17758:200;;;:::i;:::-;;;;;;;;628:81:169;;;:::i;:::-;;;;;;;;2721:145:168;;;;;;;;;:::i;:::-;;;;;;;;3155:48:73;;;;;;;;;:::i;:::-;;;;;;;;2693:32;;;:::i;916:89:168:-;;;:::i;19334:171:73:-;;;;;;;;;:::i;3329:224:168:-;;;;;;;;;:::i;2658:29:73:-;;;:::i;2513:25::-;;;:::i;930:81:169:-;;;:::i;:::-;;;;;;;;4067:200:168;;;;;;;;;:::i;14725:778:73:-;;;;;;;;;:::i;:::-;;2357:26;;;:::i;2914:39::-;;;:::i;2389:22::-;;;:::i;9475:839::-;;;:::i;19617:166::-;;;:::i;3036:61::-;;;:::i;:::-;;;;;;;;;1217:104:168;;;;;;;;;:::i;12579:1132:73:-;;;:::i;7522:1822::-;;;;;;;;;:::i;19895:162::-;;;:::i;:::-;;;;;;;;771:85:169;;;:::i;2879:29:73:-;;;:::i;11530:845::-;;;;;;;;;:::i;:::-;;;;;;;;;;17417:220;;;:::i;14126:353::-;;;;;;;;;:::i;:::-;;;;;;;;;15757:1019;;;;;;;;;:::i;18572:478::-;;;:::i;18102:321::-;;;:::i;4786:210:168:-;;;;;;;;;:::i;1948:137::-;;;;;;;;;:::i;2770:32:73:-;;;:::i;2575:37::-;;;:::i;2106:22::-;;;:::i;2851:::-;;;:::i;20455:166::-;;;:::i;16907:303::-;;;;;;;;;:::i;2959:71::-;;;:::i;:::-;;;;;;;;;;;1652:129:168;;;;;;;;;:::i;20759:170:73:-;;;:::i;20173:166::-;;;:::i;2081:19::-;;;:::i;2417:46::-;;;:::i;:::-;;;;;;;;10447:626;;;:::i;2134:20::-;;;:::i;2160:40::-;;;:::i;2544:25::-;;;;:::o;17758:200::-;17882:16;;;17896:1;17882:16;;;;;;;;;17825;;;;17882;;;;;;;105:10:-1;17882:16:73;88:34:-1;136:17;;-1:-1;17882:16:73;17857:41;;17919:10;;17908:5;17914:1;17908:8;;;;;;;;;;;;;;;;;:21;17946:5;-1:-1:-1;17758:200:73;;:::o;628:81:169:-;697:5;690:12;;;;;;;;;;;;;-1:-1:-1;;690:12:169;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2721:145:168:-;2786:4;2802:36;2811:10;2823:7;2832:5;2802:8;:36::i;:::-;-1:-1:-1;2855:4:168;2721:145;;;;;:::o;3155:48:73:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3155:48:73;;-1:-1:-1;3155:48:73;:::o;2693:32::-;;;;:::o;916:89:168:-;986:12;;916:89;:::o;19334:171:73:-;19488:10;;-1:-1:-1;;;;;19471:27:73;;;19488:10;;19471:27;;19334:171::o;3329:224:168:-;3408:4;3424:26;3434:4;3440:2;3444:5;3424:9;:26::i;:::-;-1:-1:-1;;;;;3487:14:168;;;;;;-1:-1:-1;3487:14:168;;;;;;;;3475:10;3487:26;;;;;;;;;3460:65;;3487:14;;:37;;3518:5;3487:30;:37::i;:::-;3460:8;:65::i;:::-;-1:-1:-1;3542:4:168;3329:224;;;;;;:::o;2658:29:73:-;;;;:::o;2513:25::-;;;-1:-1:-1;;;;;2513:25:73;;:::o;930:81:169:-;995:9;;;;930:81;:::o;4067:200:168:-;4172:10;4147:4;4193:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4193:29:168;;;;;;;;;;4147:4;;4163:76;;4193:29;;:45;;4227:10;4193:33;:45::i;14725:778:73:-;14909:4;;;;;-1:-1:-1;;;;;14909:4:73;14895:10;:18;14874:110;;;;-1:-1:-1;;;;;14874:110:73;;;;;;;;;;;;;;;;;15086:34;15068:14;;-1:-1:-1;;;15068:14:73;;;;:52;;;;;;;;;;15047:153;;;;-1:-1:-1;;;;;15047:153:73;;;;;;;;;15301:33;15283:14;;-1:-1:-1;;;15283:14:73;;;;:51;;;;;;;;;;15262:151;;;;-1:-1:-1;;;;;15262:151:73;;;;;;;;;15471:25;15477:7;15486:9;15471:5;:25::i;:::-;14725:778;;:::o;2357:26::-;;;;:::o;2914:39::-;;;;:::o;2389:22::-;;;-1:-1:-1;;;;;2389:22:73;;:::o;9475:839::-;9597:21;:44;9655:17;;9686:14;;9720;;;;;;;;;;;9714:21;;;;;;;;9597:148;;-1:-1:-1;;;9597:148:73;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9597:148:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;9909:10:73;;9933:7;;9954:14;;9982:4;;10000:5;;9834:181;;;;;:21;;-1:-1:-1;9834:61:73;;-1:-1:-1;9834:181:73;;-1:-1:-1;;;;;9909:10:73;;;;9933:7;;;9954:14;;;9909:10;9982:4;;;;;10000:5;;9834:181;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9834:181:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9834:181:73;;;;;;39:16:-1;36:1;17:17;2:54;101:4;9834:181:73;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;9834:181:73;;;;;;;;;9814:201;;:17;:201;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9814:201:73;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9814:201:73;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;10088:38:73;;10061:24;:65;-1:-1:-1;10178:15:73;10136:22;:57;10203:14;:51;;-1:-1:-1;;10203:51:73;;;;;10287:10;;10299:7;;10270:37;;;;;;-1:-1:-1;;;;;10287:10:73;;;;10299:7;;;10270:37;;;;;;;;;;9475:839::o;19617:166::-;19733:36;:43;19617:166;:::o;3036:61::-;;;;;;:::o;1217:104:168:-;-1:-1:-1;;;;;1298:16:168;1272:7;1298:16;;;;;;;;;;;;1217:104::o;12579:1132:73:-;12638:28;12737:22;:52;12803:13;:11;:13::i;:::-;12830:11;;12855:7;;12876:5;;12737:154;;;;;-1:-1:-1;;;12737:154:73;;;;;;12830:11;-1:-1:-1;;;;;12855:7:73;;;;12876:5;;12737:154;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12737:154:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12737:154:73;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12737:154:73;;;;;;;;;13105:24;;13177:10;;13201:4;;13292:14;;12676:215;;-1:-1:-1;13026:27:73;;-1:-1:-1;13056:18:73;;:35;;13105:24;12676:215;;-1:-1:-1;;;;;13177:10:73;;;;;13201:4;;;;;;;13219:22;;13255:17;;-1:-1:-1;;;13292:14:73;;;;13286:21;;;;;;;;13056:261;;-1:-1:-1;;;13056:261:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13056:261:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13056:261:73;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13056:261:73;;;;;;;;;13026:291;;13369:21;13344:47;;;;;;;;;;13327:14;:64;;-1:-1:-1;;13327:64:73;-1:-1:-1;;;13327:64:73;;;;;;;;;;;;;-1:-1:-1;13474:15:73;13449:22;:40;13607:36;13573:70;;;;:31;;:70;:::i;:::-;;13685:19;:17;:19::i;7522:1822::-;7793:67;;:::i;:::-;7875:261;;;;;;;;8120:1;7875:261;;;;7955:19;7875:261;;;;8011:18;7875:261;;;;8066:18;7875:261;;;7793:343;;8190:53;;:::i;:::-;8258:432;;;;;;;;;8316:7;;-1:-1:-1;;;;;8316:7:73;;;8258:432;;8353:10;;;;8258:432;;;;8394:4;;;;;;;;8258:432;;;;;;;8436:25;;;;8258:432;;;;8495:7;;;8258:432;;;;8544:22;;-1:-1:-1;8258:432:73;;;8603:17;;8258:432;;;;;;;;;-1:-1:-1;;;8660:14:73;;;;8654:21;;;;;;;;8258:432;;;;8775:153;;;;;8190:500;;-1:-1:-1;8775:14:73;;:31;;:153;;8820:8;;8842:15;;8190:500;;8900:18;;8775:153;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8775:153:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;8974:43:73;;:22;:43;-1:-1:-1;;8974:43:73;;;;;;;;;;;;;;;;;;9027:7;:18;;-1:-1:-1;;9027:18:73;;;-1:-1:-1;;;;;9027:18:73;;;;;;;;;;9055:14;:32;;;;;;;;;;;;;;9117:15;9097:17;:35;;;9142:14;:50;;-1:-1:-1;;9142:50:73;-1:-1:-1;;;9142:50:73;;;9312:14;;9290:37;;9117:15;9290:21;:37::i;:::-;9208:129;;-1:-1:-1;;;;;9208:129:73;;;;;;;9239:8;;9208:129;;;;;;;;;;7522:1822;;;;;;;:::o;19895:162::-;19975:16;20014:17;:36;;20007:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20007:43:73;;;-1:-1:-1;20007:43:73;;;;;;;;;;;;;;;;;;19895:162;:::o;771:85:169:-;842:7;835:14;;;;;;;;;;;;;-1:-1:-1;;835:14:169;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;2879:29:73;;;-1:-1:-1;;;;;2879:29:73;;:::o;11530:845::-;11806:4;;11737:114;;;;;11615:16;;;;;;11737:15;;:32;;:114;;11783:9;;11806:4;;;-1:-1:-1;;;;;11806:4:73;;11824:17;;11737:114;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11737:114:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11737:114:73;;;;11922:32;11964:33;12079:22;12091:9;12079:11;:22::i;:::-;12224:38;;12007:94;;-1:-1:-1;12007:94:73;-1:-1:-1;12224:53:73;;12267:9;12224:53;:42;:53;:::i;:::-;12183:38;:94;12296:36;12288:80;;;;;;;;;;;;;;;;;;;12334:15;;12351:16;;12296:36;;12288:80;;;12296:36;12288:80;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12288:80:73;;;-1:-1:-1;12288:80:73;;;;;;;;;;;;;;;;;;;;;;;;;;;11530:845;;;;;:::o;17417:220::-;17551:16;;;17565:1;17551:16;;;;;;;;;17489;;;;17551;;;;;;;105:10:-1;17551:16:73;88:34:-1;-1:-1;;17593:10:73;;17577:13;;;;-1:-1:-1;;;;;;17593:10:73;;17577:13;;-1:-1:-1;17593:10:73;;17577:13;;;;-1:-1:-1;;;;;17577:26:73;;;;:13;;;;;;;;;;;:26;17620:10;17417:220;-1:-1:-1;17417:220:73:o;14126:353::-;14346:14;;14447;;14225:16;;;;14282:15;;:27;;14323:9;;-1:-1:-1;;;;;14346:14:73;;14374:17;;14405:22;;-1:-1:-1;;;14447:14:73;;;;14441:21;;;;;;;;14282:190;;-1:-1:-1;;;14282:190:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14282:190:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14282:190:73;;;;;;39:16:-1;36:1;17:17;2:54;101:4;14282:190:73;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;14282:190:73;;;;;;;;;14275:197;;;;14126:353;;;:::o;15757:1019::-;15951:34;15933:14;;-1:-1:-1;;;15933:14:73;;;;:52;;;;;;;;;;15912:153;;;;-1:-1:-1;;;;;15912:153:73;;;;;;;;;16143:33;16125:14;;-1:-1:-1;;;16125:14:73;;;;:51;;;;;;;;;16121:615;;;16302:12;;:37;;;;;-1:-1:-1;;;;;16302:12:73;;;;:25;;:37;;16328:10;;16302:37;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16302:37:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16302:37:73;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;16302:37:73;;;;;;;;;16277:160;;;;-1:-1:-1;;;;;16277:160:73;;;;;;;;;16121:615;;;16642:4;;;;;-1:-1:-1;;;;;16642:4:73;16628:10;:18;16603:122;;;;-1:-1:-1;;;;;16603:122:73;;;;;;;;;16746:23;16752:5;16759:9;16746:5;:23::i;18572:478::-;18721:16;;;18735:1;18721:16;;;;;;;;;18656;;;;18721;;;;17:15:-1;;105:10;18721:16:73;88:34:-1;136:17;;-1:-1;18721:16:73;18688:49;;18766:22;:39;;;18747:13;18761:1;18747:16;;;;;;;;;;;;;:58;;;;;18834:22;:41;;;18815:13;18829:1;18815:16;;;;;;;;;;;;;:60;;;;;18904:22;:40;;;18885:13;18899:1;18885:16;;;;;;;;;;;;;:59;;;;;18973:22;:40;;;18954:13;18968:1;18954:16;;;;;;;18102:321;18246:16;;;18260:1;18246:16;;;18181;18246;;;;;18181;;;18246;18260:1;18246:16;;;;;105:10:-1;18246:16:73;88:34:-1;136:17;;-1:-1;18246:16:73;18213:49;;18291:17;:28;;;18272:13;18286:1;18272:16;;;;;;;;;;;;;:47;;;;;18348:17;:38;;;18329:13;18343:1;18329:16;;;;;;;4786:210:168;4896:10;4871:4;4917:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4917:29:168;;;;;;;;;;4871:4;;4887:81;;4917:29;;:50;;4951:15;4917:33;:50::i;1948:137::-;2009:4;2025:32;2035:10;2047:2;2051:5;2025:9;:32::i;2770::73:-;;;;:::o;2575:37::-;;;;:::o;2106:22::-;;;-1:-1:-1;;;;;2106:22:73;;:::o;2851:::-;;;-1:-1:-1;;;;;2851:22:73;;:::o;20455:166::-;20537:16;20576:17;:38;;20569:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20455:166;:::o;16907:303::-;17028:7;;-1:-1:-1;;;;;17028:7:73;17014:10;:21;16993:126;;;;-1:-1:-1;;;;;16993:126:73;;;;;;;;;17164:7;;17135:37;;;;;;17151:11;;-1:-1:-1;;;;;17164:7:73;;17135:37;;;;;;;;;;17182:7;:21;;-1:-1:-1;;17182:21:73;-1:-1:-1;;;;;17182:21:73;;;;;;;;;;16907:303::o;2959:71::-;;;;;;;;;;:::o;1652:129:168:-;-1:-1:-1;;;;;1750:15:168;;;1724:7;1750:15;;;-1:-1:-1;1750:15:168;;;;;;;;:24;;;;;;;;;;;;;1652:129::o;20759:170:73:-;20852:16;20891:31;20884:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20884:38:73;;;;;;;;;-1:-1:-1;20884:38:73;;;;;;;;;;;;;;;;;20759:170;:::o;20173:166::-;20255:16;20294:17;:38;;20287:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20173:166;:::o;2081:19::-;;;;;;-1:-1:-1;;;;;2081:19:73;;:::o;2417:46::-;;;-1:-1:-1;;;2417:46:73;;;;;:::o;10447:626::-;10569:22;:38;10621:13;:11;:13::i;:::-;10648:38;;:17;10700:28;10742:11;;10767:7;;10788:4;;10806:5;;10831:14;;-1:-1:-1;;;;;10767:7:73;;;;;10788:4;;;;;;10806:5;;;;-1:-1:-1;;;10831:14:73;;;;10825:21;;;;;;;;10569:287;;-1:-1:-1;;;10569:287:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10569:287:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10569:287:73;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10569:287:73;;;;;;;;;10556:10;:300;10921:7;;10908:10;:20;;-1:-1:-1;;10908:20:73;-1:-1:-1;;;;;10921:7:73;;;10908:20;;;;;;10963:15;10938:22;:40;10988:14;:49;;-1:-1:-1;;10988:49:73;;;11047:19;:17;:19::i;:::-;10447:626::o;2134:20::-;;;-1:-1:-1;;;;;2134:20:73;;:::o;2160:40::-;;;-1:-1:-1;;;;;2160:40:73;;:::o;6831:248:168:-;-1:-1:-1;;;;;6923:21:168;;6915:30;;;;;;-1:-1:-1;;;;;6963:19:168;;6955:28;;;;;;-1:-1:-1;;;;;6994:15:168;;;;;;;-1:-1:-1;6994:15:168;;;;;;;;:24;;;;;;;;;;;;;;:32;;;7041:31;;;;;6994:32;;7041:31;;;;;;;;;;6831:248;;;:::o;5215:256::-;-1:-1:-1;;;;;5302:16:168;;5294:25;;;;;;-1:-1:-1;;;;;5348:15:168;;:9;:15;;;;;;;;;;;:26;;5368:5;5348:19;:26::i;:::-;-1:-1:-1;;;;;5330:15:168;;;:9;:15;;;;;;;;;;;:44;;;;5400:13;;;;;;;:24;;5418:5;5400:17;:24::i;:::-;-1:-1:-1;;;;;5384:13:168;;;:9;:13;;;;;;;;;;;;:40;;;;5439:25;;;;;;;;;;5458:5;;5439:25;;1211:145:166;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:166;;;1211:145::o;1439:::-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;5814:263:168;-1:-1:-1;;;;;5888:21:168;;5880:30;;;;;;5936:12;;:23;;5953:5;5936:23;:16;:23;:::i;:::-;5921:12;:38;-1:-1:-1;;;;;5990:18:168;;:9;:18;;;;;;;;;;;:29;;6013:5;5990:22;:29::i;:::-;-1:-1:-1;;;;;5969:18:168;;:9;:18;;;;;;;;;;;:50;;;;6034:36;;5969:18;;:9;6034:36;;;;6064:5;;6034:36;;;;;;;;;;5814:263;;:::o;21079:235:73:-;21139:7;:20;;-1:-1:-1;;21139:20:73;;;;;;21169:14;:27;;;;;;;-1:-1:-1;21206:24:73;:28;;;21251:22;21244:29;;;;;;;;;;;;;;;21290:17;21283:24;;;;;;;21290:17;21283:24;;-1:-1:-1;21283:24:73;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;6303:263:168:-;-1:-1:-1;;;;;6377:21:168;;6369:30;;;;;;6425:12;;:23;;6442:5;6425:23;:16;:23;:::i;:::-;6410:12;:38;-1:-1:-1;;;;;6479:18:168;;:9;:18;;;;;;;;;;;:29;;6502:5;6479:22;:29::i;:::-;-1:-1:-1;;;;;6458:18:168;;:9;:18;;;;;;;;;;;:50;;;;6523:36;;;;;;6553:5;;6523:36;;1900:19416:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1900:19416:73;;;-1:-1:-1;1900:19416:73;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1900:19416:73;-1:-1:-1;;;;;1900:19416:73;;;;;;;;;;;-1:-1:-1;1900:19416:73;;;;;;;-1:-1:-1;1900:19416:73;;;-1:-1:-1;1900:19416:73;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;1900:19416:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1900:19416:73;;;-1:-1:-1;1900:19416:73;;;5:118:-1;;72:46;110:6;97:20;72:46;;130:122;;208:39;239:6;233:13;208:39;;277:714;;401:3;394:4;386:6;382:17;378:27;368:2;;419:1;416;409:12;368:2;449:6;443:13;471:76;486:60;539:6;486:60;;;471:76;;;462:85;;564:5;589:6;582:5;575:21;619:4;611:6;607:17;597:27;;641:4;636:3;632:14;625:21;;694:6;741:3;733:4;725:6;721:17;716:3;712:27;709:36;706:2;;;758:1;755;748:12;706:2;783:1;768:217;793:6;790:1;787:13;768:217;;;851:3;873:48;917:3;905:10;873:48;;;861:61;;-1:-1;945:4;936:14;;;;964;;;;;815:1;808:9;768:217;;;772:14;361:630;;;;;;;;1017:714;;1141:3;1134:4;1126:6;1122:17;1118:27;1108:2;;1159:1;1156;1149:12;1108:2;1189:6;1183:13;1211:76;1226:60;1279:6;1226:60;;1211:76;1202:85;;1304:5;1329:6;1322:5;1315:21;1359:4;1351:6;1347:17;1337:27;;1381:4;1376:3;1372:14;1365:21;;1434:6;1481:3;1473:4;1465:6;1461:17;1456:3;1452:27;1449:36;1446:2;;;1498:1;1495;1488:12;1446:2;1523:1;1508:217;1533:6;1530:1;1527:13;1508:217;;;1591:3;1613:48;1657:3;1645:10;1613:48;;;1601:61;;-1:-1;1685:4;1676:14;;;;1704;;;;;1555:1;1548:9;1508:217;;1757:722;;1885:3;1878:4;1870:6;1866:17;1862:27;1852:2;;1903:1;1900;1893:12;1852:2;1933:6;1927:13;1955:80;1970:64;2027:6;1970:64;;1955:80;1946:89;;2052:5;2077:6;2070:5;2063:21;2107:4;2099:6;2095:17;2085:27;;2129:4;2124:3;2120:14;2113:21;;2182:6;2229:3;2221:4;2213:6;2209:17;2204:3;2200:27;2197:36;2194:2;;;2246:1;2243;2236:12;2194:2;2271:1;2256:217;2281:6;2278:1;2275:13;2256:217;;;2339:3;2361:48;2405:3;2393:10;2361:48;;;2349:61;;-1:-1;2433:4;2424:14;;;;2452;;;;;2303:1;2296:9;2256:217;;2487:116;;2562:36;2590:6;2584:13;2562:36;;2660:1343;;2795:4;2783:9;2778:3;2774:19;2770:30;2767:2;;;2813:1;2810;2803:12;2767:2;2831:20;2846:4;2831:20;;;2822:29;-1:-1;2907:1;2938:60;2994:3;2974:9;2938:60;;;2914:85;;-1:-1;3076:2;3109:60;3165:3;3141:22;;;3109:60;;;3102:4;3095:5;3091:16;3084:86;3020:161;3268:2;3257:9;3253:18;3247:25;3292:18;3284:6;3281:30;3278:2;;;3324:1;3321;3314:12;3278:2;3359:81;3436:3;3427:6;3416:9;3412:22;3359:81;;;3352:4;3345:5;3341:16;3334:107;3191:261;3539:2;3528:9;3524:18;3518:25;3563:18;3555:6;3552:30;3549:2;;;3595:1;3592;3585:12;3549:2;3630:81;3707:3;3698:6;3687:9;3683:22;3630:81;;;3623:4;3616:5;3612:16;3605:107;3462:261;3808:3;3797:9;3793:19;3787:26;3833:18;3825:6;3822:30;3819:2;;;3865:1;3862;3855:12;3819:2;3900:81;3977:3;3968:6;3957:9;3953:22;3900:81;;;3893:4;3886:5;3882:16;3875:107;3733:260;2761:1242;;;;;4010:118;;4077:46;4115:6;4102:20;4077:46;;4135:122;;4213:39;4244:6;4238:13;4213:39;;4264:118;;4340:37;4369:6;4363:13;4340:37;;4389:241;;4493:2;4481:9;4472:7;4468:23;4464:32;4461:2;;;4509:1;4506;4499:12;4461:2;4544:1;4561:53;4606:7;4586:9;4561:53;;;4551:63;4455:175;-1:-1;;;;4455:175;4637:366;;;4758:2;4746:9;4737:7;4733:23;4729:32;4726:2;;;4774:1;4771;4764:12;4726:2;4809:1;4826:53;4871:7;4851:9;4826:53;;;4816:63;;4788:97;4916:2;4934:53;4979:7;4970:6;4959:9;4955:22;4934:53;;;4924:63;;4895:98;4720:283;;;;;;5010:491;;;;5148:2;5136:9;5127:7;5123:23;5119:32;5116:2;;;5164:1;5161;5154:12;5116:2;5199:1;5216:53;5261:7;5241:9;5216:53;;;5206:63;;5178:97;5306:2;5324:53;5369:7;5360:6;5349:9;5345:22;5324:53;;;5314:63;;5285:98;5414:2;5432:53;5477:7;5468:6;5457:9;5453:22;5432:53;;;5422:63;;5393:98;5110:391;;;;;;5508:743;;;;;;5680:3;5668:9;5659:7;5655:23;5651:33;5648:2;;;5697:1;5694;5687:12;5648:2;5732:1;5749:53;5794:7;5774:9;5749:53;;;5739:63;;5711:97;5839:2;5857:53;5902:7;5893:6;5882:9;5878:22;5857:53;;;5847:63;;5818:98;5947:2;5965:53;6010:7;6001:6;5990:9;5986:22;5965:53;;;5955:63;;5926:98;6055:2;6073:53;6118:7;6109:6;6098:9;6094:22;6073:53;;;6063:63;;6034:98;6163:3;6182:53;6227:7;6218:6;6207:9;6203:22;6182:53;;;6172:63;;6142:99;5642:609;;;;;;;;;6258:366;;;6379:2;6367:9;6358:7;6354:23;6350:32;6347:2;;;6395:1;6392;6385:12;6347:2;6430:1;6447:53;6492:7;6472:9;6447:53;;;6437:63;;6409:97;6537:2;6555:53;6600:7;6591:6;6580:9;6576:22;6555:53;;6631:657;;;6813:2;6801:9;6792:7;6788:23;6784:32;6781:2;;;6829:1;6826;6819:12;6781:2;6864:24;;6908:18;6897:30;;6894:2;;;6940:1;6937;6930:12;6894:2;6960:89;7041:7;7032:6;7021:9;7017:22;6960:89;;;6950:99;;6843:212;7107:2;7096:9;7092:18;7086:25;7131:18;7123:6;7120:30;7117:2;;;7163:1;7160;7153:12;7117:2;7183:89;7264:7;7255:6;7244:9;7240:22;7183:89;;7295:257;;7407:2;7395:9;7386:7;7382:23;7378:32;7375:2;;;7423:1;7420;7413:12;7375:2;7458:1;7475:61;7528:7;7508:9;7475:61;;7559:412;;7709:2;7697:9;7688:7;7684:23;7680:32;7677:2;;;7725:1;7722;7715:12;7677:2;7760:24;;7804:18;7793:30;;7790:2;;;7836:1;7833;7826:12;7790:2;7856:99;7947:7;7938:6;7927:9;7923:22;7856:99;;7978:241;;8082:2;8070:9;8061:7;8057:23;8053:32;8050:2;;;8098:1;8095;8088:12;8050:2;8133:1;8150:53;8195:7;8175:9;8150:53;;8226:263;;8341:2;8329:9;8320:7;8316:23;8312:32;8309:2;;;8357:1;8354;8347:12;8309:2;8392:1;8409:64;8465:7;8445:9;8409:64;;8496:399;;;8628:2;8616:9;8607:7;8603:23;8599:32;8596:2;;;8644:1;8641;8634:12;8596:2;8679:1;8696:64;8752:7;8732:9;8696:64;;;8686:74;;8658:108;8797:2;8815:64;8871:7;8862:6;8851:9;8847:22;8815:64;;8902:259;;9015:2;9003:9;8994:7;8990:23;8986:32;8983:2;;;9031:1;9028;9021:12;8983:2;9066:1;9083:62;9137:7;9117:9;9083:62;;9169:173;;9256:46;9298:3;9290:6;9256:46;;;-1:-1;;9331:4;9322:14;;9249:93;9549:173;;9636:46;9678:3;9670:6;9636:46;;9928:142;10019:45;10058:5;10019:45;;;10014:3;10007:58;10001:69;;;10077:110;10150:31;10175:5;10150:31;;10612:621;;10757:54;10805:5;10757:54;;;10824:86;10903:6;10898:3;10824:86;;;10817:93;;10930:56;10980:5;10930:56;;;11007:1;10992:219;11017:6;11014:1;11011:13;10992:219;;;11064:63;11123:3;11114:6;11108:13;11064:63;;;11057:70;;11144:60;11197:6;11144:60;;;11134:70;-1:-1;11039:1;11032:9;10992:219;;;-1:-1;11224:3;;10736:497;-1:-1;;;;10736:497;11272:643;;11412:51;11457:5;11412:51;;;11476:84;11553:6;11548:3;11476:84;;;11469:91;;11580:53;11627:5;11580:53;;;11654:1;11639:254;11664:6;11661:1;11658:13;11639:254;;;11711:101;11808:3;11763:43;11799:6;11763:43;;;11711:101;;;11704:108;;11829:57;11879:6;11829:57;;;11819:67;-1:-1;11686:1;11679:9;11639:254;;11954:621;;12099:54;12147:5;12099:54;;;12166:86;12245:6;12240:3;12166:86;;;12159:93;;12272:56;12322:5;12272:56;;;12349:1;12334:219;12359:6;12356:1;12353:13;12334:219;;;12406:63;12465:3;12456:6;12450:13;12406:63;;;12399:70;;12486:60;12539:6;12486:60;;;12476:70;-1:-1;12381:1;12374:9;12334:219;;12614:643;;12754:51;12799:5;12754:51;;;12818:84;12895:6;12890:3;12818:84;;;12811:91;;12922:53;12969:5;12922:53;;;12996:1;12981:254;13006:6;13003:1;13000:13;12981:254;;;13053:101;13150:3;13105:43;13141:6;13105:43;;;13053:101;;;13046:108;;13171:57;13221:6;13171:57;;;13161:67;-1:-1;13028:1;13021:9;12981:254;;13265:111;13342:28;13364:5;13342:28;;13383:142;13474:45;13513:5;13474:45;;13532:347;;13644:39;13677:5;13644:39;;;13695:71;13759:6;13754:3;13695:71;;;13688:78;;13771:52;13816:6;13811:3;13804:4;13797:5;13793:16;13771:52;;;13844:29;13866:6;13844:29;;;13835:39;;;;13624:255;-1:-1;;;13624:255;13887:465;;14047:67;14111:2;14106:3;14047:67;;;14147:66;14127:87;;14248:66;14243:2;14234:12;;14227:88;14343:2;14334:12;;14033:319;-1:-1;;14033:319;14361:465;;14521:67;14585:2;14580:3;14521:67;;;14621:66;14601:87;;14722:66;14717:2;14708:12;;14701:88;14817:2;14808:12;;14507:319;-1:-1;;14507:319;14835:465;;14995:67;15059:2;15054:3;14995:67;;;15095:66;15075:87;;15196:66;15191:2;15182:12;;15175:88;15291:2;15282:12;;14981:319;-1:-1;;14981:319;15309:465;;15469:67;15533:2;15528:3;15469:67;;;15569:66;15549:87;;15670:66;15665:2;15656:12;;15649:88;15765:2;15756:12;;15455:319;-1:-1;;15455:319;15783:465;;15943:67;16007:2;16002:3;15943:67;;;16043:66;16023:87;;16144:66;16139:2;16130:12;;16123:88;16239:2;16230:12;;15929:319;-1:-1;;15929:319;16257:465;;16417:67;16481:2;16476:3;16417:67;;;16517:66;16497:87;;16618:66;16613:2;16604:12;;16597:88;16713:2;16704:12;;16403:319;-1:-1;;16403:319;16731:465;;16891:67;16955:2;16950:3;16891:67;;;16991:66;16971:87;;17092:66;17087:2;17078:12;;17071:88;17187:2;17178:12;;16877:319;-1:-1;;16877:319;17311:896;17569:22;;17492:4;17483:14;;;17597:69;17487:3;17569:22;17597:69;;;17512:160;17758:4;17751:5;17747:16;17741:23;17770:70;17834:4;17829:3;17825:14;17812:11;17770:70;;;17682:164;17931:4;17924:5;17920:16;17914:23;17943:70;18007:4;18002:3;17998:14;17985:11;17943:70;;;17856:163;18104:4;18097:5;18093:16;18087:23;18116:70;18180:4;18175:3;18171:14;18158:11;18116:70;;;18029:163;17465:742;;;;18321:1180;18582:22;;18499:4;18490:14;;;18629:55;18582:22;18629:55;;;18690:69;18749:3;18732:11;18690:69;;;-1:-1;;18839:3;18828:15;;18822:22;18869:55;18822:22;18869:55;;;18930:70;18994:4;18989:3;18985:14;18972:11;18930:70;;;-1:-1;;19079:3;19068:15;;19062:22;19109:55;19062:22;19109:55;;;19170:70;19234:4;19229:3;19225:14;19212:11;19170:70;;;-1:-1;;19319:3;19308:15;;19302:22;19349:55;19302:22;19349:55;;;19410:70;19474:4;19469:3;19465:14;19452:11;19410:70;;;19256:230;18472:1029;;;;;19605:1516;19858:22;;19605:1516;;19781:4;19772:14;;;19905:55;19858:22;19905:55;;;19966:69;20025:3;20008:11;19966:69;;;-1:-1;;20117:3;20106:15;;20100:22;20147:55;20100:22;20147:55;;;20208:70;20272:4;20267:3;20263:14;20250:11;20208:70;;;20051:233;20366:3;20359:5;20355:15;20416:3;20410:4;20406:14;20399:4;20394:3;20390:14;20383:38;20436:107;20538:4;20525:11;20436:107;;;20428:115;;20294:261;20637:3;20630:5;20626:15;20687:3;20681:4;20677:14;20670:4;20665:3;20661:14;20654:38;20707:107;20809:4;20796:11;20707:107;;;20699:115;;20565:261;20906:3;20899:5;20895:15;20956:3;20950:4;20946:14;20939:4;20934:3;20930:14;20923:38;20976:107;21078:4;21065:11;20976:107;;;20968:115;19754:1367;-1:-1;;;;;;19754:1367;21213:1550;21451:22;;21382:5;21373:15;;;21479:69;21377:3;21451:22;21479:69;;;21403:151;21632:4;21625:5;21621:16;21615:23;21644:70;21708:4;21703:3;21699:14;21686:11;21644:70;;;21564:156;21799:4;21792:5;21788:16;21782:23;21811:70;21875:4;21870:3;21866:14;21853:11;21811:70;;;21730:157;21973:4;21966:5;21962:16;21956:23;21985:70;22049:4;22044:3;22040:14;22027:11;21985:70;;;21897:164;22143:4;22136:5;22132:16;22126:23;22155:70;22219:4;22214:3;22210:14;22197:11;22155:70;;;22071:160;22321:4;22314:5;22310:16;22304:23;22333:70;22397:4;22392:3;22388:14;22375:11;22333:70;;;22241:168;22494:4;22487:5;22483:16;22477:23;22506:70;22570:4;22565:3;22561:14;22548:11;22506:70;;;22419:163;22664:4;22657:5;22653:16;22647:23;22676:66;22736:4;22731:3;22727:14;22714:11;22676:66;;22770:110;22843:31;22868:5;22843:31;;23274:114;23353:29;23376:5;23353:29;;23643:213;23761:2;23746:18;;23775:71;23750:9;23819:6;23775:71;;23863:229;23989:2;23974:18;;24003:79;23978:9;24055:6;24003:79;;24099:324;24245:2;24230:18;;24259:71;24234:9;24303:6;24259:71;;;24341:72;24409:2;24398:9;24394:18;24385:6;24341:72;;24430:707;24668:3;24653:19;;24683:79;24657:9;24735:6;24683:79;;;24773:80;24849:2;24838:9;24834:18;24825:6;24773:80;;;24864;24940:2;24929:9;24925:18;24916:6;24864:80;;;24955;25031:2;25020:9;25016:18;25007:6;24955:80;;;25046:81;25122:3;25111:9;25107:19;25098:6;25046:81;;25144:884;25502:3;25487:19;;25517:79;25491:9;25569:6;25517:79;;;25607:80;25683:2;25672:9;25668:18;25659:6;25607:80;;;25698:148;25842:2;25831:9;25827:18;25818:6;25698:148;;;25857:161;26013:3;26002:9;25998:19;25989:6;25857:161;;;25473:555;;;;;;;;26035:361;26203:2;26217:47;;;26188:18;;26278:108;26188:18;26372:6;26278:108;;26403:879;26727:2;26741:47;;;26712:18;;26802:108;26712:18;26896:6;26802:108;;;26794:116;;26958:9;26952:4;26948:20;26943:2;26932:9;26928:18;26921:48;26983:108;27086:4;27077:6;26983:108;;;26975:116;;27139:9;27133:4;27129:20;27124:2;27113:9;27109:18;27102:48;27164:108;27267:4;27258:6;27164:108;;27289:361;27457:2;27471:47;;;27442:18;;27532:108;27442:18;27626:6;27532:108;;27657:620;27903:2;27917:47;;;27888:18;;27978:108;27888:18;28072:6;27978:108;;;27970:116;;28134:9;28128:4;28124:20;28119:2;28108:9;28104:18;28097:48;28159:108;28262:4;28253:6;28159:108;;28284:201;28396:2;28381:18;;28410:65;28385:9;28448:6;28410:65;;28492:229;28618:2;28603:18;;28632:79;28607:9;28684:6;28632:79;;28728:301;28866:2;28880:47;;;28851:18;;28941:78;28851:18;29005:6;28941:78;;29036:407;29227:2;29241:47;;;29212:18;;29302:131;29212:18;29302:131;;29450:407;29641:2;29655:47;;;29626:18;;29716:131;29626:18;29716:131;;29864:407;30055:2;30069:47;;;30040:18;;30130:131;30040:18;30130:131;;30278:407;30469:2;30483:47;;;30454:18;;30544:131;30454:18;30544:131;;30692:407;30883:2;30897:47;;;30868:18;;30958:131;30868:18;30958:131;;31106:407;31297:2;31311:47;;;31282:18;;31372:131;31282:18;31372:131;;31520:407;31711:2;31725:47;;;31696:18;;31786:131;31696:18;31786:131;;31934:213;32052:2;32037:18;;32066:71;32041:9;32110:6;32066:71;;32154:649;32403:2;32388:18;;32417:79;32392:9;32469:6;32417:79;;;32507:80;32583:2;32572:9;32568:18;32559:6;32507:80;;;32635:9;32629:4;32625:20;32620:2;32609:9;32605:18;32598:48;32660:133;32788:4;32779:6;32660:133;;32810:1035;33188:3;33173:19;;33203:79;33177:9;33255:6;33203:79;;;33293:80;33369:2;33358:9;33354:18;33345:6;33293:80;;;33421:9;33415:4;33411:20;33406:2;33395:9;33391:18;33384:48;33446:133;33574:4;33565:6;33446:133;;;33438:141;;33590:157;33743:2;33732:9;33728:18;33719:6;33590:157;;;33758:77;33830:3;33819:9;33815:19;33806:6;33758:77;;33852:324;33998:2;33983:18;;34012:71;33987:9;34056:6;34012:71;;;34094:72;34162:2;34151:9;34147:18;34138:6;34094:72;;34183:587;34393:3;34378:19;;34408:79;34382:9;34460:6;34408:79;;;34498:80;34574:2;34563:9;34559:18;34550:6;34498:80;;;34589;34665:2;34654:9;34650:18;34641:6;34589:80;;;34680;34756:2;34745:9;34741:18;34732:6;34680:80;;34777:1275;35211:3;35196:19;;35226:79;35200:9;35278:6;35226:79;;;35316:80;35392:2;35381:9;35377:18;35368:6;35316:80;;;35407;35483:2;35472:9;35468:18;35459:6;35407:80;;;35498;35574:2;35563:9;35559:18;35550:6;35498:80;;;35589:158;35742:3;35731:9;35727:19;35718:6;35589:158;;;35796:9;35790:4;35786:20;35780:3;35769:9;35765:19;35758:49;35821:133;35949:4;35940:6;35821:133;;;35813:141;;35965:77;36037:3;36026:9;36022:19;36013:6;35965:77;;;35182:870;;;;;;;;;;;36059:547;36261:3;36246:19;;36276:71;36250:9;36320:6;36276:71;;;36358:72;36426:2;36415:9;36411:18;36402:6;36358:72;;;36441;36509:2;36498:9;36494:18;36485:6;36441:72;;;36524;36592:2;36581:9;36577:18;36568:6;36524:72;;36613:1059;36931:3;36916:19;;36946:79;36920:9;36998:6;36946:79;;;37036:80;37112:2;37101:9;37097:18;37088:6;37036:80;;;37127;37203:2;37192:9;37188:18;37179:6;37127:80;;;37218;37294:2;37283:9;37279:18;37270:6;37218:80;;;37309:81;37385:3;37374:9;37370:19;37361:6;37309:81;;;37401;37477:3;37466:9;37462:19;37453:6;37401:81;;;37493;37569:3;37558:9;37554:19;37545:6;37493:81;;;37585:77;37657:3;37646:9;37642:19;37633:6;37585:77;;;36902:770;;;;;;;;;;;;37679:459;37857:2;37842:18;;37871:79;37846:9;37923:6;37871:79;;;37961:80;38037:2;38026:9;38022:18;38013:6;37961:80;;;38052:76;38124:2;38113:9;38109:18;38100:6;38052:76;;38145:205;38259:2;38244:18;;38273:67;38248:9;38313:6;38273:67;;38357:256;38419:2;38413:9;38445:17;;;38520:18;38505:34;;38541:22;;;38502:62;38499:2;;;38577:1;38574;38567:12;38499:2;38593;38586:22;38397:216;;-1:-1;38397:216;38620:254;;38775:18;38767:6;38764:30;38761:2;;;38807:1;38804;38797:12;38761:2;-1:-1;38836:4;38824:17;;;38854:15;;38698:176;39409:121;39518:4;39506:17;;39487:43;39541:141;;39623:15;;;39670:4;39657:18;;;39615:67;39975:107;40065:12;;40049:33;40089:104;40176:12;;40160:33;40656:114;40762:1;40752:12;;40733:37;41033:178;41151:19;;;41200:4;41191:14;;41144:67;41948:105;;42017:31;42042:5;42017:31;;42060:92;42133:13;42126:21;;42109:43;42159:127;;42247:1;42240:5;42237:12;42227:2;;42253:9;42293:128;-1:-1;;;;;42362:54;;42345:76;42514:88;42592:4;42581:16;;42564:38;43369:129;;43456:37;43487:5;43456:37;;43505:133;;43592:41;43627:5;43592:41;;43645:121;;43724:37;43755:5;43724:37;;43896:268;43961:1;43968:101;43982:6;43979:1;43976:13;43968:101;;;44049:11;;;44043:18;44030:11;;;44023:39;44004:2;43997:10;43968:101;;;44084:6;44081:1;44078:13;44075:2;;;-1:-1;;44149:1;44131:16;;44124:27;43945:219;44172:161;;44262:66;44293:34;44316:10;44293:34;;;44262:66;;44340:161;;44430:66;44461:34;44484:10;44461:34;;;44430:66;;44508:137;;44583:57;44634:4;44628:11;44583:57;;44652:137;;44727:57;44778:4;44772:11;44727:57;;44796:97;44884:2;44864:14;-1:-1;;44860:28;;44844:49",
source:'/*\n    Copyright 2018 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { ERC20 } from "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol";\nimport { ERC20Detailed } from "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol";\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\nimport { CommonMath } from "set-protocol-contract-utils/contracts/lib/CommonMath.sol";\n\nimport { ICore } from "../interfaces/ICore.sol";\nimport { IRebalancingSetFactory } from "../interfaces/IRebalancingSetFactory.sol";\nimport { ISetToken } from "../interfaces/ISetToken.sol";\nimport { IVault } from "../interfaces/IVault.sol";\nimport { IWhiteList } from "../interfaces/IWhiteList.sol";\nimport { RebalancingLibrary } from "../lib/RebalancingLibrary.sol";\nimport { FailAuctionLibrary } from "./rebalancing-libraries/FailAuctionLibrary.sol";\nimport { PlaceBidLibrary } from "./rebalancing-libraries/PlaceBidLibrary.sol";\nimport { ProposeLibrary } from "./rebalancing-libraries/ProposeLibrary.sol";\nimport { SettleRebalanceLibrary } from "./rebalancing-libraries/SettleRebalanceLibrary.sol";\nimport { StartRebalanceLibrary } from "./rebalancing-libraries/StartRebalanceLibrary.sol";\n\n\n/**\n * @title RebalancingSetToken\n * @author Set Protocol\n *\n * Implementation of Rebalancing Set token.\n */\ncontract RebalancingSetToken is\n    ERC20,\n    ERC20Detailed\n{\n    using SafeMath for uint256;\n\n    /* ============ State Variables ============ */\n\n    // Dependency variables\n    address public core;\n    address public factory;\n    address public vault;\n    address public componentWhiteListAddress;\n\n    // Core and Vault instances\n    ICore private coreInstance;\n    IVault private vaultInstance;\n    IWhiteList private componentWhiteListInstance;\n\n    uint256 public naturalUnit;\n    address public manager;\n    RebalancingLibrary.State public rebalanceState;\n\n    // State updated after every rebalance\n    address public currentSet;\n    uint256 public unitShares;\n    uint256 public lastRebalanceTimestamp;\n\n    // State governing rebalance cycle\n    uint256 public proposalPeriod;\n    uint256 public rebalanceInterval;\n\n    // State to track proposal period\n    uint256 public proposalStartTime;\n\n    // State needed for auction/rebalance\n    address public nextSet;\n    address public auctionLibrary;\n    uint256 public startingCurrentSetAmount;\n    RebalancingLibrary.AuctionPriceParameters public auctionPriceParameters;\n    RebalancingLibrary.BiddingParameters public biddingParameters;\n\n    // To be used if token put into Drawdown State\n    address[] public failedAuctionWithdrawComponents;\n\n    /* ============ Events ============ */\n\n    event NewManagerAdded(\n        address newManager,\n        address oldManager\n    );\n\n    event RebalanceProposed(\n        address nextSet,\n        address indexed auctionLibrary,\n        uint256 indexed proposalPeriodEndTime\n    );\n\n    event RebalanceStarted(\n        address oldSet,\n        address newSet\n    );\n\n    /* ============ Constructor ============ */\n\n    /**\n     * Constructor function for Rebalancing Set Token\n     *\n     * @param _factory                   Factory used to create the Rebalancing Set\n     * @param _manager                   Manager of the Rebalancing Set\n     * @param _initialSet                Initial set that collateralizes the Rebalancing set\n     * @param _initialUnitShares         Units of currentSet that equals one share\n     * @param _naturalUnit               The minimum multiple of Sets that can be issued or redeemed\n     * @param _proposalPeriod            Amount of time for users to inspect a rebalance proposal\n     * @param _rebalanceInterval         Minimum amount of time between rebalances\n     * @param _componentWhiteList        Address of component WhiteList contract\n     * @param _name                      The name of the new RebalancingSetToken\n     * @param _symbol                    The symbol of the new RebalancingSetToken\n     */\n\n    constructor(\n        address _factory,\n        address _manager,\n        address _initialSet,\n        uint256 _initialUnitShares,\n        uint256 _naturalUnit,\n        uint256 _proposalPeriod,\n        uint256 _rebalanceInterval,\n        address _componentWhiteList,\n        string memory _name,\n        string memory _symbol\n    )\n        public\n        ERC20Detailed(\n            _name,\n            _symbol,\n            18\n        )\n    {\n        // Require initial unit shares is non-zero\n        require(\n            _initialUnitShares > 0,\n            "RebalancingSetToken.constructor: Unit shares must be positive"\n        );\n\n        IRebalancingSetFactory tokenFactory = IRebalancingSetFactory(_factory);\n\n        require(\n            _naturalUnit >= tokenFactory.minimumNaturalUnit(),\n            "RebalancingSetToken.constructor: Natural Unit too low"\n        );\n\n        require(\n            _naturalUnit <= tokenFactory.maximumNaturalUnit(),\n            "RebalancingSetToken.constructor: Natural Unit too large"\n        );\n\n        // Require manager address is non-zero\n        require(\n            _manager != address(0),\n            "RebalancingSetToken.constructor: Invalid manager address"\n        );\n\n        // Require minimum rebalance interval and proposal period from factory\n        require(\n            _proposalPeriod >= tokenFactory.minimumProposalPeriod(),\n            "RebalancingSetToken.constructor: Proposal period too short"\n        );\n        require(\n            _rebalanceInterval >= tokenFactory.minimumRebalanceInterval(),\n            "RebalancingSetToken.constructor: Rebalance interval too short"\n        );\n\n        core = IRebalancingSetFactory(_factory).core();\n        coreInstance = ICore(core);\n        vault = coreInstance.vault();\n        vaultInstance = IVault(vault);\n        componentWhiteListAddress = _componentWhiteList;\n        componentWhiteListInstance = IWhiteList(_componentWhiteList);\n        factory = _factory;\n        manager = _manager;\n        currentSet = _initialSet;\n        unitShares = _initialUnitShares;\n        naturalUnit = _naturalUnit;\n\n        proposalPeriod = _proposalPeriod;\n        rebalanceInterval = _rebalanceInterval;\n        lastRebalanceTimestamp = block.timestamp;\n        rebalanceState = RebalancingLibrary.State.Default;\n    }\n\n    /* ============ Public Functions ============ */\n\n    /**\n     * Function used to set the terms of the next rebalance and start the proposal period\n     *\n     * @param _nextSet                      The Set to rebalance into\n     * @param _auctionLibrary               The library used to calculate the Dutch Auction price\n     * @param _auctionTimeToPivot           The amount of time for the auction to go ffrom start to pivot price\n     * @param _auctionStartPrice            The price to start the auction at\n     * @param _auctionPivotPrice            The price at which the price curve switches from linear to exponential\n     */\n    function propose(\n        address _nextSet,\n        address _auctionLibrary,\n        uint256 _auctionTimeToPivot,\n        uint256 _auctionStartPrice,\n        uint256 _auctionPivotPrice\n    )\n        external\n    {\n        // Put together auction price parameters\n        RebalancingLibrary.AuctionPriceParameters memory auctionPriceParams =\n            RebalancingLibrary.AuctionPriceParameters({\n                auctionTimeToPivot: _auctionTimeToPivot,\n                auctionStartPrice: _auctionStartPrice,\n                auctionPivotPrice: _auctionPivotPrice,\n                auctionStartTime: 0\n            });\n\n        // Create ProposeAuctionParameters\n        ProposeLibrary.ProposalContext memory proposalContext =\n            ProposeLibrary.ProposalContext({\n                manager: manager,\n                currentSet: currentSet,\n                coreAddress: core,\n                componentWhitelist: componentWhiteListAddress,\n                factoryAddress: factory,\n                lastRebalanceTimestamp: lastRebalanceTimestamp,\n                rebalanceInterval: rebalanceInterval,\n                rebalanceState: uint8(rebalanceState)\n            });\n\n        // Validate proposal inputs and initialize auctionPriceParameters\n        ProposeLibrary.validateProposal(\n            _nextSet,\n            _auctionLibrary,\n            proposalContext,\n            auctionPriceParams\n        );\n\n        // Update state parameters\n        auctionPriceParameters = auctionPriceParams;\n        nextSet = _nextSet;\n        auctionLibrary = _auctionLibrary;\n        proposalStartTime = block.timestamp;\n        rebalanceState = RebalancingLibrary.State.Proposal;\n\n        emit RebalanceProposed(\n            _nextSet,\n            _auctionLibrary,\n            proposalStartTime.add(proposalPeriod)\n        );\n    }\n\n    /*\n     * Initiate rebalance for the rebalancing set if the proposal period has elapsed after\n     * a proposal.\n     */\n    function startRebalance()\n        external\n    {\n        // Validate the correct rebalance state and time elapsed\n        StartRebalanceLibrary.validateStartRebalance(\n            proposalStartTime,\n            proposalPeriod,\n            uint8(rebalanceState)\n        );\n\n        // Redeem currentSet and set up biddingParameters\n        biddingParameters = StartRebalanceLibrary.redeemCurrentSetAndGetBiddingParameters(\n            currentSet,\n            nextSet,\n            auctionLibrary,\n            core,\n            vault\n        );\n\n        // Update state parameters\n        startingCurrentSetAmount = biddingParameters.remainingCurrentSets;\n        auctionPriceParameters.auctionStartTime = block.timestamp;\n        rebalanceState = RebalancingLibrary.State.Rebalance;\n\n        emit RebalanceStarted(currentSet, nextSet);\n    }\n\n    /*\n     * Initiate settlement for the rebalancing set. Full functionality now returned to\n     * set owners\n     *\n     */\n    function settleRebalance()\n        external\n    {\n        // Settle the rebalance and mint next Sets\n        unitShares = SettleRebalanceLibrary.settleRebalance(\n            totalSupply(),\n            biddingParameters.remainingCurrentSets,\n            biddingParameters.minimumBid,\n            naturalUnit,\n            nextSet,\n            core,\n            vault,\n            uint8(rebalanceState)\n        );\n\n        // Update other state parameters\n        currentSet = nextSet;\n        lastRebalanceTimestamp = block.timestamp;\n        rebalanceState = RebalancingLibrary.State.Default;\n        clearAuctionState();\n    }\n\n    /*\n     * Place bid during rebalance auction. Can only be called by Core.\n     *\n     * @param _quantity                 The amount of currentSet to be rebalanced\n     * @return combinedTokenArray       Array of token addresses invovled in rebalancing\n     * @return inflowUnitArray          Array of amount of tokens inserted into system in bid\n     * @return outflowUnitArray         Array of amount of tokens taken out of system in bid\n     */\n    function placeBid(\n        uint256 _quantity\n    )\n        external\n        returns (address[] memory, uint256[] memory, uint256[] memory)\n    {\n        // Validate bid quantity and module is sender\n        PlaceBidLibrary.validatePlaceBid(\n            _quantity,\n            core,\n            biddingParameters\n        );\n\n        // Place bid and get back inflow and outflow arrays\n        uint256[] memory inflowUnitArray;\n        uint256[] memory outflowUnitArray;\n        (\n            inflowUnitArray,\n            outflowUnitArray\n        ) = getBidPrice(_quantity);\n\n        // Update remainingCurrentSet figure to account for placed bid\n        biddingParameters.remainingCurrentSets = biddingParameters.remainingCurrentSets.sub(_quantity);\n\n        return (biddingParameters.combinedTokenArray, inflowUnitArray, outflowUnitArray);\n    }\n\n    /*\n     * Fail an auction that doesn\'t complete before reaching the pivot price. Move to Drawdown state\n     * if bids have been placed. Reset to Default state if no bids placed.\n     *\n     */\n    function endFailedAuction()\n        external\n    {\n        uint256 calculatedUnitShares;\n        (\n            ,\n            calculatedUnitShares\n        ) = SettleRebalanceLibrary.calculateNextSetIssueQuantity(\n            totalSupply(),\n            naturalUnit,\n            nextSet,\n            vault\n        );\n\n        // Fail auction and either reset to Default state or kill Rebalancing Set Token and enter Drawdown\n        // state\n        uint8 integerRebalanceState = FailAuctionLibrary.endFailedAuction(\n            startingCurrentSetAmount,\n            calculatedUnitShares,\n            currentSet,\n            core,\n            auctionPriceParameters,\n            biddingParameters,\n            uint8(rebalanceState)\n        );\n        rebalanceState = RebalancingLibrary.State(integerRebalanceState);\n\n        // Reset lastRebalanceTimestamp to now\n        lastRebalanceTimestamp = block.timestamp;\n\n        // Save combined token arrays to failedAuctionWithdrawComponents\n        failedAuctionWithdrawComponents = biddingParameters.combinedTokenArray;\n\n        // Clear auction state\n        clearAuctionState();\n    }\n\n    /*\n     * Get token inflows and outflows required for bid. Also the amount of Rebalancing\n     * Sets that would be generated.\n     *\n     * @param _quantity               The amount of currentSet to be rebalanced\n     * @return inflowUnitArray        Array of amount of tokens inserted into system in bid\n     * @return outflowUnitArray       Array of amount of tokens taken out of system in bid\n     */\n    function getBidPrice(\n        uint256 _quantity\n    )\n        public\n        view\n        returns (uint256[] memory, uint256[] memory)\n    {\n        return PlaceBidLibrary.getBidPrice(\n            _quantity,\n            auctionLibrary,\n            biddingParameters,\n            auctionPriceParameters,\n            uint8(rebalanceState)\n        );\n    }\n\n    /*\n     * Mint set token for given address.\n     * Can only be called by Core contract.\n     *\n     * @param  _issuer      The address of the issuing account\n     * @param  _quantity    The number of sets to attribute to issuer\n     */\n    function mint(\n        address _issuer,\n        uint256 _quantity\n    )\n        external\n    {\n        // Check that function caller is Core\n        require(\n            msg.sender == core,\n            "RebalancingSetToken.mint: Sender must be core"\n        );\n\n        // Check that set is not in Rebalance State\n        require(\n            rebalanceState != RebalancingLibrary.State.Rebalance,\n            "RebalancingSetToken.mint: Cannot mint during Rebalance"\n        );\n\n        // Check that set is not in Drawdown State\n        require(\n            rebalanceState != RebalancingLibrary.State.Drawdown,\n            "RebalancingSetToken.mint: Cannot mint during Drawdown"\n        );\n\n        // Update token balance of the manager\n        _mint(_issuer, _quantity);\n    }\n\n    /*\n     * Burn set token for given address.\n     * Can only be called by authorized contracts.\n     *\n     * @param  _from        The address of the redeeming account\n     * @param  _quantity    The number of sets to burn from redeemer\n     */\n    function burn(\n        address _from,\n        uint256 _quantity\n    )\n        external\n    {\n        // Check that set is not in Rebalancing State\n        require(\n            rebalanceState != RebalancingLibrary.State.Rebalance,\n            "RebalancingSetToken.burn: Cannot burn during Rebalance"\n        );\n\n        // Check to see if state is Drawdown\n        if (rebalanceState == RebalancingLibrary.State.Drawdown) {\n            // In Drawdown Sets can only be burned as part of the withdrawal process\n            require(\n                coreInstance.validModules(msg.sender),\n                "RebalancingSetToken.burn: Set cannot be redeemed during Drawdown"\n            );\n        } else {\n            // When in non-Rebalance or Drawdown state, check that function caller is Core\n            // so that Sets can be redeemed\n            require(\n                msg.sender == core,\n                "RebalancingSetToken.burn: Sender must be core"\n            );\n        }\n\n        _burn(_from, _quantity);\n    }\n\n    /*\n     * Set new manager address\n     *\n     * @param  _newManager       The address of the new manager account\n     */\n    function setManager(\n        address _newManager\n    )\n        external\n    {\n        require(\n            msg.sender == manager,\n            "RebalancingSetToken.setManager: Sender must be the manager"\n        );\n\n        emit NewManagerAdded(_newManager, manager);\n        manager = _newManager;\n    }\n\n    /* ============ Getter Functions ============ */\n\n    /*\n     * Get addresses of setToken underlying the Rebalancing Set\n     *\n     * @return  componentAddresses       Array of currentSet\n     */\n    function getComponents()\n        external\n        view\n        returns (address[] memory)\n    {\n        address[] memory components = new address[](1);\n        components[0] = currentSet;\n        return components;\n    }\n\n    /*\n     * Get unitShares of Rebalancing Set\n     *\n     * @return  units       Array of component unit\n     */\n    function getUnits()\n        external\n        view\n        returns (uint256[] memory)\n    {\n        uint256[] memory units = new uint256[](1);\n        units[0] = unitShares;\n        return units;\n    }\n\n    /*\n     * Get biddingParameters of Rebalancing Set\n     *\n     * @return  biddingParams       Object with bidding information\n     */\n    function getBiddingParameters()\n        external\n        view\n        returns (uint256[] memory)\n    {\n        uint256[] memory biddingParams = new uint256[](2);\n        biddingParams[0] = biddingParameters.minimumBid;\n        biddingParams[1] = biddingParameters.remainingCurrentSets;\n        return biddingParams;\n    }\n\n    /*\n     * Get auctionPriceParameters of Rebalancing Set\n     *\n     * @return  auctionParams       Object with auction information\n     */\n    function getAuctionPriceParameters()\n        external\n        view\n        returns (uint256[] memory)\n    {\n        uint256[] memory auctionParams = new uint256[](4);\n        auctionParams[0] = auctionPriceParameters.auctionStartTime;\n        auctionParams[1] = auctionPriceParameters.auctionTimeToPivot;\n        auctionParams[2] = auctionPriceParameters.auctionStartPrice;\n        auctionParams[3] = auctionPriceParameters.auctionPivotPrice;\n        return auctionParams;\n    }\n\n    /*\n     * Checks to make sure address is the current set of the RebalancingSetToken.\n     * Conforms to the ISetToken Interface.\n     *\n     * @param  _tokenAddress     Address of token being checked\n     * @return  bool             True if token is the current Set\n     */\n    function tokenIsComponent(\n        address _tokenAddress\n    )\n        external\n        view\n        returns (bool)\n    {\n        return _tokenAddress == currentSet;\n    }\n\n    /*\n     * Get combinedTokenArray of Rebalancing Set\n     *\n     * @return  combinedTokenArray\n     */\n    function getCombinedTokenArrayLength()\n        external\n        view\n        returns (uint256)\n    {\n        return biddingParameters.combinedTokenArray.length;\n    }\n\n    /*\n     * Get combinedTokenArray of Rebalancing Set\n     *\n     * @return  combinedTokenArray\n     */\n    function getCombinedTokenArray()\n        external\n        view\n        returns (address[] memory)\n    {\n        return biddingParameters.combinedTokenArray;\n    }\n\n    /*\n     * Get combinedCurrentUnits of Rebalancing Set\n     *\n     * @return  combinedCurrentUnits\n     */\n    function getCombinedCurrentUnits()\n        external\n        view\n        returns (uint256[] memory)\n    {\n        return biddingParameters.combinedCurrentUnits;\n    }\n\n    /*\n     * Get combinedNextSetUnits of Rebalancing Set\n     *\n     * @return  combinedNextSetUnits\n     */\n    function getCombinedNextSetUnits()\n        external\n        view\n        returns (uint256[] memory)\n    {\n        return biddingParameters.combinedNextSetUnits;\n    }\n\n    /*\n     * Get failedAuctionWithdrawComponents of Rebalancing Set\n     *\n     * @return  failedAuctionWithdrawComponents\n     */\n    function getFailedAuctionWithdrawComponents()\n        external\n        view\n        returns (address[] memory)\n    {\n        return failedAuctionWithdrawComponents;\n    }\n\n    /* ============ Internal Functions ============ */\n\n    /*\n     * Reset auction specific state after failed or successful rebalance\n     */\n    function clearAuctionState()\n        internal\n    {\n        nextSet = address(0);\n        auctionLibrary = address(0);\n        startingCurrentSetAmount = 0;\n        delete auctionPriceParameters;\n        delete biddingParameters;\n    }\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/tokens/RebalancingSetToken.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.756Z",devdoc:{author:"Set Protocol * Implementation of Rebalancing Set token.",methods:{"allowance(address,address)":{details:"Function to check the amount of tokens that an owner allowed to a spender.",params:{owner:"address The address which owns the funds.",spender:"address The address which will spend the funds."},"return":"A uint256 specifying the amount of tokens still available for the spender."},"approve(address,uint256)":{details:"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",params:{spender:"The address which will spend the funds.",value:"The amount of tokens to be spent."}},"balanceOf(address)":{details:"Gets the balance of the specified address.",params:{owner:"The address to query the balance of."},"return":"A uint256 representing the amount owned by the passed address."},constructor:{params:{_componentWhiteList:"Address of component WhiteList contract",_factory:"Factory used to create the Rebalancing Set",_initialSet:"Initial set that collateralizes the Rebalancing set",_initialUnitShares:"Units of currentSet that equals one share",_manager:"Manager of the Rebalancing Set",_name:"The name of the new RebalancingSetToken",_naturalUnit:"The minimum multiple of Sets that can be issued or redeemed",_proposalPeriod:"Amount of time for users to inspect a rebalance proposal",_rebalanceInterval:"Minimum amount of time between rebalances",_symbol:"The symbol of the new RebalancingSetToken"}},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{details:"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",params:{spender:"The address which will spend the funds.",subtractedValue:"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{details:"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",params:{addedValue:"The amount of tokens to increase the allowance by.",spender:"The address which will spend the funds."}},"name()":{"return":"the name of the token."},"propose(address,address,uint256,uint256,uint256)":{params:{_auctionLibrary:"The library used to calculate the Dutch Auction price",_auctionPivotPrice:"The price at which the price curve switches from linear to exponential",_auctionStartPrice:"The price to start the auction at",_auctionTimeToPivot:"The amount of time for the auction to go ffrom start to pivot price",_nextSet:"The Set to rebalance into"}},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{details:"Total number of tokens in existence"},"transfer(address,uint256)":{details:"Transfer token to a specified address",params:{to:"The address to transfer to.",value:"The amount to be transferred."}},"transferFrom(address,address,uint256)":{details:"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",params:{from:"address The address which you want to send tokens from",to:"address The address which you want to transfer to",value:"uint256 the amount of tokens to be transferred"}}},title:"RebalancingSetToken"},userdoc:{methods:{constructor:"Constructor function for Rebalancing Set Token","propose(address,address,uint256,uint256,uint256)":{notice:"Function used to set the terms of the next rebalance and start the proposal period"}}}};