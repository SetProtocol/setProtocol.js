"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ZeroExOrderLibraryMock={contractName:"ZeroExOrderLibraryMock",abi:[{constant:true,inputs:[{name:"_ordersData",type:"bytes"},{name:"_offset",type:"uint256"}],name:"parseOrderHeader",outputs:[{name:"",type:"uint256"},{name:"",type:"uint256"}],payable:false,stateMutability:"pure",type:"function"},{constant:true,inputs:[{name:"_ordersData",type:"bytes"},{name:"_offset",type:"uint256"}],name:"parseZeroExOrder",outputs:[{name:"",type:"address[4]"},{name:"",type:"uint256[6]"},{name:"",type:"bytes"},{name:"",type:"bytes"}],payable:false,stateMutability:"pure",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[{"name":"_ordersData","type":"bytes"},{"name":"_offset","type":"uint256"}],"name":"parseOrderHeader","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[{"name":"_ordersData","type":"bytes"},{"name":"_offset","type":"uint256"}],"name":"parseZeroExOrder","outputs":[{"name":"","type":"address[4]"},{"name":"","type":"uint256[6]"},{"name":"","type":"bytes"},{"name":"","type":"bytes"}],"payable":false,"stateMutability":"pure","type":"function"}],"devdoc":{"methods":{}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/core/exchange-wrappers/lib/ZeroExOrderLibraryMock.sol":"ZeroExOrderLibraryMock"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/exchange-wrappers/lib/ZeroExOrderLibrary.sol":{"keccak256":"0x7c25c61a156108bdb8761a2c44117991a808784735aca97f01102f70f40a6700","urls":["bzzr://b7945449829046699813a6223b07ae76fcfdc7ad5aea033bc66bdae25fd9e1ab"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/external/0x/Exchange/libs/LibEIP712.sol":{"keccak256":"0x16dc66e08199422c0bd0f2be5e0379b1b9403379d5f8ef823e9d911bce09fb81","urls":["bzzr://d4a8943b40e1395887e425628079d27cca609c6da2d72b9c3d07d3a56993f405"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/external/0x/Exchange/libs/LibOrder.sol":{"keccak256":"0x6b6a23c65daa2c2559575452593183394afd0b757e01e4ae25e32787b03c4158","urls":["bzzr://33c081a5303948e958cb95a5efd25415e0266ae2023c912977c6ee888798f4a5"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/external/0x/LibBytes.sol":{"keccak256":"0x8617740051ffe434ec5737fa1cf53fdd3c6dd901d6f8c3b379754d9928daa752","urls":["bzzr://52865a32d5c247782bf2fda7bb606c579caa924875108b96d7ea388ef19991fc"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/core/exchange-wrappers/lib/ZeroExOrderLibraryMock.sol":{"keccak256":"0xa221d09032b3fcfcc809c7b6d69230ae6235a25350cd2e1e083dc78634cbcce4","urls":["bzzr://2a191d442a13a0268b7671ae57a495eee8f053480a1aa944134a9fe5bbd5217b"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]}},"version":1}',bytecode:"0x608060405234801561001057600080fd5b506107ce806100206000396000f3fe608060405234801561001057600080fd5b5060043610610052577c010000000000000000000000000000000000000000000000000000000060003504633a7c978d8114610057578063f2bbeffc14610081575b600080fd5b61006a610065366004610555565b6100a4565b604051610078929190610701565b60405180910390f35b61009461008f366004610555565b610105565b60405161007894939291906106b3565b6000806100af61041e565b6100f086868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508892506102b6915050565b80516020909101519097909650945050505050565b61010d61043f565b61011561045d565b60608061012061041e565b61016188888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a92506102b6915050565b905061016b61047b565b6101cf89898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505085516101ca9250604091506101be908c9063ffffffff6102eb16565b9063ffffffff6102eb16565b610304565b905060405180608001604052808260000151600160a060020a0316600160a060020a031681526020018260200151600160a060020a0316600160a060020a031681526020018260400151600160a060020a0316600160a060020a031681526020018260600151600160a060020a0316600160a060020a03168152506040518060c00160405280836080015181526020018360a0015181526020018360c0015181526020018360e00151815260200183610100015181526020018361012001518152508261014001518361016001518191508090509550955095509550505093509350935093565b6102be61041e565b6102c661041e565b60006102d5846101be876103c3565b8051835260209081015190830152509392505050565b6000828201838110156102fd57600080fd5b9392505050565b61030c61047b565b61031461047b565b6000806000610326866101be896103c3565b9050805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e0850152610100810151610100850152610120810151610120850152610140810151925061016081015191506103a3836103c9565b6101408501526103b2826103c9565b610160850152509195945050505050565b60200190565b604080516024808252606082810190935282919060208201818038833950507ff47261b00000000000000000000000000000000000000000000000000000000060208301525060248101939093525090919050565b60405180606001604052806000815260200160008152602001606081525090565b60405180608001604052806004906020820280388339509192915050565b6040518060c001604052806006906020820280388339509192915050565b6040518061018001604052806000600160a060020a031681526020016000600160a060020a031681526020016000600160a060020a031681526020016000600160a060020a0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001606081525090565b60008083601f84011261051257600080fd5b50813567ffffffffffffffff81111561052a57600080fd5b60208301915083600182028301111561054257600080fd5b9250929050565b60006102fd823561071c565b60008060006040848603121561056a57600080fd5b833567ffffffffffffffff81111561058157600080fd5b61058d86828701610500565b935093505060206105a086828701610549565b9150509250925092565b60006105b683836105ca565b505060200190565b60006105b683836106aa565b6105d38161073d565b82525050565b6105e28161071f565b6105ec818461072f565b92506105f78261071c565b60005b828110156106225761060d8583516105aa565b9450610618826103c3565b91506001016105fa565b5050505050565b61063281610725565b61063c818461072f565b92506106478261071c565b60005b828110156106225761065d8583516105be565b9450610668826103c3565b915060010161064a565b600061067d8261072b565b6106878185610734565b935061069781856020860161075a565b6106a08161078a565b9093019392505050565b6105d38161071c565b61018081016106c282876105d9565b6106cf6080830186610629565b8181036101408301526106e28185610672565b90508181036101608301526106f78184610672565b9695505050505050565b6040810161070f82856106aa565b6102fd60208301846106aa565b90565b50600490565b50600690565b5190565b919050565b90815260200190565b60006107488261074e565b92915050565b600160a060020a031690565b60005b8381101561077557818101518382015260200161075d565b83811115610784576000848401525b50505050565b601f01601f19169056fea265627a7a72305820bc4fd495e42140963128e51ace10ebc8ba9902b3facd068e29d58314f30b1d036c6578706572696d656e74616cf50037",deployedBytecode:"0x608060405234801561001057600080fd5b5060043610610052577c010000000000000000000000000000000000000000000000000000000060003504633a7c978d8114610057578063f2bbeffc14610081575b600080fd5b61006a610065366004610555565b6100a4565b604051610078929190610701565b60405180910390f35b61009461008f366004610555565b610105565b60405161007894939291906106b3565b6000806100af61041e565b6100f086868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508892506102b6915050565b80516020909101519097909650945050505050565b61010d61043f565b61011561045d565b60608061012061041e565b61016188888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a92506102b6915050565b905061016b61047b565b6101cf89898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505085516101ca9250604091506101be908c9063ffffffff6102eb16565b9063ffffffff6102eb16565b610304565b905060405180608001604052808260000151600160a060020a0316600160a060020a031681526020018260200151600160a060020a0316600160a060020a031681526020018260400151600160a060020a0316600160a060020a031681526020018260600151600160a060020a0316600160a060020a03168152506040518060c00160405280836080015181526020018360a0015181526020018360c0015181526020018360e00151815260200183610100015181526020018361012001518152508261014001518361016001518191508090509550955095509550505093509350935093565b6102be61041e565b6102c661041e565b60006102d5846101be876103c3565b8051835260209081015190830152509392505050565b6000828201838110156102fd57600080fd5b9392505050565b61030c61047b565b61031461047b565b6000806000610326866101be896103c3565b9050805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e0850152610100810151610100850152610120810151610120850152610140810151925061016081015191506103a3836103c9565b6101408501526103b2826103c9565b610160850152509195945050505050565b60200190565b604080516024808252606082810190935282919060208201818038833950507ff47261b00000000000000000000000000000000000000000000000000000000060208301525060248101939093525090919050565b60405180606001604052806000815260200160008152602001606081525090565b60405180608001604052806004906020820280388339509192915050565b6040518060c001604052806006906020820280388339509192915050565b6040518061018001604052806000600160a060020a031681526020016000600160a060020a031681526020016000600160a060020a031681526020016000600160a060020a0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001606081525090565b60008083601f84011261051257600080fd5b50813567ffffffffffffffff81111561052a57600080fd5b60208301915083600182028301111561054257600080fd5b9250929050565b60006102fd823561071c565b60008060006040848603121561056a57600080fd5b833567ffffffffffffffff81111561058157600080fd5b61058d86828701610500565b935093505060206105a086828701610549565b9150509250925092565b60006105b683836105ca565b505060200190565b60006105b683836106aa565b6105d38161073d565b82525050565b6105e28161071f565b6105ec818461072f565b92506105f78261071c565b60005b828110156106225761060d8583516105aa565b9450610618826103c3565b91506001016105fa565b5050505050565b61063281610725565b61063c818461072f565b92506106478261071c565b60005b828110156106225761065d8583516105be565b9450610668826103c3565b915060010161064a565b600061067d8261072b565b6106878185610734565b935061069781856020860161075a565b6106a08161078a565b9093019392505050565b6105d38161071c565b61018081016106c282876105d9565b6106cf6080830186610629565b8181036101408301526106e28185610672565b90508181036101608301526106f78184610672565b9695505050505050565b6040810161070f82856106aa565b6102fd60208301846106aa565b90565b50600490565b50600690565b5190565b919050565b90815260200190565b60006107488261074e565b92915050565b600160a060020a031690565b60005b8381101561077557818101518382015260200161075d565b83811115610784576000848401525b50505050565b601f01601f19169056fea265627a7a72305820bc4fd495e42140963128e51ace10ebc8ba9902b3facd068e29d58314f30b1d036c6578706572696d656e74616cf50037",sourceMap:"441:1541:124:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;441:1541:124;;;;;;;",deployedSourceMap:"441:1541:124:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;441:1541:124;;;;;;;;;;;;;;;;;;;;;;;;542:378;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;926:1054;;;;;;;;;:::i;:::-;;;;;;;;;;;542:378;682:7;691;714:44;;:::i;:::-;761:91;810:11;;761:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;835:7:124;;-1:-1:-1;761:35:124;;-1:-1:-1;;761:91:124:i;:::-;871:22;;895:17;;;;;871:22;;895:17;;-1:-1:-1;542:378:124;-1:-1:-1;;;;;542:378:124:o;926:1054::-;1066:17;;:::i;:::-;1085;;:::i;:::-;1104:12;1118;1146:44;;:::i;:::-;1193:91;1242:11;;1193:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1267:7:124;;-1:-1:-1;1193:35:124;;-1:-1:-1;;1193:91:124:i;:::-;1146:138;;1295:27;;:::i;:::-;1325:127;1374:11;;1325:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;1411:22:124;;1399:43;;-1:-1:-1;1439:2:124;;-1:-1:-1;1399:35:124;;:7;;:35;:11;:35;:::i;:::-;:39;:43;:39;:43;:::i;:::-;1325:35;:127::i;:::-;1295:157;;1463:510;;;;;;;;1502:5;:18;;;-1:-1:-1;;;;;1463:510:124;-1:-1:-1;;;;;1463:510:124;;;;;1538:5;:18;;;-1:-1:-1;;;;;1463:510:124;-1:-1:-1;;;;;1463:510:124;;;;;1574:5;:25;;;-1:-1:-1;;;;;1463:510:124;-1:-1:-1;;;;;1463:510:124;;;;;1617:5;:19;;;-1:-1:-1;;;;;1463:510:124;-1:-1:-1;;;;;1463:510:124;;;;;;;;;;;;1682:5;:22;;;1463:510;;;;1722:5;:22;;;1463:510;;;;1762:5;:14;;;1463:510;;;;1794:5;:14;;;1463:510;;;;1826:5;:27;;;1463:510;;;;1871:5;:10;;;1463:510;;;1909:5;:20;;;1943:5;:20;;;1463:510;;;;;;;;;;;;;;;;926:1054;;;;;;;:::o;2923:508:6:-;3061:18;;:::i;:::-;3095:25;;:::i;:::-;3131:22;3156:41;3189:7;3156:28;:11;:26;:28::i;:41::-;3256:21;;3231:47;;3371:2;3351:23;;;3345:30;3327:15;;;3320:56;-1:-1:-1;3231:47:6;2923:508;-1:-1:-1;;;2923:508:6:o;1439:145:166:-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;;1576:1;1439:145;-1:-1:-1;;;1439:145:166:o;4704:1581:6:-;4842:21;;:::i;:::-;4879:27;;:::i;:::-;4916:25;4951;4987:22;5012:41;5045:7;5012:28;:11;:26;:28::i;:41::-;4987:66;;5117:14;5111:21;5094:5;5087:46;5216:2;5200:14;5196:23;5190:30;5184:2;5177:5;5173:14;5166:55;5295:2;5279:14;5275:23;5269:30;5263:2;5256:5;5252:14;5245:55;5381:2;5365:14;5361:23;5355:30;5349:2;5342:5;5338:14;5331:55;5468:3;5452:14;5448:24;5442:31;5436:3;5429:5;5425:15;5418:56;5558:3;5542:14;5538:24;5532:31;5526:3;5519:5;5515:15;5508:56;5648:3;5632:14;5628:24;5622:31;5616:3;5609:5;5605:15;5598:56;5730:3;5714:14;5710:24;5704:31;5698:3;5691:5;5687:15;5680:56;5812:3;5796:14;5792:24;5786:31;5780:3;5773:5;5769:15;5762:56;5912:3;5896:14;5892:24;5886:31;5880:3;5873:5;5869:15;5862:56;5987:3;5971:14;5967:24;5961:31;5940:52;;6071:3;6055:14;6051:24;6045:31;6024:52;;6138:42;6162:17;6138:23;:42::i;:::-;6115:20;;;:65;6213:42;6237:17;6213:23;:42::i;:::-;6190:20;;;:65;-1:-1:-1;6190:20:6;;4704:1581;-1:-1:-1;;;;;4704:1581:6:o;848:228:113:-;1027:2;1016:14;;848:228::o;7927:504:6:-;8093:13;;;8103:2;8093:13;;;8043:12;8093:13;;;;;;8043:12;;8093:13;;;;21:6:-1;;104:10;8093:13:6;87:34:-1;-1:-1;;8207:66:6;8326:2;8314:15;;8307:33;-1:-1:-1;8372:2:6;8360:15;;8353:38;;;;-1:-1:-1;8314:15:6;;7927:504;-1:-1:-1;7927:504:6:o;441:1541:124:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;441:1541:124;;;-1:-1:-1;;441:1541:124:o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;441:1541:124;;;-1:-1:-1;;441:1541:124:o;:::-;;;;;;;;;;-1:-1:-1;;;;;441:1541:124;;;;;;-1:-1:-1;;;;;441:1541:124;;;;;;-1:-1:-1;;;;;441:1541:124;;;;;;-1:-1:-1;;;;;441:1541:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;19:335:-1:-;;;133:3;126:4;118:6;114:17;110:27;100:2;;151:1;148;141:12;100:2;-1:-1;171:20;;211:18;200:30;;197:2;;;243:1;240;233:12;197:2;277:4;269:6;265:17;253:29;;327:3;320;312:6;308:16;298:8;294:31;291:40;288:2;;;344:1;341;334:12;288:2;93:261;;;;;;362:118;;429:46;467:6;454:20;429:46;;487:490;;;;627:2;615:9;606:7;602:23;598:32;595:2;;;643:1;640;633:12;595:2;678:31;;729:18;718:30;;715:2;;;761:1;758;751:12;715:2;789:64;845:7;836:6;825:9;821:22;789:64;;;779:74;;;;657:202;890:2;908:53;953:7;944:6;933:9;929:22;908:53;;;898:63;;869:98;589:388;;;;;;985:173;;1072:46;1114:3;1106:6;1072:46;;;-1:-1;;1147:4;1138:14;;1065:93;1167:173;;1254:46;1296:3;1288:6;1254:46;;1348:110;1421:31;1446:5;1421:31;;;1416:3;1409:44;1403:55;;;1498:591;1631:52;1677:5;1631:52;;;1696:84;1773:6;1768:3;1696:84;;;1689:91;;1800:54;1848:5;1800:54;;;1875:1;1860:217;1885:6;1882:1;1879:13;1860:217;;;1932:63;1991:3;1982:6;1976:13;1932:63;;;1925:70;;2012:58;2063:6;2012:58;;;2002:68;-1:-1;1907:1;1900:9;1860:217;;;1864:14;1610:479;;;;;2130:591;2263:52;2309:5;2263:52;;;2328:84;2405:6;2400:3;2328:84;;;2321:91;;2432:54;2480:5;2432:54;;;2507:1;2492:217;2517:6;2514:1;2511:13;2492:217;;;2564:63;2623:3;2614:6;2608:13;2564:63;;;2557:70;;2644:58;2695:6;2644:58;;;2634:68;-1:-1;2539:1;2532:9;2492:217;;2729:343;;2839:38;2871:5;2839:38;;;2889:70;2952:6;2947:3;2889:70;;;2882:77;;2964:52;3009:6;3004:3;2997:4;2990:5;2986:16;2964:52;;;3037:29;3059:6;3037:29;;;3028:39;;;;2819:253;-1:-1;;;2819:253;3079:110;3152:31;3177:5;3152:31;;3323:902;3653:3;3638:19;;3668:117;3642:9;3758:6;3668:117;;;3796:119;3910:3;3899:9;3895:19;3886:6;3796:119;;;3964:9;3958:4;3954:20;3948:3;3937:9;3933:19;3926:49;3989:76;4060:4;4051:6;3989:76;;;3981:84;;4114:9;4108:4;4104:20;4098:3;4087:9;4083:19;4076:49;4139:76;4210:4;4201:6;4139:76;;;4131:84;3624:601;-1:-1;;;;;;3624:601;4232:324;4378:2;4363:18;;4392:71;4367:9;4436:6;4392:71;;;4474:72;4542:2;4531:9;4527:18;4518:6;4474:72;;4565:108;4660:6;4641:32;4801:96;-1:-1;4889:3;;4873:24;4904:96;-1:-1;4992:3;;4976:24;5007:91;5081:12;;5065:33;5364:140;5495:3;5473:31;-1:-1;5473:31;5662:162;5764:19;;;5813:4;5804:14;;5757:67;5832:105;;5901:31;5926:5;5901:31;;;5890:42;5884:53;-1:-1;;5884:53;5944:128;-1:-1;;;;;6013:54;;5996:76;6252:268;6317:1;6324:101;6338:6;6335:1;6332:13;6324:101;;;6405:11;;;6399:18;6386:11;;;6379:39;6360:2;6353:10;6324:101;;;6440:6;6437:1;6434:13;6431:2;;;6505:1;6496:6;6491:3;6487:16;6480:27;6431:2;6301:219;;;;;6528:97;6616:2;6596:14;-1:-1;;6592:28;;6576:49",source:'pragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\nimport { ZeroExOrderLibrary } from "../../../../core/exchange-wrappers/lib/ZeroExOrderLibrary.sol";\nimport { LibBytes } from "../../../../external/0x/LibBytes.sol";\nimport { LibOrder } from "../../../../external/0x/Exchange/libs/LibOrder.sol";\n\n\n// Mock class implementing internal OrderHandler methods\ncontract ZeroExOrderLibraryMock {\n    using SafeMath for uint256;\n    using LibBytes for bytes;\n\n    function parseOrderHeader(\n        bytes calldata _ordersData,\n        uint256 _offset\n    )\n        external\n        pure\n        returns (uint256, uint256)\n    {\n        ZeroExOrderLibrary.OrderHeader memory header = ZeroExOrderLibrary.parseOrderHeader(\n            _ordersData,\n            _offset\n        );\n\n        return (header.signatureLength, header.fillAmount);\n    }\n\n    function parseZeroExOrder(\n        bytes calldata _ordersData,\n        uint256 _offset\n    )\n        external\n        pure\n        returns (address[4] memory, uint256[6] memory, bytes memory, bytes memory)\n    {\n        ZeroExOrderLibrary.OrderHeader memory header = ZeroExOrderLibrary.parseOrderHeader(\n            _ordersData,\n            _offset\n        );\n\n        LibOrder.Order memory order = ZeroExOrderLibrary.parseZeroExOrder(\n            _ordersData,\n            _offset.add(header.signatureLength).add(64)\n        );\n\n        return (\n            [\n                order.makerAddress,\n                order.takerAddress,\n                order.feeRecipientAddress,\n                order.senderAddress\n            ],\n            [\n                order.makerAssetAmount,\n                order.takerAssetAmount,\n                order.makerFee,\n                order.takerFee,\n                order.expirationTimeSeconds,\n                order.salt\n            ],\n            order.makerAssetData,\n            order.takerAssetData\n        );\n    }\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/core/exchange-wrappers/lib/ZeroExOrderLibraryMock.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:37.042Z",devdoc:{methods:{}},userdoc:{methods:{}}};