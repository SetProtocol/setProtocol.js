"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.RebalancingSetIssuanceModule={contractName:"RebalancingSetIssuanceModule",abi:[{constant:true,inputs:[],name:"weth",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"vaultInstance",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"transferProxy",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"coreInstance",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"core",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"vault",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{inputs:[{name:"_core",type:"address"},{name:"_vault",type:"address"},{name:"_transferProxy",type:"address"},{name:"_weth",type:"address"}],payable:false,stateMutability:"nonpayable",type:"constructor"},{payable:true,stateMutability:"payable",type:"fallback"},{anonymous:false,inputs:[{indexed:true,name:"rebalancingSetAddress",type:"address"},{indexed:true,name:"callerAddress",type:"address"},{indexed:false,name:"rebalancingSetQuantity",type:"uint256"}],name:"LogRebalancingSetIssue",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"rebalancingSetAddress",type:"address"},{indexed:true,name:"callerAddress",type:"address"},{indexed:false,name:"rebalancingSetQuantity",type:"uint256"}],name:"LogRebalancingSetRedeem",type:"event"},{constant:false,inputs:[{name:"_rebalancingSetAddress",type:"address"},{name:"_rebalancingSetQuantity",type:"uint256"},{name:"_keepChangeInVault",type:"bool"}],name:"issueRebalancingSet",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_rebalancingSetAddress",type:"address"},{name:"_rebalancingSetQuantity",type:"uint256"},{name:"_keepChangeInVault",type:"bool"}],name:"issueRebalancingSetWrappingEther",outputs:[],payable:true,stateMutability:"payable",type:"function"},{constant:false,inputs:[{name:"_rebalancingSetAddress",type:"address"},{name:"_rebalancingSetQuantity",type:"uint256"},{name:"_keepChangeInVault",type:"bool"}],name:"redeemRebalancingSet",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_rebalancingSetAddress",type:"address"},{name:"_rebalancingSetQuantity",type:"uint256"},{name:"_keepChangeInVault",type:"bool"}],name:"redeemRebalancingSetUnwrappingEther",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":false,"inputs":[{"name":"_rebalancingSetAddress","type":"address"},{"name":"_rebalancingSetQuantity","type":"uint256"},{"name":"_keepChangeInVault","type":"bool"}],"name":"issueRebalancingSet","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_rebalancingSetAddress","type":"address"},{"name":"_rebalancingSetQuantity","type":"uint256"},{"name":"_keepChangeInVault","type":"bool"}],"name":"issueRebalancingSetWrappingEther","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"weth","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vaultInstance","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"transferProxy","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"coreInstance","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_rebalancingSetAddress","type":"address"},{"name":"_rebalancingSetQuantity","type":"uint256"},{"name":"_keepChangeInVault","type":"bool"}],"name":"redeemRebalancingSet","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"core","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_rebalancingSetAddress","type":"address"},{"name":"_rebalancingSetQuantity","type":"uint256"},{"name":"_keepChangeInVault","type":"bool"}],"name":"redeemRebalancingSetUnwrappingEther","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vault","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_core","type":"address"},{"name":"_vault","type":"address"},{"name":"_transferProxy","type":"address"},{"name":"_weth","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"rebalancingSetAddress","type":"address"},{"indexed":true,"name":"callerAddress","type":"address"},{"indexed":false,"name":"rebalancingSetQuantity","type":"uint256"}],"name":"LogRebalancingSetIssue","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"rebalancingSetAddress","type":"address"},{"indexed":true,"name":"callerAddress","type":"address"},{"indexed":false,"name":"rebalancingSetQuantity","type":"uint256"}],"name":"LogRebalancingSetRedeem","type":"event"}],"devdoc":{"author":"Set Protocol * A module that includes functions for issuing / redeeming rebalancing SetToken to/from its base components and ether.","methods":{"constructor":{"params":{"_core":"The address of Core","_transferProxy":"The address of TransferProxy","_vault":"The address of Vault","_weth":"The address of Wrapped Ether"}},"issueRebalancingSet(address,uint256,bool)":{"params":{"_keepChangeInVault":"Boolean signifying whether excess base SetToken is transfered to the user                                     or left in the vault","_rebalancingSetAddress":"Address of the rebalancing SetToken to issue","_rebalancingSetQuantity":"The issuance quantity of rebalancing SetToken"}},"issueRebalancingSetWrappingEther(address,uint256,bool)":{"params":{"_keepChangeInVault":"Boolean signifying whether excess base SetToken is transfered to the user                                     or left in the vault","_rebalancingSetAddress":"Address of the rebalancing SetToken to issue","_rebalancingSetQuantity":"The issuance quantity of rebalancing SetToken"}},"redeemRebalancingSet(address,uint256,bool)":{"params":{"_keepChangeInVault":"Boolean signifying whether excess base SetToken is transfered to the user                                     or left in the vault","_rebalancingSetAddress":"Address of the rebalancing SetToken to redeem","_rebalancingSetQuantity":"The Quantity of the rebalancing SetToken to redeem"}},"redeemRebalancingSetUnwrappingEther(address,uint256,bool)":{"params":{"_keepChangeInVault":"Boolean signifying whether excess base SetToken is transferred to the user                                   or left in the vault","_rebalancingSetAddress":"Address of the rebalancing SetToken to redeem","_rebalancingSetQuantity":"The Quantity of the rebalancing SetToken to redeem"}}},"title":"RebalancingSetIssuanceModule"},"userdoc":{"methods":{"constructor":"Constructor function for RebalancingSetIssuanceModule","issueRebalancingSet(address,uint256,bool)":{"notice":"Issue a rebalancing SetToken using the base components of the base SetToken. The base SetToken is then issued into the rebalancing SetToken. The base SetToken quantity issued is calculated by taking the rebalancing SetToken\'s quantity, unit shares, and natural unit. If the calculated quantity is not a multiple of the natural unit of the base SetToken, the quantity is rounded up to the base SetToken natural unit. NOTE: Potential to receive more baseSet than expected if someone transfers some to this module. Be careful with balance checks."},"issueRebalancingSetWrappingEther(address,uint256,bool)":{"notice":"Issue a rebalancing SetToken using the base components and ether of the base SetToken. The ether is wrapped  into wrapped Ether and utilized in issuance. The base SetToken is then issued and reissued into the rebalancing SetToken. Read more about base SetToken quantity in the issueRebalancingSet function. NOTE: Potential to receive more baseSet and ether dust than expected if someone transfers some to this module. Be careful with balance checks."},"redeemRebalancingSet(address,uint256,bool)":{"notice":"Redeems a rebalancing SetToken into the base components of the base SetToken. NOTE: Potential to receive more baseSet than expected if someone transfers some to this module. Be careful with balance checks."},"redeemRebalancingSetUnwrappingEther(address,uint256,bool)":{"notice":"Redeems a rebalancing SetToken into the base components of the base SetToken. Unwraps wrapped ether and sends eth to the user. If no wrapped ether in Set then will REVERT. NOTE: Potential to receive more baseSet and ether dust than expected if someone transfers some to this module. Be careful with balance checks."}}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/RebalancingSetIssuanceModule.sol":"RebalancingSetIssuanceModule"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ICore.sol":{"keccak256":"0x5dc3db4398630ea52d2a40c9ddfa89d94e65c2770a12bab4d2a5c8eb573fb0a0","urls":["bzzr://25e90b53f61b388e0950b808e2296f82d427b66cfd6021212713436b2a592e31"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalancingSetToken.sol":{"keccak256":"0xe7356a7b0f0cc95d9526395d776f523a48fd65618730d67b4f31f20ffbd380da","urls":["bzzr://605a33a818eff7ce3370f25fccb751f61c066b4db0772605a2215d1357d68072"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetToken.sol":{"keccak256":"0xfa6c0c07f8394d89b6b8f72e15778f8452a9341acb20cebb8421f3522aaca1bd","urls":["bzzr://ccf23bb78fd507bf8cbf5cf7ac2a660a1463b87a3689196e42b8f6862d1a6b11"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ITransferProxy.sol":{"keccak256":"0x962d54385cc4760c550cd2f16bfdb53e967def4c5d3acb7b3d0b3d7a49f902de","urls":["bzzr://cb8994c8bae7fa1d55d240f44396f4156b45c81afa6fcfa608fd5e4bf9f1a919"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IVault.sol":{"keccak256":"0xf8a6d376173be39f5744492866db5dd3f91453a124d23679ff164ff3817f2f4f","urls":["bzzr://896c0a8329175c1620e1a22467778b835defe0e61847e5a8427a306f42391e64"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/RebalancingLibrary.sol":{"keccak256":"0x7f9dd2f95b2ee71a98b94cb9b0df15874aa134e7480d04a1fcf36aff166a55f4","urls":["bzzr://f43a5563ec5df095151eee30cf7a0941b5a971917c27c7b34d9586b36563ab5b"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/RebalancingSetIssuanceModule.sol":{"keccak256":"0x72d4e23ad66f4e0a4ff38a330fa8b7311c0119ae1017461904a4a21892645c4d","urls":["bzzr://b7ce04017d334e69396034e35e485629cd6e55153fcb9f559832aa26204ed380"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/lib/ModuleCoreState.sol":{"keccak256":"0x75a216727092c78a7adb0016e4ed49bc174b4e8725b0e6b0689f86c4d20bcba7","urls":["bzzr://29bbd30e5a474c131c8ae83c00cf82f3bf2162e6f4699cb04f7c06507302e50c"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/lib/RebalancingSetIssuance.sol":{"keccak256":"0x144cad20065c119f53eb5f68d55d9d225569773032345da965b1464a2fa4e334","urls":["bzzr://54bf1bafdf1a2db4732561aed72ffef0796c4512164d070a22465a53399ff374"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/ERC20Wrapper.sol":{"keccak256":"0x09fdf2adbbcbe2ce6cf3924c8cae4e206cd501c3daca55d43c847d310150ceb8","urls":["bzzr://f2866ffe2b523888937071b65dd86d89a6e61161fd2d1ce1b9b52ea23914337d"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/IERC20.sol":{"keccak256":"0xe4f71b1797f6421de91c6ce3b55199c5845693a58eddfd417a60b81d0198a9dd","urls":["bzzr://a6a4cebcffaff1db8ef9b78ea58d2d7391cc2b1ed533a1e1309286989f6d4ea0"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/lib/IWETH.sol":{"keccak256":"0x7c9e000a6f74c258dc618fa5b58e36eee503ae2c494646782110e962dae19495","urls":["bzzr://9beaaba0143db4bd7856fcba8943f96dcdb6e618b568ffc9c4aa27aa03df5678"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125","urls":["bzzr://3bc299fd722679f1313dc1387e2efc0591dcddc3727b6a7ccc98132c6e02f323"]},"set-protocol-contract-utils/contracts/lib/AddressArrayUtils.sol":{"keccak256":"0xb716eab4e8c5a336a2f19078928530829af097912bd1b925644f914b63601f08","urls":["bzzr://d8a21d39779beb316adb5180d08dcba1941eeccd9412ff08feb21a631c18c269"]},"set-protocol-contract-utils/contracts/lib/CommonMath.sol":{"keccak256":"0x3d1d08c6efc2a973fe2c02ddcb02fd99a8c8eb75f74dcbd93e8e15864eee2b6b","urls":["bzzr://580815dd1cf648a4521d923e59087de21143d9c48115ab71579a1f5a8f3d36af"]}},"version":1}',bytecode:"0x608060405234801561001057600080fd5b506040516080806121de8339810180604052608081101561003057600080fd5b5080516020820151604083015160609093015160008054600160a060020a03948516600160a060020a0319918216811790925560028054821690921790915560018054938516938216841781556003805483169094179093556004929092556006805491841691831691909117905560058054929093169116179055612123806100bb6000396000f3fe6080604052600436106100955760003560e060020a90048063a05cb7551161005d578063a05cb755146101b3578063da89a7b1146101c8578063f2f4eb2614610209578063f7b00c9e1461021e578063fbfa77cf1461025f57610095565b80631cc0bd61146100e35780633ba30551146101245780633fc8cef31461015857806363dc4f95146101895780636e667db31461019e575b600654600160a060020a031633146100e15760405160e560020a62461bcd028152600401808060200182810382526059815260200180611f0b6059913960600191505060405180910390fd5b005b3480156100ef57600080fd5b506100e16004803603606081101561010657600080fd5b50600160a060020a0381351690602081013590604001351515610274565b6100e16004803603606081101561013a57600080fd5b50600160a060020a038135169060208101359060400135151561035e565b34801561016457600080fd5b5061016d610476565b60408051600160a060020a039092168252519081900360200190f35b34801561019557600080fd5b5061016d610485565b3480156101aa57600080fd5b5061016d610494565b3480156101bf57600080fd5b5061016d6104a3565b3480156101d457600080fd5b506100e1600480360360608110156101eb57600080fd5b50600160a060020a03813516906020810135906040013515156104b2565b34801561021557600080fd5b5061016d61074f565b34801561022a57600080fd5b506100e16004803603606081101561024157600080fd5b50600160a060020a038135169060208101359060400135151561075e565b34801561026b57600080fd5b5061016d6109c3565b600480546001019081905560008061028c86866109d2565b600254604080517f7c68561f000000000000000000000000000000000000000000000000000000008152336004820152306024820152600160a060020a0380861660448301526064820185905291519496509294501691637c68561f9160848082019260009290919082900301818387803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b505060055461033c92508491503090600160a060020a031684610a64565b61034886838787610a94565b5050600454811461035857600080fd5b50505050565b600480546001019081905560008061037686866109d2565b6006549193509150610392908390600160a060020a0316610b7e565b61039c8282610c45565b600254604080517fa57de4cf000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152602482018590529151919092169163a57de4cf91604480830192600092919082900301818387803b15801561040a57600080fd5b505af115801561041e573d6000803e3d6000fd5b5050505061042e86838787610a94565b3031801561046557604051339082156108fc029083906000818181858888f19350505050158015610463573d6000803e3d6000fd5b505b505050600454811461035857600080fd5b600654600160a060020a031681565b600354600160a060020a031681565b600554600160a060020a031681565b600254600160a060020a031681565b60048054600101908190556104c78484611043565b600254604080517f5990ca08000000000000000000000000000000000000000000000000000000008152336004820152306024820152600160a060020a0387811660448301526064820187905291519190921691635990ca0891608480830192600092919082900301818387803b15801561054157600080fd5b505af1158015610555573d6000803e3d6000fd5b50505050600084600160a060020a03166330b866276040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561059757600080fd5b505afa1580156105ab573d6000803e3d6000fd5b505050506040513d60208110156105c157600080fd5b5051905060006105d0826111ca565b600254604080517ff3fef3a3000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015260248201859052915193945091169163f3fef3a39160448082019260009290919082900301818387803b15801561064057600080fd5b505af1158015610654573d6000803e3d6000fd5b5050600254604080517f1c2a0e40000000000000000000000000000000000000000000000000000000008152600160a060020a03878116600483015233602483015260448201879052600060648301819052925193169450631c2a0e4093506084808201939182900301818387803b1580156106cf57600080fd5b505af11580156106e3573d6000803e3d6000fd5b50506005546106ff9250849150600160a060020a0316866112fd565b6040805186815290513391600160a060020a038916917f412d6167082ef33d0eb78858a5ca2bc234ae9f96ea4757e6c0e2a66a152c0f629181900360200190a35050600454811461035857600080fd5b600054600160a060020a031681565b60048054600101908190556107738484611043565b600084600160a060020a03166330b866276040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156107b157600080fd5b505afa1580156107c5573d6000803e3d6000fd5b505050506040513d60208110156107db57600080fd5b50516006549091506107f7908290600160a060020a0316610b7e565b600254604080517f5990ca08000000000000000000000000000000000000000000000000000000008152336004820152306024820152600160a060020a0388811660448301526064820188905291519190921691635990ca0891608480830192600092919082900301818387803b15801561087157600080fd5b505af1158015610885573d6000803e3d6000fd5b505050506000610894826111ca565b600254604080517ff3fef3a3000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015260248201859052915193945091169163f3fef3a39160448082019260009290919082900301818387803b15801561090457600080fd5b505af1158015610918573d6000803e3d6000fd5b5050600254604080517f1e9a6950000000000000000000000000000000000000000000000000000000008152600160a060020a038781166004830152602482018790529151919092169350631e9a69509250604480830192600092919082900301818387803b15801561098a57600080fd5b505af115801561099e573d6000803e3d6000fd5b505050506109ab82611317565b6005546106ff908390600160a060020a0316866112fd565b600154600160a060020a031681565b6000806109df8484611043565b600084600160a060020a03166330b866276040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610a1d57600080fd5b505afa158015610a31573d6000803e3d6000fd5b505050506040513d6020811015610a4757600080fd5b505190506000610a5786866116a1565b9196919550909350505050565b6000610a718585856118fa565b905081811015610a8d57610a8d8584610a8861199a565b6119a0565b5050505050565b600254604080517f73088bf7000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a03878116602483015260448201869052915191909216916373088bf791606480830192600092919082900301818387803b158015610b0857600080fd5b505af1158015610b1c573d6000803e3d6000fd5b5050600554610b389250859150600160a060020a0316836112fd565b6040805183815290513391600160a060020a038716917f2d3ead46fb20943d335e2ff48b43b66d146fa01aaed75d497fa33a86092446129181900360200190a350505050565b81600160a060020a03166318c53aca826040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b158015610bd757600080fd5b505afa158015610beb573d6000803e3d6000fd5b505050506040513d6020811015610c0157600080fd5b5051610c415760405160e560020a62461bcd0281526004018080602001828103825260528152602001806120a66052913960600191505060405180910390fd5b5050565b6000829050606081600160a060020a03166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b158015610c8857600080fd5b505afa158015610c9c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610cc557600080fd5b810190808051640100000000811115610cdd57600080fd5b82016020810184811115610cf057600080fd5b8151856020820283011164010000000082111715610d0d57600080fd5b50509291905050509050606082600160a060020a031663027aa9f56040518163ffffffff1660e060020a02815260040160006040518083038186803b158015610d5557600080fd5b505afa158015610d69573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610d9257600080fd5b810190808051640100000000811115610daa57600080fd5b82016020810184811115610dbd57600080fd5b8151856020820283011164010000000082111715610dda57600080fd5b50509291905050509050600083600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610e2257600080fd5b505afa158015610e36573d6000803e3d6000fd5b505050506040513d6020811015610e4c57600080fd5b5051905060005b835181101561103a576000848281518110610e6a57fe5b602002602001015190506000848381518110610e8257fe5b602002602001015190506000610eb182610ea5878c611a7690919063ffffffff16565b9063ffffffff611a9816565b600654909150600160a060020a0384811691161415610f9c5780341015610f0c5760405160e560020a62461bcd028152600401808060200182810382526067815260200180611f8a6067913960800191505060405180910390fd5b600660009054906101000a9004600160a060020a0316600160a060020a031663d0e30db0826040518263ffffffff1660e060020a0281526004016000604051808303818588803b158015610f5f57600080fd5b505af1158015610f73573d6000803e3d6000fd5b5050600654600554610f979450600160a060020a0391821693503092501684610a64565b61102f565b600254604080517fde30f6ee000000000000000000000000000000000000000000000000000000008152336004820152306024820152600160a060020a038681166044830152606482018590529151919092169163de30f6ee91608480830192600092919082900301818387803b15801561101657600080fd5b505af115801561102a573d6000803e3d6000fd5b505050505b505050600101610e53565b50505050505050565b600254604080517ffef3ee73000000000000000000000000000000000000000000000000000000008152600160a060020a0385811660048301529151919092169163fef3ee73916024808301926020929190829003018186803b1580156110a957600080fd5b505afa1580156110bd573d6000803e3d6000fd5b505050506040513d60208110156110d357600080fd5b50516111135760405160e560020a62461bcd02815260040180806020018281038252605881526020018061204e6058913960600191505060405180910390fd5b61118b82600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561115257600080fd5b505afa158015611166573d6000803e3d6000fd5b505050506040513d602081101561117c57600080fd5b5051829063ffffffff611ac616565b15610c415760405160e560020a62461bcd02815260040180806020018281038252605d815260200180611ff1605d913960600191505060405180910390fd5b60008082600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561120957600080fd5b505afa15801561121d573d6000803e3d6000fd5b505050506040513d602081101561123357600080fd5b5051600354604080517f1f98ade3000000000000000000000000000000000000000000000000000000008152600160a060020a03878116600483015230602483015291519394506000939190921691631f98ade3916044808301926020929190829003018186803b1580156112a757600080fd5b505afa1580156112bb573d6000803e3d6000fd5b505050506040513d60208110156112d157600080fd5b505190506112f56112e8828463ffffffff611ac616565b829063ffffffff611ae316565b949350505050565b611308838383611af8565b6113128382611cf5565b505050565b606081600160a060020a03166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b15801561135557600080fd5b505afa158015611369573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561139257600080fd5b8101908080516401000000008111156113aa57600080fd5b820160208101848111156113bd57600080fd5b81518560208202830111640100000000821117156113da57600080fd5b50909450600093505050505b81518110156113125760008282815181106113fd57fe5b602090810291909101810151600354604080517f1f98ade3000000000000000000000000000000000000000000000000000000008152600160a060020a03808516600483015230602483015291519395506000949190921692631f98ade3926044808201939291829003018186803b15801561147857600080fd5b505afa15801561148c573d6000803e3d6000fd5b505050506040513d60208110156114a257600080fd5b5051600654909150600160a060020a038381169116141561160457600254600654604080517f0e1fd33400000000000000000000000000000000000000000000000000000000815230600482018190526024820152600160a060020a0392831660448201526064810185905290519190921691630e1fd33491608480830192600092919082900301818387803b15801561153b57600080fd5b505af115801561154f573d6000803e3d6000fd5b5050600654604080517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018690529051600160a060020a039092169350632e1a7d4d925060248082019260009290919082900301818387803b1580156115b957600080fd5b505af11580156115cd573d6000803e3d6000fd5b505060405133925083156108fc02915083906000818181858888f193505050501580156115fe573d6000803e3d6000fd5b50611697565b600254604080517f0e1fd334000000000000000000000000000000000000000000000000000000008152306004820152336024820152600160a060020a0385811660448301526064820185905291519190921691630e1fd33491608480830192600092919082900301818387803b15801561167e57600080fd5b505af1158015611692573d6000803e3d6000fd5b505050505b50506001016113e6565b600080839050600081600160a060020a0316630193aea26040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156116e557600080fd5b505afa1580156116f9573d6000803e3d6000fd5b505050506040513d602081101561170f57600080fd5b5051604080517f42a7cfd50000000000000000000000000000000000000000000000000000000081529051919250600091600160a060020a038516916342a7cfd5916004808301926020929190829003018186803b15801561177057600080fd5b505afa158015611784573d6000803e3d6000fd5b505050506040513d602081101561179a57600080fd5b5051905060006117b483610ea5888563ffffffff611a7616565b9050600084600160a060020a03166330b866276040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156117f457600080fd5b505afa158015611808573d6000803e3d6000fd5b505050506040513d602081101561181e57600080fd5b5051604080517f42a7cfd50000000000000000000000000000000000000000000000000000000081529051919250600091600160a060020a038416916342a7cfd5916004808301926020929190829003018186803b15801561187f57600080fd5b505afa158015611893573d6000803e3d6000fd5b505050506040513d60208110156118a957600080fd5b5051905060006118bf848363ffffffff611ac616565b905080156118ea576118e7826118db868463ffffffff611ae316565b9063ffffffff611ec316565b93505b5091955050505050505b92915050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301528381166024830152915160009286169163dd62ed3e916044808301926020929190829003018186803b15801561196657600080fd5b505afa15801561197a573d6000803e3d6000fd5b505050506040513d602081101561199057600080fd5b5051949350505050565b60001990565b82600160a060020a031663095ea7b383836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015611a0357600080fd5b505af1158015611a17573d6000803e3d6000fd5b505050506040513d6020811015611a2d57600080fd5b50611a389050611ed5565b6113125760405160e560020a62461bcd028152600401808060200182810382526026815260200180611f646026913960400191505060405180910390fd5b6000808211611a8457600080fd5b6000828481611a8f57fe5b04949350505050565b600082611aa7575060006118f4565b82820282848281611ab457fe5b0414611abf57600080fd5b9392505050565b600081611ad257600080fd5b818381611adb57fe5b069392505050565b600082821115611af257600080fd5b50900390565b604080517ff7888aec000000000000000000000000000000000000000000000000000000008152600160a060020a0385166004820152306024820152905160009173__ERC20Wrapper__________________________9163f7888aec91604480820192602092909190829003018186803b158015611b7557600080fd5b505af4158015611b89573d6000803e3d6000fd5b505050506040513d6020811015611b9f57600080fd5b5051905080611bae5750611312565b8115611c5757611bc084308584610a64565b600254604080517fde30f6ee000000000000000000000000000000000000000000000000000000008152306004820152336024820152600160a060020a038781166044830152606482018590529151919092169163de30f6ee91608480830192600092919082900301818387803b158015611c3a57600080fd5b505af1158015611c4e573d6000803e3d6000fd5b50505050610358565b604080517fbeabacc8000000000000000000000000000000000000000000000000000000008152600160a060020a038616600482015233602482015260448101839052905173__ERC20Wrapper__________________________9163beabacc8916064808301926000929190829003018186803b158015611cd757600080fd5b505af4158015611ceb573d6000803e3d6000fd5b5050505050505050565b600354604080517f1f98ade3000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015230602483015291516000939290921691631f98ade391604480820192602092909190829003018186803b158015611d6557600080fd5b505afa158015611d79573d6000803e3d6000fd5b505050506040513d6020811015611d8f57600080fd5b5051905080611d9e5750610c41565b8115611e3557600254604080517f59e026f7000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015233602483015260448201859052915191909216916359e026f791606480830192600092919082900301818387803b158015611e1857600080fd5b505af1158015611e2c573d6000803e3d6000fd5b50505050611312565b600254604080517f0e1fd334000000000000000000000000000000000000000000000000000000008152306004820152336024820152600160a060020a0386811660448301526064820185905291519190921691630e1fd33491608480830192600092919082900301818387803b158015611eaf57600080fd5b505af115801561103a573d6000803e3d6000fd5b600082820183811015611abf57600080fd5b6000803d8015611eec5760208114611ef557611f01565b60019150611f01565b60206000803e60005191505b5060011490509056fe526562616c616e63696e6753657449737375616e63654d6f64756c652e66616c6c6261636b3a2043616e6e6f74207265636569766520455448206469726563746c7920756e6c65737320756e7772617070696e6720574554484552433230577261707065722e617070726f76653a204261642072657475726e2076616c7565526562616c616e63696e6753657449737375616e63654d6f64756c652e6465706f736974436f6d706f6e656e7473416e6448616e646c654574683a204e6f7420656e6f75676820657468657220696e636c7564656420666f72206261736520536574546f6b656e526562616c616e63696e6753657449737375616e63652e76616c6964617465526562616c616e63696e6749737375616e63653a205175616e74697479206d757374206265206d756c7469706c65206f66206e61747572616c20756e6974526562616c616e63696e6753657449737375616e63652e76616c6964617465526562616c616e63696e6749737375616e63653a20496e76616c6964206f722064697361626c656420536574546f6b656e2061646472657373526562616c616e63696e6753657449737375616e63652e76616c696461746557455448497341436f6d706f6e656e744f665365743a20436f6d706f6e656e7473206d75737420636f6e7461696e2077657468a165627a7a7230582053152c3a7183a6700b41c44f498186c402e4f6c6181e84abf753ad42d34c5f350029",deployedBytecode:"0x6080604052600436106100955760003560e060020a90048063a05cb7551161005d578063a05cb755146101b3578063da89a7b1146101c8578063f2f4eb2614610209578063f7b00c9e1461021e578063fbfa77cf1461025f57610095565b80631cc0bd61146100e35780633ba30551146101245780633fc8cef31461015857806363dc4f95146101895780636e667db31461019e575b600654600160a060020a031633146100e15760405160e560020a62461bcd028152600401808060200182810382526059815260200180611f0b6059913960600191505060405180910390fd5b005b3480156100ef57600080fd5b506100e16004803603606081101561010657600080fd5b50600160a060020a0381351690602081013590604001351515610274565b6100e16004803603606081101561013a57600080fd5b50600160a060020a038135169060208101359060400135151561035e565b34801561016457600080fd5b5061016d610476565b60408051600160a060020a039092168252519081900360200190f35b34801561019557600080fd5b5061016d610485565b3480156101aa57600080fd5b5061016d610494565b3480156101bf57600080fd5b5061016d6104a3565b3480156101d457600080fd5b506100e1600480360360608110156101eb57600080fd5b50600160a060020a03813516906020810135906040013515156104b2565b34801561021557600080fd5b5061016d61074f565b34801561022a57600080fd5b506100e16004803603606081101561024157600080fd5b50600160a060020a038135169060208101359060400135151561075e565b34801561026b57600080fd5b5061016d6109c3565b600480546001019081905560008061028c86866109d2565b600254604080517f7c68561f000000000000000000000000000000000000000000000000000000008152336004820152306024820152600160a060020a0380861660448301526064820185905291519496509294501691637c68561f9160848082019260009290919082900301818387803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b505060055461033c92508491503090600160a060020a031684610a64565b61034886838787610a94565b5050600454811461035857600080fd5b50505050565b600480546001019081905560008061037686866109d2565b6006549193509150610392908390600160a060020a0316610b7e565b61039c8282610c45565b600254604080517fa57de4cf000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152602482018590529151919092169163a57de4cf91604480830192600092919082900301818387803b15801561040a57600080fd5b505af115801561041e573d6000803e3d6000fd5b5050505061042e86838787610a94565b3031801561046557604051339082156108fc029083906000818181858888f19350505050158015610463573d6000803e3d6000fd5b505b505050600454811461035857600080fd5b600654600160a060020a031681565b600354600160a060020a031681565b600554600160a060020a031681565b600254600160a060020a031681565b60048054600101908190556104c78484611043565b600254604080517f5990ca08000000000000000000000000000000000000000000000000000000008152336004820152306024820152600160a060020a0387811660448301526064820187905291519190921691635990ca0891608480830192600092919082900301818387803b15801561054157600080fd5b505af1158015610555573d6000803e3d6000fd5b50505050600084600160a060020a03166330b866276040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561059757600080fd5b505afa1580156105ab573d6000803e3d6000fd5b505050506040513d60208110156105c157600080fd5b5051905060006105d0826111ca565b600254604080517ff3fef3a3000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015260248201859052915193945091169163f3fef3a39160448082019260009290919082900301818387803b15801561064057600080fd5b505af1158015610654573d6000803e3d6000fd5b5050600254604080517f1c2a0e40000000000000000000000000000000000000000000000000000000008152600160a060020a03878116600483015233602483015260448201879052600060648301819052925193169450631c2a0e4093506084808201939182900301818387803b1580156106cf57600080fd5b505af11580156106e3573d6000803e3d6000fd5b50506005546106ff9250849150600160a060020a0316866112fd565b6040805186815290513391600160a060020a038916917f412d6167082ef33d0eb78858a5ca2bc234ae9f96ea4757e6c0e2a66a152c0f629181900360200190a35050600454811461035857600080fd5b600054600160a060020a031681565b60048054600101908190556107738484611043565b600084600160a060020a03166330b866276040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156107b157600080fd5b505afa1580156107c5573d6000803e3d6000fd5b505050506040513d60208110156107db57600080fd5b50516006549091506107f7908290600160a060020a0316610b7e565b600254604080517f5990ca08000000000000000000000000000000000000000000000000000000008152336004820152306024820152600160a060020a0388811660448301526064820188905291519190921691635990ca0891608480830192600092919082900301818387803b15801561087157600080fd5b505af1158015610885573d6000803e3d6000fd5b505050506000610894826111ca565b600254604080517ff3fef3a3000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015260248201859052915193945091169163f3fef3a39160448082019260009290919082900301818387803b15801561090457600080fd5b505af1158015610918573d6000803e3d6000fd5b5050600254604080517f1e9a6950000000000000000000000000000000000000000000000000000000008152600160a060020a038781166004830152602482018790529151919092169350631e9a69509250604480830192600092919082900301818387803b15801561098a57600080fd5b505af115801561099e573d6000803e3d6000fd5b505050506109ab82611317565b6005546106ff908390600160a060020a0316866112fd565b600154600160a060020a031681565b6000806109df8484611043565b600084600160a060020a03166330b866276040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610a1d57600080fd5b505afa158015610a31573d6000803e3d6000fd5b505050506040513d6020811015610a4757600080fd5b505190506000610a5786866116a1565b9196919550909350505050565b6000610a718585856118fa565b905081811015610a8d57610a8d8584610a8861199a565b6119a0565b5050505050565b600254604080517f73088bf7000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a03878116602483015260448201869052915191909216916373088bf791606480830192600092919082900301818387803b158015610b0857600080fd5b505af1158015610b1c573d6000803e3d6000fd5b5050600554610b389250859150600160a060020a0316836112fd565b6040805183815290513391600160a060020a038716917f2d3ead46fb20943d335e2ff48b43b66d146fa01aaed75d497fa33a86092446129181900360200190a350505050565b81600160a060020a03166318c53aca826040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b158015610bd757600080fd5b505afa158015610beb573d6000803e3d6000fd5b505050506040513d6020811015610c0157600080fd5b5051610c415760405160e560020a62461bcd0281526004018080602001828103825260528152602001806120a66052913960600191505060405180910390fd5b5050565b6000829050606081600160a060020a03166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b158015610c8857600080fd5b505afa158015610c9c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610cc557600080fd5b810190808051640100000000811115610cdd57600080fd5b82016020810184811115610cf057600080fd5b8151856020820283011164010000000082111715610d0d57600080fd5b50509291905050509050606082600160a060020a031663027aa9f56040518163ffffffff1660e060020a02815260040160006040518083038186803b158015610d5557600080fd5b505afa158015610d69573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610d9257600080fd5b810190808051640100000000811115610daa57600080fd5b82016020810184811115610dbd57600080fd5b8151856020820283011164010000000082111715610dda57600080fd5b50509291905050509050600083600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610e2257600080fd5b505afa158015610e36573d6000803e3d6000fd5b505050506040513d6020811015610e4c57600080fd5b5051905060005b835181101561103a576000848281518110610e6a57fe5b602002602001015190506000848381518110610e8257fe5b602002602001015190506000610eb182610ea5878c611a7690919063ffffffff16565b9063ffffffff611a9816565b600654909150600160a060020a0384811691161415610f9c5780341015610f0c5760405160e560020a62461bcd028152600401808060200182810382526067815260200180611f8a6067913960800191505060405180910390fd5b600660009054906101000a9004600160a060020a0316600160a060020a031663d0e30db0826040518263ffffffff1660e060020a0281526004016000604051808303818588803b158015610f5f57600080fd5b505af1158015610f73573d6000803e3d6000fd5b5050600654600554610f979450600160a060020a0391821693503092501684610a64565b61102f565b600254604080517fde30f6ee000000000000000000000000000000000000000000000000000000008152336004820152306024820152600160a060020a038681166044830152606482018590529151919092169163de30f6ee91608480830192600092919082900301818387803b15801561101657600080fd5b505af115801561102a573d6000803e3d6000fd5b505050505b505050600101610e53565b50505050505050565b600254604080517ffef3ee73000000000000000000000000000000000000000000000000000000008152600160a060020a0385811660048301529151919092169163fef3ee73916024808301926020929190829003018186803b1580156110a957600080fd5b505afa1580156110bd573d6000803e3d6000fd5b505050506040513d60208110156110d357600080fd5b50516111135760405160e560020a62461bcd02815260040180806020018281038252605881526020018061204e6058913960600191505060405180910390fd5b61118b82600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561115257600080fd5b505afa158015611166573d6000803e3d6000fd5b505050506040513d602081101561117c57600080fd5b5051829063ffffffff611ac616565b15610c415760405160e560020a62461bcd02815260040180806020018281038252605d815260200180611ff1605d913960600191505060405180910390fd5b60008082600160a060020a03166342a7cfd56040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561120957600080fd5b505afa15801561121d573d6000803e3d6000fd5b505050506040513d602081101561123357600080fd5b5051600354604080517f1f98ade3000000000000000000000000000000000000000000000000000000008152600160a060020a03878116600483015230602483015291519394506000939190921691631f98ade3916044808301926020929190829003018186803b1580156112a757600080fd5b505afa1580156112bb573d6000803e3d6000fd5b505050506040513d60208110156112d157600080fd5b505190506112f56112e8828463ffffffff611ac616565b829063ffffffff611ae316565b949350505050565b611308838383611af8565b6113128382611cf5565b505050565b606081600160a060020a03166399d50d5d6040518163ffffffff1660e060020a02815260040160006040518083038186803b15801561135557600080fd5b505afa158015611369573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561139257600080fd5b8101908080516401000000008111156113aa57600080fd5b820160208101848111156113bd57600080fd5b81518560208202830111640100000000821117156113da57600080fd5b50909450600093505050505b81518110156113125760008282815181106113fd57fe5b602090810291909101810151600354604080517f1f98ade3000000000000000000000000000000000000000000000000000000008152600160a060020a03808516600483015230602483015291519395506000949190921692631f98ade3926044808201939291829003018186803b15801561147857600080fd5b505afa15801561148c573d6000803e3d6000fd5b505050506040513d60208110156114a257600080fd5b5051600654909150600160a060020a038381169116141561160457600254600654604080517f0e1fd33400000000000000000000000000000000000000000000000000000000815230600482018190526024820152600160a060020a0392831660448201526064810185905290519190921691630e1fd33491608480830192600092919082900301818387803b15801561153b57600080fd5b505af115801561154f573d6000803e3d6000fd5b5050600654604080517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018690529051600160a060020a039092169350632e1a7d4d925060248082019260009290919082900301818387803b1580156115b957600080fd5b505af11580156115cd573d6000803e3d6000fd5b505060405133925083156108fc02915083906000818181858888f193505050501580156115fe573d6000803e3d6000fd5b50611697565b600254604080517f0e1fd334000000000000000000000000000000000000000000000000000000008152306004820152336024820152600160a060020a0385811660448301526064820185905291519190921691630e1fd33491608480830192600092919082900301818387803b15801561167e57600080fd5b505af1158015611692573d6000803e3d6000fd5b505050505b50506001016113e6565b600080839050600081600160a060020a0316630193aea26040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156116e557600080fd5b505afa1580156116f9573d6000803e3d6000fd5b505050506040513d602081101561170f57600080fd5b5051604080517f42a7cfd50000000000000000000000000000000000000000000000000000000081529051919250600091600160a060020a038516916342a7cfd5916004808301926020929190829003018186803b15801561177057600080fd5b505afa158015611784573d6000803e3d6000fd5b505050506040513d602081101561179a57600080fd5b5051905060006117b483610ea5888563ffffffff611a7616565b9050600084600160a060020a03166330b866276040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156117f457600080fd5b505afa158015611808573d6000803e3d6000fd5b505050506040513d602081101561181e57600080fd5b5051604080517f42a7cfd50000000000000000000000000000000000000000000000000000000081529051919250600091600160a060020a038416916342a7cfd5916004808301926020929190829003018186803b15801561187f57600080fd5b505afa158015611893573d6000803e3d6000fd5b505050506040513d60208110156118a957600080fd5b5051905060006118bf848363ffffffff611ac616565b905080156118ea576118e7826118db868463ffffffff611ae316565b9063ffffffff611ec316565b93505b5091955050505050505b92915050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301528381166024830152915160009286169163dd62ed3e916044808301926020929190829003018186803b15801561196657600080fd5b505afa15801561197a573d6000803e3d6000fd5b505050506040513d602081101561199057600080fd5b5051949350505050565b60001990565b82600160a060020a031663095ea7b383836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015611a0357600080fd5b505af1158015611a17573d6000803e3d6000fd5b505050506040513d6020811015611a2d57600080fd5b50611a389050611ed5565b6113125760405160e560020a62461bcd028152600401808060200182810382526026815260200180611f646026913960400191505060405180910390fd5b6000808211611a8457600080fd5b6000828481611a8f57fe5b04949350505050565b600082611aa7575060006118f4565b82820282848281611ab457fe5b0414611abf57600080fd5b9392505050565b600081611ad257600080fd5b818381611adb57fe5b069392505050565b600082821115611af257600080fd5b50900390565b604080517ff7888aec000000000000000000000000000000000000000000000000000000008152600160a060020a0385166004820152306024820152905160009173__ERC20Wrapper__________________________9163f7888aec91604480820192602092909190829003018186803b158015611b7557600080fd5b505af4158015611b89573d6000803e3d6000fd5b505050506040513d6020811015611b9f57600080fd5b5051905080611bae5750611312565b8115611c5757611bc084308584610a64565b600254604080517fde30f6ee000000000000000000000000000000000000000000000000000000008152306004820152336024820152600160a060020a038781166044830152606482018590529151919092169163de30f6ee91608480830192600092919082900301818387803b158015611c3a57600080fd5b505af1158015611c4e573d6000803e3d6000fd5b50505050610358565b604080517fbeabacc8000000000000000000000000000000000000000000000000000000008152600160a060020a038616600482015233602482015260448101839052905173__ERC20Wrapper__________________________9163beabacc8916064808301926000929190829003018186803b158015611cd757600080fd5b505af4158015611ceb573d6000803e3d6000fd5b5050505050505050565b600354604080517f1f98ade3000000000000000000000000000000000000000000000000000000008152600160a060020a03858116600483015230602483015291516000939290921691631f98ade391604480820192602092909190829003018186803b158015611d6557600080fd5b505afa158015611d79573d6000803e3d6000fd5b505050506040513d6020811015611d8f57600080fd5b5051905080611d9e5750610c41565b8115611e3557600254604080517f59e026f7000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015233602483015260448201859052915191909216916359e026f791606480830192600092919082900301818387803b158015611e1857600080fd5b505af1158015611e2c573d6000803e3d6000fd5b50505050611312565b600254604080517f0e1fd334000000000000000000000000000000000000000000000000000000008152306004820152336024820152600160a060020a0386811660448301526064820185905291519190921691630e1fd33491608480830192600092919082900301818387803b158015611eaf57600080fd5b505af115801561103a573d6000803e3d6000fd5b600082820183811015611abf57600080fd5b6000803d8015611eec5760208114611ef557611f01565b60019150611f01565b60206000803e60005191505b5060011490509056fe526562616c616e63696e6753657449737375616e63654d6f64756c652e66616c6c6261636b3a2043616e6e6f74207265636569766520455448206469726563746c7920756e6c65737320756e7772617070696e6720574554484552433230577261707065722e617070726f76653a204261642072657475726e2076616c7565526562616c616e63696e6753657449737375616e63654d6f64756c652e6465706f736974436f6d706f6e656e7473416e6448616e646c654574683a204e6f7420656e6f75676820657468657220696e636c7564656420666f72206261736520536574546f6b656e526562616c616e63696e6753657449737375616e63652e76616c6964617465526562616c616e63696e6749737375616e63653a205175616e74697479206d757374206265206d756c7469706c65206f66206e61747572616c20756e6974526562616c616e63696e6753657449737375616e63652e76616c6964617465526562616c616e63696e6749737375616e63653a20496e76616c6964206f722064697361626c656420536574546f6b656e2061646472657373526562616c616e63696e6753657449737375616e63652e76616c696461746557455448497341436f6d706f6e656e744f665365743a20436f6d706f6e656e7473206d75737420636f6e7461696e2077657468a165627a7a7230582053152c3a7183a6700b41c44f498186c402e4f6c6181e84abf753ad42d34c5f350029",
sourceMap:"1365:18166:65:-;;;2432:361;8:9:-1;5:2;;;30:1;27;20:12;5:2;2432:361:65;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;2432:361:65;;;;;;;;;;;;;;;1652:4:69;:12;;-1:-1:-1;;;;;1652:12:69;;;-1:-1:-1;;;;;;1652:12:69;;;;;;;;1739;:27;;;;;;;;;;1652:12;1834:14;;;;;;;;;;;;1924:13;:30;;;;;;;;;;560:13:171;:17;;;;2688:4:65;:12;;;;;;;;;;;;;;2756:13;:30;;;;;;;;;;;1365:18166;;;;;;",deployedSourceMap:"1365:18166:65:-;;;;;;;;;;-1:-1:-1;;;1365:18166:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3036:4;;-1:-1:-1;;;;;3036:4:65;3014:10;:27;2993:163;;;;-1:-1:-1;;;;;2993:163:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1365:18166;4187:1208;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4187:1208:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4187:1208:65;;;;;;;;;;;;;;;:::i;6269:1789::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6269:1789:65;;;;;;;;;;;;;;;:::i;1657:17::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1657:17:65;;;:::i;:::-;;;;-1:-1:-1;;;;;1657:17:65;;;;;;;;;;;;;;1234:27:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1234:27:69;;;:::i;1568:28:65:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1568:28:65;;;:::i;1168:25:69:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1168:25:69;;;:::i;8673:1656:65:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8673:1656:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8673:1656:65;;;;;;;;;;;;;;;:::i;1049:19:69:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1049:19:69;;;:::i;11059:1759:65:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11059:1759:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;11059:1759:65;;;;;;;;;;;;;;;:::i;1108:20:69:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1108:20:69;;;:::i;4187:1208:65:-;993:13:171;:18;;1010:1;993:18;;;;;:13;;4567:77:65;4596:22;4620:23;4567:28;:77::i;:::-;4726:12;;:150;;;;;;4764:10;4726:150;;;;4796:4;4726:150;;;;-1:-1:-1;;;;;4726:150:65;;;;;;;;;;;;;;;4473:171;;-1:-1:-1;4473:171:65;;-1:-1:-1;4726:12:65;;:24;;:150;;;;;:12;;:150;;;;;;;;:12;;:150;;;5:2:-1;;;;30:1;27;20:12;5:2;4726:150:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5047:13:65;;4950:157;;-1:-1:-1;4992:14:65;;-1:-1:-1;5028:4:65;;-1:-1:-1;;;;;5047:13:65;5074:23;4950:28;:157::i;:::-;5207:181;5259:22;5295:14;5323:23;5360:18;5207:38;:181::i;:::-;1067:1:171;;1102:13;;1086:12;:29;1078:38;;;;;;4187:1208:65;;;;:::o;6269:1789::-;993:13:171;:18;;1010:1;993:18;;;;;:13;;6678:77:65;6707:22;6731:23;6678:28;:77::i;:::-;6876:4;;6584:171;;-1:-1:-1;6584:171:65;-1:-1:-1;6822:60:65;;6584:171;;-1:-1:-1;;;;;6876:4:65;6822:29;:60::i;:::-;7069:104;7112:14;7140:23;7069:29;:104::i;:::-;7274:12;;:100;;;;;;-1:-1:-1;;;;;7274:100:65;;;;;;;;;;;;;;;:12;;;;;:25;;:100;;;;;:12;;:100;;;;;;;:12;;:100;;;5:2:-1;;;;30:1;27;20:12;5:2;7274:100:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7274:100:65;;;;7586:181;7638:22;7674:14;7702:23;7739:18;7586:38;:181::i;:::-;7951:4;7943:21;7978:15;;7974:78;;8009:32;;:10;;:32;;;;;8029:11;;8009:32;;;;8029:11;8009:10;:32;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8009:32:65;7974:78;1067:1:171;;;1102:13;;1086:12;:29;1078:38;;;;;1657:17:65;;;-1:-1:-1;;;;;1657:17:65;;:::o;1234:27:69:-;;;-1:-1:-1;;;;;1234:27:69;;:::o;1568:28:65:-;;;-1:-1:-1;;;;;1568:28:65;;:::o;1168:25:69:-;;;-1:-1:-1;;;;;1168:25:69;;:::o;8673:1656:65:-;993:13:171;:18;;1010:1;993:18;;;;;8980:79:65;9011:22;9035:23;8980:30;:79::i;:::-;9136:12;;:159;;;;;;9175:10;9136:159;;;;9207:4;9136:159;;;;-1:-1:-1;;;;;9136:159:65;;;;;;;;;;;;;;;:12;;;;;:25;;:159;;;;;:12;;:159;;;;;;;:12;;:159;;;5:2:-1;;;;30:1;27;20:12;5:2;9136:159:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9136:159:65;;;;9361:22;9407;-1:-1:-1;;;;;9386:55:65;;:57;;;;;-1:-1:-1;;;9386:57:65;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9386:57:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9386:57:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9386:57:65;;-1:-1:-1;9453:29:65;9485:40;9386:57;9485:24;:40::i;:::-;9587:12;;:94;;;;;;-1:-1:-1;;;;;9587:94:65;;;;;;;;;;;;;;;9453:72;;-1:-1:-1;9587:12:65;;;:21;;:94;;;;;:12;;:94;;;;;;;;:12;;:94;;;5:2:-1;;;;30:1;27;20:12;5:2;9587:94:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;9847:12:65;;:144;;;;;;-1:-1:-1;;;;;9847:144:65;;;;;;;9921:10;9847:144;;;;;;;;;;:12;:144;;;;;;;;:12;;;-1:-1:-1;9847:32:65;;-1:-1:-1;9847:144:65;;;;;;;;;;;:12;;:144;;;5:2:-1;;;;30:1;27;20:12;5:2;9847:144:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;10106:13:65;;10070:70;;-1:-1:-1;10090:14:65;;-1:-1:-1;;;;;;10106:13:65;10121:18;10070:19;:70::i;:::-;10192:130;;;;;;;;10265:10;;-1:-1:-1;;;;;10192:130:65;;;;;;;;;;;;1067:1:171;;1102:13;;1086:12;:29;1078:38;;;;;1049:19:69;;;-1:-1:-1;;;;;1049:19:69;;:::o;11059:1759:65:-;993:13:171;:18;;1010:1;993:18;;;;;11381:79:65;11412:22;11436:23;11381:30;:79::i;:::-;11471:22;11517;-1:-1:-1;;;;;11496:55:65;;:57;;;;;-1:-1:-1;;;11496:57:65;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11496:57:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11496:57:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11496:57:65;11618:4;;11496:57;;-1:-1:-1;11564:60:65;;11496:57;;-1:-1:-1;;;;;11618:4:65;11564:29;:60::i;:::-;11715:12;;:159;;;;;;11754:10;11715:159;;;;11786:4;11715:159;;;;-1:-1:-1;;;;;11715:159:65;;;;;;;;;;;;;;;:12;;;;;:25;;:159;;;;;:12;;:159;;;;;;;:12;;:159;;;5:2:-1;;;;30:1;27;20:12;5:2;11715:159:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11715:159:65;;;;11940:29;11972:40;11997:14;11972:24;:40::i;:::-;12074:12;;:94;;;;;;-1:-1:-1;;;;;12074:94:65;;;;;;;;;;;;;;;11940:72;;-1:-1:-1;12074:12:65;;;:21;;:94;;;;;:12;;:94;;;;;;;;:12;;:94;;;5:2:-1;;;;30:1;27;20:12;5:2;12074:94:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;12249:12:65;;:92;;;;;;-1:-1:-1;;;;;12249:92:65;;;;;;;;;;;;;;;:12;;;;;-1:-1:-1;12249:19:65;;-1:-1:-1;12249:92:65;;;;;:12;;:92;;;;;;;:12;;:92;;;5:2:-1;;;;30:1;27;20:12;5:2;12249:92:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12249:92:65;;;;12429:51;12465:14;12429:35;:51::i;:::-;12595:13;;12559:70;;12579:14;;-1:-1:-1;;;;;12595:13:65;12610:18;12559:19;:70::i;1108:20:69:-;;;-1:-1:-1;;;;;1108:20:69;;:::o;13363:770:65:-;13535:7;13544;13672:79;13703:22;13727:23;13672:30;:79::i;:::-;13762:22;13808;-1:-1:-1;;;;;13787:55:65;;:57;;;;;-1:-1:-1;;;13787:57:65;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13787:57:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13787:57:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13787:57:65;;-1:-1:-1;13908:31:65;13942:117;13990:22;14026:23;13942:34;:117::i;:::-;14078:14;;;;-1:-1:-1;13363:770:65;;-1:-1:-1;;;;13363:770:65:o;4766:412:118:-;4929:24;4956:35;4966:6;4974;4982:8;4956:9;:35::i;:::-;4929:62;;5024:9;5005:16;:28;5001:171;;;5049:112;5074:6;5098:8;5124:23;:21;:23::i;:::-;5049:7;:112::i;:::-;4766:412;;;;;:::o;14689:750:65:-;14973:12;;:127;;;;;;15007:10;14973:127;;;;-1:-1:-1;;;;;14973:127:65;;;;;;;;;;;;;;;:12;;;;;:20;;:127;;;;;:12;;:127;;;;;;;:12;;:127;;;5:2:-1;;;;30:1;27;20:12;5:2;14973:127:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;15211:13:65;;15174:71;;-1:-1:-1;15194:15:65;;-1:-1:-1;;;;;;15211:13:65;15226:18;15174:19;:71::i;:::-;15296:129;;;;;;;;15368:10;;-1:-1:-1;;;;;15296:129:65;;;;;;;;;;;;14689:750;;;;:::o;1627:353:71:-;1814:11;-1:-1:-1;;;;;1804:39:71;;1844:20;1804:61;;;;;-1:-1:-1;;;1804:61:71;;;;;;;-1:-1:-1;;;;;1804:61:71;-1:-1:-1;;;;;1804:61:71;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1804:61:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1804:61:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1804:61:71;1783:190;;;;-1:-1:-1;;;;;1783:190:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1627:353;;:::o;15842:1955:65:-;15984:17;16014:15;15984:46;;16041:34;16078:7;-1:-1:-1;;;;;16078:21:65;;:23;;;;;-1:-1:-1;;;16078:23:65;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16078:23:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16078:23:65;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16078:23:65;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;16078:23:65;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;16078:23:65;;;;;;16041:60;;16111:29;16143:7;-1:-1:-1;;;;;16143:16:65;;:18;;;;;-1:-1:-1;;;16143:18:65;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16143:18:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16143:18:65;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16143:18:65;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;16143:18:65;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;16143:18:65;;;;;;16111:50;;16171:26;16200:7;-1:-1:-1;;;;;16200:19:65;;:21;;;;;-1:-1:-1;;;16200:21:65;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16200:21:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16200:21:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16200:21:65;;-1:-1:-1;16313:9:65;16308:1483;16332:17;:24;16328:1;:28;16308:1483;;;16377:24;16404:17;16422:1;16404:20;;;;;;;;;;;;;;16377:47;;16438:19;16460:12;16473:1;16460:15;;;;;;;;;;;;;;16438:37;;16543:32;16578:57;16623:11;16578:40;16599:18;16578:16;:20;;:40;;;;:::i;:::-;:44;:57;:44;:57;:::i;:::-;16747:4;;16543:92;;-1:-1:-1;;;;;;16719:33:65;;;16747:4;;16719:33;16715:1066;;;16894:24;16881:9;:37;;16852:211;;;;-1:-1:-1;;;;;16852:211:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17134:4;;;;;;;;;-1:-1:-1;;;;;17134:4:65;-1:-1:-1;;;;;17134:12:65;;17153:24;17134:46;;;;;-1:-1:-1;;;17134:46:65;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17134:46:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;17298:4:65;;17360:13;;17240:197;;-1:-1:-1;;;;;;17298:4:65;;;;-1:-1:-1;17333:4:65;;-1:-1:-1;17360:13:65;17395:24;17240:28;:197::i;:::-;16715:1066;;;17555:12;;:195;;;;;;17603:10;17555:195;;;;17643:4;17555:195;;;;-1:-1:-1;;;;;17555:195:65;;;;;;;;;;;;;;;:12;;;;;:26;;:195;;;;;:12;;:195;;;;;;;:12;;:195;;;5:2:-1;;;;30:1;27;20:12;5:2;17555:195:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17555:195:65;;;;16715:1066;-1:-1:-1;;;16358:3:65;;16308:1483;;;;15842:1955;;;;;;:::o;2318:764:71:-;2583:12;;:46;;;;;;-1:-1:-1;;;;;2583:46:71;;;;;;;;;:12;;;;;:22;;:46;;;;;;;;;;;;;;:12;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;2583:46:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2583:46:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2583:46:71;2562:181;;;;-1:-1:-1;;;;;2562:181:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2875:76;2913:22;-1:-1:-1;;;;;2903:45:71;;:47;;;;;-1:-1:-1;;;2903:47:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2903:47:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2903:47:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2903:47:71;2875:23;;:76;:27;:76;:::i;:::-;:81;2854:221;;;;-1:-1:-1;;;;;2854:221:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5152:571;5272:7;5362:26;5401:15;-1:-1:-1;;;;;5391:38:71;;:40;;;;;-1:-1:-1;;;5391:40:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5391:40:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5391:40:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5391:40:71;5466:13;;:95;;;;;;-1:-1:-1;;;;;5466:95:71;;;;;;;5546:4;5466:95;;;;;;5391:40;;-1:-1:-1;5441:22:71;;5466:13;;;;;:29;;:95;;;;;5391:40;;5466:95;;;;;;;:13;:95;;;5:2:-1;;;;30:1;27;20:12;5:2;5466:95:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5466:95:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5466:95:71;;-1:-1:-1;5658:58:71;5677:38;5466:95;5696:18;5677:38;:18;:38;:::i;:::-;5658:14;;:58;:18;:58;:::i;:::-;5651:65;5152:571;-1:-1:-1;;;;5152:571:71:o;6282:343::-;6453:91;6485:15;6502:21;6525:18;6453:31;:91::i;:::-;6555:63;6582:15;6599:18;6555:26;:63::i;:::-;6282:343;;;:::o;18034:1495:65:-;18148:34;18195:15;-1:-1:-1;;;;;18185:40:65;;:42;;;;;-1:-1:-1;;;18185:42:65;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18185:42:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18185:42:65;;;;;;39:16:-1;36:1;17:17;2:54;101:4;18185:42:65;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;18185:42:65;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;18185:42:65;;-1:-1:-1;18297:9:65;;-1:-1:-1;;;;18292:1231:65;18316:17;:24;18312:1;:28;18292:1231;;;18361:24;18388:17;18406:1;18388:20;;;;;;;;;;;;;;;;;;;18457:13;;:108;;;;;;-1:-1:-1;;;;;18457:108:65;;;;;;;18546:4;18457:108;;;;;;18388:20;;-1:-1:-1;18422:32:65;;18457:13;;;;;:29;;:108;;;;;18388:20;18457:108;;;;;;:13;:108;;;5:2:-1;;;;30:1;27;20:12;5:2;18457:108:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18457:108:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18457:108:65;18688:4;;18457:108;;-1:-1:-1;;;;;;18660:33:65;;;18688:4;;18660:33;18656:857;;;18790:12;;18917:4;;18790:196;;;;;;18847:4;18790:196;;;;;;;;;;-1:-1:-1;;;;;18917:4:65;;;18790:196;;;;;;;;;;;;:12;;;;;:27;;:196;;;;;:12;;:196;;;;;;;:12;;:196;;;5:2:-1;;;;30:1;27;20:12;5:2;18790:196:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;19045:4:65;;:39;;;;;;;;;;;;;;-1:-1:-1;;;;;19045:4:65;;;;-1:-1:-1;19045:13:65;;-1:-1:-1;19045:39:65;;;;;:4;;:39;;;;;;;;:4;;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;19045:39:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;19144:45:65;;:10;;-1:-1:-1;19144:45:65;;;;;-1:-1:-1;19164:24:65;;19144:45;;;;19164:24;19144:10;:45;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19144:45:65;18656:857;;;19302:12;;:196;;;;;;19359:4;19302:196;;;;19386:10;19302:196;;;;-1:-1:-1;;;;;19302:196:65;;;;;;;;;;;;;;;:12;;;;;:27;;:196;;;;;:12;;:196;;;;;;;:12;;:196;;;5:2:-1;;;;30:1;27;20:12;5:2;19302:196:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19302:196:65;;;;18656:857;-1:-1:-1;;18342:3:65;;18292:1231;;3673:1093:71;3851:7;3874:35;3933:22;3874:82;;3967:18;3988:14;-1:-1:-1;;;;;3988:25:71;;:27;;;;;-1:-1:-1;;;3988:27:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3988:27:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3988:27:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3988:27:71;4047:28;;;;;;;;3988:27;;-1:-1:-1;4025:19:71;;-1:-1:-1;;;;;4047:26:71;;;;;:28;;;;;3988:27;;4047:28;;;;;;;:26;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;4047:28:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4047:28:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4047:28:71;;-1:-1:-1;4086:31:71;4120:56;4165:10;4120:40;:23;4047:28;4120:40;:27;:40;:::i;:56::-;4086:90;;4187:15;4205:14;-1:-1:-1;;;;;4205:25:71;;:27;;;;;-1:-1:-1;;;4205:27:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4205:27:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4205:27:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4205:27:71;4271:32;;;;;;;;4205:27;;-1:-1:-1;4242:26:71;;-1:-1:-1;;;;;4271:30:71;;;;;:32;;;;;4205:27;;4271:32;;;;;;;:30;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;4271:32:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4271:32:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4271:32:71;;-1:-1:-1;4486:25:71;4514:47;:23;4271:32;4514:47;:27;:47;:::i;:::-;4486:75;-1:-1:-1;4575:21:71;;4571:148;;4638:70;4689:18;4638:46;:23;4666:17;4638:46;:27;:46;:::i;:::-;:50;:70;:50;:70;:::i;:::-;4612:96;;4571:148;-1:-1:-1;4736:23:71;;-1:-1:-1;;;;;;3673:1093:71;;;;;:::o;1953:225:118:-;2129:42;;;;;;-1:-1:-1;;;;;2129:42:118;;;;;;;;;;;;;;;;2099:7;;2129:24;;;;;:42;;;;;;;;;;;;;;:24;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;2129:42:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2129:42:118;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2129:42:118;;1953:225;-1:-1:-1;;;;1953:225:118:o;1220:118:176:-;-1:-1:-1;;1220:118:176;:::o;4042:342:118:-;4180:6;-1:-1:-1;;;;;4173:22:118;;4196:8;4206:9;4173:43;;;;;-1:-1:-1;;;4173:43:118;;;;;;;-1:-1:-1;;;;;4173:43:118;-1:-1:-1;;;;;4173:43:118;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4173:43:118;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4173:43:118;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4299:14:118;;-1:-1:-1;4299:12:118;:14::i;:::-;4278:99;;;;-1:-1:-1;;;;;4278:99:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:296:166;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;;782:296;-1:-1:-1;;;;782:296:166:o;231:421::-;289:7;529:6;525:45;;-1:-1:-1;558:1:166;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;;644:1;231:421;-1:-1:-1;;;231:421:166:o;1739:121::-;1797:7;1824:6;1816:15;;;;;;1852:1;1848;:5;;;;;;;1739:121;-1:-1:-1;;;1739:121:166:o;1211:145::-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:166;;;1211:145::o;7171:1060:71:-;7380:54;;;;;;-1:-1:-1;;;;;7380:54:71;;;;;;7428:4;7380:54;;;;;;7354:23;;7380:12;;:22;;:54;;;;;;;;;;;;;;;:12;:54;;;5:2:-1;;;;30:1;27;20:12;5:2;7380:54:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7380:54:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7380:54:71;;-1:-1:-1;7457:20:71;7453:772;;7494:7;;;7453:772;7522:18;7518:707;;;7602:178;7648:15;7689:4;7712:21;7751:15;7602:28;:178::i;:::-;7844:12;;:165;;;;;;7896:4;7844:165;;;;7919:10;7844:165;;;;-1:-1:-1;;;;;7844:165:71;;;;;;;;;;;;;;;:12;;;;;:26;;:165;;;;;:12;;:165;;;;;;;:12;;:165;;;5:2:-1;;;;30:1;27;20:12;5:2;7844:165:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7844:165:71;;;;7518:707;;;8085:129;;;;;;-1:-1:-1;;;;;8085:129:71;;;;;;8157:10;8085:129;;;;;;;;;;;;:12;;:21;;:129;;;;;-1:-1:-1;;8085:129:71;;;;;;;:12;:129;;;5:2:-1;;;;30:1;27;20:12;5:2;8085:129:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8085:129:71;;;;7171:1060;;;;:::o;8696:940::-;8929:13;;:95;;;;;;-1:-1:-1;;;;;8929:95:71;;;;;;;9009:4;8929:95;;;;;;8896:30;;8929:13;;;;;:29;;:95;;;;;;;;;;;;;;;:13;:95;;;5:2:-1;;;;30:1;27;20:12;5:2;8929:95:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8929:95:71;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8929:95:71;;-1:-1:-1;9047:27:71;9043:587;;9091:7;;;9043:587;9119:18;9115:515;;;9216:12;;:144;;;;;;-1:-1:-1;;;;;9216:144:71;;;;;;;9296:10;9216:144;;;;;;;;;;;;:12;;;;;:29;;:144;;;;;:12;;:144;;;;;;;:12;;:144;;;5:2:-1;;;;30:1;27;20:12;5:2;9216:144:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9216:144:71;;;;9115:515;;;9446:12;;:173;;;;;;9499:4;9446:173;;;;9522:10;9446:173;;;;-1:-1:-1;;;;;9446:173:71;;;;;;;;;;;;;;;:12;;;;;:27;;:173;;;;;:12;;:173;;;;;;;:12;;:173;;;5:2:-1;;;;30:1;27;20:12;5:2;9446:173:71;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;1439:145:166;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;5392:852:118;5467:4;;5651:14;5728:57;;;;5837:4;5832:220;;;;5644:497;;5728:57;5770:1;5755:16;;5728:57;;5832:220;5937:4;5932:3;5927;5912:30;6034:3;6028:10;6013:25;;5644:497;-1:-1:-1;6236:1:118;6221:16;;-1:-1:-1;5392:852:118;:::o",source:'/*\n    Copyright 2019 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\n\nimport { ReentrancyGuard } from "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol";\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\n\nimport { IRebalancingSetToken } from "../interfaces/IRebalancingSetToken.sol";\nimport { ISetToken } from "../interfaces/ISetToken.sol";\nimport { IWETH } from "../../lib/IWETH.sol";\nimport { ERC20Wrapper } from "../../lib/ERC20Wrapper.sol";\nimport { ModuleCoreState } from "./lib/ModuleCoreState.sol";\nimport { RebalancingSetIssuance } from "./lib/RebalancingSetIssuance.sol";\n\n\n/**\n * @title RebalancingSetIssuanceModule\n * @author Set Protocol\n *\n * A module that includes functions for issuing / redeeming rebalancing SetToken to/from its base components and ether.\n */\ncontract RebalancingSetIssuanceModule is\n    ModuleCoreState,\n    RebalancingSetIssuance,\n    ReentrancyGuard\n{\n    using SafeMath for uint256;\n\n    // Address and instance of TransferProxy contract\n    address public transferProxy;\n\n    // Address and instance of Wrapped Ether contract\n    IWETH public weth;\n\n    /* ============ Events ============ */\n\n    event LogRebalancingSetIssue(\n        address indexed rebalancingSetAddress,\n        address indexed callerAddress,\n        uint256 rebalancingSetQuantity\n    );\n\n    event LogRebalancingSetRedeem(\n        address indexed rebalancingSetAddress,\n        address indexed callerAddress,\n        uint256 rebalancingSetQuantity\n    );\n\n    /* ============ Constructor ============ */\n\n    /**\n     * Constructor function for RebalancingSetIssuanceModule\n     *\n     * @param _core                The address of Core\n     * @param _vault               The address of Vault\n     * @param _transferProxy       The address of TransferProxy\n     * @param _weth                The address of Wrapped Ether\n     */\n    constructor(\n        address _core,\n        address _vault,\n        address _transferProxy,\n        IWETH _weth\n    )\n        public\n        ModuleCoreState(\n            _core,\n            _vault\n        )\n    {\n        // Commit the WETH instance\n        weth = _weth;\n\n        // Commit the transferProxy instance\n        transferProxy = _transferProxy;\n    }\n\n    /**\n     * Fallback function. Disallows ether to be sent to this contract without data except when\n     * unwrapping WETH.\n     */\n    function ()\n        external\n        payable\n    {\n        require(\n            msg.sender == address(weth),\n            "RebalancingSetIssuanceModule.fallback: Cannot receive ETH directly unless unwrapping WETH"\n        );\n    }\n\n    /* ============ External Functions ============ */\n\n    /**\n     * Issue a rebalancing SetToken using the base components of the base SetToken.\n     * The base SetToken is then issued into the rebalancing SetToken. The base SetToken quantity issued is calculated\n     * by taking the rebalancing SetToken\'s quantity, unit shares, and natural unit. If the calculated quantity is not\n     * a multiple of the natural unit of the base SetToken, the quantity is rounded up to the base SetToken natural unit.\n     * NOTE: Potential to receive more baseSet than expected if someone transfers some to this module.\n     * Be careful with balance checks.\n     *\n     * @param  _rebalancingSetAddress    Address of the rebalancing SetToken to issue\n     * @param  _rebalancingSetQuantity   The issuance quantity of rebalancing SetToken\n     * @param  _keepChangeInVault        Boolean signifying whether excess base SetToken is transfered to the user \n     *                                     or left in the vault\n     */\n    function issueRebalancingSet(\n        address _rebalancingSetAddress,\n        uint256 _rebalancingSetQuantity,\n        bool _keepChangeInVault\n    )\n        external\n        nonReentrant\n    {\n        // Get baseSet address and quantity required for issuance of Rebalancing Set\n        (\n            address baseSetAddress,\n            uint256 requiredBaseSetQuantity\n        ) = getBaseSetAddressAndQuantity(_rebalancingSetAddress, _rebalancingSetQuantity);\n\n        // Issue base SetToken to this contract, held in this contract\n        coreInstance.issueModule(\n            msg.sender,\n            address(this),\n            baseSetAddress,\n            requiredBaseSetQuantity\n        );\n\n        // Ensure base SetToken allowance to the transferProxy\n        ERC20Wrapper.ensureAllowance(\n            baseSetAddress,\n            address(this),\n            transferProxy,\n            requiredBaseSetQuantity\n        );\n\n        // Issue rebalancing SetToken to the sender and return any excess base to sender\n        issueRebalancingSetAndReturnExcessBase(\n            _rebalancingSetAddress,\n            baseSetAddress,\n            _rebalancingSetQuantity,\n            _keepChangeInVault\n        );\n    }\n\n    /**\n     * Issue a rebalancing SetToken using the base components and ether of the base SetToken. The ether is wrapped \n     * into wrapped Ether and utilized in issuance.\n     * The base SetToken is then issued and reissued into the rebalancing SetToken. Read more about base SetToken quantity\n     * in the issueRebalancingSet function.\n     * NOTE: Potential to receive more baseSet and ether dust than expected if someone transfers some to this module.\n     * Be careful with balance checks.\n     *\n     * @param  _rebalancingSetAddress    Address of the rebalancing SetToken to issue\n     * @param  _rebalancingSetQuantity   The issuance quantity of rebalancing SetToken\n     * @param  _keepChangeInVault        Boolean signifying whether excess base SetToken is transfered to the user \n     *                                     or left in the vault\n     */\n    function issueRebalancingSetWrappingEther(\n        address _rebalancingSetAddress,\n        uint256 _rebalancingSetQuantity,\n        bool _keepChangeInVault\n    )\n        external\n        payable\n        nonReentrant\n    {\n        // Get baseSet address and quantity required for issuance of Rebalancing Set\n        (\n            address baseSetAddress,\n            uint256 requiredBaseSetQuantity\n        ) = getBaseSetAddressAndQuantity(_rebalancingSetAddress, _rebalancingSetQuantity);\n\n        // Validate that WETH is a component of baseSet\n        validateWETHIsAComponentOfSet(baseSetAddress, address(weth));\n\n        // Deposit all the required non-weth components to the vault under the name of this contract\n        // The required ether is wrapped and approved to the transferProxy\n        depositComponentsAndHandleEth(\n            baseSetAddress,\n            requiredBaseSetQuantity\n        );\n\n        // Issue base SetToken to this contract, with the base SetToken held in the Vault\n        coreInstance.issueInVault(\n            baseSetAddress,\n            requiredBaseSetQuantity\n        );\n\n        // Note: Don\'t need to set allowance of the base SetToken as the base SetToken is already in the vault\n\n        // Issue rebalancing SetToken to the sender and return any excess base to sender\n        issueRebalancingSetAndReturnExcessBase(\n            _rebalancingSetAddress,\n            baseSetAddress,\n            _rebalancingSetQuantity,\n            _keepChangeInVault\n        );\n\n        // Any eth that is not wrapped is sent back to the user\n        // Only the amount required for the base SetToken issuance is wrapped.\n        uint256 leftoverEth = address(this).balance;\n        if (leftoverEth > 0) {\n            msg.sender.transfer(leftoverEth);\n        }\n    }\n\n    /**\n     * Redeems a rebalancing SetToken into the base components of the base SetToken.\n     * NOTE: Potential to receive more baseSet than expected if someone transfers some to this module.\n     * Be careful with balance checks.\n     *\n     * @param  _rebalancingSetAddress    Address of the rebalancing SetToken to redeem\n     * @param  _rebalancingSetQuantity   The Quantity of the rebalancing SetToken to redeem\n     * @param  _keepChangeInVault        Boolean signifying whether excess base SetToken is transfered to the user \n     *                                     or left in the vault\n     */\n    function redeemRebalancingSet(\n        address _rebalancingSetAddress,\n        uint256 _rebalancingSetQuantity,\n        bool _keepChangeInVault\n    )\n        external\n        nonReentrant\n    {\n        // Validate the rebalancing SetToken is valid and the quantity is a multiple of the natural unit\n        validateRebalancingSetIssuance(_rebalancingSetAddress, _rebalancingSetQuantity);\n\n        // Redeem RB Set to the vault attributed to this contract\n        coreInstance.redeemModule(\n            msg.sender,\n            address(this),\n            _rebalancingSetAddress,\n            _rebalancingSetQuantity\n        );\n\n        // Calculate the base SetToken Redeem quantity\n        address baseSetAddress = IRebalancingSetToken(_rebalancingSetAddress).currentSet();\n        uint256 baseSetRedeemQuantity = getBaseSetRedeemQuantity(baseSetAddress);\n\n        // Withdraw base SetToken to this contract\n        coreInstance.withdraw(\n            baseSetAddress,\n            baseSetRedeemQuantity\n        );\n\n        // Redeem base SetToken and send components to the the user\n        // Set exclude to 0, as tokens in rebalancing SetToken are already whitelisted\n        coreInstance.redeemAndWithdrawTo(\n            baseSetAddress,\n            msg.sender,\n            baseSetRedeemQuantity,\n            0\n        );\n\n        // Transfer any change of the base SetToken to the end user\n        returnExcessBaseSet(baseSetAddress, transferProxy, _keepChangeInVault);\n\n        // Log RebalancingSetRedeem\n        emit LogRebalancingSetRedeem(\n            _rebalancingSetAddress,\n            msg.sender,\n            _rebalancingSetQuantity\n        );\n    }\n\n    /**\n     * Redeems a rebalancing SetToken into the base components of the base SetToken. Unwraps\n     * wrapped ether and sends eth to the user. If no wrapped ether in Set then will REVERT.\n     * NOTE: Potential to receive more baseSet and ether dust than expected if someone transfers some to this module.\n     * Be careful with balance checks.\n     *\n     * @param  _rebalancingSetAddress    Address of the rebalancing SetToken to redeem\n     * @param  _rebalancingSetQuantity   The Quantity of the rebalancing SetToken to redeem\n     * @param  _keepChangeInVault        Boolean signifying whether excess base SetToken is transferred to the user \n     *                                   or left in the vault\n     */\n    function redeemRebalancingSetUnwrappingEther(\n        address _rebalancingSetAddress,\n        uint256 _rebalancingSetQuantity,\n        bool _keepChangeInVault\n    )\n        external\n        nonReentrant\n    {\n        // Validate the rebalancing SetToken is valid and the quantity is a multiple of the natural unit\n        validateRebalancingSetIssuance(_rebalancingSetAddress, _rebalancingSetQuantity);\n\n        address baseSetAddress = IRebalancingSetToken(_rebalancingSetAddress).currentSet();\n\n        validateWETHIsAComponentOfSet(baseSetAddress, address(weth));\n\n        // Redeem rebalancing SetToken to the vault attributed to this contract\n        coreInstance.redeemModule(\n            msg.sender,\n            address(this),\n            _rebalancingSetAddress,\n            _rebalancingSetQuantity\n        );\n\n        // Calculate the base SetToken Redeem quantity\n        uint256 baseSetRedeemQuantity = getBaseSetRedeemQuantity(baseSetAddress);\n\n        // Withdraw base SetToken to this contract\n        coreInstance.withdraw(\n            baseSetAddress,\n            baseSetRedeemQuantity\n        );\n\n        // Redeem the base SetToken. The components stay in the vault\n        coreInstance.redeem(\n            baseSetAddress,\n            baseSetRedeemQuantity\n        );\n\n        // Loop through the base SetToken components and transfer to sender.\n        withdrawComponentsToSenderWithEther(baseSetAddress);\n\n        // Transfer any change of the base SetToken to the end user\n        returnExcessBaseSet(baseSetAddress, transferProxy, _keepChangeInVault);\n\n        // Log RebalancingSetRedeem\n        emit LogRebalancingSetRedeem(\n            _rebalancingSetAddress,\n            msg.sender,\n            _rebalancingSetQuantity\n        );\n    }\n\n    /* ============ Private Functions ============ */\n\n    /**\n     * Gets base set address from rebalancing set token and calculates amount of base set needed\n     * for issuance.\n     *\n     * @param  _rebalancingSetAddress    Address of the RebalancingSetToken to issue\n     * @param  _rebalancingSetQuantity   The Quantity of the rebalancing SetToken to issue\n     * @return baseSetAddress            The address of RebalancingSet\'s base SetToken\n     * @return requiredBaseSetQuantity   The quantity of base SetToken to issue\n     */\n    function getBaseSetAddressAndQuantity(\n        address _rebalancingSetAddress,\n        uint256 _rebalancingSetQuantity\n    )\n        internal\n        view\n        returns (address, uint256)\n    {\n        // Validate the rebalancing SetToken is valid and the quantity is a multiple of the natural unit\n        validateRebalancingSetIssuance(_rebalancingSetAddress, _rebalancingSetQuantity);\n\n        address baseSetAddress = IRebalancingSetToken(_rebalancingSetAddress).currentSet();\n\n        // Calculate required base SetToken quantity\n        uint256 requiredBaseSetQuantity = getBaseSetIssuanceRequiredQuantity(\n            _rebalancingSetAddress,\n            _rebalancingSetQuantity\n        );\n\n        return (baseSetAddress, requiredBaseSetQuantity);        \n    }\n\n    /**\n     * Issues the rebalancing set token to sender and returns any excess baseSet.\n     *\n     * @param  _rebalancingSetAddress    Address of the rebalancing SetToken to issue\n     * @param  _baseSetAddress           Address of the rebalancing SetToken\'s base set\n     * @param  _rebalancingSetQuantity   The Quantity of the rebalancing SetToken to redeem\n     * @param  _keepChangeInVault        Boolean signifying whether excess base SetToken is transferred to the user \n     *                                   or left in the vault\n     */\n    function issueRebalancingSetAndReturnExcessBase(\n        address _rebalancingSetAddress,\n        address _baseSetAddress,\n        uint256 _rebalancingSetQuantity,\n        bool _keepChangeInVault\n    )\n        internal\n    {\n        // Issue rebalancing SetToken to the sender\n        coreInstance.issueTo(\n            msg.sender,\n            _rebalancingSetAddress,\n            _rebalancingSetQuantity\n        );\n\n        // Return any excess base SetToken token to the sender\n        returnExcessBaseSet(_baseSetAddress, transferProxy, _keepChangeInVault);\n\n        // Log RebalancingSetIssue\n        emit LogRebalancingSetIssue(\n            _rebalancingSetAddress,\n            msg.sender,\n            _rebalancingSetQuantity\n        );       \n    }\n\n    /**\n     * During issuance, deposit the required quantity of base SetToken, wrap Ether, and deposit components\n     * (excluding Ether, which is deposited during issuance) to the Vault in the name of the module.\n     *\n     * @param  _baseSetAddress           Address of the base SetToken token\n     * @param  _baseSetQuantity          The Quantity of the base SetToken token to issue\n     */\n    function depositComponentsAndHandleEth(\n        address _baseSetAddress,\n        uint256 _baseSetQuantity\n    )\n        private\n    {\n        ISetToken baseSet = ISetToken(_baseSetAddress);\n\n        address[] memory baseSetComponents = baseSet.getComponents();\n        uint256[] memory baseSetUnits = baseSet.getUnits();\n        uint256 baseSetNaturalUnit = baseSet.naturalUnit();\n\n       // Loop through the base SetToken components and deposit components \n        for (uint256 i = 0; i < baseSetComponents.length; i++) {\n            address currentComponent = baseSetComponents[i];\n            uint256 currentUnit = baseSetUnits[i];\n\n            // Calculate required component quantity\n            uint256 currentComponentQuantity = _baseSetQuantity.div(baseSetNaturalUnit).mul(currentUnit);\n\n            // If address is weth, deposit weth and transfer eth\n            if (currentComponent == address(weth)) {\n                // Expect the ether included exceeds the required Weth quantity\n                require(\n                    msg.value >= currentComponentQuantity,\n                    "RebalancingSetIssuanceModule.depositComponentsAndHandleEth: Not enough ether included for base SetToken"\n                );\n\n                // wrap the required ether quantity\n                weth.deposit.value(currentComponentQuantity)();\n\n                // Ensure weth allowance\n                ERC20Wrapper.ensureAllowance(\n                    address(weth),\n                    address(this),\n                    transferProxy,\n                    currentComponentQuantity\n                );\n            } else {\n                // Deposit components to the vault in the name of the contract\n                coreInstance.depositModule(\n                    msg.sender,\n                    address(this),\n                    currentComponent,\n                    currentComponentQuantity\n                );                \n            }\n        }\n    }\n\n    /**\n     * During redemption, withdraw the required quantity of base SetToken, unwrapping Ether, and withdraw\n     * components to the sender\n     *\n     * @param  _baseSetAddress           Address of the base SetToken\n     */\n    function withdrawComponentsToSenderWithEther(\n        address _baseSetAddress\n    )\n        private\n    {\n        address[] memory baseSetComponents = ISetToken(_baseSetAddress).getComponents();\n\n        // Loop through the base SetToken components.\n        for (uint256 i = 0; i < baseSetComponents.length; i++) {\n            address currentComponent = baseSetComponents[i];\n            uint256 currentComponentQuantity = vaultInstance.getOwnerBalance(\n                currentComponent,\n                address(this)\n            );\n\n            // If address is weth, withdraw weth and transfer eth to sender\n            if (currentComponent == address(weth)) {\n                // Transfer the wrapped ether to this address from the Vault\n                coreInstance.withdrawModule(\n                    address(this),\n                    address(this),\n                    address(weth),\n                    currentComponentQuantity\n                );\n\n                // Unwrap wrapped ether\n                weth.withdraw(currentComponentQuantity);\n\n                // Transfer to recipient\n                msg.sender.transfer(currentComponentQuantity);\n            } else {\n                // Withdraw component from the Vault and send to the user\n                coreInstance.withdrawModule(\n                    address(this),\n                    msg.sender,\n                    currentComponent,\n                    currentComponentQuantity\n                );\n            }\n        }\n    }\n}',
sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/modules/RebalancingSetIssuanceModule.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:36.624Z",devdoc:{author:"Set Protocol * A module that includes functions for issuing / redeeming rebalancing SetToken to/from its base components and ether.",methods:{constructor:{params:{_core:"The address of Core",_transferProxy:"The address of TransferProxy",_vault:"The address of Vault",_weth:"The address of Wrapped Ether"}},"issueRebalancingSet(address,uint256,bool)":{params:{_keepChangeInVault:"Boolean signifying whether excess base SetToken is transfered to the user                                     or left in the vault",_rebalancingSetAddress:"Address of the rebalancing SetToken to issue",_rebalancingSetQuantity:"The issuance quantity of rebalancing SetToken"}},"issueRebalancingSetWrappingEther(address,uint256,bool)":{params:{_keepChangeInVault:"Boolean signifying whether excess base SetToken is transfered to the user                                     or left in the vault",_rebalancingSetAddress:"Address of the rebalancing SetToken to issue",_rebalancingSetQuantity:"The issuance quantity of rebalancing SetToken"}},"redeemRebalancingSet(address,uint256,bool)":{params:{_keepChangeInVault:"Boolean signifying whether excess base SetToken is transfered to the user                                     or left in the vault",_rebalancingSetAddress:"Address of the rebalancing SetToken to redeem",_rebalancingSetQuantity:"The Quantity of the rebalancing SetToken to redeem"}},"redeemRebalancingSetUnwrappingEther(address,uint256,bool)":{params:{_keepChangeInVault:"Boolean signifying whether excess base SetToken is transferred to the user                                   or left in the vault",_rebalancingSetAddress:"Address of the rebalancing SetToken to redeem",_rebalancingSetQuantity:"The Quantity of the rebalancing SetToken to redeem"}}},title:"RebalancingSetIssuanceModule"},userdoc:{methods:{constructor:"Constructor function for RebalancingSetIssuanceModule","issueRebalancingSet(address,uint256,bool)":{notice:"Issue a rebalancing SetToken using the base components of the base SetToken. The base SetToken is then issued into the rebalancing SetToken. The base SetToken quantity issued is calculated by taking the rebalancing SetToken's quantity, unit shares, and natural unit. If the calculated quantity is not a multiple of the natural unit of the base SetToken, the quantity is rounded up to the base SetToken natural unit. NOTE: Potential to receive more baseSet than expected if someone transfers some to this module. Be careful with balance checks."},"issueRebalancingSetWrappingEther(address,uint256,bool)":{notice:"Issue a rebalancing SetToken using the base components and ether of the base SetToken. The ether is wrapped  into wrapped Ether and utilized in issuance. The base SetToken is then issued and reissued into the rebalancing SetToken. Read more about base SetToken quantity in the issueRebalancingSet function. NOTE: Potential to receive more baseSet and ether dust than expected if someone transfers some to this module. Be careful with balance checks."},"redeemRebalancingSet(address,uint256,bool)":{notice:"Redeems a rebalancing SetToken into the base components of the base SetToken. NOTE: Potential to receive more baseSet than expected if someone transfers some to this module. Be careful with balance checks."},"redeemRebalancingSetUnwrappingEther(address,uint256,bool)":{notice:"Redeems a rebalancing SetToken into the base components of the base SetToken. Unwraps wrapped ether and sends eth to the user. If no wrapped ether in Set then will REVERT. NOTE: Potential to receive more baseSet and ether dust than expected if someone transfers some to this module. Be careful with balance checks."}}}};