"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.LiquidatorMock={contractName:"LiquidatorMock",abi:[{constant:true,inputs:[],name:"currentSet",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"placeBidQuantity",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"endFailedRebalanceHasBeenCalled",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"priceNumerator",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"hasFailed",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"liquidatorData",outputs:[{name:"",type:"bytes"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"hasSettled",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"nextSet",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"priceDivisor",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"startRebalanceTime",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"},{name:"_quantity",type:"uint256"}],name:"getBidPrice",outputs:[{components:[{name:"addresses",type:"address[]"},{name:"inflow",type:"uint256[]"},{name:"outflow",type:"uint256[]"}],name:"",type:"tuple"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_quantity",type:"uint256"}],name:"placeBid",outputs:[{components:[{name:"addresses",type:"address[]"},{name:"inflow",type:"uint256[]"},{name:"outflow",type:"uint256[]"}],name:"",type:"tuple"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_currentSet",type:"address"},{name:"_nextSet",type:"address"},{name:"startingCurrentSetAmount_",type:"uint256"},{name:"_liquidatorData",type:"bytes"}],name:"startRebalance",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_auctionStartTime",type:"uint256"},{name:"_auctionTimeToPivot",type:"uint256"},{name:"_auctionStartPrice",type:"uint256"},{name:"_auctionPivotPrice",type:"uint256"}],name:"setAuctionPriceParameters",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[],name:"settleRebalance",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"hasRebalanceFailed",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[],name:"endFailedRebalance",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_hasFailed",type:"bool"}],name:"setHasFailed",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"_priceNumerator",type:"uint256"}],name:"setPriceNumerator",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"auctionPriceParameters",outputs:[{components:[{name:"auctionStartTime",type:"uint256"},{name:"auctionTimeToPivot",type:"uint256"},{name:"auctionStartPrice",type:"uint256"},{name:"auctionPivotPrice",type:"uint256"}],name:"",type:"tuple"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getAuctionPriceParameters",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"minimumBid",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"remainingCurrentSets",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"startingCurrentSets",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getCombinedTokenArray",outputs:[{name:"",type:"address[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getCombinedCurrentSetUnits",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_set",type:"address"}],name:"getCombinedNextSetUnits",outputs:[{name:"",type:"uint256[]"}],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"minimumBid","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"},{"name":"_quantity","type":"uint256"}],"name":"getBidPrice","outputs":[{"components":[{"name":"addresses","type":"address[]"},{"name":"inflow","type":"uint256[]"},{"name":"outflow","type":"uint256[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getCombinedCurrentSetUnits","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getCombinedNextSetUnits","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"currentSet","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"hasRebalanceFailed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"placeBidQuantity","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"remainingCurrentSets","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"auctionPriceParameters","outputs":[{"components":[{"name":"auctionStartTime","type":"uint256"},{"name":"auctionTimeToPivot","type":"uint256"},{"name":"auctionStartPrice","type":"uint256"},{"name":"auctionPivotPrice","type":"uint256"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"startingCurrentSets","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"endFailedRebalanceHasBeenCalled","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"priceNumerator","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_priceNumerator","type":"uint256"}],"name":"setPriceNumerator","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getAuctionPriceParameters","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"hasFailed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"liquidatorData","outputs":[{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_set","type":"address"}],"name":"getCombinedTokenArray","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"endFailedRebalance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_auctionStartTime","type":"uint256"},{"name":"_auctionTimeToPivot","type":"uint256"},{"name":"_auctionStartPrice","type":"uint256"},{"name":"_auctionPivotPrice","type":"uint256"}],"name":"setAuctionPriceParameters","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"hasSettled","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_quantity","type":"uint256"}],"name":"placeBid","outputs":[{"components":[{"name":"addresses","type":"address[]"},{"name":"inflow","type":"uint256[]"},{"name":"outflow","type":"uint256[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"nextSet","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_hasFailed","type":"bool"}],"name":"setHasFailed","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"priceDivisor","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"startRebalanceTime","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"settleRebalance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_currentSet","type":"address"},{"name":"_nextSet","type":"address"},{"name":"startingCurrentSetAmount_","type":"uint256"},{"name":"_liquidatorData","type":"bytes"}],"name":"startRebalance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Set Protocol ","methods":{},"title":"LiquidatorMock"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/tokens/LiquidatorMock.sol":"LiquidatorMock"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ILiquidator.sol":{"keccak256":"0x9d1e66d56cd51d14787cce5ff8fb378eb6a0bb704e7102d7c4eda5de7f585af3","urls":["bzzr://c44220025ac21fda1dda68e236572c5c4f82bf53ccf504a020487b8c746c7b26"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/IRebalancingSetToken.sol":{"keccak256":"0xe7356a7b0f0cc95d9526395d776f523a48fd65618730d67b4f31f20ffbd380da","urls":["bzzr://605a33a818eff7ce3370f25fccb751f61c066b4db0772605a2215d1357d68072"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/interfaces/ISetToken.sol":{"keccak256":"0xfa6c0c07f8394d89b6b8f72e15778f8452a9341acb20cebb8421f3522aaca1bd","urls":["bzzr://ccf23bb78fd507bf8cbf5cf7ac2a660a1463b87a3689196e42b8f6862d1a6b11"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/Rebalance.sol":{"keccak256":"0x74ffa689d93ced6c6e0377a35ec1274241b6191b5aaac5576ada379ac3840286","urls":["bzzr://25bdda3f1f5adfa2c83c760c44993d250cd2df037360f0018d22d268df79e887"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/core/lib/RebalancingLibrary.sol":{"keccak256":"0x7f9dd2f95b2ee71a98b94cb9b0df15874aa134e7480d04a1fcf36aff166a55f4","urls":["bzzr://f43a5563ec5df095151eee30cf7a0941b5a971917c27c7b34d9586b36563ab5b"]},"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/tokens/LiquidatorMock.sol":{"keccak256":"0x708c0313871cfdffed974b953f3ac755db9662698c96e4c26c18f075492161ec","urls":["bzzr://939d49d9f9b5290337ed0c27c28088117041ef8b8ae5f6bdf4b06ce75ebd9a03"]},"openzeppelin-solidity/contracts/math/Math.sol":{"keccak256":"0x775160984ceb0931bf67e718fb23afd6fc2a5d38a6e2378ebb438a039ed2269e","urls":["bzzr://209e27ad1c13e3e9b157915e0269ee4c3b6f0a494660dcc4acf1faf102e1a7ad"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]},"set-protocol-contract-utils/contracts/lib/AddressArrayUtils.sol":{"keccak256":"0xb716eab4e8c5a336a2f19078928530829af097912bd1b925644f914b63601f08","urls":["bzzr://d8a21d39779beb316adb5180d08dcba1941eeccd9412ff08feb21a631c18c269"]}},"version":1}',bytecode:"",deployedBytecode:"",
sourceMap:"1236:7916:156:-;;;1536:4;1504:36;;1236:7916;8:9:-1;5:2;;;30:1;27;20:12;5:2;1236:7916:156;;;;;;;",deployedSourceMap:"1236:7916:156:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1236:7916:156;;;;;;;;-1:-1:-1;;;1236:7916:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6109:101;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2142:525;;;;;;;;;:::i;:::-;;;;;;;;6609:136;;;;;;;;;:::i;:::-;;;;;;;;6751:133;;;;;;;;;:::i;1547:27::-;;;:::i;:::-;;;;;;;;4907:104;;;;;;;;;:::i;:::-;;;;;;;;1909:31;;;:::i;6216:121::-;;;;;;;;;:::i;5434:189::-;;;;;;;;;:::i;:::-;;;;;;;;6343:124;;;;;;;;;:::i;2002:43::-;;;:::i;1504:36::-;;;:::i;5264:110::-;;;;;;;;;:::i;:::-;;5629:474;;;;;;;;;:::i;1975:21::-;;;:::i;2052:27::-;;;:::i;:::-;;;;;;;;6473:129;;;;;;;;;:::i;:::-;;;;;;;;5017:94;;;:::i;4356:469::-;;;;;;;;;:::i;1947:22::-;;;:::i;2673:688::-;;;;;;;;;:::i;1580:24::-;;;:::i;5171:87::-;;;;;;;;;:::i;1455:43::-;;;:::i;1645:33::-;;;:::i;4831:70::-;;;:::i;3367:983::-;;;;;;;;;:::i;6109:101::-;-1:-1:-1;6192:11:156;;;6109:101::o;2142:525::-;2265:26;;:::i;:::-;2367:7;;2387:21;2338:71;;;;;;;;;;;;;;;;;;;2307:28;;2338:71;;-1:-1:-1;;;;;2367:7:156;;;;2376:9;;2338:71;;2387:21;2338:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:28;:71::i;:::-;2307:102;;2419:29;2451:63;2469:10;;;;;;;;;-1:-1:-1;;;;;2469:10:156;2481:9;2492:21;2451:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:63::i;:::-;2419:95;;2532:120;2572:19;2532:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2532:120:156;;;;;;;;;;;;;;;;;;;;;2605:11;2630:12;2532:26;:120::i;:::-;2525:127;;;;2142:525;;;;;:::o;6609:136::-;6682:16;6717:21;6710:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6609:136;;;:::o;6751:133::-;6821:16;6856:21;6849:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6751:133;;;:::o;1547:27::-;;;-1:-1:-1;;;;;1547:27:156;;:::o;4907:104::-;-1:-1:-1;4995:9:156;;;;;;;;4907:104::o;1909:31::-;;;;:::o;6216:121::-;-1:-1:-1;6309:21:156;;;6216:121::o;5434:189::-;5527:48;;:::i;:::-;-1:-1:-1;;5591:25:156;;;;;;;;-1:-1:-1;5591:25:156;;;;;;;;;;;;;;;;;;;;;;;;;5434:189::o;6343:124::-;-1:-1:-1;6435:25:156;;;6343:124::o;2002:43::-;;;;;;;;;:::o;1504:36::-;;;;:::o;5264:110::-;5335:14;:32;5264:110::o;5629:474::-;5790:16;;;5804:1;5790:16;;;;;;;;;5725;;;;5790;;;;17:15:-1;;105:10;5790:16:156;88:34:-1;136:17;;-1:-1;5790:16:156;5757:49;;5835:18;:35;;;5816:13;5830:1;5816:16;;;;;;;;;;;;;:54;;;;;5899:18;:37;;;5880:13;5894:1;5880:16;;;;;;;;;;;;;:56;;;;;5965:18;:36;;;5946:13;5960:1;5946:16;;;;;;;;;;;;;:55;;;;;6030:18;:36;;;6011:13;6025:1;6011:16;;;;;;;;;;;;;;;;;:55;6083:13;5629:474;-1:-1:-1;;5629:474:156:o;1975:21::-;;;;;;;;;:::o;2052:27::-;;;;;;;;;;;;;;;-1:-1:-1;;2052:27:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6473:129::-;6541:16;6576:19;6569:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6569:26:156;;;;;;;;;;;;;;;;;;;;;;6473:129;;;:::o;5017:94::-;5066:31;:38;;-1:-1:-1;;5066:38:156;;;;;5017:94::o;4356:469::-;4560:18;:55;;;;4625:37;:59;;;;4694:36;:57;4761:36;:57;4356:469::o;1947:22::-;;;;;;:::o;2673:688::-;2758:26;;:::i;:::-;2800:16;:28;;;2898:21;;:36;;2819:9;2898:36;:25;:36;:::i;:::-;2874:21;:60;3069:7;;3089:21;3040:71;;;;;;;;;;;;;;;;;;;3009:28;;3040:71;;-1:-1:-1;;;;;3069:7:156;;;;3078:9;;3040:71;;3089:21;3040:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:28;:71::i;:::-;3009:102;;3121:29;3153:63;3171:10;;;;;;;;;-1:-1:-1;;;;;3171:10:156;3183:9;3194:21;3153:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:63::i;:::-;3121:95;;3234:120;3274:19;3234:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3234:120:156;;;;;;;;;;;;;;;;;;;;3307:11;3332:12;3234:26;:120::i;:::-;3227:127;2673:688;-1:-1:-1;;;;2673:688:156:o;1580:24::-;;;-1:-1:-1;;;;;1580:24:156;;:::o;5171:87::-;5229:9;:22;;;;;;;-1:-1:-1;;5229:22:156;;;;;;;;;5171:87::o;1455:43::-;1494:4;1455:43;:::o;1645:33::-;;;;:::o;4831:70::-;4877:10;:17;;-1:-1:-1;;4877:17:156;4890:4;4877:17;;;4831:70::o;3367:983::-;3570:32;:14;3587:15;;3570:32;:::i;:::-;-1:-1:-1;3613:10:156;:24;;-1:-1:-1;;;;;3613:24:156;;;-1:-1:-1;;3613:24:156;;;;;;;3647:7;:18;;;;;;;;;;;;;;;3697:15;3676:18;:36;3722:25;:53;;;3785:21;:49;;;3859:42;3626:11;3657:8;3859:19;:42::i;:::-;3845:11;:56;;;;3952:37;3992:11;-1:-1:-1;;;;;3992:25:156;;:27;;;;;-1:-1:-1;;;3992:27:156;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3992:27:156;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3992:27:156;;;;;;39:16:-1;36:1;17:17;2:54;101:4;3992:27:156;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;3992:27:156;;;;;;;;;3952:67;;4029:34;4066:8;-1:-1:-1;;;;;4066:22:156;;:24;;;;;-1:-1:-1;;;4066:24:156;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4066:24:156;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4066:24:156;;;;;;39:16:-1;36:1;17:17;2:54;101:4;4066:24:156;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;4066:24:156;;;;;;;;;4029:61;-1:-1:-1;4122:45:156;:20;4029:61;4122:45;:26;:45;:::i;:::-;4100:67;;;;:19;;:67;;;;;;:::i;:::-;;4202:55;4224:11;4237:19;4202:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4202:55:156;;;;;;;;;;;;;;;;;;;;;:21;:55::i;:::-;4178:79;;;;:21;;:79;;;;;;:::i;:::-;;4291:52;4313:8;4323:19;4291:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4291:52:156;;;;;;;;;;;;;;;;;;;;:21;:52::i;:::-;4267:76;;;;:21;;:76;;;;;;:::i;:::-;;3367:983;;;;;;;:::o;7589:592::-;7783:16;7815:37;7855:101;7886:9;7909;7932:14;7855:17;:101::i;:::-;7815:141;-1:-1:-1;7972:9:156;7967:170;7991:20;:27;7987:1;:31;7967:170;;;8065:61;1494:4;8065:43;8093:14;;8065:20;8086:1;8065:23;;;;;;;;;;;;;;:27;;:43;;;;:::i;:::-;:47;:61;:47;:61;:::i;:::-;8039:20;8060:1;8039:23;;;;;;;;;;;;;;;;;:87;8020:3;;7967:170;;;-1:-1:-1;8154:20:156;7589:592;-1:-1:-1;;;;7589:592:156:o;8187:530::-;8364:16;8396:19;8418:9;-1:-1:-1;;;;;8418:21:156;;:23;;;;;-1:-1:-1;;;8418:23:156;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8418:23:156;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8418:23:156;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8418:23:156;;;;;;;;;8396:45;;8452:31;8500:14;:21;8486:36;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;8486:36:156;-1:-1:-1;8452:70:156;-1:-1:-1;8538:9:156;8533:146;8557:14;:21;8553:1;:25;8533:146;;;8619:49;8656:11;8619:32;8633:14;8648:1;8633:17;;;;;;;;;;;;;;8619:9;:13;;:32;;;;:::i;:49::-;8599:14;8614:1;8599:17;;;;;;;;;;;;;;;;;:69;8580:3;;8533:146;;;-1:-1:-1;8696:14:156;8187:530;-1:-1:-1;;;;;8187:530:156:o;945:301:43:-;1129:16;;:::i;:::-;-1:-1:-1;1168:71:43;;;;;;;;;;;;;;;;;;;;;;;945:301::o;1211:145:166:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:166;;;1211:145::o;8723:427:156:-;8863:7;8886:29;8918:11;-1:-1:-1;;;;;8918:23:156;;:25;;;;;-1:-1:-1;;;8918:25:156;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8918:25:156;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8918:25:156;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8918:25:156;;;;;;;;;8886:57;;8953:26;8982:8;-1:-1:-1;;;;;8982:20:156;;:22;;;;;-1:-1:-1;;;8982:22:156;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8982:22:156;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8982:22:156;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8982:22:156;;;;;;;;;8953:51;-1:-1:-1;9022:121:156;9044:39;:21;1494:4;9044:39;:25;:39;:::i;:::-;9097:36;:18;1494:4;9097:36;:22;:36;:::i;:::-;9022:8;:121::i;3487:359:172:-;3565:16;3593:31;3627:16;3638:1;3641;3627:10;:16::i;:::-;3593:50;;3653:32;3688:16;3699:1;3702;3688:10;:16::i;:::-;3653:51;;3714:29;3746:15;3756:1;3759;3746:9;:15::i;:::-;3714:47;;3778:61;3785:14;3801:37;3808:12;3822:15;3801:6;:37::i;:::-;3778:6;:61::i;:::-;3771:68;3487:359;-1:-1:-1;;;;;;3487:359:172:o;6945:638:156:-;7103:16;7135:30;7182:19;:26;7168:41;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;7168:41:156;-1:-1:-1;7135:74:156;-1:-1:-1;7225:9:156;7220:326;7244:19;:26;7240:1;:30;7220:326;;;7291:24;7318:19;7338:1;7318:22;;;;;;;;;;;;;;7291:49;;7356:20;7378:16;7398:51;7432:16;7398:9;-1:-1:-1;;;;;7398:23:156;;:25;;;;;-1:-1:-1;;;7398:25:156;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7398:25:156;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7398:25:156;;;;;;39:16:-1;36:1;17:17;2:54;101:4;7398:25:156;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;7398:25:156;;;;;;;;;:33;:51;:33;:51;:::i;:::-;7355:94;;;;7483:11;:52;;7534:1;7483:52;;;7497:9;-1:-1:-1;;;;;7497:18:156;;:20;;;;;-1:-1:-1;;;7497:20:156;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7497:20:156;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7497:20:156;;;;;;39:16:-1;36:1;17:17;2:54;101:4;7497:20:156;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;7497::156;;;;;;;;;7518:12;7497:34;;;;;;;;;;;;;;7483:52;7464:13;7478:1;7464:16;;;;;;;;;;;;;;;;;:71;-1:-1:-1;;;7272:3:156;;7220:326;;;-1:-1:-1;7563:13:156;6945:638;-1:-1:-1;;;6945:638:156:o;231:421:166:-;289:7;529:6;525:45;;-1:-1:-1;558:1:166;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;;644:1;231:421;-1:-1:-1;;;231:421:166:o;782:296::-;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;;782:296;-1:-1:-1;;;;782:296:166:o;164:105:165:-;222:7;253:1;248;:6;;:14;;261:1;248:14;;;-1:-1:-1;257:1:165;;241:21;-1:-1:-1;164:105:165:o;4060:781:172:-;4143:16;4171:14;4188:1;:8;4171:25;;4206:24;4244:6;4233:18;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;4233:18:172;-1:-1:-1;4206:45:172;-1:-1:-1;4261:13:172;;4366:190;4390:6;4386:1;:10;4366:190;;;4417:9;4429:1;4431;4429:4;;;;;;;;;;;;;;4417:16;;4452:14;4461:1;4464;4452:8;:14::i;:::-;4447:99;;4502:4;4486:10;4497:1;4486:13;;;;;;;;:20;;;:13;;;;;;;;;;;:20;4524:7;;;;;4447:99;-1:-1:-1;4398:3:172;;4366:190;;;;4565:29;4611:5;4597:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;4597:20:172;-1:-1:-1;4565:52:172;-1:-1:-1;4627:9:172;;4650:156;4674:6;4670:1;:10;4650:156;;;4705:10;4716:1;4705:13;;;;;;;;;;;;;;4701:95;;;4756:1;4758;4756:4;;;;;;;;;;;;;;4738:12;4751:1;4738:15;;;;;;;;-1:-1:-1;;;;;4738:22:172;;;:15;;;;;;;;;;;:22;4778:3;;;;;4701:95;4682:3;;4650:156;;;-1:-1:-1;4822:12:172;;4060:781;-1:-1:-1;;;;;;;4060:781:172:o;2602:686::-;2684:16;2712:14;2729:1;:8;2712:25;;2747:24;2785:6;2774:18;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2774:18:172;-1:-1:-1;2747:45:172;-1:-1:-1;2802:17:172;;2833:166;2857:6;2853:1;:10;2833:166;;;2888:17;2897:1;2900;2902;2900:4;;;;;;;;;;;;;;2888:8;:17::i;:::-;2884:105;;;2941:4;2925:10;2936:1;2925:13;;;;;;;;:20;;;:13;;;;;;;;;;;:20;2963:11;;;;;2884:105;2865:3;;2833:166;;;;3008:29;3054:9;3040:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;3040:24:172;-1:-1:-1;3008:56:172;-1:-1:-1;3074:9:172;;3097:156;3121:6;3117:1;:10;3097:156;;;3152:10;3163:1;3152:13;;;;;;;;;;;;;;3148:95;;;3203:1;3205;3203:4;;;;;;;;;;;;;;3185:12;3198:1;3185:15;;;;;;;;-1:-1:-1;;;;;3185:22:172;;;:15;;;;;;;;;;;:22;3225:3;;;;;3148:95;3129:3;;3097:156;;1382:477;1461:16;1489:15;1507:1;:8;1489:26;;1525:15;1543:1;:8;1525:26;;1561:29;1617:7;1607;:17;1593:32;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;1593:32:172;-1:-1:-1;1561:64:172;-1:-1:-1;1640:9:172;1635:85;1659:7;1655:1;:11;1635:85;;;1705:1;1707;1705:4;;;;;;;;;;;;;;1687:12;1700:1;1687:15;;;;;;;;-1:-1:-1;;;;;1687:22:172;;;:15;;;;;;;;;;;:22;1668:3;;1635:85;;;-1:-1:-1;1734:9:172;1729:95;1753:7;1749:1;:11;1729:95;;;1809:1;1811;1809:4;;;;;;;;;;;;;;1781:12;1804:1;1794:7;:11;1781:25;;;;;;;;-1:-1:-1;;;;;1781:32:172;;;:25;;;;;;;;;;;:32;1762:3;;1729:95;;509:289;622:8;;580:7;;;;;640:125;664:6;660:1;:10;640:125;;;703:1;-1:-1:-1;;;;;695:9:172;:1;697;695:4;;;;;;;;;;;;;;-1:-1:-1;;;;;695:9:172;;691:64;;;732:1;-1:-1:-1;735:4:172;;-1:-1:-1;724:16:172;;-1:-1:-1;724:16:172;691:64;672:3;;640:125;;;-1:-1:-1;782:1:172;;-1:-1:-1;782:1:172;;-1:-1:-1;;509:289:172;;;;;;:::o;1048:159::-;1120:4;1136:9;1166:13;1174:1;1177;1166:7;:13::i;1236:7916:156:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1236:7916:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1236:7916:156;;;-1:-1:-1;1236:7916:156;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1236:7916:156;-1:-1:-1;;;;;1236:7916:156;;;;;;;;;;;-1:-1:-1;1236:7916:156;;;;;;;-1:-1:-1;1236:7916:156;;;-1:-1:-1;1236:7916:156;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;1236:7916:156;;;;;;;5:118:-1;;72:46;110:6;97:20;72:46;;130:122;;208:39;239:6;233:13;208:39;;277:722;;405:3;398:4;390:6;386:17;382:27;372:2;;423:1;420;413:12;372:2;453:6;447:13;475:80;490:64;547:6;490:64;;;475:80;;;466:89;;572:5;597:6;590:5;583:21;627:4;619:6;615:17;605:27;;649:4;644:3;640:14;633:21;;702:6;749:3;741:4;733:6;729:17;724:3;720:27;717:36;714:2;;;766:1;763;756:12;714:2;791:1;776:217;801:6;798:1;795:13;776:217;;;859:3;881:48;925:3;913:10;881:48;;;869:61;;-1:-1;953:4;944:14;;;;972;;;;;823:1;816:9;776:217;;;780:14;365:634;;;;;;;;1025:722;;1153:3;1146:4;1138:6;1134:17;1130:27;1120:2;;1171:1;1168;1161:12;1120:2;1201:6;1195:13;1223:80;1238:64;1295:6;1238:64;;1223:80;1214:89;;1320:5;1345:6;1338:5;1331:21;1375:4;1367:6;1363:17;1353:27;;1397:4;1392:3;1388:14;1381:21;;1450:6;1497:3;1489:4;1481:6;1477:17;1472:3;1468:27;1465:36;1462:2;;;1514:1;1511;1504:12;1462:2;1539:1;1524:217;1549:6;1546:1;1543:13;1524:217;;;1607:3;1629:48;1673:3;1661:10;1629:48;;;1617:61;;-1:-1;1701:4;1692:14;;;;1720;;;;;1571:1;1564:9;1524:217;;1755:112;;1819:43;1854:6;1841:20;1819:43;;1888:335;;;2002:3;1995:4;1987:6;1983:17;1979:27;1969:2;;2020:1;2017;2010:12;1969:2;-1:-1;2040:20;;2080:18;2069:30;;2066:2;;;2112:1;2109;2102:12;2066:2;2146:4;2138:6;2134:17;2122:29;;2196:3;2189;2181:6;2177:16;2167:8;2163:31;2160:40;2157:2;;;2213:1;2210;2203:12;2231:154;;2316:64;2372:6;2359:20;2316:64;;2392:118;;2459:46;2497:6;2484:20;2459:46;;2517:122;;2595:39;2626:6;2620:13;2595:39;;2646:241;;2750:2;2738:9;2729:7;2725:23;2721:32;2718:2;;;2766:1;2763;2756:12;2718:2;2801:1;2818:53;2863:7;2843:9;2818:53;;2894:366;;;3015:2;3003:9;2994:7;2990:23;2986:32;2983:2;;;3031:1;3028;3021:12;2983:2;3066:1;3083:53;3128:7;3108:9;3083:53;;;3073:63;;3045:97;3173:2;3191:53;3236:7;3227:6;3216:9;3212:22;3191:53;;;3181:63;;3152:98;2977:283;;;;;;3267:392;;3407:2;3395:9;3386:7;3382:23;3378:32;3375:2;;;3423:1;3420;3413:12;3375:2;3458:24;;3502:18;3491:30;;3488:2;;;3534:1;3531;3524:12;3488:2;3554:89;3635:7;3626:6;3615:9;3611:22;3554:89;;3666:392;;3806:2;3794:9;3785:7;3781:23;3777:32;3774:2;;;3822:1;3819;3812:12;3774:2;3857:24;;3901:18;3890:30;;3887:2;;;3933:1;3930;3923:12;3887:2;3953:89;4034:7;4025:6;4014:9;4010:22;3953:89;;4065:235;;4166:2;4154:9;4145:7;4141:23;4137:32;4134:2;;;4182:1;4179;4172:12;4134:2;4217:1;4234:50;4276:7;4256:9;4234:50;;4307:813;;;;;;4517:3;4505:9;4496:7;4492:23;4488:33;4485:2;;;4534:1;4531;4524:12;4485:2;4569:1;4586:71;4649:7;4629:9;4586:71;;;4576:81;;4548:115;4694:2;4712:71;4775:7;4766:6;4755:9;4751:22;4712:71;;;4702:81;;4673:116;4820:2;4838:53;4883:7;4874:6;4863:9;4859:22;4838:53;;;4828:63;;4799:98;4956:2;4945:9;4941:18;4928:32;4980:18;4972:6;4969:30;4966:2;;;5012:1;5009;5002:12;4966:2;5040:64;5096:7;5087:6;5076:9;5072:22;5040:64;;;5030:74;;;;4907:203;4479:641;;;;;;;;;5127:241;;5231:2;5219:9;5210:7;5206:23;5202:32;5199:2;;;5247:1;5244;5237:12;5199:2;5282:1;5299:53;5344:7;5324:9;5299:53;;5375:263;;5490:2;5478:9;5469:7;5465:23;5461:32;5458:2;;;5506:1;5503;5496:12;5458:2;5541:1;5558:64;5614:7;5594:9;5558:64;;5645:617;;;;;5800:3;5788:9;5779:7;5775:23;5771:33;5768:2;;;5817:1;5814;5807:12;5768:2;5852:1;5869:53;5914:7;5894:9;5869:53;;;5859:63;;5831:97;5959:2;5977:53;6022:7;6013:6;6002:9;5998:22;5977:53;;;5967:63;;5938:98;6067:2;6085:53;6130:7;6121:6;6110:9;6106:22;6085:53;;;6075:63;;6046:98;6175:2;6193:53;6238:7;6229:6;6218:9;6214:22;6193:53;;;6183:63;;6154:98;5762:500;;;;;;;;6270:173;;6357:46;6399:3;6391:6;6357:46;;;-1:-1;;6432:4;6423:14;;6350:93;6452:173;;6539:46;6581:3;6573:6;6539:46;;6633:110;6706:31;6731:5;6706:31;;;6701:3;6694:44;6688:55;;;6781:621;;6926:54;6974:5;6926:54;;;6993:86;7072:6;7067:3;6993:86;;;6986:93;;7099:56;7149:5;7099:56;;;7176:1;7161:219;7186:6;7183:1;7180:13;7161:219;;;7233:63;7292:3;7283:6;7277:13;7233:63;;;7226:70;;7313:60;7366:6;7313:60;;;7303:70;-1:-1;7208:1;7201:9;7161:219;;;-1:-1;7393:3;;6905:497;-1:-1;;;;6905:497;7441:585;;7572:50;7616:5;7572:50;;;7635:76;7704:6;7699:3;7635:76;;;7628:83;;7731:52;7777:5;7731:52;;;7804:1;7789:215;7814:6;7811:1;7808:13;7789:215;;;7861:63;7920:3;7911:6;7905:13;7861:63;;;7854:70;;7941:56;7990:6;7941:56;;;7931:66;-1:-1;7836:1;7829:9;7789:215;;8065:621;;8210:54;8258:5;8210:54;;;8277:86;8356:6;8351:3;8277:86;;;8270:93;;8383:56;8433:5;8383:56;;;8460:1;8445:219;8470:6;8467:1;8464:13;8445:219;;;8517:63;8576:3;8567:6;8561:13;8517:63;;;8510:70;;8597:60;8650:6;8597:60;;;8587:70;-1:-1;8492:1;8485:9;8445:219;;8725:585;;8856:50;8900:5;8856:50;;;8919:76;8988:6;8983:3;8919:76;;;8912:83;;9015:52;9061:5;9015:52;;;9088:1;9073:215;9098:6;9095:1;9092:13;9073:215;;;9145:63;9204:3;9195:6;9189:13;9145:63;;;9138:70;;9225:56;9274:6;9225:56;;;9215:66;-1:-1;9120:1;9113:9;9073:215;;9318:111;9395:28;9417:5;9395:28;;9436:335;;9542:34;9570:5;9542:34;;;9588:70;9651:6;9646:3;9588:70;;;9581:77;;9663:52;9708:6;9703:3;9696:4;9689:5;9685:16;9663:52;;;9736:29;9758:6;9736:29;;;9727:39;;;;9522:249;-1:-1;;;9522:249;9778:162;9879:55;9928:5;9879:55;;10054:856;10304:22;;10227:4;10218:14;;;10332:61;10222:3;10304:22;10332:61;;;10247:152;10485:4;10478:5;10474:16;10468:23;10497:62;10553:4;10548:3;10544:14;10531:11;10497:62;;;10409:156;10650:4;10643:5;10639:16;10633:23;10662:62;10718:4;10713:3;10709:14;10696:11;10662:62;;;10575:155;10815:4;10808:5;10804:16;10798:23;10827:62;10883:4;10878:3;10874:14;10861:11;10827:62;;;10740:155;10200:710;;;;10980:961;11205:22;;11135:4;11240:37;;;10980:961;;11126:14;;;;11292:98;11126:14;11205:22;11292:98;;;11284:106;;11155:247;11476:4;11469:5;11465:16;11459:23;11528:3;11522:4;11518:14;11511:4;11506:3;11502:14;11495:38;11548:98;11641:4;11628:11;11548:98;;;11540:106;;11412:246;11733:4;11726:5;11722:16;11716:23;11785:3;11779:4;11775:14;11768:4;11763:3;11759:14;11752:38;11805:98;11898:4;11885:11;11805:98;;;11797:106;11108:833;-1:-1;;;;;11108:833;11948:110;12021:31;12046:5;12021:31;;12192:361;12360:2;12374:47;;;12345:18;;12435:108;12345:18;12529:6;12435:108;;12560:361;12728:2;12742:47;;;12713:18;;12803:108;12713:18;12897:6;12803:108;;12928:201;13040:2;13025:18;;13054:65;13029:9;13092:6;13054:65;;13136:289;13268:2;13282:47;;;13253:18;;13343:72;13253:18;13401:6;13343:72;;13432:249;13568:2;13553:18;;13582:89;13557:9;13644:6;13582:89;;13688:374;13886:3;13871:19;;13901:151;13875:9;14025:6;13901:151;;14069:369;14241:2;14255:47;;;14226:18;;14316:112;14226:18;14414:6;14316:112;;14445:213;14563:2;14548:18;;14577:71;14552:9;14621:6;14577:71;;14665:256;14727:2;14721:9;14753:17;;;14828:18;14813:34;;14849:22;;;14810:62;14807:2;;;14885:1;14882;14875:12;14807:2;14901;14894:22;14705:216;;-1:-1;14705:216;14928:258;;15087:18;15079:6;15076:30;15073:2;;;15119:1;15116;15109:12;15073:2;-1:-1;15148:4;15136:17;;;15166:15;;15010:176;15460:117;15565:4;15553:17;;15534:43;15978:103;16064:12;;16048:33;17037:168;17145:19;;;17194:4;17185:14;;17138:67;17935:105;;18004:31;18029:5;18004:31;;18047:92;18120:13;18113:21;;18096:43;18146:128;-1:-1;;;;;18215:54;;18198:76;18578:123;;18665:31;18690:5;18665:31;;19234:268;19299:1;19306:101;19320:6;19317:1;19314:13;19306:101;;;19387:11;;;19381:18;19368:11;;;19361:39;19342:2;19335:10;19306:101;;;19422:6;19419:1;19416:13;19413:2;;;-1:-1;;19487:1;19469:16;;19462:27;19283:219;19510:97;19598:2;19578:14;-1:-1;;19574:28;;19558:49",source:'/*\n    Copyright 2019 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { Math } from "openzeppelin-solidity/contracts/math/Math.sol";\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\nimport { AddressArrayUtils } from "set-protocol-contract-utils/contracts/lib/AddressArrayUtils.sol";\n\nimport { ISetToken } from "../../core/interfaces/ISetToken.sol";\nimport { ILiquidator } from "../../core/interfaces/ILiquidator.sol";\nimport { Rebalance } from "../../core/lib/Rebalance.sol";\nimport { RebalancingLibrary } from "../../core/lib/RebalancingLibrary.sol";\n\n/**\n * @title LiquidatorMock\n * @author Set Protocol\n *\n */\ncontract LiquidatorMock is\n    ILiquidator\n{\n    using SafeMath for uint256;\n    using AddressArrayUtils for address[];\n\n    // Legacy Data\n    RebalancingLibrary.AuctionPriceParameters private auctionPriceParams;\n\n    uint256 constant public priceDivisor = 1000;\n    uint256 public priceNumerator = 1000;\n\n    ISetToken public currentSet;\n    ISetToken public nextSet;\n\n    uint256 private _minimumBid;\n\n    uint256 public startRebalanceTime;\n    uint256 private _startingCurrentSetAmount;\n    uint256 private _remainingCurrentSets;\n\n    address[] private _combinedTokenArray;\n    uint256[] private _combinedCurrentUnits;\n    uint256[] private _combinedNextSetUnits;\n\n    uint256 public placeBidQuantity;\n\n    bool public hasSettled;\n    bool public hasFailed;\n    bool public endFailedRebalanceHasBeenCalled;\n\n    bytes public liquidatorData;\n\n    /* ============ External Functions ============ */\n\n    function getBidPrice(\n        address _set,\n        uint256 _quantity\n    )\n        external\n        view\n        returns (Rebalance.TokenFlow memory)\n    {\n        uint256[] memory inflowUnits = getInflowTokenTransferValues(nextSet, _quantity, _combinedNextSetUnits);\n        uint256[] memory outflowUnits = getTransferValues(currentSet, _quantity, _combinedCurrentUnits);\n\n        return Rebalance.composeTokenFlow(\n            _combinedTokenArray,\n            inflowUnits,\n            outflowUnits\n        );        \n    }\n\n    function placeBid(\n        uint256 _quantity\n    )\n        external\n        returns (Rebalance.TokenFlow memory)\n    {\n        placeBidQuantity = _quantity;\n\n        // Subtract remaining Sets\n        _remainingCurrentSets = _remainingCurrentSets.sub(_quantity);\n\n        // Inflow = quantity (currentSet) * units / naturalUnit\n        uint256[] memory inflowUnits = getInflowTokenTransferValues(nextSet, _quantity, _combinedNextSetUnits);\n        uint256[] memory outflowUnits = getTransferValues(currentSet, _quantity, _combinedCurrentUnits);\n\n        return Rebalance.composeTokenFlow(\n            _combinedTokenArray,\n            inflowUnits,\n            outflowUnits\n        );\n    }\n\n    function startRebalance(\n        ISetToken _currentSet,\n        ISetToken _nextSet,\n        uint256 startingCurrentSetAmount_,\n        bytes calldata _liquidatorData\n    )\n        external\n    {\n        liquidatorData = _liquidatorData;\n\n        currentSet = _currentSet;\n        nextSet = _nextSet;\n\n        startRebalanceTime = block.timestamp;\n        _startingCurrentSetAmount = startingCurrentSetAmount_;\n        _remainingCurrentSets = _startingCurrentSetAmount;\n\n        _minimumBid = calculateMinimumBid(_currentSet, _nextSet);\n\n        // Set the combined token array\n        address[] memory currentSetComponents = _currentSet.getComponents();\n        address[] memory nextSetComponents = _nextSet.getComponents();\n        _combinedTokenArray = currentSetComponents.union(nextSetComponents);\n\n        _combinedCurrentUnits = getCombinedUnitsArray(_currentSet, _combinedTokenArray);\n        _combinedNextSetUnits = getCombinedUnitsArray(_nextSet, _combinedTokenArray);\n    }\n\n    function setAuctionPriceParameters(\n        uint256 _auctionStartTime,\n        uint256 _auctionTimeToPivot,\n        uint256 _auctionStartPrice,\n        uint256 _auctionPivotPrice\n    ) external {\n        auctionPriceParams.auctionStartTime = _auctionStartTime;\n        auctionPriceParams.auctionTimeToPivot = _auctionTimeToPivot;\n        auctionPriceParams.auctionStartPrice = _auctionStartPrice;\n        auctionPriceParams.auctionPivotPrice = _auctionPivotPrice;\n    }\n\n    function settleRebalance() external {\n        hasSettled = true;\n    }\n\n    function hasRebalanceFailed(address _set) external view returns (bool) {\n        return hasFailed;\n    }\n\n    function endFailedRebalance() external {\n        endFailedRebalanceHasBeenCalled = true;\n    }\n\n    /* ============ Setter Functions ============ */\n\n    function setHasFailed(bool _hasFailed) external {\n        hasFailed = _hasFailed;\n    }\n\n    function setPriceNumerator(uint256 _priceNumerator) external {\n        priceNumerator = _priceNumerator;\n    }\n\n    /* ============ Getter Functions ============ */\n\n    function auctionPriceParameters(address _set)\n        external\n        view\n        returns (RebalancingLibrary.AuctionPriceParameters memory)\n    {\n        return auctionPriceParams;\n    }\n\n    function getAuctionPriceParameters(address _set)\n        external\n        view\n        returns (uint256[] memory)\n    {\n        uint256[] memory auctionParams = new uint256[](4);\n        auctionParams[0] = auctionPriceParams.auctionStartTime;\n        auctionParams[1] = auctionPriceParams.auctionTimeToPivot;\n        auctionParams[2] = auctionPriceParams.auctionStartPrice;\n        auctionParams[3] = auctionPriceParams.auctionPivotPrice;\n        return auctionParams;\n    }\n\n    function minimumBid(address _set) external view returns (uint256) {\n        return _minimumBid;\n    }\n\n    function remainingCurrentSets(address _set) external view returns (uint256) {\n        return _remainingCurrentSets;\n    }\n\n    function startingCurrentSets(address _set) external view returns (uint256) {\n        return _startingCurrentSetAmount;\n    }\n\n    function getCombinedTokenArray(address _set) external view returns (address[] memory) {\n        return _combinedTokenArray;\n    }\n \n    function getCombinedCurrentSetUnits(address _set) external view returns (uint256[] memory) {\n        return _combinedCurrentUnits;\n    }\n\n    function getCombinedNextSetUnits(address _set) external view returns (uint256[] memory) {\n        return _combinedNextSetUnits;\n    }\n\n    /* ============ Private Functions ============ */\n\n    function getCombinedUnitsArray(\n        ISetToken _setToken,\n        address[] memory combinedTokenArray_\n    )\n        private\n        view\n        returns (uint256[] memory)\n    {\n        uint256[] memory combinedUnits = new uint256[](combinedTokenArray_.length);\n\n        for (uint256 i = 0; i < combinedTokenArray_.length; i++) {\n            address currentComponent = combinedTokenArray_[i];\n\n            (uint256 indexCurrent, bool isComponent) = _setToken.getComponents().indexOf(currentComponent);\n\n            combinedUnits[i] = isComponent ? _setToken.getUnits()[indexCurrent] : 0;\n        }\n\n        return combinedUnits;\n    }\n\n    function getInflowTokenTransferValues(\n        ISetToken _setToken,\n        uint256 _quantity,\n        uint256[] memory _combinedUnits        \n    )\n        private\n        view\n        returns(uint256[] memory)\n    {\n        uint256[] memory unpricedInflowTokens = getTransferValues(\n            _setToken,\n            _quantity,\n            _combinedUnits\n        );\n\n        for (uint256 i = 0; i < unpricedInflowTokens.length; i++) {\n            unpricedInflowTokens[i] = unpricedInflowTokens[i].mul(priceNumerator).div(priceDivisor);\n        }\n\n        return unpricedInflowTokens;\n    }\n\n    function getTransferValues(\n        ISetToken _setToken,\n        uint256 _quantity,\n        uint256[] memory _combinedUnits\n    ) \n        private\n        view\n        returns (uint256[] memory)\n    {\n        uint256 naturalUnit = _setToken.naturalUnit();\n\n        uint256[] memory transferValues = new uint256[](_combinedUnits.length);\n\n        for (uint256 i = 0; i < _combinedUnits.length; i++) {\n            transferValues[i] = _quantity.mul(_combinedUnits[i]).div(naturalUnit);\n        }\n\n        return transferValues;\n    }\n\n    function calculateMinimumBid(\n        ISetToken _currentSet,\n        ISetToken _nextSet\n    )\n        private\n        view\n        returns (uint256)\n    {\n        uint256 currentSetNaturalUnit = _currentSet.naturalUnit();\n        uint256 nextSetNaturalUnit = _nextSet.naturalUnit();\n\n        return Math.max(\n            currentSetNaturalUnit.mul(priceDivisor),\n            nextSetNaturalUnit.mul(priceDivisor)\n        );\n    }\n}\n',sourcePath:"/Users/brianweickmann/Documents/Source/set-protocol-contracts/contracts/mocks/tokens/LiquidatorMock.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.23",updatedAt:"2020-05-05T17:13:37.121Z",devdoc:{author:"Set Protocol ",methods:{},title:"LiquidatorMock"},userdoc:{methods:{}}};