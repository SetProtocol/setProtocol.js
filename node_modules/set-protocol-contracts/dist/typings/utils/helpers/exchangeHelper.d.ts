import { Address } from 'set-protocol-utils';
import { CoreContract, KyberNetworkWrapperContract, TransferProxyContract, ZeroExExchangeWrapperContract } from '../contracts';
export declare class ExchangeHelper {
    private _contractOwnerAddress;
    private _coreHelper;
    constructor(contractOwnerAddress: Address);
    deployKyberNetworkWrapper(core: Address, kyberNetworkProxy: Address, transferProxy: TransferProxyContract, from?: Address): Promise<KyberNetworkWrapperContract>;
    deployAndAuthorizeKyberNetworkWrapper(core: CoreContract, kyberNetworkProxy: Address, transferProxy: TransferProxyContract, from?: Address): Promise<KyberNetworkWrapperContract>;
    deployZeroExExchangeWrapper(core: Address, zeroExExchange: Address, zeroExProxy: Address, zeroExTokenAddress: Address, transferProxy: TransferProxyContract, from?: Address): Promise<ZeroExExchangeWrapperContract>;
    deployAndAuthorizeZeroExExchangeWrapper(core: CoreContract, zeroExExchange: Address, zeroExProxy: Address, zeroExTokenAddress: Address, transferProxy: TransferProxyContract, from?: Address): Promise<ZeroExExchangeWrapperContract>;
}
