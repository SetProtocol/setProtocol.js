import { Address } from 'set-protocol-utils';
import { BigNumber } from 'bignumber.js';
import { OracleWhiteListContract, RebalancingSetFeeMockContract, RebalancingSetTokenV2Contract, RebalancingSetTokenV3Contract, SetTokenContract } from '../contracts';
import { CoreHelper } from './coreHelper';
import { ERC20Helper } from './erc20Helper';
import { OracleHelper } from 'set-protocol-oracles';
export declare class ValuationHelper {
    private _contractOwnerAddress;
    private _coreHelper;
    private _erc20Helper;
    private _oracleHelper;
    constructor(contractOwnerAddress: Address, coreHelper: CoreHelper, erc20Helper: ERC20Helper, oracleHelper: OracleHelper);
    calculateSetTokenValueAsync(setToken: SetTokenContract, oracleWhiteList: OracleWhiteListContract, from?: Address): Promise<BigNumber>;
    calculateRebalancingSetTokenValueAsync(rebalancingSetToken: RebalancingSetFeeMockContract | RebalancingSetTokenV2Contract | RebalancingSetTokenV3Contract, oracleWhiteList: OracleWhiteListContract): Promise<BigNumber>;
    private computeTokenDollarAmount;
    getComponentPricesAsync(components: Address[], oracleWhiteList: OracleWhiteListContract, from?: Address): Promise<BigNumber[]>;
}
