export declare const StartRebalanceLibrary: {
    "contractName": string;
    "abi": any[];
    "metadata": string;
    "bytecode": string;
    "deployedBytecode": string;
    "sourceMap": string;
    "deployedSourceMap": string;
    "source": string;
    "sourcePath": string;
    "compiler": {
        "name": string;
        "version": string;
    };
    "networks": {};
    "schemaVersion": string;
    "updatedAt": string;
    "devdoc": {
        "author": string;
        "methods": {
            "calculateCombinedUnitArrays(SetTokenLibrary.SetDetails,SetTokenLibrary.SetDetails,uint256,address,address[])": {
                "params": {
                    "_auctionLibrary": string;
                    "_combinedTokenArray": string;
                    "_currentSet": string;
                    "_minimumBid": string;
                    "_nextSet": string;
                };
                "return": string;
            };
            "redeemCurrentSet(address,address,address)": {
                "params": {
                    "_coreAddress": string;
                    "_currentSet": string;
                    "_vaultAddress": string;
                };
                "return": string;
            };
            "redeemCurrentSetAndGetBiddingParameters(address,address,address,address,address)": {
                "params": {
                    "_auctionLibrary": string;
                    "_coreAddress": string;
                    "_currentSet": string;
                    "_nextSet": string;
                    "_vaultAddress": string;
                };
                "return": string;
            };
            "setUpBiddingParameters(address,address,address,uint256)": {
                "params": {
                    "_auctionLibrary": string;
                    "_currentSet": string;
                    "_nextSet": string;
                    "_remainingCurrentSets": string;
                };
                "return": string;
            };
            "validateStartRebalance(uint256,uint256,uint8)": {
                "params": {
                    "_proposalPeriod": string;
                    "_proposalStartTime": string;
                    "_rebalanceState": string;
                };
            };
        };
        "title": string;
    };
    "userdoc": {
        "methods": {
            "calculateCombinedUnitArrays(SetTokenLibrary.SetDetails,SetTokenLibrary.SetDetails,uint256,address,address[])": {
                "notice": string;
            };
            "redeemCurrentSet(address,address,address)": {
                "notice": string;
            };
            "redeemCurrentSetAndGetBiddingParameters(address,address,address,address,address)": {
                "notice": string;
            };
            "setUpBiddingParameters(address,address,address,uint256)": {
                "notice": string;
            };
            "validateStartRebalance(uint256,uint256,uint8)": {
                "notice": string;
            };
        };
    };
};
