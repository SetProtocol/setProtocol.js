export declare const LibOrder: {
    "contractName": string;
    "abi": {
        "constant": boolean;
        "inputs": any[];
        "name": string;
        "outputs": {
            "name": string;
            "type": string;
        }[];
        "payable": boolean;
        "stateMutability": string;
        "type": string;
    }[];
    "metadata": string;
    "bytecode": string;
    "deployedBytecode": string;
    "sourceMap": string;
    "deployedSourceMap": string;
    "source": string;
    "sourcePath": string;
    "ast": {
        "absolutePath": string;
        "exportedSymbols": {
            "LibOrder": number[];
        };
        "id": number;
        "nodeType": string;
        "nodes": ({
            "id": number;
            "literals": string[];
            "nodeType": string;
            "src": string;
            "absolutePath"?: undefined;
            "file"?: undefined;
            "scope"?: undefined;
            "sourceUnit"?: undefined;
            "symbolAliases"?: undefined;
            "unitAlias"?: undefined;
            "baseContracts"?: undefined;
            "contractDependencies"?: undefined;
            "contractKind"?: undefined;
            "documentation"?: undefined;
            "fullyImplemented"?: undefined;
            "linearizedBaseContracts"?: undefined;
            "name"?: undefined;
            "nodes"?: undefined;
        } | {
            "absolutePath": string;
            "file": string;
            "id": number;
            "nodeType": string;
            "scope": number;
            "sourceUnit": number;
            "src": string;
            "symbolAliases": any[];
            "unitAlias": string;
            "literals"?: undefined;
            "baseContracts"?: undefined;
            "contractDependencies"?: undefined;
            "contractKind"?: undefined;
            "documentation"?: undefined;
            "fullyImplemented"?: undefined;
            "linearizedBaseContracts"?: undefined;
            "name"?: undefined;
            "nodes"?: undefined;
        } | {
            "baseContracts": {
                "arguments": any;
                "baseName": {
                    "contractScope": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "referencedDeclaration": number;
                    "src": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                };
                "id": number;
                "nodeType": string;
                "src": string;
            }[];
            "contractDependencies": number[];
            "contractKind": string;
            "documentation": any;
            "fullyImplemented": boolean;
            "id": number;
            "linearizedBaseContracts": number[];
            "name": string;
            "nodeType": string;
            "nodes": ({
                "constant": boolean;
                "id": number;
                "name": string;
                "nodeType": string;
                "scope": number;
                "src": string;
                "stateVariable": boolean;
                "storageLocation": string;
                "typeDescriptions": {
                    "typeIdentifier": string;
                    "typeString": string;
                };
                "typeName": {
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "src": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                };
                "value": {
                    "argumentTypes": any;
                    "arguments": {
                        "argumentTypes": any;
                        "arguments": {
                            "argumentTypes": any;
                            "hexValue": string;
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "kind": string;
                            "lValueRequested": boolean;
                            "nodeType": string;
                            "src": string;
                            "subdenomination": any;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "value": string;
                        }[];
                        "expression": {
                            "argumentTypes": {
                                "typeIdentifier": string;
                                "typeString": string;
                            }[];
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "lValueRequested": boolean;
                            "memberName": string;
                            "nodeType": string;
                            "referencedDeclaration": any;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "names": any[];
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    }[];
                    "expression": {
                        "argumentTypes": {
                            "typeIdentifier": string;
                            "typeString": string;
                        }[];
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "overloadedDeclarations": any[];
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "isConstant": boolean;
                    "isLValue": boolean;
                    "isPure": boolean;
                    "kind": string;
                    "lValueRequested": boolean;
                    "names": any[];
                    "nodeType": string;
                    "src": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                };
                "visibility": string;
                "canonicalName"?: undefined;
                "members"?: undefined;
            } | {
                "canonicalName": string;
                "id": number;
                "members": {
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "src": string;
                }[];
                "name": string;
                "nodeType": string;
                "src": string;
                "constant"?: undefined;
                "scope"?: undefined;
                "stateVariable"?: undefined;
                "storageLocation"?: undefined;
                "typeDescriptions"?: undefined;
                "typeName"?: undefined;
                "value"?: undefined;
                "visibility"?: undefined;
            } | {
                "canonicalName": string;
                "id": number;
                "members": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "stateMutability": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": any;
                    "visibility": string;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "stateMutability"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                })[];
                "name": string;
                "nodeType": string;
                "scope": number;
                "src": string;
                "visibility": string;
                "constant"?: undefined;
                "stateVariable"?: undefined;
                "storageLocation"?: undefined;
                "typeDescriptions"?: undefined;
                "typeName"?: undefined;
                "value"?: undefined;
            })[];
            "scope": number;
            "src": string;
            "literals"?: undefined;
            "absolutePath"?: undefined;
            "file"?: undefined;
            "sourceUnit"?: undefined;
            "symbolAliases"?: undefined;
            "unitAlias"?: undefined;
        })[];
        "src": string;
    };
    "legacyAST": {
        "absolutePath": string;
        "exportedSymbols": {
            "LibOrder": number[];
        };
        "id": number;
        "nodeType": string;
        "nodes": ({
            "id": number;
            "literals": string[];
            "nodeType": string;
            "src": string;
            "absolutePath"?: undefined;
            "file"?: undefined;
            "scope"?: undefined;
            "sourceUnit"?: undefined;
            "symbolAliases"?: undefined;
            "unitAlias"?: undefined;
            "baseContracts"?: undefined;
            "contractDependencies"?: undefined;
            "contractKind"?: undefined;
            "documentation"?: undefined;
            "fullyImplemented"?: undefined;
            "linearizedBaseContracts"?: undefined;
            "name"?: undefined;
            "nodes"?: undefined;
        } | {
            "absolutePath": string;
            "file": string;
            "id": number;
            "nodeType": string;
            "scope": number;
            "sourceUnit": number;
            "src": string;
            "symbolAliases": any[];
            "unitAlias": string;
            "literals"?: undefined;
            "baseContracts"?: undefined;
            "contractDependencies"?: undefined;
            "contractKind"?: undefined;
            "documentation"?: undefined;
            "fullyImplemented"?: undefined;
            "linearizedBaseContracts"?: undefined;
            "name"?: undefined;
            "nodes"?: undefined;
        } | {
            "baseContracts": {
                "arguments": any;
                "baseName": {
                    "contractScope": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "referencedDeclaration": number;
                    "src": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                };
                "id": number;
                "nodeType": string;
                "src": string;
            }[];
            "contractDependencies": number[];
            "contractKind": string;
            "documentation": any;
            "fullyImplemented": boolean;
            "id": number;
            "linearizedBaseContracts": number[];
            "name": string;
            "nodeType": string;
            "nodes": ({
                "constant": boolean;
                "id": number;
                "name": string;
                "nodeType": string;
                "scope": number;
                "src": string;
                "stateVariable": boolean;
                "storageLocation": string;
                "typeDescriptions": {
                    "typeIdentifier": string;
                    "typeString": string;
                };
                "typeName": {
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "src": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                };
                "value": {
                    "argumentTypes": any;
                    "arguments": {
                        "argumentTypes": any;
                        "arguments": {
                            "argumentTypes": any;
                            "hexValue": string;
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "kind": string;
                            "lValueRequested": boolean;
                            "nodeType": string;
                            "src": string;
                            "subdenomination": any;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "value": string;
                        }[];
                        "expression": {
                            "argumentTypes": {
                                "typeIdentifier": string;
                                "typeString": string;
                            }[];
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "lValueRequested": boolean;
                            "memberName": string;
                            "nodeType": string;
                            "referencedDeclaration": any;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "names": any[];
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    }[];
                    "expression": {
                        "argumentTypes": {
                            "typeIdentifier": string;
                            "typeString": string;
                        }[];
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "overloadedDeclarations": any[];
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "isConstant": boolean;
                    "isLValue": boolean;
                    "isPure": boolean;
                    "kind": string;
                    "lValueRequested": boolean;
                    "names": any[];
                    "nodeType": string;
                    "src": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                };
                "visibility": string;
                "canonicalName"?: undefined;
                "members"?: undefined;
            } | {
                "canonicalName": string;
                "id": number;
                "members": {
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "src": string;
                }[];
                "name": string;
                "nodeType": string;
                "src": string;
                "constant"?: undefined;
                "scope"?: undefined;
                "stateVariable"?: undefined;
                "storageLocation"?: undefined;
                "typeDescriptions"?: undefined;
                "typeName"?: undefined;
                "value"?: undefined;
                "visibility"?: undefined;
            } | {
                "canonicalName": string;
                "id": number;
                "members": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "stateMutability": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": any;
                    "visibility": string;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "stateMutability"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                })[];
                "name": string;
                "nodeType": string;
                "scope": number;
                "src": string;
                "visibility": string;
                "constant"?: undefined;
                "stateVariable"?: undefined;
                "storageLocation"?: undefined;
                "typeDescriptions"?: undefined;
                "typeName"?: undefined;
                "value"?: undefined;
            })[];
            "scope": number;
            "src": string;
            "literals"?: undefined;
            "absolutePath"?: undefined;
            "file"?: undefined;
            "sourceUnit"?: undefined;
            "symbolAliases"?: undefined;
            "unitAlias"?: undefined;
        })[];
        "src": string;
    };
    "compiler": {
        "name": string;
        "version": string;
    };
    "networks": {};
    "schemaVersion": string;
    "updatedAt": string;
    "devdoc": {
        "methods": {};
    };
    "userdoc": {
        "methods": {};
    };
};
