export declare const RebalancingSetToken: {
    "contractName": string;
    "abi": ({
        "constant": boolean;
        "inputs": {
            "name": string;
            "type": string;
        }[];
        "name": string;
        "outputs": {
            "name": string;
            "type": string;
        }[];
        "payable": boolean;
        "stateMutability": string;
        "type": string;
        "anonymous"?: undefined;
    } | {
        "inputs": {
            "name": string;
            "type": string;
        }[];
        "payable": boolean;
        "stateMutability": string;
        "type": string;
        "constant"?: undefined;
        "name"?: undefined;
        "outputs"?: undefined;
        "anonymous"?: undefined;
    } | {
        "anonymous": boolean;
        "inputs": {
            "indexed": boolean;
            "name": string;
            "type": string;
        }[];
        "name": string;
        "type": string;
        "constant"?: undefined;
        "outputs"?: undefined;
        "payable"?: undefined;
        "stateMutability"?: undefined;
    })[];
    "metadata": string;
    "bytecode": string;
    "deployedBytecode": string;
    "sourceMap": string;
    "deployedSourceMap": string;
    "source": string;
    "sourcePath": string;
    "compiler": {
        "name": string;
        "version": string;
    };
    "networks": {};
    "schemaVersion": string;
    "updatedAt": string;
    "devdoc": {
        "author": string;
        "methods": {
            "allowance(address,address)": {
                "details": string;
                "params": {
                    "owner": string;
                    "spender": string;
                };
                "return": string;
            };
            "approve(address,uint256)": {
                "details": string;
                "params": {
                    "spender": string;
                    "value": string;
                };
            };
            "balanceOf(address)": {
                "details": string;
                "params": {
                    "owner": string;
                };
                "return": string;
            };
            "constructor": {
                "params": {
                    "_componentWhiteList": string;
                    "_factory": string;
                    "_initialSet": string;
                    "_initialUnitShares": string;
                    "_manager": string;
                    "_name": string;
                    "_naturalUnit": string;
                    "_proposalPeriod": string;
                    "_rebalanceInterval": string;
                    "_symbol": string;
                };
            };
            "decimals()": {
                "return": string;
            };
            "decreaseAllowance(address,uint256)": {
                "details": string;
                "params": {
                    "spender": string;
                    "subtractedValue": string;
                };
            };
            "increaseAllowance(address,uint256)": {
                "details": string;
                "params": {
                    "addedValue": string;
                    "spender": string;
                };
            };
            "name()": {
                "return": string;
            };
            "propose(address,address,uint256,uint256,uint256)": {
                "params": {
                    "_auctionLibrary": string;
                    "_auctionPivotPrice": string;
                    "_auctionStartPrice": string;
                    "_auctionTimeToPivot": string;
                    "_nextSet": string;
                };
            };
            "symbol()": {
                "return": string;
            };
            "totalSupply()": {
                "details": string;
            };
            "transfer(address,uint256)": {
                "details": string;
                "params": {
                    "to": string;
                    "value": string;
                };
            };
            "transferFrom(address,address,uint256)": {
                "details": string;
                "params": {
                    "from": string;
                    "to": string;
                    "value": string;
                };
            };
        };
        "title": string;
    };
    "userdoc": {
        "methods": {
            "constructor": string;
            "propose(address,address,uint256,uint256,uint256)": {
                "notice": string;
            };
        };
    };
};
