export declare const IMatchOrders: {
    "contractName": string;
    "abi": {
        "constant": boolean;
        "inputs": ({
            "components": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
        } | {
            "name": string;
            "type": string;
            "components"?: undefined;
        })[];
        "name": string;
        "outputs": {
            "components": ({
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            } | {
                "name": string;
                "type": string;
                "components"?: undefined;
            })[];
            "name": string;
            "type": string;
        }[];
        "payable": boolean;
        "stateMutability": string;
        "type": string;
    }[];
    "metadata": string;
    "bytecode": string;
    "deployedBytecode": string;
    "sourceMap": string;
    "deployedSourceMap": string;
    "source": string;
    "sourcePath": string;
    "compiler": {
        "name": string;
        "version": string;
    };
    "networks": {};
    "schemaVersion": string;
    "updatedAt": string;
    "devdoc": {
        "methods": {
            "matchOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes,bytes)": {
                "details": string;
                "params": {
                    "leftOrder": string;
                    "leftSignature": string;
                    "rightOrder": string;
                    "rightSignature": string;
                };
                "return": string;
            };
        };
    };
    "userdoc": {
        "methods": {};
    };
};
