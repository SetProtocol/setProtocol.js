export declare const CoreIssuance: {
    "contractName": string;
    "abi": ({
        "constant": boolean;
        "inputs": {
            "name": string;
            "type": string;
        }[];
        "name": string;
        "outputs": {
            "name": string;
            "type": string;
        }[];
        "payable": boolean;
        "stateMutability": string;
        "type": string;
        "anonymous"?: undefined;
    } | {
        "anonymous": boolean;
        "inputs": {
            "indexed": boolean;
            "name": string;
            "type": string;
        }[];
        "name": string;
        "type": string;
        "constant"?: undefined;
        "outputs"?: undefined;
        "payable"?: undefined;
        "stateMutability"?: undefined;
    })[];
    "metadata": string;
    "bytecode": string;
    "deployedBytecode": string;
    "sourceMap": string;
    "deployedSourceMap": string;
    "source": string;
    "sourcePath": string;
    "compiler": {
        "name": string;
        "version": string;
    };
    "networks": {};
    "schemaVersion": string;
    "updatedAt": string;
    "devdoc": {
        "author": string;
        "methods": {
            "disabledSets(address)": {
                "params": {
                    "_set": string;
                };
                "return": string;
            };
            "exchangeIds(uint8)": {
                "params": {
                    "_exchangeId": string;
                };
                "return": string;
            };
            "exchanges()": {
                "return": string;
            };
            "factories()": {
                "return": string;
            };
            "isOwner()": {
                "return": string;
            };
            "issue(address,uint256)": {
                "params": {
                    "_quantity": string;
                    "_set": string;
                };
            };
            "issueInVault(address,uint256)": {
                "params": {
                    "_quantity": string;
                    "_set": string;
                };
            };
            "issueTo(address,address,uint256)": {
                "params": {
                    "_quantity": string;
                    "_recipient": string;
                    "_set": string;
                };
            };
            "modules()": {
                "return": string;
            };
            "operationState()": {
                "return": string;
            };
            "owner()": {
                "return": string;
            };
            "priceLibraries()": {
                "return": string;
            };
            "redeem(address,uint256)": {
                "params": {
                    "_quantity": string;
                    "_set": string;
                };
            };
            "redeemAndWithdrawTo(address,address,uint256,uint256)": {
                "params": {
                    "_quantity": string;
                    "_set": string;
                    "_to": string;
                    "_toExclude": string;
                };
            };
            "redeemInVault(address,uint256)": {
                "params": {
                    "_quantity": string;
                    "_set": string;
                };
            };
            "redeemTo(address,address,uint256)": {
                "params": {
                    "_quantity": string;
                    "_recipient": string;
                    "_set": string;
                };
            };
            "renounceOwnership()": {
                "details": string;
            };
            "setOperationState(uint8)": {
                "params": {
                    "_operationState": string;
                };
            };
            "setTokens()": {
                "return": string;
            };
            "transferOwnership(address)": {
                "details": string;
                "params": {
                    "newOwner": string;
                };
            };
            "transferProxy()": {
                "return": string;
            };
            "validFactories(address)": {
                "params": {
                    "_factory": string;
                };
                "return": string;
            };
            "validModules(address)": {
                "params": {
                    "_module": string;
                };
                "return": string;
            };
            "validPriceLibraries(address)": {
                "params": {
                    "_priceLibrary": string;
                };
                "return": string;
            };
            "validSets(address)": {
                "params": {
                    "_set": string;
                };
                "return": string;
            };
            "vault()": {
                "return": string;
            };
        };
        "title": string;
    };
    "userdoc": {
        "methods": {
            "disabledSets(address)": {
                "notice": string;
            };
            "exchangeIds(uint8)": {
                "notice": string;
            };
            "exchanges()": {
                "notice": string;
            };
            "factories()": {
                "notice": string;
            };
            "issue(address,uint256)": {
                "notice": string;
            };
            "issueInVault(address,uint256)": {
                "notice": string;
            };
            "issueTo(address,address,uint256)": {
                "notice": string;
            };
            "modules()": {
                "notice": string;
            };
            "operationState()": {
                "notice": string;
            };
            "priceLibraries()": {
                "notice": string;
            };
            "redeem(address,uint256)": {
                "notice": string;
            };
            "redeemAndWithdrawTo(address,address,uint256,uint256)": {
                "notice": string;
            };
            "redeemInVault(address,uint256)": {
                "notice": string;
            };
            "redeemTo(address,address,uint256)": {
                "notice": string;
            };
            "renounceOwnership()": {
                "notice": string;
            };
            "setOperationState(uint8)": {
                "notice": string;
            };
            "setTokens()": {
                "notice": string;
            };
            "transferProxy()": {
                "notice": string;
            };
            "validFactories(address)": {
                "notice": string;
            };
            "validModules(address)": {
                "notice": string;
            };
            "validPriceLibraries(address)": {
                "notice": string;
            };
            "validSets(address)": {
                "notice": string;
            };
            "vault()": {
                "notice": string;
            };
        };
    };
};
