import Web3 from 'web3';
import Contract from "web3/eth/contract";
import { Tx } from "web3/eth/types";
import { BigNumber } from 'set-protocol-utils';
import { BaseContract } from '../base_contract';
export declare class CoreIssuanceLibraryContract extends BaseContract {
    calculateDepositAndDecrementQuantities: {
        callAsync(_components: string[], _componentQuantities: BigNumber[], _owner: string, _vault: string, defaultBlock?: any): Promise<[BigNumber[], BigNumber[]]>;
    };
    calculateWithdrawAndIncrementQuantities: {
        callAsync(_componentQuantities: BigNumber[], _toExclude: BigNumber, defaultBlock?: any): Promise<[BigNumber[], BigNumber[]]>;
    };
    calculateRequiredComponentQuantities: {
        callAsync(_componentUnits: BigNumber[], _naturalUnit: BigNumber, _quantity: BigNumber, defaultBlock?: any): Promise<BigNumber[]>;
    };
    deploy(data: string, args: any[]): Promise<any>;
    static deployed(web3: Web3, defaults: Tx): Promise<CoreIssuanceLibraryContract>;
    static at(address: string, web3: Web3, defaults: Tx): Promise<CoreIssuanceLibraryContract>;
    constructor(web3ContractInstance: Contract, defaults: Tx);
}
