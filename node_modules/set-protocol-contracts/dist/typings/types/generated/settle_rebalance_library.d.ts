import Web3 from 'web3';
import Contract from "web3/eth/contract";
import { Tx } from "web3/eth/types";
import { BigNumber } from 'set-protocol-utils';
import { BaseContract } from '../base_contract';
export declare class SettleRebalanceLibraryContract extends BaseContract {
    calculateNextSetIssueQuantity: {
        callAsync(_totalSupply: BigNumber, _naturalUnit: BigNumber, _nextSet: string, _vaultAddress: string, defaultBlock?: any): Promise<[BigNumber, BigNumber]>;
    };
    calculateMaxIssueAmount: {
        callAsync(_vaultAddress: string, _setToken: {
            naturalUnit: BigNumber;
            components: string[];
            units: BigNumber[];
        }, defaultBlock?: any): Promise<BigNumber>;
    };
    deploy(data: string, args: any[]): Promise<any>;
    static deployed(web3: Web3, defaults: Tx): Promise<SettleRebalanceLibraryContract>;
    static at(address: string, web3: Web3, defaults: Tx): Promise<SettleRebalanceLibraryContract>;
    constructor(web3ContractInstance: Contract, defaults: Tx);
}
