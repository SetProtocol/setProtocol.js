"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function getExpectedFeeActualizationLog(rebalancingSetToken, newHighWatermark, profitFee, streamingFee, contractAddress) {
    return [{
            event: 'FeeActualization',
            address: contractAddress,
            args: {
                rebalancingSetToken: rebalancingSetToken,
                newHighWatermark: newHighWatermark,
                profitFee: profitFee,
                streamingFee: streamingFee,
            },
        }];
}
exports.getExpectedFeeActualizationLog = getExpectedFeeActualizationLog;
function getExpectedFeeInitializationLog(rebalancingSetToken, profitFeePeriod, highWatermarkResetPeriod, profitFeePercentage, streamingFeePercentage, highWatermark, lastProfitFeeTimestamp, lastStreamingFeeTimestamp, contractAddress) {
    return [{
            event: 'FeeInitialization',
            address: contractAddress,
            args: {
                rebalancingSetToken: rebalancingSetToken,
                profitFeePeriod: profitFeePeriod,
                highWatermarkResetPeriod: highWatermarkResetPeriod,
                profitFeePercentage: profitFeePercentage,
                streamingFeePercentage: streamingFeePercentage,
                highWatermark: highWatermark,
                lastProfitFeeTimestamp: lastProfitFeeTimestamp,
                lastStreamingFeeTimestamp: lastStreamingFeeTimestamp,
            },
        }];
}
exports.getExpectedFeeInitializationLog = getExpectedFeeInitializationLog;
function getExpectedFeeAdjustmentLog(rebalancingSetToken, feeType, newFeePercentage, contractAddress) {
    return [{
            event: 'FeeAdjustment',
            address: contractAddress,
            args: {
                rebalancingSetToken: rebalancingSetToken,
                feeType: feeType,
                newFeePercentage: newFeePercentage,
            },
        }];
}
exports.getExpectedFeeAdjustmentLog = getExpectedFeeAdjustmentLog;
