"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var setProtocolUtils = __importStar(require("set-protocol-utils"));
var bignumber_js_1 = require("bignumber.js");
var contracts_1 = require("../contracts");
var web3Helper_1 = require("../web3Helper");
var units_1 = require("../units");
var constants_1 = require("../constants");
var FixedFeeCalculator = web3Helper_1.importArtifactsFromSource('FixedFeeCalculator');
var FixedFeeCalculatorMock = web3Helper_1.importArtifactsFromSource('FixedFeeCalculatorMock');
var FeeCalculatorMock = web3Helper_1.importArtifactsFromSource('FeeCalculatorMock');
var PerformanceFeeCalculator = web3Helper_1.importArtifactsFromSource('PerformanceFeeCalculator');
var RebalancingSetFeeMock = web3Helper_1.importArtifactsFromSource('RebalancingSetFeeMock');
var web3 = web3Helper_1.getWeb3();
var SetTestUtils = setProtocolUtils.SetProtocolTestUtils, SetUtils = setProtocolUtils.SetProtocolUtils;
var FeeCalculatorHelper = /** @class */ (function () {
    function FeeCalculatorHelper(contractOwnerAddress) {
        this._contractOwnerAddress = contractOwnerAddress;
    }
    /* ============ Deployment ============ */
    FeeCalculatorHelper.prototype.deployFixedFeeCalculatorAsync = function (from) {
        if (from === void 0) { from = this._contractOwnerAddress; }
        return __awaiter(this, void 0, void 0, function () {
            var feeCalculator;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, FixedFeeCalculator.new(web3Helper_1.txnFrom(from))];
                    case 1:
                        feeCalculator = _a.sent();
                        return [2 /*return*/, new contracts_1.FixedFeeCalculatorContract(web3Helper_1.getContractInstance(feeCalculator), web3Helper_1.txnFrom(from))];
                }
            });
        });
    };
    FeeCalculatorHelper.prototype.deployFixedFeeCalculatorMockAsync = function (from) {
        if (from === void 0) { from = this._contractOwnerAddress; }
        return __awaiter(this, void 0, void 0, function () {
            var feeCalculator;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, FixedFeeCalculatorMock.new(web3Helper_1.txnFrom(from))];
                    case 1:
                        feeCalculator = _a.sent();
                        return [2 /*return*/, new contracts_1.FixedFeeCalculatorMockContract(web3Helper_1.getContractInstance(feeCalculator), web3Helper_1.txnFrom(from))];
                }
            });
        });
    };
    FeeCalculatorHelper.prototype.deployPerformanceFeeCalculatorAsync = function (core, oracleWhiteList, maxProfitFeePercentage, maxStreamingFeePercentage, from) {
        if (from === void 0) { from = this._contractOwnerAddress; }
        return __awaiter(this, void 0, void 0, function () {
            var feeCalculator;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, PerformanceFeeCalculator.new(core, oracleWhiteList, maxProfitFeePercentage, maxStreamingFeePercentage, web3Helper_1.txnFrom(from))];
                    case 1:
                        feeCalculator = _a.sent();
                        return [2 /*return*/, new contracts_1.PerformanceFeeCalculatorContract(web3Helper_1.getContractInstance(feeCalculator), web3Helper_1.txnFrom(from))];
                }
            });
        });
    };
    FeeCalculatorHelper.prototype.deployFeeCalculatorMockAsync = function (from) {
        if (from === void 0) { from = this._contractOwnerAddress; }
        return __awaiter(this, void 0, void 0, function () {
            var feeCalculatorMock;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, FeeCalculatorMock.new(web3Helper_1.txnFrom(from))];
                    case 1:
                        feeCalculatorMock = _a.sent();
                        return [2 /*return*/, new contracts_1.FeeCalculatorMockContract(web3Helper_1.getContractInstance(feeCalculatorMock), web3Helper_1.txnFrom(from))];
                }
            });
        });
    };
    FeeCalculatorHelper.prototype.deployRebalancingSetFeeMockAsync = function (unitShares, naturalUnit, currentSet, feeCalculator, from) {
        if (from === void 0) { from = this._contractOwnerAddress; }
        return __awaiter(this, void 0, void 0, function () {
            var rebalancingSetMock;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, RebalancingSetFeeMock.new(unitShares, naturalUnit, currentSet, feeCalculator, web3Helper_1.txnFrom(from))];
                    case 1:
                        rebalancingSetMock = _a.sent();
                        return [2 /*return*/, new contracts_1.RebalancingSetFeeMockContract(web3Helper_1.getContractInstance(rebalancingSetMock), web3Helper_1.txnFrom(from))];
                }
            });
        });
    };
    FeeCalculatorHelper.prototype.generateFixedRebalanceFeeCallData = function (feeQuantity) {
        return web3.utils.padLeft(web3.utils.numberToHex(feeQuantity.toString()), 64);
    };
    FeeCalculatorHelper.prototype.generateAdjustFeeCallData = function (feeType, newFeePercentage) {
        return SetTestUtils.bufferArrayToHex([
            SetUtils.paddedBufferForBigNumber(feeType),
            SetUtils.paddedBufferForBigNumber(newFeePercentage),
        ]);
    };
    FeeCalculatorHelper.prototype.generatePerformanceFeeCallData = function (profitPeriod, highWatermarkResetPeriod, profitFeePercentage, streamingFeePercentage) {
        return SetTestUtils.bufferArrayToHex([
            SetUtils.paddedBufferForBigNumber(profitPeriod),
            SetUtils.paddedBufferForBigNumber(highWatermarkResetPeriod),
            SetUtils.paddedBufferForBigNumber(profitFeePercentage),
            SetUtils.paddedBufferForBigNumber(streamingFeePercentage),
        ]);
    };
    FeeCalculatorHelper.prototype.generatePerformanceFeeCallDataBuffer = function (profitPeriod, highWatermarkResetPeriod, profitFeePercentage, streamingFeePercentage) {
        return [
            SetUtils.paddedBufferForBigNumber(profitPeriod),
            SetUtils.paddedBufferForBigNumber(highWatermarkResetPeriod),
            SetUtils.paddedBufferForBigNumber(profitFeePercentage),
            SetUtils.paddedBufferForBigNumber(streamingFeePercentage),
        ];
    };
    FeeCalculatorHelper.prototype.calculateAccruedFeesAsync = function (feeState, rebalancingSetTokenValue, timeStamp) {
        return __awaiter(this, void 0, void 0, function () {
            var elapsedTime, streamingFee, profitFee;
            return __generator(this, function (_a) {
                elapsedTime = timeStamp.sub(new bignumber_js_1.BigNumber(feeState.lastStreamingFeeTimestamp));
                streamingFee = this.calculateAccruedStreamingFee(new bignumber_js_1.BigNumber(feeState.streamingFeePercentage), elapsedTime);
                profitFee = constants_1.ZERO;
                if (timeStamp.sub(new bignumber_js_1.BigNumber(feeState.lastProfitFeeTimestamp)).gt(new bignumber_js_1.BigNumber(feeState.profitFeePeriod))) {
                    profitFee = this.calculateAccruedProfitFeeAsync(feeState, rebalancingSetTokenValue, streamingFee);
                }
                return [2 /*return*/, profitFee.add(streamingFee)];
            });
        });
    };
    FeeCalculatorHelper.prototype.calculateNewHighWatermarkAsync = function (feeState, rebalancingSetTokenValue, timeStamp) {
        return __awaiter(this, void 0, void 0, function () {
            var elapsedTime, streamingFee;
            return __generator(this, function (_a) {
                elapsedTime = timeStamp.sub(new bignumber_js_1.BigNumber(feeState.lastStreamingFeeTimestamp));
                streamingFee = this.calculateAccruedStreamingFee(new bignumber_js_1.BigNumber(feeState.streamingFeePercentage), elapsedTime);
                return [2 /*return*/, rebalancingSetTokenValue.sub(rebalancingSetTokenValue.mul(streamingFee).div(units_1.ether(1)).round(0, 3))];
            });
        });
    };
    FeeCalculatorHelper.prototype.calculateAccruedProfitFeeAsync = function (feeState, rebalancingSetValue, streamingFee) {
        var postStreamingValue = rebalancingSetValue.sub(rebalancingSetValue.mul(streamingFee).div(units_1.ether(1)).round(0, 3));
        var gainedValue = postStreamingValue.gt(feeState.highWatermark) ?
            postStreamingValue.sub(feeState.highWatermark) :
            constants_1.ZERO;
        return gainedValue.mul(feeState.profitFeePercentage).div(rebalancingSetValue).round(0, 3);
    };
    FeeCalculatorHelper.prototype.calculateAccruedStreamingFee = function (streamingFee, elapsedTime) {
        return elapsedTime.mul(streamingFee).div(constants_1.ONE_YEAR_IN_SECONDS).round(0, 3);
    };
    return FeeCalculatorHelper;
}());
exports.FeeCalculatorHelper = FeeCalculatorHelper;
