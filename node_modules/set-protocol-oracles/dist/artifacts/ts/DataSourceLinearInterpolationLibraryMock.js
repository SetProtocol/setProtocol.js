"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DataSourceLinearInterpolationLibraryMock={contractName:"DataSourceLinearInterpolationLibraryMock",abi:[{constant:false,inputs:[{name:"_currentPrice",type:"uint256"},{name:"_updateInterval",type:"uint256"},{name:"_timeFromExpectedUpdate",type:"uint256"},{name:"_previousLoggedDataPoint",type:"uint256"}],name:"interpolateDelayedPriceUpdateMock",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":false,"inputs":[{"name":"_currentPrice","type":"uint256"},{"name":"_updateInterval","type":"uint256"},{"name":"_timeFromExpectedUpdate","type":"uint256"},{"name":"_previousLoggedDataPoint","type":"uint256"}],"name":"interpolateDelayedPriceUpdateMock","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Set Protocol * Library used to determine linearly interpolated value for DataSource contracts when TimeSeriesFeed is updated after interpolationThreshold has passed.","methods":{},"title":"LinearInterpolationLibrary"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/mocks/oracles/DataSourceLinearInterpolationLibraryMock.sol":"DataSourceLinearInterpolationLibraryMock"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/lib/DataSourceLinearInterpolationLibrary.sol":{"keccak256":"0x65c002c6913a593201f70f58dd249b0ec2d6166159a53671c2c1a6071722a536","urls":["bzzr://91905214042e19496935d1aedb4b1125e45dca1d7e82aa6ec5ce4633820b7163"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/mocks/oracles/DataSourceLinearInterpolationLibraryMock.sol":{"keccak256":"0xca67b63292b510f21c0d31bde7d4a239577bd8e33b6843d76341787833216538","urls":["bzzr://3d1e07c8521d3de25a798ae37e607917bcbf479b1df315a71b7e638dae698786"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]}},"version":1}',bytecode:"0x608060405234801561001057600080fd5b50610192806100206000396000f3fe608060405234801561001057600080fd5b5060043610610047577c01000000000000000000000000000000000000000000000000000000006000350463aa1465aa811461004c575b600080fd5b61007b6004803603608081101561006257600080fd5b508035906020810135906040810135906060013561008d565b60408051918252519081900360200190f35b600061009b858585856100a4565b95945050505050565b6000806100b7848663ffffffff61010216565b90506100f8816100ec6100d0868863ffffffff61011d16565b6100e08a8a63ffffffff61011d16565b9063ffffffff61010216565b9063ffffffff61014416565b9695505050505050565b60008282018381101561011457600080fd5b90505b92915050565b60008261012c57506000610117565b8282028284828161013957fe5b041461011457600080fd5b600080821161015257600080fd5b600082848161015d57fe5b0494935050505056fea165627a7a72305820ae4db3e56d74b0a321ae166f7a46084a1b9ddb02f1b48cdf6eaf6ea4d1ced0560029",deployedBytecode:"0x608060405234801561001057600080fd5b5060043610610047577c01000000000000000000000000000000000000000000000000000000006000350463aa1465aa811461004c575b600080fd5b61007b6004803603608081101561006257600080fd5b508035906020810135906040810135906060013561008d565b60408051918252519081900360200190f35b600061009b858585856100a4565b95945050505050565b6000806100b7848663ffffffff61010216565b90506100f8816100ec6100d0868863ffffffff61011d16565b6100e08a8a63ffffffff61011d16565b9063ffffffff61010216565b9063ffffffff61014416565b9695505050505050565b60008282018381101561011457600080fd5b90505b92915050565b60008261012c57506000610117565b8282028284828161013957fe5b041461011457600080fd5b600080821161015257600080fd5b600082848161015d57fe5b0494935050505056fea165627a7a72305820ae4db3e56d74b0a321ae166f7a46084a1b9ddb02f1b48cdf6eaf6ea4d1ced0560029",sourceMap:"971:533:55:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;971:533:55;;;;;;;",deployedSourceMap:"971:533:55:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;971:533:55;;;;;;;;;;;;;;;;;;;1028:474;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1028:474:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1258:7;1288:207;1368:13;1395:15;1424:23;1461:24;1288:66;:207::i;:::-;1281:214;1028:474;-1:-1:-1;;;;;1028:474:55:o;3626:791:30:-;3865:7;;4007:44;:23;4035:15;4007:44;:27;:44;:::i;:::-;3978:73;-1:-1:-1;4261:143:30;3978:73;4261:106;4313:53;:24;4342:23;4313:53;:28;:53;:::i;:::-;4261:34;:13;4279:15;4261:34;:17;:34;:::i;:::-;:51;:106;:51;:106;:::i;:::-;:123;:143;:123;:143;:::i;:::-;4254:150;3626:791;-1:-1:-1;;;;;;3626:791:30:o;1439:145:66:-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;;1576:1;-1:-1:-1;1439:145:66;;;;;:::o;231:421::-;289:7;529:6;525:45;;-1:-1:-1;558:1:66;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;782:296;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;;782:296;-1:-1:-1;;;;782:296:66:o",source:'/*\n    Copyright 2019 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\n\nimport { DataSourceLinearInterpolationLibrary } from "../../meta-oracles/lib/DataSourceLinearInterpolationLibrary.sol";\n\n/**\n * @title LinearInterpolationLibrary\n * @author Set Protocol\n *\n * Library used to determine linearly interpolated value for DataSource contracts when TimeSeriesFeed\n * is updated after interpolationThreshold has passed.\n */\ncontract DataSourceLinearInterpolationLibraryMock {\n\n    function interpolateDelayedPriceUpdateMock(\n        uint256 _currentPrice,\n        uint256 _updateInterval,\n        uint256 _timeFromExpectedUpdate,\n        uint256 _previousLoggedDataPoint\n    )\n        external\n        returns (uint256)\n    {\n        return DataSourceLinearInterpolationLibrary.interpolateDelayedPriceUpdate(\n            _currentPrice,\n            _updateInterval,\n            _timeFromExpectedUpdate,\n            _previousLoggedDataPoint\n        );\n    }\n}',sourcePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/mocks/oracles/DataSourceLinearInterpolationLibraryMock.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.16",updatedAt:"2020-05-04T02:38:52.236Z",devdoc:{author:"Set Protocol * Library used to determine linearly interpolated value for DataSource contracts when TimeSeriesFeed is updated after interpolationThreshold has passed.",methods:{},title:"LinearInterpolationLibrary"},userdoc:{methods:{}}};