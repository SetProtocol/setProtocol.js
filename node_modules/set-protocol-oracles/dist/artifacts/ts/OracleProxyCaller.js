"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.OracleProxyCaller={contractName:"OracleProxyCaller",abi:[{constant:true,inputs:[],name:"oracleAddress",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{inputs:[{name:"_oracleAddress",type:"address"}],payable:false,stateMutability:"nonpayable",type:"constructor"},{constant:true,inputs:[],name:"read",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"read","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"oracleAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_oracleAddress","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"devdoc":{"author":"Set Protocol * Mock contract used to make sure that the OracleProxy can\'t be called by unauthorized addresses on chain.","methods":{},"title":"OracleProxyCaller"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/mocks/OracleProxyCaller.sol":"OracleProxyCaller"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/interfaces/IOracle.sol":{"keccak256":"0xeb5a447a0b1ef47547ce12a91b72412880edb9690aa9bcd8746fc3a379f2fbe9","urls":["bzzr://261675b916b84f58bea71ec28c4f711291053174ddf47e860c26daaee506744a"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/mocks/OracleProxyCaller.sol":{"keccak256":"0xa57b62b763b9a338cb4d03815ea2e77417ff3aa6b7a5b339ccb27064cf05f8f4","urls":["bzzr://aede26bf0dbc857f968e09fa3d66e3ef722f0368ae45458bfdaf50a07d0d7f34"]}},"version":1}',bytecode:"0x608060405234801561001057600080fd5b50604051602080610306833981018060405261002f9190810190610067565b60008054600160a060020a031916600160a060020a03929092169190911790556100b5565b6000610060825161009e565b9392505050565b60006020828403121561007957600080fd5b60006100858484610054565b949350505050565b6000610098826100a9565b92915050565b60006100988261008d565b600160a060020a031690565b610242806100c46000396000f3fe608060405234801561001057600080fd5b5060043610610052577c0100000000000000000000000000000000000000000000000000000000600035046357de26a48114610057578063a89ae4ba14610075575b600080fd5b61005f61008a565b60405161006c91906101cd565b60405180910390f35b61007d61014c565b60405161006c91906101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561010f57600080fd5b505afa158015610123573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610147919081019061017b565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600061017482516101f4565b9392505050565b60006020828403121561018d57600080fd5b60006101998484610168565b949350505050565b6101aa816101f7565b82525050565b6101aa816101f4565b602081016101c782846101a1565b92915050565b602081016101c782846101b0565b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b60006101c78260006101c7826101db56fea265627a7a72305820ba97090c1988ddfe119f5f2b3501caa065381187670dc71162ca31658d533d836c6578706572696d656e74616cf50037",deployedBytecode:"0x608060405234801561001057600080fd5b5060043610610052577c0100000000000000000000000000000000000000000000000000000000600035046357de26a48114610057578063a89ae4ba14610075575b600080fd5b61005f61008a565b60405161006c91906101cd565b60405180910390f35b61007d61014c565b60405161006c91906101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561010f57600080fd5b505afa158015610123573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610147919081019061017b565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600061017482516101f4565b9392505050565b60006020828403121561018d57600080fd5b60006101998484610168565b949350505050565b6101aa816101f7565b82525050565b6101aa816101f4565b602081016101c782846101a1565b92915050565b602081016101c782846101b0565b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b60006101c78260006101c7826101db56fea265627a7a72305820ba97090c1988ddfe119f5f2b3501caa065381187670dc71162ca31658d533d836c6578706572696d656e74616cf50037",sourceMap:"898:820:50:-;;;1201:116;8:9:-1;5:2;;;30:1;27;20:12;5:2;1201:116:50;;;;;;;;;;;;;;;;;;;;;;1280:13;:30;;-1:-1:-1;;;;;;1280:30:50;-1:-1:-1;;;;;1280:30:50;;;;;;;;;;898:820;;5:154:-1;;99:55;146:6;140:13;99:55;;;90:64;84:75;-1:-1;;;84:75;166:295;;297:2;285:9;276:7;272:23;268:32;265:2;;;313:1;310;303:12;265:2;348:1;365:80;437:7;417:9;365:80;;;355:90;259:202;-1:-1;;;;259:202;468:105;;537:31;562:5;537:31;;;526:42;520:53;-1:-1;;520:53;580:121;;665:31;690:5;665:31;;708:128;-1:-1;;;;;777:54;;760:76;;898:820:50;;;;;;",deployedSourceMap:"898:820:50:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;898:820:50;;;;;;;;;;;;;;;;;;;;;;;;1564:152;;;:::i;:::-;;;;;;;;;;;;;;;;984:28;;;:::i;:::-;;;;;;;;1564:152;1627:7;1689:13;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1689:20:50;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1689:20:50;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1689:20:50;;;;;;;;;1682:27;;1564:152;:::o;984:28::-;;;;;;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;353:9;317:64;;;307:74;211:186;-1:-1;;;;211:186;404:158;503:53;550:5;503:53;;;498:3;491:66;485:77;;;569:120;652:31;677:5;652:31;;696:245;830:2;815:18;;844:87;819:9;904:6;844:87;;;801:140;;;;;948:213;1066:2;1051:18;;1080:71;1055:9;1124:6;1080:71;;1168:128;1248:42;1237:54;;1220:76;1303:79;1372:5;1355:27;1475:153;;1570:53;1617:5;1635:131;1730:31;1755:5;1730:31;",source:'/*\n    Copyright 2019 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { IOracle } from "../meta-oracles/interfaces/IOracle.sol";\n\n/**\n * @title OracleProxyCaller\n * @author Set Protocol\n *\n * Mock contract used to make sure that the OracleProxy can\'t be called by unauthorized addresses\n * on chain.\n */\ncontract OracleProxyCaller {\n\n    /* ============ State Variables ============ */\n    IOracle public oracleAddress;\n\n    /* ============ Constructor ============ */\n    /*\n     * Set address of oracle being proxied\n     *\n     * @param  _oracleAddress    The address of oracle being proxied\n     */\n    constructor(\n        IOracle _oracleAddress\n    )\n        public\n    {\n        oracleAddress = _oracleAddress;\n    }\n\n    /* ============ External ============ */\n\n    /*\n     * Reads value of medianizer and coerces return to uint256. Only authorized addresses are allowed\n     * to call read().\n     *\n     * @returns         Oracle\'s uint256 output\n     */\n    function read()\n        external\n        view\n        returns (uint256)\n    {\n        // Read value of oracle\n        return oracleAddress.read();\n    }\n}',sourcePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/mocks/OracleProxyCaller.sol",ast:{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/mocks/OracleProxyCaller.sol",exportedSymbols:{OracleProxyCaller:[5296]},id:5297,nodeType:"SourceUnit",nodes:[{id:5270,literals:["solidity","0.5",".7"],nodeType:"PragmaDirective",src:"597:22:50"},{id:5271,literals:["experimental","ABIEncoderV2"],nodeType:"PragmaDirective",src:"620:35:50"},{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/interfaces/IOracle.sol",file:"../meta-oracles/interfaces/IOracle.sol",id:5273,nodeType:"ImportDirective",scope:5297,sourceUnit:3052,src:"657:65:50",symbolAliases:[{foreign:5272,local:null}],unitAlias:""},{baseContracts:[],contractDependencies:[],contractKind:"contract",documentation:"@title OracleProxyCaller\n@author Set Protocol\n * Mock contract used to make sure that the OracleProxy can't be called by unauthorized addresses\non chain.",fullyImplemented:true,id:5296,linearizedBaseContracts:[5296],name:"OracleProxyCaller",nodeType:"ContractDefinition",nodes:[{constant:false,id:5275,name:"oracleAddress",nodeType:"VariableDeclaration",scope:5296,src:"984:28:50",stateVariable:true,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"},typeName:{contractScope:null,id:5274,name:"IOracle",nodeType:"UserDefinedTypeName",referencedDeclaration:3051,src:"984:7:50",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"}},value:null,visibility:"public"},{body:{id:5284,nodeType:"Block",src:"1270:47:50",statements:[{expression:{argumentTypes:null,id:5282,isConstant:false,isLValue:false,isPure:false,lValueRequested:false,leftHandSide:{argumentTypes:null,id:5280,name:"oracleAddress",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5275,src:"1280:13:50",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"}},nodeType:"Assignment",operator:"=",rightHandSide:{argumentTypes:null,id:5281,name:"_oracleAddress",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5277,src:"1296:14:50",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"}},src:"1280:30:50",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"}},id:5283,nodeType:"ExpressionStatement",src:"1280:30:50"}]},documentation:null,id:5285,implemented:true,kind:"constructor",modifiers:[],name:"",nodeType:"FunctionDefinition",parameters:{id:5278,nodeType:"ParameterList",parameters:[{constant:false,id:5277,name:"_oracleAddress",nodeType:"VariableDeclaration",scope:5285,src:"1222:22:50",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"},typeName:{contractScope:null,id:5276,name:"IOracle",nodeType:"UserDefinedTypeName",referencedDeclaration:3051,src:"1222:7:50",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"}},value:null,visibility:"internal"}],src:"1212:38:50"},returnParameters:{id:5279,nodeType:"ParameterList",parameters:[],src:"1270:0:50"},scope:5296,src:"1201:116:50",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:{id:5294,nodeType:"Block",src:"1640:76:50",statements:[{expression:{argumentTypes:null,arguments:[],expression:{argumentTypes:[],expression:{argumentTypes:null,id:5290,name:"oracleAddress",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5275,src:"1689:13:50",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"}},id:5291,isConstant:false,isLValue:false,isPure:false,lValueRequested:false,memberName:"read",nodeType:"MemberAccess",referencedDeclaration:3050,src:"1689:18:50",typeDescriptions:{typeIdentifier:"t_function_external_view$__$returns$_t_uint256_$",typeString:"function () view external returns (uint256)"}},id:5292,isConstant:false,isLValue:false,isPure:false,kind:"functionCall",lValueRequested:false,names:[],nodeType:"FunctionCall",src:"1689:20:50",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},functionReturnParameters:5289,id:5293,nodeType:"Return",src:"1682:27:50"}]},documentation:null,id:5295,implemented:true,kind:"function",modifiers:[],name:"read",nodeType:"FunctionDefinition",parameters:{id:5286,nodeType:"ParameterList",parameters:[],src:"1577:2:50"},returnParameters:{id:5289,nodeType:"ParameterList",parameters:[{constant:false,id:5288,name:"",nodeType:"VariableDeclaration",scope:5295,src:"1627:7:50",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:5287,name:"uint256",nodeType:"ElementaryTypeName",src:"1627:7:50",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"}],src:"1626:9:50"},scope:5296,src:"1564:152:50",stateMutability:"view",superFunction:null,visibility:"external"}],scope:5297,src:"898:820:50"}],src:"597:1121:50"},legacyAST:{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/mocks/OracleProxyCaller.sol",exportedSymbols:{OracleProxyCaller:[5296]},id:5297,nodeType:"SourceUnit",nodes:[{id:5270,literals:["solidity","0.5",".7"],nodeType:"PragmaDirective",src:"597:22:50"},{id:5271,literals:["experimental","ABIEncoderV2"],nodeType:"PragmaDirective",src:"620:35:50"},{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/interfaces/IOracle.sol",file:"../meta-oracles/interfaces/IOracle.sol",id:5273,nodeType:"ImportDirective",scope:5297,sourceUnit:3052,src:"657:65:50",symbolAliases:[{foreign:5272,local:null}],unitAlias:""},{baseContracts:[],contractDependencies:[],contractKind:"contract",documentation:"@title OracleProxyCaller\n@author Set Protocol\n * Mock contract used to make sure that the OracleProxy can't be called by unauthorized addresses\non chain.",fullyImplemented:true,id:5296,linearizedBaseContracts:[5296],name:"OracleProxyCaller",nodeType:"ContractDefinition",nodes:[{constant:false,id:5275,name:"oracleAddress",nodeType:"VariableDeclaration",scope:5296,src:"984:28:50",stateVariable:true,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"},typeName:{contractScope:null,id:5274,name:"IOracle",nodeType:"UserDefinedTypeName",referencedDeclaration:3051,src:"984:7:50",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"}},value:null,visibility:"public"},{body:{id:5284,nodeType:"Block",src:"1270:47:50",statements:[{expression:{argumentTypes:null,id:5282,isConstant:false,isLValue:false,isPure:false,lValueRequested:false,leftHandSide:{argumentTypes:null,id:5280,name:"oracleAddress",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5275,src:"1280:13:50",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"}},nodeType:"Assignment",operator:"=",rightHandSide:{argumentTypes:null,id:5281,name:"_oracleAddress",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5277,src:"1296:14:50",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"}},src:"1280:30:50",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"}},id:5283,nodeType:"ExpressionStatement",src:"1280:30:50"}]},documentation:null,id:5285,implemented:true,kind:"constructor",modifiers:[],name:"",nodeType:"FunctionDefinition",parameters:{id:5278,nodeType:"ParameterList",parameters:[{constant:false,id:5277,name:"_oracleAddress",nodeType:"VariableDeclaration",scope:5285,src:"1222:22:50",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"},typeName:{contractScope:null,id:5276,name:"IOracle",nodeType:"UserDefinedTypeName",referencedDeclaration:3051,src:"1222:7:50",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"}},value:null,visibility:"internal"}],src:"1212:38:50"},returnParameters:{id:5279,nodeType:"ParameterList",parameters:[],src:"1270:0:50"},scope:5296,src:"1201:116:50",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:{id:5294,nodeType:"Block",src:"1640:76:50",statements:[{expression:{argumentTypes:null,arguments:[],expression:{argumentTypes:[],expression:{argumentTypes:null,id:5290,name:"oracleAddress",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5275,src:"1689:13:50",typeDescriptions:{typeIdentifier:"t_contract$_IOracle_$3051",typeString:"contract IOracle"}},id:5291,isConstant:false,isLValue:false,isPure:false,lValueRequested:false,memberName:"read",nodeType:"MemberAccess",referencedDeclaration:3050,src:"1689:18:50",typeDescriptions:{typeIdentifier:"t_function_external_view$__$returns$_t_uint256_$",typeString:"function () view external returns (uint256)"}},id:5292,isConstant:false,isLValue:false,isPure:false,kind:"functionCall",lValueRequested:false,names:[],nodeType:"FunctionCall",src:"1689:20:50",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},functionReturnParameters:5289,id:5293,nodeType:"Return",src:"1682:27:50"}]},documentation:null,id:5295,implemented:true,kind:"function",modifiers:[],name:"read",nodeType:"FunctionDefinition",parameters:{id:5286,nodeType:"ParameterList",parameters:[],src:"1577:2:50"},returnParameters:{id:5289,nodeType:"ParameterList",parameters:[{constant:false,id:5288,name:"",nodeType:"VariableDeclaration",scope:5295,src:"1627:7:50",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:5287,name:"uint256",nodeType:"ElementaryTypeName",src:"1627:7:50",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"}],src:"1626:9:50"},scope:5296,src:"1564:152:50",stateMutability:"view",superFunction:null,visibility:"external"}],scope:5297,src:"898:820:50"}],src:"597:1121:50"},compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.16",updatedAt:"2020-04-01T03:46:40.054Z",devdoc:{author:"Set Protocol * Mock contract used to make sure that the OracleProxy can't be called by unauthorized addresses on chain.",methods:{},title:"OracleProxyCaller"},userdoc:{methods:{}}};