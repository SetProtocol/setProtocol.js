"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.PriceFeedMock={contractName:"PriceFeedMock",abi:[{constant:true,inputs:[],name:"priceFeed",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{inputs:[{name:"_priceFeed",type:"address"}],payable:false,stateMutability:"nonpayable",type:"constructor"},{constant:true,inputs:[],name:"read",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"read","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"priceFeed","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_priceFeed","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"devdoc":{"methods":{}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/mocks/PriceFeedMock.sol":"PriceFeedMock"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/external/DappHub/interfaces/IMedian.sol":{"keccak256":"0xc59207917823a290d4796f623a851bf5cbc7932dbb67b9ddb2c88299c483329c","urls":["bzzr://cd06f9584371c94a20ff4faffc94bedd3699b565d6658c988589f99e6c0e9e8b"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/mocks/PriceFeedMock.sol":{"keccak256":"0x86d51f7c5b5db4b1dd2492662d63ac4ad3afc818f0f3f7866cacc0bd574010dd","urls":["bzzr://213c368f80f0191f7a2a514b508d86c003a674647e8bf4f33e8907770cba342c"]}},"version":1}',bytecode:"0x608060405234801561001057600080fd5b506040516020806101eb8339810180604052602081101561003057600080fd5b505160008054600160a060020a03909216600160a060020a0319909216919091179055610189806100626000396000f3fe608060405234801561001057600080fd5b5060043610610052577c0100000000000000000000000000000000000000000000000000000000600035046357de26a48114610057578063741bef1a14610071575b600080fd5b61005f6100a2565b60408051918252519081900360200190f35b610079610141565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60008054604080517f57de26a4000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169182916357de26a4916004808301926020929190829003018186803b15801561010f57600080fd5b505afa158015610123573d6000803e3d6000fd5b505050506040513d602081101561013957600080fd5b505191505090565b60005473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a72305820413808fca082e24ad63076ece7ddbbd9a1dafda71c9c3f4743816f983abf25840029",deployedBytecode:"0x608060405234801561001057600080fd5b5060043610610052577c0100000000000000000000000000000000000000000000000000000000600035046357de26a48114610057578063741bef1a14610071575b600080fd5b61005f6100a2565b60408051918252519081900360200190f35b610079610141565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60008054604080517f57de26a4000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169182916357de26a4916004808301926020929190829003018186803b15801561010f57600080fd5b505afa158015610123573d6000803e3d6000fd5b505050506040513d602081101561013957600080fd5b505191505090565b60005473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a72305820413808fca082e24ad63076ece7ddbbd9a1dafda71c9c3f4743816f983abf25840029",sourceMap:"150:339:51:-;;;210:104;8:9:-1;5:2;;;30:1;27;20:12;5:2;210:104:51;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;210:104:51;285:9;:22;;-1:-1:-1;;;;;285:22:51;;;-1:-1:-1;;;;;;285:22:51;;;;;;;;;150:339;;;;;;",deployedSourceMap:"150:339:51:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;150:339:51;;;;;;;;;;;;;;;;;;;;;;;;320:167;;;:::i;:::-;;;;;;;;;;;;;;;;179:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;320:167;383:7;431:9;;466:13;;;;;;;;431:9;;;;;;;466:11;;:13;;;;;;;;;;;;;;431:9;466:13;;;5:2:-1;;;;30:1;27;20:12;5:2;466:13:51;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;466:13:51;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;466:13:51;;-1:-1:-1;;320:167:51;:::o;179:24::-;;;;;;:::o",source:'pragma solidity 0.5.7;\n\nimport { IMedian } from "../external/DappHub/interfaces/IMedian.sol";\n\n// Mock contract implementation of PriceFeed functions\ncontract PriceFeedMock {\n    address public priceFeed;\n\n    constructor(\n        address _priceFeed\n    )\n        public\n    {\n        priceFeed = _priceFeed;\n    }\n\n    function read()\n        external\n        view\n        returns (uint256)\n    {\n        IMedian source = IMedian(priceFeed);\n        return uint256(source.read());\n    }\n}\n',sourcePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/mocks/PriceFeedMock.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.16",updatedAt:"2020-05-04T02:38:52.232Z",devdoc:{methods:{}},userdoc:{methods:{}}};