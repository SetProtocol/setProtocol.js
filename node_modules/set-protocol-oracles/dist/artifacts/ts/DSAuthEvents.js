"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DSAuthEvents={contractName:"DSAuthEvents",abi:[{anonymous:false,inputs:[{indexed:true,name:"authority",type:"address"}],name:"LogSetAuthority",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"owner",type:"address"}],name:"LogSetOwner",type:"event"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"}],"devdoc":{"methods":{}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/external/DappHub/auth.sol":"DSAuthEvents"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/external/DappHub/auth.sol":{"keccak256":"0xa4572272098908e6e1dd27a74ee075da6ae253533a3a1d9dbf84a91c79a62727","urls":["bzzr://c751a479357c4c1a4e8d0187129ce8e3429e907d7f748b91d29e77762df4aee1"]}},"version":1}',bytecode:"0x6080604052348015600f57600080fd5b50603580601d6000396000f3fe6080604052600080fdfea165627a7a7230582017b497a58177dca3bf79800aa32991f64c11d6f1aefaec030536ec819209fc9f0029",deployedBytecode:"0x6080604052600080fdfea165627a7a7230582017b497a58177dca3bf79800aa32991f64c11d6f1aefaec030536ec819209fc9f0029",sourceMap:"794:131:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;794:131:1;;;;;;;",deployedSourceMap:"794:131:1:-;;;;;",source:"// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity 0.5.7;\n\ncontract DSAuthority {\n    function canCall(\n        address src, address dst, bytes4 sig\n    ) public view returns (bool);\n}\n\ncontract DSAuthEvents {\n    event LogSetAuthority (address indexed authority);\n    event LogSetOwner     (address indexed owner);\n}\n\ncontract DSAuth is DSAuthEvents {\n    DSAuthority  public  authority;\n    address      public  owner;\n\n    constructor() public {\n        owner = msg.sender;\n        emit LogSetOwner(msg.sender);\n    }\n\n    function setOwner(address owner_)\n        public\n        auth\n    {\n        owner = owner_;\n        emit LogSetOwner(owner);\n    }\n\n    function setAuthority(DSAuthority authority_)\n        public\n        auth\n    {\n        authority = authority_;\n        emit LogSetAuthority(address(authority));\n    }\n\n    modifier auth {\n        require(isAuthorized(msg.sender, msg.sig));\n        _;\n    }\n\n    function isAuthorized(address src, bytes4 sig) internal view returns (bool) {\n        if (src == address(this)) {\n            return true;\n        } else if (src == owner) {\n            return true;\n        } else if (authority == DSAuthority(0)) {\n            return false;\n        } else {\n            return authority.canCall(src, address(this), sig);\n        }\n    }\n}\n",sourcePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/external/DappHub/auth.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.16",updatedAt:"2020-05-04T02:38:52.131Z",devdoc:{methods:{}},userdoc:{methods:{}}};