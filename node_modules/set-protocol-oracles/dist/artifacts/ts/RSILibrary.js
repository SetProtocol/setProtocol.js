"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.RSILibrary={contractName:"RSILibrary",abi:[{constant:true,inputs:[],name:"HUNDRED",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"HUNDRED","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"devdoc":{"author":"Set Protocol * Library for calculating the Relative Strength Index  ","methods":{},"title":"RSILibrary"},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/lib/RSILibrary.sol":"RSILibrary"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/lib/RSILibrary.sol":{"keccak256":"0x0c69b2a7e9b67f92783bfea3849f57b38e1d19e9f5e7b3313d38be479f1e814d","urls":["bzzr://be35deb61a3bf547e17115fa97dc043afcefd98322bdfd8cfd1e1bde62f9824e"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]}},"version":1}',bytecode:"0x609d610024600b82828239805160001a607314601757fe5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610604f577c01000000000000000000000000000000000000000000000000000000006000350463f85fc0ab81146054575b600080fd5b605a606c565b60408051918252519081900360200190f35b60648156fea165627a7a723058204f96859f73a69907a491a6e9a10cf429d97d094e5fb3339c1645df2d2519f7e30029",deployedBytecode:"0x7300000000000000000000000000000000000000003014608060405260043610604f577c01000000000000000000000000000000000000000000000000000000006000350463f85fc0ab81146054575b600080fd5b605a606c565b60408051918252519081900360200190f35b60648156fea165627a7a723058204f96859f73a69907a491a6e9a10cf429d97d094e5fb3339c1645df2d2519f7e30029",sourceMap:"816:2116:36:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",deployedSourceMap:"816:2116:36:-;;;;;;;;;;;;;;;;;;;;;;;;925:37;;;:::i;:::-;;;;;;;;;;;;;;;;;959:3;925:37;:::o",source:'/*\n    Copyright 2019 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\n\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\n\n\n/**\n * @title RSILibrary\n * @author Set Protocol\n *\n * Library for calculating the Relative Strength Index\n * \n */\nlibrary RSILibrary{\n\n    using SafeMath for uint256;\n\n    /* ============ Constants ============ */\n    \n    uint256 public constant HUNDRED = 100;\n\n    /*\n     * Calculates the new relative strength index value using\n     * an array of prices.\n     *\n     * RSI = 100 âˆ’ 100 / \n     *       (1 + (Gain / Loss))\n     *\n     * Price Difference = Price(N) - Price(N-1) where N is number of days\n     * Gain = Sum(Positive Price Difference)\n     * Loss = -1 * Sum(Negative Price Difference)\n     *\n     *\n     * Our implementation is simplified to the following for efficiency\n     * RSI = (100 * SUM(Gain)) / (SUM(Loss) + SUM(Gain))\n     *\n     *\n     * @param  _dataArray               Array of prices used to calculate the RSI\n     * @returns                         The RSI value\n     */\n    function calculate(\n        uint256[] memory _dataArray\n    )\n        internal\n        pure\n        returns (uint256)\n    {   \n        uint256 positiveDataSum = 0;\n        uint256 negativeDataSum = 0;\n\n        // Check that data points must be greater than 1\n        require(\n            _dataArray.length > 1,\n            "RSILibrary.calculate: Length of data array must be greater than 1"\n        );\n\n        // Sum negative and positive price differences\n        for (uint256 i = 1; i < _dataArray.length; i++) {\n            uint256 currentPrice = _dataArray[i - 1];\n            uint256 previousPrice = _dataArray[i];\n            if (currentPrice > previousPrice) {\n                positiveDataSum = currentPrice.sub(previousPrice).add(positiveDataSum);\n            } else {\n                negativeDataSum = previousPrice.sub(currentPrice).add(negativeDataSum);\n            }\n        }\n\n        // Check that there must be a positive or negative price change\n        require(\n            negativeDataSum > 0 || positiveDataSum > 0,\n            "RSILibrary.calculate: Not valid RSI Value"\n        );\n        \n        // a = 100 * SUM(Gain)\n        uint256 a = HUNDRED.mul(positiveDataSum);\n        // b = SUM(Gain) + SUM(Loss) \n        uint256 b = positiveDataSum.add(negativeDataSum);\n\n        return a.div(b);\n    }\n}',sourcePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/lib/RSILibrary.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.16",updatedAt:"2020-05-04T02:38:52.211Z",devdoc:{author:"Set Protocol * Library for calculating the Relative Strength Index  ",methods:{},title:"RSILibrary"},userdoc:{methods:{}}};