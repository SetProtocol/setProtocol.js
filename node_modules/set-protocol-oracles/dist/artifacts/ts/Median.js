"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Median={contractName:"Median",abi:[{constant:true,inputs:[{name:"",type:"address"}],name:"orcl",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"owner_",type:"address"}],name:"setOwner",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"age",outputs:[{name:"",type:"uint48"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"wat",outputs:[{name:"",type:"bytes32"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"authority_",type:"address"}],name:"setAuthority",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"authority",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"min",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{anonymous:false,inputs:[{indexed:false,name:"val",type:"uint128"},{indexed:false,name:"age",type:"uint48"}],name:"LogPrice",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"authority",type:"address"}],name:"LogSetAuthority",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"owner",type:"address"}],name:"LogSetOwner",type:"event"},{constant:true,inputs:[],name:"read",outputs:[{name:"",type:"bytes32"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"peek",outputs:[{name:"",type:"bytes32"},{name:"",type:"bool"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"val_",type:"uint256[]"},{name:"age_",type:"uint256[]"},{name:"v",type:"uint8[]"},{name:"r",type:"bytes32[]"},{name:"s",type:"bytes32[]"}],name:"poke",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"a",type:"address"}],name:"lift",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"a",type:"address"}],name:"drop",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{name:"min_",type:"uint256"}],name:"setMin",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"orcl","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"owner_","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"age","outputs":[{"name":"","type":"uint48"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"a","type":"address"}],"name":"lift","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"min_","type":"uint256"}],"name":"setMin","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"wat","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"read","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"peek","outputs":[{"name":"","type":"bytes32"},{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"authority_","type":"address"}],"name":"setAuthority","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"val_","type":"uint256[]"},{"name":"age_","type":"uint256[]"},{"name":"v","type":"uint8[]"},{"name":"r","type":"bytes32[]"},{"name":"s","type":"bytes32[]"}],"name":"poke","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"a","type":"address"}],"name":"drop","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"authority","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"min","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"val","type":"uint128"},{"indexed":false,"name":"age","type":"uint48"}],"name":"LogPrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"}],"devdoc":{"methods":{}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/external/DappHub/median.sol":"Median"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/external/DappHub/auth.sol":{"keccak256":"0xa4572272098908e6e1dd27a74ee075da6ae253533a3a1d9dbf84a91c79a62727","urls":["bzzr://c751a479357c4c1a4e8d0187129ce8e3429e907d7f748b91d29e77762df4aee1"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/external/DappHub/math.sol":{"keccak256":"0x6f5d378a268fc55de30d9c455f5207c11187c566935185a8e3176a0f4dfe210d","urls":["bzzr://0a91fc9d15701874186392f0a239324476c420360eafe823d9a939a28a69bbfb"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/external/DappHub/median.sol":{"keccak256":"0x677a67f6802450c027528b1781976fc6d923a519318a8b0c5905685dd13ef8df","urls":["bzzr://c4d83697d2dec4e937f5e93f75424ceabde9f030784d3212f17b6b19cedc8d0d"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/external/DappHub/note.sol":{"keccak256":"0x094612046e37156ae35aab8d3f3b142b1adedff03896135c81dac2d7a6bb2186","urls":["bzzr://f0fbfada60d6ab1c6cf73fabb6c0c9bce2cd04a1e89b4c93fdaa0df1dcfc5508"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/external/DappHub/thing.sol":{"keccak256":"0x713284b03a9778689299a2d5d2cfa03b161500e540fa9d1a015e425fa3962a0f","urls":["bzzr://2dba919f623dcb6e6527ca32143ba2d31dc0e9af7985bd381cdc64bf9a8f0f58"]}},"version":1}',bytecode:"0x608060408190527f455448555344000000000000000000000000000000000000000000000000000060035560018054600160a060020a03191633908117909155907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a2610db1806100756000396000f3fe608060405234801561001057600080fd5b5060043610610107576000357c01000000000000000000000000000000000000000000000000000000009004806359e02dd7116100a95780638da5cb5b116100835780638da5cb5b146103f557806391f2700a14610419578063bf7e214f1461043f578063f88979451461044757610107565b806359e02dd7146101f65780637a9e5e4b1461021757806389bbb8b21461023d57610107565b80633c278bd5116100e55780633c278bd51461019157806345dc3dd8146101b75780634ca29923146101d457806357de26a4146101ee57610107565b8063020b2e321461010c57806313af403514610146578063262a9dff1461016e575b600080fd5b6101326004803603602081101561012257600080fd5b5035600160a060020a031661044f565b604080519115158252519081900360200190f35b61016c6004803603602081101561015c57600080fd5b5035600160a060020a0316610464565b005b6101766104e0565b6040805165ffffffffffff9092168252519081900360200190f35b61016c600480360360208110156101a757600080fd5b5035600160a060020a0316610502565b61016c600480360360208110156101cd57600080fd5b50356105a3565b6101dc610609565b60408051918252519081900360200190f35b6101dc61060f565b6101fe610694565b6040805192835290151560208301528051918290030190f35b61016c6004803603602081101561022d57600080fd5b5035600160a060020a03166106b0565b61016c600480360360a081101561025357600080fd5b81019060208101813564010000000081111561026e57600080fd5b82018360208201111561028057600080fd5b803590602001918460208302840111640100000000831117156102a257600080fd5b9193909290916020810190356401000000008111156102c057600080fd5b8201836020820111156102d257600080fd5b803590602001918460208302840111640100000000831117156102f457600080fd5b91939092909160208101903564010000000081111561031257600080fd5b82018360208201111561032457600080fd5b8035906020019184602083028401116401000000008311171561034657600080fd5b91939092909160208101903564010000000081111561036457600080fd5b82018360208201111561037657600080fd5b8035906020019184602083028401116401000000008311171561039857600080fd5b9193909290916020810190356401000000008111156103b657600080fd5b8201836020820111156103c857600080fd5b803590602001918460208302840111640100000000831117156103ea57600080fd5b509092509050610728565b6103fd610b19565b60408051600160a060020a039092168252519081900360200190f35b61016c6004803603602081101561042f57600080fd5b5035600160a060020a0316610b28565b6103fd610b68565b6101dc610b77565b60056020526000908152604090205460ff1681565b61047a33600035600160e060020a031916610b7d565b61048357600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290556040519116907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b600254700100000000000000000000000000000000900465ffffffffffff1681565b61051833600035600160e060020a031916610b7d565b61052157600080fd5b600160a060020a03811661057f576040805160e560020a62461bcd02815260206004820152600b60248201527f4e6f206f7261636c652030000000000000000000000000000000000000000000604482015290519081900360640190fd5b600160a060020a03166000908152600560205260409020805460ff19166001179055565b6105b933600035600160e060020a031916610b7d565b6105c257600080fd5b600081116106045760405160e560020a62461bcd028152600401808060200182810382526021815260200180610d656021913960400191505060405180910390fd5b600455565b60035481565b6002546000906fffffffffffffffffffffffffffffffff1661067b576040805160e560020a62461bcd02815260206004820152601260248201527f496e76616c696420707269636520666565640000000000000000000000000000604482015290519081900360640190fd5b506002546fffffffffffffffffffffffffffffffff1690565b6002546fffffffffffffffffffffffffffffffff168015159091565b6106c633600035600160e060020a031916610b7d565b6106cf57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116919091178083556040519116917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b6004548990811015610784576040805160e560020a62461bcd02815260206004820152601a60248201527f4e6f7420656e6f756768207369676e6564206d65737361676573000000000000604482015290519081900360640190fd5b600281066107dc576040805160e560020a62461bcd02815260206004820152601b60248201527f4e656564206f6464206e756d626572206f66206d657373616765730000000000604482015290519081900360640190fd5b606081604051908082528060200260200182016040528015610808578160200160208202803883390190505b50905060005b82811015610a3e5760006108858e8e8481811061082757fe5b905060200201358d8d8581811061083a57fe5b905060200201358c8c8681811061084d57fe5b9050602002013560ff168b8b8781811061086357fe5b905060200201358a8a8881811061087657fe5b90506020020135600354610c7f565b600160a060020a03811660009081526005602052604090205490915060ff166108f8576040805160e560020a62461bcd02815260206004820152601b60248201527f5369676e617475726520627920696e76616c6964206f7261636c650000000000604482015290519081900360640190fd5b600254700100000000000000000000000000000000900465ffffffffffff168c8c8481811061092357fe5b905060200201351161097f576040805160e560020a62461bcd02815260206004820152600d60248201527f5374616c65206d65737361676500000000000000000000000000000000000000604482015290519081900360640190fd5b60005b82811015610a0f5781600160a060020a03168482815181106109a057fe5b6020026020010151600160a060020a03161415610a07576040805160e560020a62461bcd02815260206004820152601560248201527f4f7261636c6520616c7265616479207369676e65640000000000000000000000604482015290519081900360640190fd5b600101610982565b5080838381518110610a1d57fe5b600160a060020a03909216602092830291909101909101525060010161080e565b508b8b6002600019850104818110610a5257fe5b600280546fffffffffffffffffffffffffffffffff1916602092830294909401356fffffffffffffffffffffffffffffffff9081169490941775ffffffffffff0000000000000000000000000000000019167001000000000000000000000000000000004265ffffffffffff908116820292909217928390556040805196841687529204169184019190915280517f1475aec59db3ec79e05b6fc9fdd05dd3c5e5cafbc0d0395858d625544f57e837938190039091019150a1505050505050505050505050565b600154600160a060020a031681565b610b3e33600035600160e060020a031916610b7d565b610b4757600080fd5b600160a060020a03166000908152600560205260409020805460ff19169055565b600054600160a060020a031681565b60045481565b6000600160a060020a038316301415610b9857506001610c79565b600154600160a060020a0384811691161415610bb657506001610c79565b600054600160a060020a0316610bce57506000610c79565b600054604080517fb7009613000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152306024830152600160e060020a0319861660448301529151919092169163b7009613916064808301926020929190829003018186803b158015610c4a57600080fd5b505afa158015610c5e573d6000803e3d6000fd5b505050506040513d6020811015610c7457600080fd5b505190505b92915050565b6040805160208082018990528183018890526060808301859052835180840390910181526080830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a084015260bc808401919091528351808403909101815260dc830180855281519183019190912060009182905260fc84018086525260ff881661011c84015261013c830187905261015c8301869052925160019261017c8082019392601f1981019281900390910190855afa158015610d4e573d6000803e3d6000fd5b5050604051601f1901519897505050505050505056fe4d696e696d756d2076616c6964206f7261636c65732063616e6e6f742062652030a165627a7a7230582043ca711b1ce57bc290a572f96fc8324739dfa34bd8c7dabbbc949a0a71c18bbb0029",deployedBytecode:"0x608060405234801561001057600080fd5b5060043610610107576000357c01000000000000000000000000000000000000000000000000000000009004806359e02dd7116100a95780638da5cb5b116100835780638da5cb5b146103f557806391f2700a14610419578063bf7e214f1461043f578063f88979451461044757610107565b806359e02dd7146101f65780637a9e5e4b1461021757806389bbb8b21461023d57610107565b80633c278bd5116100e55780633c278bd51461019157806345dc3dd8146101b75780634ca29923146101d457806357de26a4146101ee57610107565b8063020b2e321461010c57806313af403514610146578063262a9dff1461016e575b600080fd5b6101326004803603602081101561012257600080fd5b5035600160a060020a031661044f565b604080519115158252519081900360200190f35b61016c6004803603602081101561015c57600080fd5b5035600160a060020a0316610464565b005b6101766104e0565b6040805165ffffffffffff9092168252519081900360200190f35b61016c600480360360208110156101a757600080fd5b5035600160a060020a0316610502565b61016c600480360360208110156101cd57600080fd5b50356105a3565b6101dc610609565b60408051918252519081900360200190f35b6101dc61060f565b6101fe610694565b6040805192835290151560208301528051918290030190f35b61016c6004803603602081101561022d57600080fd5b5035600160a060020a03166106b0565b61016c600480360360a081101561025357600080fd5b81019060208101813564010000000081111561026e57600080fd5b82018360208201111561028057600080fd5b803590602001918460208302840111640100000000831117156102a257600080fd5b9193909290916020810190356401000000008111156102c057600080fd5b8201836020820111156102d257600080fd5b803590602001918460208302840111640100000000831117156102f457600080fd5b91939092909160208101903564010000000081111561031257600080fd5b82018360208201111561032457600080fd5b8035906020019184602083028401116401000000008311171561034657600080fd5b91939092909160208101903564010000000081111561036457600080fd5b82018360208201111561037657600080fd5b8035906020019184602083028401116401000000008311171561039857600080fd5b9193909290916020810190356401000000008111156103b657600080fd5b8201836020820111156103c857600080fd5b803590602001918460208302840111640100000000831117156103ea57600080fd5b509092509050610728565b6103fd610b19565b60408051600160a060020a039092168252519081900360200190f35b61016c6004803603602081101561042f57600080fd5b5035600160a060020a0316610b28565b6103fd610b68565b6101dc610b77565b60056020526000908152604090205460ff1681565b61047a33600035600160e060020a031916610b7d565b61048357600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290556040519116907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b600254700100000000000000000000000000000000900465ffffffffffff1681565b61051833600035600160e060020a031916610b7d565b61052157600080fd5b600160a060020a03811661057f576040805160e560020a62461bcd02815260206004820152600b60248201527f4e6f206f7261636c652030000000000000000000000000000000000000000000604482015290519081900360640190fd5b600160a060020a03166000908152600560205260409020805460ff19166001179055565b6105b933600035600160e060020a031916610b7d565b6105c257600080fd5b600081116106045760405160e560020a62461bcd028152600401808060200182810382526021815260200180610d656021913960400191505060405180910390fd5b600455565b60035481565b6002546000906fffffffffffffffffffffffffffffffff1661067b576040805160e560020a62461bcd02815260206004820152601260248201527f496e76616c696420707269636520666565640000000000000000000000000000604482015290519081900360640190fd5b506002546fffffffffffffffffffffffffffffffff1690565b6002546fffffffffffffffffffffffffffffffff168015159091565b6106c633600035600160e060020a031916610b7d565b6106cf57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116919091178083556040519116917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b6004548990811015610784576040805160e560020a62461bcd02815260206004820152601a60248201527f4e6f7420656e6f756768207369676e6564206d65737361676573000000000000604482015290519081900360640190fd5b600281066107dc576040805160e560020a62461bcd02815260206004820152601b60248201527f4e656564206f6464206e756d626572206f66206d657373616765730000000000604482015290519081900360640190fd5b606081604051908082528060200260200182016040528015610808578160200160208202803883390190505b50905060005b82811015610a3e5760006108858e8e8481811061082757fe5b905060200201358d8d8581811061083a57fe5b905060200201358c8c8681811061084d57fe5b9050602002013560ff168b8b8781811061086357fe5b905060200201358a8a8881811061087657fe5b90506020020135600354610c7f565b600160a060020a03811660009081526005602052604090205490915060ff166108f8576040805160e560020a62461bcd02815260206004820152601b60248201527f5369676e617475726520627920696e76616c6964206f7261636c650000000000604482015290519081900360640190fd5b600254700100000000000000000000000000000000900465ffffffffffff168c8c8481811061092357fe5b905060200201351161097f576040805160e560020a62461bcd02815260206004820152600d60248201527f5374616c65206d65737361676500000000000000000000000000000000000000604482015290519081900360640190fd5b60005b82811015610a0f5781600160a060020a03168482815181106109a057fe5b6020026020010151600160a060020a03161415610a07576040805160e560020a62461bcd02815260206004820152601560248201527f4f7261636c6520616c7265616479207369676e65640000000000000000000000604482015290519081900360640190fd5b600101610982565b5080838381518110610a1d57fe5b600160a060020a03909216602092830291909101909101525060010161080e565b508b8b6002600019850104818110610a5257fe5b600280546fffffffffffffffffffffffffffffffff1916602092830294909401356fffffffffffffffffffffffffffffffff9081169490941775ffffffffffff0000000000000000000000000000000019167001000000000000000000000000000000004265ffffffffffff908116820292909217928390556040805196841687529204169184019190915280517f1475aec59db3ec79e05b6fc9fdd05dd3c5e5cafbc0d0395858d625544f57e837938190039091019150a1505050505050505050505050565b600154600160a060020a031681565b610b3e33600035600160e060020a031916610b7d565b610b4757600080fd5b600160a060020a03166000908152600560205260409020805460ff19169055565b600054600160a060020a031681565b60045481565b6000600160a060020a038316301415610b9857506001610c79565b600154600160a060020a0384811691161415610bb657506001610c79565b600054600160a060020a0316610bce57506000610c79565b600054604080517fb7009613000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152306024830152600160e060020a0319861660448301529151919092169163b7009613916064808301926020929190829003018186803b158015610c4a57600080fd5b505afa158015610c5e573d6000803e3d6000fd5b505050506040513d6020811015610c7457600080fd5b505190505b92915050565b6040805160208082018990528183018890526060808301859052835180840390910181526080830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a084015260bc808401919091528351808403909101815260dc830180855281519183019190912060009182905260fc84018086525260ff881661011c84015261013c830187905261015c8301869052925160019261017c8082019392601f1981019281900390910190855afa158015610d4e573d6000803e3d6000fd5b5050604051601f1901519897505050505050505056fe4d696e696d756d2076616c6964206f7261636c65732063616e6e6f742062652030a165627a7a7230582043ca711b1ce57bc290a572f96fc8324739dfa34bd8c7dabbbc949a0a71c18bbb0029",sourceMap:"763:2778:5:-;;;;;845:29;;;1065:5:1;:18;;-1:-1:-1;;;;;;1065:18:1;1073:10;1065:18;;;;;;1073:10;1098:23;;1065:5;;1098:23;763:2778:5;;;;;;",deployedSourceMap:"763:2778:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;763:2778:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;970:37;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;970:37:5;-1:-1:-1;;;;;970:37:5;;:::i;:::-;;;;;;;;;;;;;;;;;;1134:130:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1134:130:1;-1:-1:-1;;;;;1134:130:1;;:::i;:::-;;820:18:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3205:119;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3205:119:5;-1:-1:-1;;;;;3205:119:5;;:::i;3405:133::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3405:133:5;;:::i;845:29::-;;;:::i;:::-;;;;;;;;;;;;;;;;1060:139;;;:::i;1205:107::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1270:167:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1270:167:1;-1:-1:-1;;;;;1270:167:1;;:::i;1634:1565:5:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1634:1565:5;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1634:1565:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1634:1565:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1634:1565:5;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1634:1565:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1634:1565:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1634:1565:5;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1634:1565:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1634:1565:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1634:1565:5;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1634:1565:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1634:1565:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1634:1565:5;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1634:1565:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1634:1565:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;1634:1565:5;;-1:-1:-1;1634:1565:5;-1:-1:-1;1634:1565:5;:::i;1001:26:1:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1001:26:1;;;;;;;;;;;;;;3330:69:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3330:69:5;-1:-1:-1;;;;;3330:69:5;;:::i;965:30:1:-;;;:::i;880:18:5:-;;;:::i;970:37::-;;;;;;;;;;;;;;;:::o;1134:130:1:-;1475:33;1488:10;1500:7;;-1:-1:-1;;;;;;1500:7:1;1475:12;:33::i;:::-;1467:42;;;;;;1210:5;:14;;-1:-1:-1;;1210:14:1;-1:-1:-1;;;;;1210:14:1;;;;;;;;;;;1239:18;;1251:5;;;1239:18;;-1:-1:-1;;1239:18:1;1134:130;:::o;820:18:5:-;;;;;;;;;:::o;3205:119::-;1475:33:1;1488:10;1500:7;;-1:-1:-1;;;;;;1500:7:1;1475:12;:33::i;:::-;1467:42;;;;;;-1:-1:-1;;;;;3260:17:5;;3252:41;;;;;-1:-1:-1;;;;;3252:41:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3303:7:5;;;;;:4;:7;;;;;:14;;-1:-1:-1;;3303:14:5;3313:4;3303:14;;;3205:119::o;3405:133::-;1475:33:1;1488:10;1500:7;;-1:-1:-1;;;;;;1500:7:1;1475:12;:33::i;:::-;1467:42;;;;;;3472:1:5;3465:4;:8;3457:54;;;;-1:-1:-1;;;;;3457:54:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3521:3;:10;3405:133::o;845:29::-;;;;:::o;1060:139::-;1124:3;;1097:7;;1124:3;;1116:38;;;;;-1:-1:-1;;;;;1116:38:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1187:3:5;;;;1060:139;:::o;1205:107::-;1290:3;;;;1297:7;;;1205:107;;:::o;1270:167:1:-;1475:33;1488:10;1500:7;;-1:-1:-1;;;;;;1500:7:1;1475:12;:33::i;:::-;1467:42;;;;;;1358:9;:22;;-1:-1:-1;;1358:22:1;-1:-1:-1;;;;;1358:22:1;;;;;;;;;;1395:35;;1419:9;;;1395:35;;;1270:167;:::o;1634:1565:5:-;1848:3;;1814:4;;1843:8;;;1835:47;;;;;-1:-1:-1;;;;;1835:47:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1904:1;1900;:5;1892:50;;;;;-1:-1:-1;;;;;1892:50:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:24;2068:1;2054:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2054:16:5;-1:-1:-1;2027:43:5;-1:-1:-1;2086:6:5;2081:862;2102:1;2098;:5;2081:862;;;2195:14;2212:48;2220:4;;2225:1;2220:7;;;;;;;;;;;;;2229:4;;2234:1;2229:7;;;;;;;;;;;;;2238:1;;2240;2238:4;;;;;;;;;;;;;;;2244:1;;2246;2244:4;;;;;;;;;;;;;2250:1;;2252;2250:4;;;;;;;;;;;;;2256:3;;2212:7;:48::i;:::-;-1:-1:-1;;;;;2328:12:5;;;;;;:4;:12;;;;;;2195:65;;-1:-1:-1;2328:12:5;;2320:52;;;;;-1:-1:-1;;;;;2320:52:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2476:3;;;;;;;2458:4;;2463:1;2458:7;;;;;;;;;;;;;:22;2450:48;;;;;-1:-1:-1;;;;;2450:48:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2789:6;2784:116;2805:1;2801;:5;2784:116;;;2853:6;-1:-1:-1;;;;;2839:20:5;:7;2847:1;2839:10;;;;;;;;;;;;;;-1:-1:-1;;;;;2839:20:5;;;2831:54;;;;;-1:-1:-1;;;;;2831:54:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2808:3;;2784:116;;;;2926:6;2913:7;2921:1;2913:10;;;;;;;;-1:-1:-1;;;;;2913:19:5;;;:10;;;;;;;;;;;:19;-1:-1:-1;2105:3:5;;2081:862;;;-1:-1:-1;3087:4:5;;3102:1;-1:-1:-1;;3093:5:5;;3092:11;3087:17;;;;;;;3073:3;:32;;-1:-1:-1;;3073:32:5;3087:17;;;;;;;;;3073:32;;;;;;;;-1:-1:-1;;3115:29:5;;3128:15;3115:29;;;;;;;;;;;;;;3160:18;;;3169:3;;;3160:18;;3174:3;;;3160:18;;;;;;;;;;;;;;;;;;-1:-1:-1;3160:18:5;1634:1565;;;;;;;;;;;;:::o;1001:26:1:-;;;-1:-1:-1;;;;;1001:26:1;;:::o;3330:69:5:-;1475:33:1;1488:10;1500:7;;-1:-1:-1;;;;;;1500:7:1;1475:12;:33::i;:::-;1467:42;;;;;;-1:-1:-1;;;;;3377:7:5;3387:5;3377:7;;;:4;:7;;;;;:15;;-1:-1:-1;;3377:15:5;;;3330:69::o;965:30:1:-;;;-1:-1:-1;;;;;965:30:1;;:::o;880:18:5:-;;;;:::o;1533:370:1:-;1603:4;-1:-1:-1;;;;;1623:20:1;;1638:4;1623:20;1619:278;;;-1:-1:-1;1666:4:1;1659:11;;1619:278;1698:5;;-1:-1:-1;;;;;1691:12:1;;;1698:5;;1691:12;1687:210;;;-1:-1:-1;1726:4:1;1719:11;;1687:210;1776:1;1751:9;-1:-1:-1;;;;;1751:9:1;1747:150;;-1:-1:-1;1801:5:1;1794:12;;1747:150;1844:9;;:42;;;;;;-1:-1:-1;;;;;1844:42:1;;;;;;;1875:4;1844:42;;;;-1:-1:-1;;;;;;1844:42:1;;;;;;;;:9;;;;;:17;;:42;;;;;;;;;;;;;;:9;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;1844:42:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1844:42:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1844:42:1;;-1:-1:-1;1747:150:1;1533:370;;;;:::o;1318:310:5:-;1553:34;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1553:34:5;;;;;1543:45;;;;;;1490:99;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1490:99:5;;;;;;1480:110;;;;;;;;;1431:7;1457:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1553:34;-1:-1:-1;;1457:164:5;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;1457:164:5;;-1:-1:-1;;1457:164:5;;;1318:310;-1:-1:-1;;;;;;;;1318:310:5:o",source:'// median.sol - Medianizer v2\n\n// Copyright (C) 2017, 2018  DappHub, LLC\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program. If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity 0.5.7;\n\nimport "./thing.sol";\n\ncontract Median is DSAuth {\n\n    uint128        val;\n    uint48  public age;\n\n    bytes32 public wat = "ETHUSD";\n    uint256 public min; // minimum valid feeds\n\n    // Authorized oracles, set by an auth\n    mapping (address => bool) public orcl;\n\n    event LogPrice(uint128 val, uint48 age);\n\n    function read() public view returns (bytes32) {\n        require(val > 0, "Invalid price feed");\n        return bytes32(uint256(val));\n    }\n\n    function peek() public view returns (bytes32,bool) {\n        return (bytes32(uint256(val)), val > 0);\n    }\n\n    function recover(uint256 val_, uint256 age_, uint8 v, bytes32 r, bytes32 s, bytes32 wat_) internal pure returns (address) {\n        return ecrecover(\n            keccak256(abi.encodePacked("\\x19Ethereum Signed Message:\\n32", keccak256(abi.encodePacked(val_, age_, wat_)))),\n            v, r, s\n        );\n    }\n\n    function poke(\n        uint256[] calldata val_, uint256[] calldata age_,\n        uint8[] calldata v, bytes32[] calldata r, bytes32[] calldata s) external\n    {\n        uint256 l = val_.length;\n        require(l >= min, "Not enough signed messages");\n        require(l % 2 != 0, "Need odd number of messages");\n\n        // Array to store signer addresses, to check for uniqueness later\n        address[] memory signers = new address[](l);\n\n        for (uint i = 0; i < l; i++) {\n            // Validate the values were signed by an authorized oracle\n            address signer = recover(val_[i], age_[i], v[i], r[i], s[i], wat);\n            // Check that signer is an oracle\n            require(orcl[signer], "Signature by invalid oracle");\n\n            // Price feed age greater than last medianizer age\n            require(age_[i] > uint256(age), "Stale message");\n\n            // Check for ordered values (TODO: better out of bounds check?)\n            if ((i + 1) < l) {\n                // require(val_[i] <= val_[i + 1], "Messages not in order");\n            }\n\n            // Check for uniqueness (TODO: is this the best we can do?)\n            for (uint j = 0; j < i; j++) {\n                require(signers[j] != signer, "Oracle already signed");\n            }\n            signers[i] = signer;\n        }\n\n        // Write the value and timestamp to storage\n        // require(med_ == val_[(l - 1) / 2], "Sanity check fail");\n        val = uint128(val_[(l - 1) / 2]);\n        age = uint48(block.timestamp);\n\n        emit LogPrice(val, age); // some event\n    }\n\n    function lift(address a) public auth {\n        require(a != address(0x0), "No oracle 0");\n        orcl[a] = true;\n    }\n\n    function drop(address a) public auth {\n        orcl[a] = false;\n    }\n\n    function setMin(uint256 min_) public auth {\n        require(min_ > 0, "Minimum valid oracles cannot be 0");\n        min = min_;\n    }\n\n}\n',sourcePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/external/DappHub/median.sol",compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.16",updatedAt:"2020-05-04T02:38:52.143Z",devdoc:{methods:{}},userdoc:{methods:{}}};