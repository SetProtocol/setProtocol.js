"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MovingAverageOracleV1Proxy={contractName:"MovingAverageOracleV1Proxy",abi:[{constant:true,inputs:[],name:"metaOracleInstance",outputs:[{name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{inputs:[{name:"_metaOracleInstance",type:"address"}],payable:false,stateMutability:"nonpayable",type:"constructor"},{constant:true,inputs:[{name:"_dataDays",type:"uint256"}],name:"read",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"}],metadata:'{"compiler":{"version":"0.5.7+commit.6da8b019"},"language":"Solidity","output":{"abi":[{"constant":true,"inputs":[],"name":"metaOracleInstance","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_dataDays","type":"uint256"}],"name":"read","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_metaOracleInstance","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"devdoc":{"author":"Set Protocol * This contract converts result from IMetaOracle contracts read calls into uint256 instead of passing bytes. This is done in order to use the data stored in the HistoricalPriceFeed.","methods":{"read(uint256)":{"return":"Current price of asset in uint256"}},"title":"MovingAverageOracleV1Proxy"},"userdoc":{"methods":{"read(uint256)":{"notice":"Returns the queried data from a meta oracle."}}}},"settings":{"compilationTarget":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/proxies/MovingAverageOracleV1Proxy.sol":"MovingAverageOracleV1Proxy"},"evmVersion":"byzantium","libraries":{},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/interfaces/IMetaOracle.sol":{"keccak256":"0x414a0c84695d7b21c4f4338d56f0b0f5dab1fd3b660e5c413cfbc981a974b1d5","urls":["bzzr://df33bc6825e0cf9a7f8f5576875184815f56bd2cb09720babbf61cfca3b7beac"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/interfaces/IMetaOracleV2.sol":{"keccak256":"0xfc3fa4a4459b67f9aa17e717efb2a90825c8fef363ee922314556b4e1fafe053","urls":["bzzr://c866ec6d9fb5e83fee3643e895fa694fb2a0f62ca0c531d1f6a1c5d72b082696"]},"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/proxies/MovingAverageOracleV1Proxy.sol":{"keccak256":"0x665c2487d4a365aa2342990c3781d22e7dfbac9bc4ca58dccb48572669c9395f","urls":["bzzr://802e4c7e5b864af67fb10d6e8394f09011292e8aff92ce1cc84cceeb67449b36"]},"openzeppelin-solidity/contracts/math/SafeMath.sol":{"keccak256":"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80","urls":["bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9"]}},"version":1}',bytecode:"0x608060405234801561001057600080fd5b50604051602080610320833981018060405261002f9190810190610067565b60008054600160a060020a031916600160a060020a03929092169190911790556100b5565b6000610060825161009e565b9392505050565b60006020828403121561007957600080fd5b60006100858484610054565b949350505050565b6000610098826100a9565b92915050565b60006100988261008d565b600160a060020a031690565b61025c806100c46000396000f3fe608060405234801561001057600080fd5b5060043610610052577c01000000000000000000000000000000000000000000000000000000006000350463a96fa8518114610057578063ed2e5a9714610075575b600080fd5b61005f610095565b60405161006c91906101d9565b60405180910390f35b6100886100833660046101a3565b6100b1565b60405161006c91906101e7565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600080546040517fed2e5a9700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063ed2e5a97906101089085906004016101e7565b60206040518083038186803b15801561012057600080fd5b505afa158015610134573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610158919081019061017d565b92915050565b600061016a825161020e565b9392505050565b600061016a823561020e565b60006020828403121561018f57600080fd5b600061019b848461015e565b949350505050565b6000602082840312156101b557600080fd5b600061019b8484610171565b6101ca81610211565b82525050565b6101ca8161020e565b6020810161015882846101c1565b6020810161015882846101d0565b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b6000610158826000610158826101f556fea265627a7a723058209db3e657e10076adbd1ad115b25e49fcfd7922c30c2cf4826b4a82f2c51dea676c6578706572696d656e74616cf50037",deployedBytecode:"0x608060405234801561001057600080fd5b5060043610610052577c01000000000000000000000000000000000000000000000000000000006000350463a96fa8518114610057578063ed2e5a9714610075575b600080fd5b61005f610095565b60405161006c91906101d9565b60405180910390f35b6100886100833660046101a3565b6100b1565b60405161006c91906101e7565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600080546040517fed2e5a9700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063ed2e5a97906101089085906004016101e7565b60206040518083038186803b15801561012057600080fd5b505afa158015610134573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610158919081019061017d565b92915050565b600061016a825161020e565b9392505050565b600061016a823561020e565b60006020828403121561018f57600080fd5b600061019b848461015e565b949350505050565b6000602082840312156101b557600080fd5b600061019b8484610171565b6101ca81610211565b82525050565b6101ca8161020e565b6020810161015882846101c1565b6020810161015882846101d0565b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b6000610158826000610158826101f556fea265627a7a723058209db3e657e10076adbd1ad115b25e49fcfd7922c30c2cf4826b4a82f2c51dea676c6578706572696d656e74616cf50037",sourceMap:"1121:836:46:-;;;1469:135;8:9:-1;5:2;;;30:1;27;20:12;5:2;1469:135:46;;;;;;;;;;;;;;;;;;;;;;1557:18;:40;;-1:-1:-1;;;;;;1557:40:46;-1:-1:-1;;;;;1557:40:46;;;;;;;;;;1121:836;;5:162:-1;;103:59;154:6;148:13;103:59;;;94:68;88:79;-1:-1;;;88:79;174:303;;309:2;297:9;288:7;284:23;280:32;277:2;;;325:1;322;315:12;277:2;360:1;377:84;453:7;433:9;377:84;;;367:94;271:206;-1:-1;;;;271:206;484:105;;553:31;578:5;553:31;;;542:42;536:53;-1:-1;;536:53;596:125;;685:31;710:5;685:31;;728:128;-1:-1;;;;;797:54;;780:76;;1121:836:46;;;;;;",deployedSourceMap:"1121:836:46:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1121:836:46;;;;;;;;;;;;;;;;;;;;;;;;1238:37;;;:::i;:::-;;;;;;;;;;;;;;;;1781:174;;;;;;;;;:::i;:::-;;;;;;;;1238:37;;;;;;:::o;1781:174::-;1875:7;1913:18;;:34;;;;;:18;;;;;:23;;:34;;1937:9;;1913:34;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1913:34:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1913:34:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1913:34:46;;;;;;;;;1905:43;1781:174;-1:-1:-1;;1781:174:46:o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;134:118;;201:46;239:6;226:20;201:46;;259:263;;374:2;362:9;353:7;349:23;345:32;342:2;;;390:1;387;380:12;342:2;425:1;442:64;498:7;478:9;442:64;;;432:74;336:186;-1:-1;;;;336:186;529:241;;633:2;621:9;612:7;608:23;604:32;601:2;;;649:1;646;639:12;601:2;684:1;701:53;746:7;726:9;701:53;;777:166;880:57;931:5;880:57;;;875:3;868:70;862:81;;;950:120;1033:31;1058:5;1033:31;;1077:253;1215:2;1200:18;;1229:91;1204:9;1293:6;1229:91;;1337:213;1455:2;1440:18;;1469:71;1444:9;1513:6;1469:71;;1557:128;1637:42;1626:54;;1609:76;1692:79;1761:5;1744:27;1950:161;;2049:57;2100:5;2118:135;2217:31;2242:5;2217:31;",source:'/*\n    Copyright 2019 Set Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.5.7;\npragma experimental "ABIEncoderV2";\n\nimport { SafeMath } from "openzeppelin-solidity/contracts/math/SafeMath.sol";\nimport { IMetaOracle } from "../interfaces/IMetaOracle.sol";\nimport { IMetaOracleV2 } from "../interfaces/IMetaOracleV2.sol";\n\n\n/**\n * @title MovingAverageOracleV1Proxy\n * @author Set Protocol\n *\n * This contract converts result from IMetaOracle contracts read calls into uint256 instead of passing\n * bytes. This is done in order to use the data stored in the HistoricalPriceFeed.\n */\ncontract MovingAverageOracleV1Proxy is \n    IMetaOracleV2\n{\n\n    /* ============ State Variables ============ */\n    IMetaOracle public metaOracleInstance;\n\n    /* ============ Constructor ============ */\n    /*\n     * Set address of oracle being proxied\n     *\n     * @param  _metaOracleInstance    Instance of MetaOracle to read from\n     */\n    constructor(\n        IMetaOracle _metaOracleInstance\n    )\n        public\n    {\n        metaOracleInstance = _metaOracleInstance;\n    }\n\n    /* ============ External ============ */\n\n    /**\n     * Returns the queried data from a meta oracle.\n     *\n     * @return  Current price of asset in uint256\n     */\n    function read(\n        uint256 _dataDays\n    )\n        external\n        view\n        returns (uint256)\n    {\n        return uint256(metaOracleInstance.read(_dataDays));\n    }\n}',sourcePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/proxies/MovingAverageOracleV1Proxy.sol",ast:{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/proxies/MovingAverageOracleV1Proxy.sol",exportedSymbols:{MovingAverageOracleV1Proxy:[5124]},id:5125,nodeType:"SourceUnit",nodes:[{id:5087,literals:["solidity","0.5",".7"],nodeType:"PragmaDirective",src:"597:22:46"},{id:5088,literals:["experimental","ABIEncoderV2"],nodeType:"PragmaDirective",src:"620:35:46"},{absolutePath:"openzeppelin-solidity/contracts/math/SafeMath.sol",file:"openzeppelin-solidity/contracts/math/SafeMath.sol",id:5090,nodeType:"ImportDirective",scope:5125,sourceUnit:6402,src:"657:77:46",symbolAliases:[{foreign:5089,local:null}],unitAlias:""},{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/interfaces/IMetaOracle.sol",file:"../interfaces/IMetaOracle.sol",id:5092,nodeType:"ImportDirective",scope:5125,sourceUnit:3034,src:"735:60:46",symbolAliases:[{foreign:5091,local:null}],unitAlias:""},{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/interfaces/IMetaOracleV2.sol",file:"../interfaces/IMetaOracleV2.sol",id:5094,nodeType:"ImportDirective",scope:5125,sourceUnit:3044,src:"796:64:46",symbolAliases:[{foreign:5093,local:null}],unitAlias:""},{baseContracts:[{arguments:null,baseName:{contractScope:null,id:5095,name:"IMetaOracleV2",nodeType:"UserDefinedTypeName",referencedDeclaration:3043,src:"1165:13:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracleV2_$3043",typeString:"contract IMetaOracleV2"}},id:5096,nodeType:"InheritanceSpecifier",src:"1165:13:46"}],contractDependencies:[3043],contractKind:"contract",documentation:"@title MovingAverageOracleV1Proxy\n@author Set Protocol\n * This contract converts result from IMetaOracle contracts read calls into uint256 instead of passing\nbytes. This is done in order to use the data stored in the HistoricalPriceFeed.",fullyImplemented:true,id:5124,linearizedBaseContracts:[5124,3043],name:"MovingAverageOracleV1Proxy",nodeType:"ContractDefinition",nodes:[{constant:false,id:5098,name:"metaOracleInstance",nodeType:"VariableDeclaration",scope:5124,src:"1238:37:46",stateVariable:true,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"},typeName:{contractScope:null,id:5097,name:"IMetaOracle",nodeType:"UserDefinedTypeName",referencedDeclaration:3033,src:"1238:11:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"}},value:null,visibility:"public"},{body:{id:5107,nodeType:"Block",src:"1547:57:46",statements:[{expression:{argumentTypes:null,id:5105,isConstant:false,isLValue:false,isPure:false,lValueRequested:false,leftHandSide:{argumentTypes:null,id:5103,name:"metaOracleInstance",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5098,src:"1557:18:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"}},nodeType:"Assignment",operator:"=",rightHandSide:{argumentTypes:null,id:5104,name:"_metaOracleInstance",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5100,src:"1578:19:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"}},src:"1557:40:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"}},id:5106,nodeType:"ExpressionStatement",src:"1557:40:46"}]},documentation:null,id:5108,implemented:true,kind:"constructor",modifiers:[],name:"",nodeType:"FunctionDefinition",parameters:{id:5101,nodeType:"ParameterList",parameters:[{constant:false,id:5100,name:"_metaOracleInstance",nodeType:"VariableDeclaration",scope:5108,src:"1490:31:46",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"},typeName:{contractScope:null,id:5099,name:"IMetaOracle",nodeType:"UserDefinedTypeName",referencedDeclaration:3033,src:"1490:11:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"}},value:null,visibility:"internal"}],src:"1480:47:46"},returnParameters:{id:5102,nodeType:"ParameterList",parameters:[],src:"1547:0:46"},scope:5124,src:"1469:135:46",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:{id:5122,nodeType:"Block",src:"1888:67:46",statements:[{expression:{argumentTypes:null,arguments:[{argumentTypes:null,arguments:[{argumentTypes:null,id:5118,name:"_dataDays",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5110,src:"1937:9:46",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}}],expression:{argumentTypes:[{typeIdentifier:"t_uint256",typeString:"uint256"}],expression:{argumentTypes:null,id:5116,name:"metaOracleInstance",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5098,src:"1913:18:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"}},id:5117,isConstant:false,isLValue:false,isPure:false,lValueRequested:false,memberName:"read",nodeType:"MemberAccess",referencedDeclaration:3027,src:"1913:23:46",typeDescriptions:{typeIdentifier:"t_function_external_view$_t_uint256_$returns$_t_bytes32_$",typeString:"function (uint256) view external returns (bytes32)"}},id:5119,isConstant:false,isLValue:false,isPure:false,kind:"functionCall",lValueRequested:false,names:[],nodeType:"FunctionCall",src:"1913:34:46",typeDescriptions:{typeIdentifier:"t_bytes32",typeString:"bytes32"}}],expression:{argumentTypes:[{typeIdentifier:"t_bytes32",typeString:"bytes32"}],id:5115,isConstant:false,isLValue:false,isPure:true,lValueRequested:false,nodeType:"ElementaryTypeNameExpression",src:"1905:7:46",typeDescriptions:{typeIdentifier:"t_type$_t_uint256_$",typeString:"type(uint256)"},typeName:"uint256"},id:5120,isConstant:false,isLValue:false,isPure:false,kind:"typeConversion",lValueRequested:false,names:[],nodeType:"FunctionCall",src:"1905:43:46",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},functionReturnParameters:5114,id:5121,nodeType:"Return",src:"1898:50:46"}]},documentation:"Returns the queried data from a meta oracle.\n     * @return  Current price of asset in uint256",id:5123,implemented:true,kind:"function",modifiers:[],name:"read",nodeType:"FunctionDefinition",parameters:{id:5111,nodeType:"ParameterList",parameters:[{constant:false,id:5110,name:"_dataDays",nodeType:"VariableDeclaration",scope:5123,src:"1804:17:46",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:5109,name:"uint256",nodeType:"ElementaryTypeName",src:"1804:7:46",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"}],src:"1794:33:46"},returnParameters:{id:5114,nodeType:"ParameterList",parameters:[{constant:false,id:5113,name:"",nodeType:"VariableDeclaration",scope:5123,src:"1875:7:46",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:5112,name:"uint256",nodeType:"ElementaryTypeName",src:"1875:7:46",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"}],src:"1874:9:46"},scope:5124,src:"1781:174:46",stateMutability:"view",superFunction:3042,visibility:"external"}],scope:5125,src:"1121:836:46"}],src:"597:1360:46"},legacyAST:{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/proxies/MovingAverageOracleV1Proxy.sol",exportedSymbols:{MovingAverageOracleV1Proxy:[5124]},id:5125,nodeType:"SourceUnit",nodes:[{id:5087,literals:["solidity","0.5",".7"],nodeType:"PragmaDirective",src:"597:22:46"},{id:5088,literals:["experimental","ABIEncoderV2"],nodeType:"PragmaDirective",src:"620:35:46"},{absolutePath:"openzeppelin-solidity/contracts/math/SafeMath.sol",file:"openzeppelin-solidity/contracts/math/SafeMath.sol",id:5090,nodeType:"ImportDirective",scope:5125,sourceUnit:6402,src:"657:77:46",symbolAliases:[{foreign:5089,local:null}],unitAlias:""},{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/interfaces/IMetaOracle.sol",file:"../interfaces/IMetaOracle.sol",id:5092,nodeType:"ImportDirective",scope:5125,sourceUnit:3034,src:"735:60:46",symbolAliases:[{foreign:5091,local:null}],unitAlias:""},{absolutePath:"/Users/justin_chen/Dropbox/workspace/set-protocol-oracles/contracts/meta-oracles/interfaces/IMetaOracleV2.sol",file:"../interfaces/IMetaOracleV2.sol",id:5094,nodeType:"ImportDirective",scope:5125,sourceUnit:3044,src:"796:64:46",symbolAliases:[{foreign:5093,local:null}],unitAlias:""},{baseContracts:[{arguments:null,baseName:{contractScope:null,id:5095,name:"IMetaOracleV2",nodeType:"UserDefinedTypeName",referencedDeclaration:3043,src:"1165:13:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracleV2_$3043",typeString:"contract IMetaOracleV2"}},id:5096,nodeType:"InheritanceSpecifier",src:"1165:13:46"}],contractDependencies:[3043],contractKind:"contract",documentation:"@title MovingAverageOracleV1Proxy\n@author Set Protocol\n * This contract converts result from IMetaOracle contracts read calls into uint256 instead of passing\nbytes. This is done in order to use the data stored in the HistoricalPriceFeed.",fullyImplemented:true,id:5124,linearizedBaseContracts:[5124,3043],name:"MovingAverageOracleV1Proxy",nodeType:"ContractDefinition",nodes:[{constant:false,id:5098,name:"metaOracleInstance",nodeType:"VariableDeclaration",scope:5124,src:"1238:37:46",stateVariable:true,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"},typeName:{contractScope:null,id:5097,name:"IMetaOracle",nodeType:"UserDefinedTypeName",referencedDeclaration:3033,src:"1238:11:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"}},value:null,visibility:"public"},{body:{id:5107,nodeType:"Block",src:"1547:57:46",statements:[{expression:{argumentTypes:null,id:5105,isConstant:false,isLValue:false,isPure:false,lValueRequested:false,leftHandSide:{argumentTypes:null,id:5103,name:"metaOracleInstance",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5098,src:"1557:18:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"}},nodeType:"Assignment",operator:"=",rightHandSide:{argumentTypes:null,id:5104,name:"_metaOracleInstance",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5100,src:"1578:19:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"}},src:"1557:40:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"}},id:5106,nodeType:"ExpressionStatement",src:"1557:40:46"}]},documentation:null,id:5108,implemented:true,kind:"constructor",modifiers:[],name:"",nodeType:"FunctionDefinition",parameters:{id:5101,nodeType:"ParameterList",parameters:[{constant:false,id:5100,name:"_metaOracleInstance",nodeType:"VariableDeclaration",scope:5108,src:"1490:31:46",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"},typeName:{contractScope:null,id:5099,name:"IMetaOracle",nodeType:"UserDefinedTypeName",referencedDeclaration:3033,src:"1490:11:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"}},value:null,visibility:"internal"}],src:"1480:47:46"},returnParameters:{id:5102,nodeType:"ParameterList",parameters:[],src:"1547:0:46"},scope:5124,src:"1469:135:46",stateMutability:"nonpayable",superFunction:null,visibility:"public"},{body:{id:5122,nodeType:"Block",src:"1888:67:46",statements:[{expression:{argumentTypes:null,arguments:[{argumentTypes:null,arguments:[{argumentTypes:null,id:5118,name:"_dataDays",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5110,src:"1937:9:46",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}}],expression:{argumentTypes:[{typeIdentifier:"t_uint256",typeString:"uint256"}],expression:{argumentTypes:null,id:5116,name:"metaOracleInstance",nodeType:"Identifier",overloadedDeclarations:[],referencedDeclaration:5098,src:"1913:18:46",typeDescriptions:{typeIdentifier:"t_contract$_IMetaOracle_$3033",typeString:"contract IMetaOracle"}},id:5117,isConstant:false,isLValue:false,isPure:false,lValueRequested:false,memberName:"read",nodeType:"MemberAccess",referencedDeclaration:3027,src:"1913:23:46",typeDescriptions:{typeIdentifier:"t_function_external_view$_t_uint256_$returns$_t_bytes32_$",typeString:"function (uint256) view external returns (bytes32)"}},id:5119,isConstant:false,isLValue:false,isPure:false,kind:"functionCall",lValueRequested:false,names:[],nodeType:"FunctionCall",src:"1913:34:46",typeDescriptions:{typeIdentifier:"t_bytes32",typeString:"bytes32"}}],expression:{argumentTypes:[{typeIdentifier:"t_bytes32",typeString:"bytes32"}],id:5115,isConstant:false,isLValue:false,isPure:true,lValueRequested:false,nodeType:"ElementaryTypeNameExpression",src:"1905:7:46",typeDescriptions:{typeIdentifier:"t_type$_t_uint256_$",typeString:"type(uint256)"},typeName:"uint256"},id:5120,isConstant:false,isLValue:false,isPure:false,kind:"typeConversion",lValueRequested:false,names:[],nodeType:"FunctionCall",src:"1905:43:46",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},functionReturnParameters:5114,id:5121,nodeType:"Return",src:"1898:50:46"}]},documentation:"Returns the queried data from a meta oracle.\n     * @return  Current price of asset in uint256",id:5123,implemented:true,kind:"function",modifiers:[],name:"read",nodeType:"FunctionDefinition",parameters:{id:5111,nodeType:"ParameterList",parameters:[{constant:false,id:5110,name:"_dataDays",nodeType:"VariableDeclaration",scope:5123,src:"1804:17:46",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:5109,name:"uint256",nodeType:"ElementaryTypeName",src:"1804:7:46",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"}],src:"1794:33:46"},returnParameters:{id:5114,nodeType:"ParameterList",parameters:[{constant:false,id:5113,name:"",nodeType:"VariableDeclaration",scope:5123,src:"1875:7:46",stateVariable:false,storageLocation:"default",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"},typeName:{id:5112,name:"uint256",nodeType:"ElementaryTypeName",src:"1875:7:46",typeDescriptions:{typeIdentifier:"t_uint256",typeString:"uint256"}},value:null,visibility:"internal"}],src:"1874:9:46"},scope:5124,src:"1781:174:46",stateMutability:"view",superFunction:3042,visibility:"external"}],scope:5125,src:"1121:836:46"}],src:"597:1360:46"},compiler:{name:"solc",version:"0.5.7+commit.6da8b019.Linux.g++"},networks:{},schemaVersion:"3.0.16",updatedAt:"2020-04-01T03:46:40.049Z",devdoc:{author:"Set Protocol * This contract converts result from IMetaOracle contracts read calls into uint256 instead of passing bytes. This is done in order to use the data stored in the HistoricalPriceFeed.",methods:{"read(uint256)":{"return":"Current price of asset in uint256"}},title:"MovingAverageOracleV1Proxy"},userdoc:{methods:{"read(uint256)":{notice:"Returns the queried data from a meta oracle."}}}};