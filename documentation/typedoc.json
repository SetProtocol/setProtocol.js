{
	"id": 0,
	"name": "setprotocol.js",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 746,
			"name": "\"api/accounting\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/api/accounting.ts",
			"children": [
				{
					"id": 747,
					"name": "AccountingAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "SetProtocol"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe SetProtocol class that exposes all functionality for interacting with the SetProtocol smart contracts.\nMethods that require interaction with the Ethereum blockchain are exposed after instantiating a new instance\nof SetProtocol with the web3 provider argument\n"
							}
						]
					},
					"children": [
						{
							"id": 751,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new AccountingAPI instance that contains methods for transferring balances in the vault."
							},
							"signatures": [
								{
									"id": 752,
									"name": "new AccountingAPI",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new AccountingAPI instance that contains methods for transferring balances in the vault."
									},
									"parameters": [
										{
											"id": 753,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The Web3.js Provider instance you would like the SetProtocol.js library\n                             to use for interacting with the Ethereum network."
											},
											"type": {
												"type": "reference",
												"name": "Web3"
											},
											"defaultValue": " undefined"
										},
										{
											"id": 754,
											"name": "core",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The address of the Set Core contract\n"
											},
											"type": {
												"type": "reference",
												"name": "CoreWrapper",
												"id": 419
											},
											"defaultValue": " undefined"
										}
									],
									"type": {
										"type": "reference",
										"name": "AccountingAPI",
										"id": 747
									}
								}
							],
							"sources": [
								{
									"fileName": "api/accounting.ts",
									"line": 41,
									"character": 28
								}
							]
						},
						{
							"id": 749,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/accounting.ts",
									"line": 40,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions",
								"id": 734
							}
						},
						{
							"id": 750,
							"name": "core",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/accounting.ts",
									"line": 41,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CoreWrapper",
								"id": 419
							}
						},
						{
							"id": 748,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/accounting.ts",
									"line": 39,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 765,
							"name": "assertDeposit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 766,
									"name": "assertDeposit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 767,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 768,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 769,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/accounting.ts",
									"line": 94,
									"character": 29
								}
							]
						},
						{
							"id": 770,
							"name": "assertWithdraw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 771,
									"name": "assertWithdraw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 772,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 773,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 774,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/accounting.ts",
									"line": 137,
									"character": 30
								}
							]
						},
						{
							"id": 755,
							"name": "depositAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 756,
									"name": "depositAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deposits tokens into the vault",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 757,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 758,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 759,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/accounting.ts",
									"line": 64,
									"character": 27
								}
							]
						},
						{
							"id": 760,
							"name": "withdrawAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 761,
									"name": "withdrawAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Withdraws tokens from the vault",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 762,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 763,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 764,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/accounting.ts",
									"line": 82,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								751
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								749,
								750,
								748
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								765,
								770,
								755,
								760
							]
						}
					],
					"sources": [
						{
							"fileName": "api/accounting.ts",
							"line": 38,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						747
					]
				}
			],
			"sources": [
				{
					"fileName": "api/accounting.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 863,
			"name": "\"api/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/api/index.ts",
			"sources": [
				{
					"fileName": "api/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 775,
			"name": "\"api/issuance\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/api/issuance.ts",
			"children": [
				{
					"id": 776,
					"name": "IssuanceAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "SetProtocol"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe SetProtocol class that exposes all functionality for interacting with the SetProtocol smart contracts.\nMethods that require interaction with the Ethereum blockchain are exposed after instantiating a new instance\nof SetProtocol with the web3 provider argument\n"
							}
						]
					},
					"children": [
						{
							"id": 780,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new IssuanceAPI instance that contains methods for transferring balances in the vault."
							},
							"signatures": [
								{
									"id": 781,
									"name": "new IssuanceAPI",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new IssuanceAPI instance that contains methods for transferring balances in the vault."
									},
									"parameters": [
										{
											"id": 782,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The Web3.js Provider instance you would like the SetProtocol.js library\n                             to use for interacting with the Ethereum network."
											},
											"type": {
												"type": "reference",
												"name": "Web3"
											},
											"defaultValue": " undefined"
										},
										{
											"id": 783,
											"name": "core",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The address of the Set Core contract\n"
											},
											"type": {
												"type": "reference",
												"name": "CoreWrapper",
												"id": 419
											},
											"defaultValue": " undefined"
										}
									],
									"type": {
										"type": "reference",
										"name": "IssuanceAPI",
										"id": 776
									}
								}
							],
							"sources": [
								{
									"fileName": "api/issuance.ts",
									"line": 42,
									"character": 28
								}
							]
						},
						{
							"id": 778,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/issuance.ts",
									"line": 41,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions",
								"id": 734
							}
						},
						{
							"id": 779,
							"name": "core",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/issuance.ts",
									"line": 42,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CoreWrapper",
								"id": 419
							}
						},
						{
							"id": 777,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/issuance.ts",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 796,
							"name": "assertIssue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 797,
									"name": "assertIssue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 798,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 799,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 800,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/issuance.ts",
									"line": 109,
									"character": 27
								}
							]
						},
						{
							"id": 801,
							"name": "assertRedeem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 802,
									"name": "assertRedeem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 803,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 804,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 805,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 806,
											"name": "withdraw",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 807,
											"name": "tokensToExclude",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/issuance.ts",
									"line": 130,
									"character": 28
								}
							]
						},
						{
							"id": 784,
							"name": "issueAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 785,
									"name": "issueAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously issues a particular quantity of tokens from a particular Sets",
										"returns": "A transaction hash to then later look up\n"
									},
									"parameters": [
										{
											"id": 786,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Set token address of Set being issued"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 787,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Sets a user wants to issue in Wei"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 788,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/issuance.ts",
									"line": 65,
									"character": 25
								}
							]
						},
						{
							"id": 789,
							"name": "redeemAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 790,
									"name": "redeemAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Composite method to redeem and optionally withdraw tokens",
										"returns": "A transaction hash to then later look up\n"
									},
									"parameters": [
										{
											"id": 791,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The address of the Set token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 792,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The number of tokens to redeem"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 793,
											"name": "withdraw",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Boolean determining whether or not to withdraw"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 794,
											"name": "tokensToExclude",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Array of token addresses to exclude from withdrawal"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 795,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/issuance.ts",
									"line": 81,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								780
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								778,
								779,
								777
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								796,
								801,
								784,
								789
							]
						}
					],
					"sources": [
						{
							"fileName": "api/issuance.ts",
							"line": 39,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						776
					]
				}
			],
			"sources": [
				{
					"fileName": "api/issuance.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 808,
			"name": "\"api/orders\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/api/orders.ts",
			"children": [
				{
					"id": 809,
					"name": "OrderAPI",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "SetProtocol"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe SetProtocol class that exposes all functionality for interacting with the SetProtocol smart contracts.\nMethods that require interaction with the Ethereum blockchain are exposed after instantiating a new instance\nof SetProtocol with the web3 provider argument\n"
							}
						]
					},
					"children": [
						{
							"id": 814,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new OrderAPI instance that contains methods for creating, filling, and cancelling issuance orders."
							},
							"signatures": [
								{
									"id": 815,
									"name": "new OrderAPI",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new OrderAPI instance that contains methods for creating, filling, and cancelling issuance orders."
									},
									"parameters": [
										{
											"id": 816,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The Web3.js Provider instance you would like the SetProtocol.js library\n               to use for interacting with the Ethereum network."
											},
											"type": {
												"type": "reference",
												"name": "Web3"
											},
											"defaultValue": " undefined"
										},
										{
											"id": 817,
											"name": "core",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The address of the Set Core contract\n"
											},
											"type": {
												"type": "reference",
												"name": "CoreWrapper",
												"id": 419
											},
											"defaultValue": " undefined"
										}
									],
									"type": {
										"type": "reference",
										"name": "OrderAPI",
										"id": 809
									}
								}
							],
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 54,
									"character": 44
								}
							]
						},
						{
							"id": 811,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 52,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions",
								"id": 734
							}
						},
						{
							"id": 812,
							"name": "core",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 53,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "CoreWrapper",
								"id": 419
							}
						},
						{
							"id": 813,
							"name": "setProtocolUtils",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 54,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "SetProtocolUtils"
							}
						},
						{
							"id": 810,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 51,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 858,
							"name": "cancelOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 859,
									"name": "cancelOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancels an Issuance Order",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 860,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Issuance order to cancel"
											},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										},
										{
											"id": 861,
											"name": "quantityToCancel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Set to cancel in this call"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 862,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 233,
									"character": 31
								}
							]
						},
						{
							"id": 838,
							"name": "createSignedOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 839,
									"name": "createSignedOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new signed Issuance Order including the signature",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 840,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set token for issuance order"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 841,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Set tokens to create as part of issuance order"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 842,
											"name": "requiredComponents",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Addresses of required component tokens of Set"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 843,
											"name": "requiredComponentAmounts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amounts of each required component needed"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 844,
											"name": "makerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of person making the order"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 845,
											"name": "makerToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of token the issuer is paying in"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 846,
											"name": "makerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of tokens being exchanged for aggregate order size"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 847,
											"name": "expiration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Unix timestamp of expiration (in seconds)"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 848,
											"name": "relayerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of relayer of order"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 849,
											"name": "relayerToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of token paid to relayer"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 850,
											"name": "makerRelayerFee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of token paid to relayer by maker"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 851,
											"name": "takerRelayerFee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of token paid tp relayer by taker"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SignedIssuanceOrder"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 176,
									"character": 37
								}
							]
						},
						{
							"id": 852,
							"name": "fillOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 853,
									"name": "fillOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fills an Issuance Order",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 854,
											"name": "signedIssuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Signed issuance order to fill"
											},
											"type": {
												"type": "reference",
												"name": "SignedIssuanceOrder"
											}
										},
										{
											"id": 855,
											"name": "quantityToFill",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Set to fill in this call"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 856,
											"name": "orders",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"name": "ZeroExSignedFillOrder"
														},
														{
															"type": "reference",
															"name": "TakerWalletOrder"
														}
													]
												}
											}
										},
										{
											"id": 857,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 216,
									"character": 29
								}
							]
						},
						{
							"id": 820,
							"name": "generateExpirationTimestamp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 821,
									"name": "generateExpirationTimestamp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generates a timestamp represented as seconds since unix epoch.\nThe timestamp is intended to be used to generate the expiration of an issuance order",
										"returns": "Unix timestamp (in seconds since unix epoch)\n"
									},
									"parameters": [
										{
											"id": 822,
											"name": "seconds",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 90,
									"character": 36
								}
							]
						},
						{
							"id": 818,
							"name": "generateSalt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 819,
									"name": "generateSalt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generates a pseudo-random 256-bit salt.\nThe salt can be included in an order, ensuring that the order generates a unique orderHash\nand will not collide with other outstanding orders that are identical in all other parameters.",
										"returns": "A pseudo-random 256-bit number that can be used as a salt.\n"
									},
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 79,
									"character": 21
								}
							]
						},
						{
							"id": 823,
							"name": "isValidOrderHashOrThrow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 824,
									"name": "isValidOrderHashOrThrow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if the supplied hex encoded order hash is valid.\nNote: Valid means it has the expected format, not that an order\nwith the orderHash exists.",
										"tags": [
											{
												"tag": "param.",
												"text": "Hex encoded order hash\n"
											}
										]
									},
									"parameters": [
										{
											"id": 825,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Bytes"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 101,
									"character": 32
								}
							]
						},
						{
							"id": 826,
							"name": "isValidSignatureOrThrowAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 827,
									"name": "isValidSignatureOrThrowAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks whether a particular issuance order and signature is valid\nA signature is valid only if the issuance order is signed by the maker\nThe function throws upon receiving an invalid signature.",
										"returns": "boolean\n"
									},
									"parameters": [
										{
											"id": 828,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The issuance order the signature was generated from"
											},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										},
										{
											"id": 829,
											"name": "signature",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The EC Signature to check"
											},
											"type": {
												"type": "reference",
												"name": "ECSig"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 114,
									"character": 43
								}
							]
						},
						{
							"id": 830,
							"name": "signOrderAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 831,
									"name": "signOrderAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generates a ECSig from an issuance order. The function first generates an order hash.\nThen it signs it using the passed in transaction options. If none, it will assume\nthe signer is the first account",
										"returns": "EC Signature\n"
									},
									"parameters": [
										{
											"id": 832,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Issuance Order"
											},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										},
										{
											"id": 833,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ECSig"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 133,
									"character": 29
								}
							]
						},
						{
							"id": 834,
							"name": "validateOrderFillableOrThrowAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 835,
									"name": "validateOrderFillableOrThrowAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Given an issuance order, check that the signature is valid, order has not expired,\nand"
									},
									"parameters": [
										{
											"id": 836,
											"name": "signedIssuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SignedIssuanceOrder"
											}
										},
										{
											"id": 837,
											"name": "fillQuantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "(optional) a fill quantity to check if fillable\n"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "api/orders.ts",
									"line": 148,
									"character": 48
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								814
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								811,
								812,
								813,
								810
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								858,
								838,
								852,
								820,
								818,
								823,
								826,
								830,
								834
							]
						}
					],
					"sources": [
						{
							"fileName": "api/orders.ts",
							"line": 50,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						809
					]
				}
			],
			"sources": [
				{
					"fileName": "api/orders.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 279,
			"name": "\"assertions/AccountAssertions\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/assertions/AccountAssertions.ts",
			"children": [
				{
					"id": 280,
					"name": "AccountAssertions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 281,
							"name": "notNull",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 282,
									"name": "notNull",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 283,
											"name": "account",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 284,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/AccountAssertions.ts",
									"line": 23,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								281
							]
						}
					],
					"sources": [
						{
							"fileName": "assertions/AccountAssertions.ts",
							"line": 22,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						280
					]
				}
			],
			"sources": [
				{
					"fileName": "assertions/AccountAssertions.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 285,
			"name": "\"assertions/CommonAssertions\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/assertions/CommonAssertions.ts",
			"children": [
				{
					"id": 286,
					"name": "CommonAssertions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 287,
							"name": "greaterThanZero",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 288,
									"name": "greaterThanZero",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 289,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 290,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/CommonAssertions.ts",
									"line": 23,
									"character": 24
								}
							]
						},
						{
							"id": 291,
							"name": "isEqualLength",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 292,
									"name": "isEqualLength",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 293,
											"name": "arr1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 294,
											"name": "arr2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 295,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/CommonAssertions.ts",
									"line": 28,
									"character": 22
								}
							]
						},
						{
							"id": 296,
							"name": "isGreaterOrEqualThan",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 297,
									"name": "isGreaterOrEqualThan",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 298,
											"name": "quantity1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 299,
											"name": "quantity2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 300,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/CommonAssertions.ts",
									"line": 34,
									"character": 29
								}
							]
						},
						{
							"id": 305,
							"name": "isValidExpiration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 306,
									"name": "isValidExpiration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 307,
											"name": "expiration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 308,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/CommonAssertions.ts",
									"line": 46,
									"character": 26
								}
							]
						},
						{
							"id": 301,
							"name": "isValidString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 302,
									"name": "isValidString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 303,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 304,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/CommonAssertions.ts",
									"line": 40,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								287,
								291,
								296,
								305,
								301
							]
						}
					],
					"sources": [
						{
							"fileName": "assertions/CommonAssertions.ts",
							"line": 22,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						286
					]
				}
			],
			"sources": [
				{
					"fileName": "assertions/CommonAssertions.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 309,
			"name": "\"assertions/CoreAssertions\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/assertions/CoreAssertions.ts",
			"children": [
				{
					"id": 310,
					"name": "CoreAssertions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 311,
							"name": "implementsCore",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 312,
									"name": "implementsCore",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Throws if the given candidateContract does not respond to some methods from the Core interface.",
										"returns": "Void Promise\n"
									},
									"parameters": [
										{
											"id": 313,
											"name": "coreInstance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An instance of the core contract"
											},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/CoreAssertions.ts",
									"line": 36,
									"character": 29
								}
							]
						},
						{
							"id": 319,
							"name": "isValidSignature",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 320,
									"name": "isValidSignature",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 321,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										},
										{
											"id": 322,
											"name": "signature",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ECSig"
											}
										},
										{
											"id": 323,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/CoreAssertions.ts",
									"line": 54,
									"character": 31
								}
							]
						},
						{
							"id": 314,
							"name": "validateNaturalUnit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 315,
									"name": "validateNaturalUnit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 316,
											"name": "naturalUnit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 317,
											"name": "minDecimal",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 318,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/CoreAssertions.ts",
									"line": 48,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								311,
								319,
								314
							]
						}
					],
					"sources": [
						{
							"fileName": "assertions/CoreAssertions.ts",
							"line": 29,
							"character": 27
						}
					]
				},
				{
					"id": 324,
					"name": "setProtocolUtils",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assertions/CoreAssertions.ts",
							"line": 27,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "SetProtocolUtils"
					},
					"defaultValue": " new SetProtocolUtils()"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						310
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						324
					]
				}
			],
			"sources": [
				{
					"fileName": "assertions/CoreAssertions.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 325,
			"name": "\"assertions/ERC20Assertions\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/assertions/ERC20Assertions.ts",
			"children": [
				{
					"id": 326,
					"name": "ERC20Assertions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 336,
							"name": "hasSufficientAllowance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 337,
									"name": "hasSufficientAllowance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 338,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										},
										{
											"id": 339,
											"name": "owner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 340,
											"name": "spender",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 341,
											"name": "allowanceRequired",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 342,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/ERC20Assertions.ts",
									"line": 51,
									"character": 37
								}
							]
						},
						{
							"id": 330,
							"name": "hasSufficientBalance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 331,
									"name": "hasSufficientBalance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 332,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										},
										{
											"id": 333,
											"name": "payer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 334,
											"name": "balanceRequired",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 335,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/ERC20Assertions.ts",
									"line": 38,
									"character": 35
								}
							]
						},
						{
							"id": 327,
							"name": "implementsERC20",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 328,
									"name": "implementsERC20",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 329,
											"name": "tokenInstance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/ERC20Assertions.ts",
									"line": 26,
									"character": 30
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								336,
								330,
								327
							]
						}
					],
					"sources": [
						{
							"fileName": "assertions/ERC20Assertions.ts",
							"line": 24,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						326
					]
				}
			],
			"sources": [
				{
					"fileName": "assertions/ERC20Assertions.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 649,
			"name": "\"assertions/OrderAssertions\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/assertions/OrderAssertions.ts",
			"children": [
				{
					"id": 650,
					"name": "OrderAssertions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 651,
							"name": "isIssuanceOrderFillable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 652,
									"name": "isIssuanceOrderFillable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 653,
											"name": "core",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CoreWrapper",
												"id": 419
											}
										},
										{
											"id": 654,
											"name": "signedIssuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SignedIssuanceOrder"
											}
										},
										{
											"id": 655,
											"name": "fillQuantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											},
											"defaultValue": " undefined"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/OrderAssertions.ts",
									"line": 32,
									"character": 38
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								651
							]
						}
					],
					"sources": [
						{
							"fileName": "assertions/OrderAssertions.ts",
							"line": 31,
							"character": 28
						}
					]
				},
				{
					"id": 657,
					"name": "commonAssertions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assertions/OrderAssertions.ts",
							"line": 29,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "CommonAssertions",
						"id": 286
					},
					"defaultValue": " new CommonAssertions()"
				},
				{
					"id": 656,
					"name": "coreAssertions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assertions/OrderAssertions.ts",
							"line": 28,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "CoreAssertions",
						"id": 310
					},
					"defaultValue": " new CoreAssertions()"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						650
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						657,
						656
					]
				}
			],
			"sources": [
				{
					"fileName": "assertions/OrderAssertions.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 658,
			"name": "\"assertions/SchemaAssertions\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/assertions/SchemaAssertions.ts",
			"children": [
				{
					"id": 659,
					"name": "SchemaAssertions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 661,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 662,
									"name": "new SchemaAssertions",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SchemaAssertions",
										"id": 659
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/SchemaAssertions.ts",
									"line": 26,
									"character": 37
								}
							]
						},
						{
							"id": 660,
							"name": "validator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "assertions/SchemaAssertions.ts",
									"line": 26,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "SchemaValidator",
								"id": 241
							}
						},
						{
							"id": 679,
							"name": "IsValidWholeNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 680,
									"name": "IsValidWholeNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 681,
											"name": "variableName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 682,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/SchemaAssertions.ts",
									"line": 48,
									"character": 27
								}
							]
						},
						{
							"id": 683,
							"name": "assertConformsToSchema",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 684,
									"name": "assertConformsToSchema",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 685,
											"name": "variableName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 686,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 687,
											"name": "schema",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Schema"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/SchemaAssertions.ts",
									"line": 52,
									"character": 32
								}
							]
						},
						{
							"id": 663,
							"name": "isValidAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 664,
									"name": "isValidAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 665,
											"name": "variableName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 666,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/SchemaAssertions.ts",
									"line": 32,
									"character": 23
								}
							]
						},
						{
							"id": 671,
							"name": "isValidBytes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 672,
									"name": "isValidBytes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 673,
											"name": "variableName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 674,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/SchemaAssertions.ts",
									"line": 40,
									"character": 21
								}
							]
						},
						{
							"id": 667,
							"name": "isValidBytes32",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 668,
									"name": "isValidBytes32",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 669,
											"name": "variableName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 670,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/SchemaAssertions.ts",
									"line": 36,
									"character": 23
								}
							]
						},
						{
							"id": 675,
							"name": "isValidNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 676,
									"name": "isValidNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 677,
											"name": "variableName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 678,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/SchemaAssertions.ts",
									"line": 44,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								661
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								660
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								679,
								683,
								663,
								671,
								667,
								675
							]
						}
					],
					"sources": [
						{
							"fileName": "assertions/SchemaAssertions.ts",
							"line": 25,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						659
					]
				}
			],
			"sources": [
				{
					"fileName": "assertions/SchemaAssertions.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 688,
			"name": "\"assertions/SetTokenAssertions\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/assertions/SetTokenAssertions.ts",
			"children": [
				{
					"id": 689,
					"name": "SetTokenAssertions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 691,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 692,
									"name": "new SetTokenAssertions",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 693,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SetTokenAssertions",
										"id": 689
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/SetTokenAssertions.ts",
									"line": 32,
									"character": 21
								}
							]
						},
						{
							"id": 690,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "assertions/SetTokenAssertions.ts",
									"line": 32,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 702,
							"name": "hasSufficientAllowances",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 703,
									"name": "hasSufficientAllowances",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Throws if the given user doesn't have a sufficient allowance for a component token in a Set",
										"returns": "Void Promise\n"
									},
									"parameters": [
										{
											"id": 704,
											"name": "setTokenInstance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An instance of the Set Token contract"
											},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										},
										{
											"id": 705,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The address of the owner"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 706,
											"name": "spenderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 707,
											"name": "quantityInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of a Set in wei"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/SetTokenAssertions.ts",
									"line": 109,
									"character": 38
								}
							]
						},
						{
							"id": 697,
							"name": "hasSufficientBalances",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 698,
									"name": "hasSufficientBalances",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Throws if the given user doesn't have a sufficient balance for a component token in a Set",
										"returns": "Void Promise\n"
									},
									"parameters": [
										{
											"id": 699,
											"name": "setTokenInstance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An instance of the Set Token contract"
											},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										},
										{
											"id": 700,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The address of the owner"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 701,
											"name": "quantityInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of a Set in wei"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/SetTokenAssertions.ts",
									"line": 68,
									"character": 36
								}
							]
						},
						{
							"id": 694,
							"name": "implementsSetToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 695,
									"name": "implementsSetToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Throws if the given candidateContract does not respond to some methods from the Set Token interface.",
										"returns": "Void Promise\n"
									},
									"parameters": [
										{
											"id": 696,
											"name": "setTokenInstance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An instance of the Set Token contract"
											},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/SetTokenAssertions.ts",
									"line": 44,
									"character": 33
								}
							]
						},
						{
							"id": 708,
							"name": "isMultipleOfNaturalUnit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 709,
									"name": "isMultipleOfNaturalUnit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 710,
											"name": "setTokenInstance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										},
										{
											"id": 711,
											"name": "quantityInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 712,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/SetTokenAssertions.ts",
									"line": 144,
									"character": 38
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								691
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								690
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								702,
								697,
								694,
								708
							]
						}
					],
					"sources": [
						{
							"fileName": "assertions/SetTokenAssertions.ts",
							"line": 31,
							"character": 31
						}
					]
				},
				{
					"id": 713,
					"name": "erc20Assertions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "assertions/SetTokenAssertions.ts",
							"line": 29,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "ERC20Assertions",
						"id": 326
					},
					"defaultValue": " new ERC20Assertions()"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						689
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						713
					]
				}
			],
			"sources": [
				{
					"fileName": "assertions/SetTokenAssertions.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 714,
			"name": "\"assertions/VaultAssertions\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/assertions/VaultAssertions.ts",
			"children": [
				{
					"id": 715,
					"name": "VaultAssertions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 717,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 718,
									"name": "new VaultAssertions",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 719,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "VaultAssertions",
										"id": 715
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/VaultAssertions.ts",
									"line": 27,
									"character": 21
								}
							]
						},
						{
							"id": 716,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "assertions/VaultAssertions.ts",
									"line": 27,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 727,
							"name": "hasSufficientSetTokensBalances",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 728,
									"name": "hasSufficientSetTokensBalances",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Throws if the Set doesn't have a sufficient balance for its tokens in the Vault",
										"returns": "Void Promise\n"
									},
									"parameters": [
										{
											"id": 729,
											"name": "vaultInstance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An instance of the Vault contract"
											},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										},
										{
											"id": 730,
											"name": "setTokenInstance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An instance of the Set token contract"
											},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										},
										{
											"id": 731,
											"name": "quantityInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of a Set in wei"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 732,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/VaultAssertions.ts",
									"line": 65,
									"character": 45
								}
							]
						},
						{
							"id": 720,
							"name": "hasSufficientTokenBalance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 721,
									"name": "hasSufficientTokenBalance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Throws if the Vault doesn't have enough of token",
										"returns": "Void Promise\n"
									},
									"parameters": [
										{
											"id": 722,
											"name": "vaultInstance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An instance of the Vault contract"
											},
											"type": {
												"type": "reference",
												"name": "ContractInstance"
											}
										},
										{
											"id": 723,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "An instance of the Set token contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 724,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of owner withdrawing from vault"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 725,
											"name": "quantityInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of a Set in wei"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 726,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/VaultAssertions.ts",
									"line": 42,
									"character": 40
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								717
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								716
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								727,
								720
							]
						}
					],
					"sources": [
						{
							"fileName": "assertions/VaultAssertions.ts",
							"line": 26,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						715
					]
				}
			],
			"sources": [
				{
					"fileName": "assertions/VaultAssertions.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 733,
			"name": "\"assertions/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/assertions/index.ts",
			"children": [
				{
					"id": 734,
					"name": "Assertions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 743,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 744,
									"name": "new Assertions",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 745,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertions",
										"id": 734
									}
								}
							],
							"sources": [
								{
									"fileName": "assertions/index.ts",
									"line": 40,
									"character": 32
								}
							]
						},
						{
							"id": 735,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "assertions/index.ts",
									"line": 33,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "AccountAssertions",
								"id": 280
							}
						},
						{
							"id": 736,
							"name": "common",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "assertions/index.ts",
									"line": 34,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "CommonAssertions",
								"id": 286
							}
						},
						{
							"id": 737,
							"name": "core",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "assertions/index.ts",
									"line": 35,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "CoreAssertions",
								"id": 310
							}
						},
						{
							"id": 738,
							"name": "erc20",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "assertions/index.ts",
									"line": 36,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "ERC20Assertions",
								"id": 326
							}
						},
						{
							"id": 739,
							"name": "order",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "assertions/index.ts",
									"line": 37,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "OrderAssertions",
								"id": 650
							}
						},
						{
							"id": 740,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "assertions/index.ts",
									"line": 38,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "SchemaAssertions",
								"id": 659
							}
						},
						{
							"id": 741,
							"name": "setToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "assertions/index.ts",
									"line": 39,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "SetTokenAssertions",
								"id": 689
							}
						},
						{
							"id": 742,
							"name": "vault",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "assertions/index.ts",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "VaultAssertions",
								"id": 715
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								743
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								735,
								736,
								737,
								738,
								739,
								740,
								741,
								742
							]
						}
					],
					"sources": [
						{
							"fileName": "assertions/index.ts",
							"line": 32,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						734
					]
				}
			],
			"sources": [
				{
					"fileName": "assertions/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 95,
			"name": "\"constants/accounts\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/constants/accounts.ts",
			"children": [
				{
					"id": 96,
					"name": "Account",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 97,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "constants/accounts.ts",
									"line": 5,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 98,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "constants/accounts.ts",
									"line": 6,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								97,
								98
							]
						}
					],
					"sources": [
						{
							"fileName": "constants/accounts.ts",
							"line": 4,
							"character": 24
						}
					]
				},
				{
					"id": 100,
					"name": "ACCOUNTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "constants/accounts.ts",
							"line": 10,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Account",
							"id": 96
						}
					},
					"defaultValue": " [\n  {\n    address: '0x5409ed021d9299bf6814279a6a1411a7e866a631',\n    privateKey: '0xf2f48ee19680706196e2e339e5da3491186e0c4c5030670656b0e0164837257d',\n  },\n  {\n    address: '0x6ecbe1db9ef729cbe972c83fb886247691fb6beb',\n    privateKey: '0x5d862464fe9303452126c8bc94274b8c5f9874cbd219789b3eb2128075a76f72',\n  },\n  {\n    address: '0xe36ea790bc9d7ab70c55260c66d52b1eca985f84',\n    privateKey: '0xdf02719c4df8b9b8ac7f551fcb5d9ef48fa27eef7a66453879f4d8fdc6e78fb1',\n  },\n  {\n    address: '0xe834ec434daba538cd1b9fe1582052b880bd7e63',\n    privateKey: '0xff12e391b79415e941a94de3bf3a9aee577aed0731e297d5cfa0b8a1e02fa1d0',\n  },\n  {\n    address: '0x78dc5d2d739606d31509c31d654056a45185ecb6',\n    privateKey: '0x752dd9cf65e68cfaba7d60225cbdbc1f4729dd5e5507def72815ed0d8abc6249',\n  },\n  {\n    address: '0xa8dda8d7f5310e4a9e24f8eba77e091ac264f872',\n    privateKey: '0xefb595a0178eb79a8df953f87c5148402a224cdf725e88c0146727c6aceadccd',\n  },\n  {\n    address: '0x06cef8e666768cc40cc78cf93d9611019ddcb628',\n    privateKey: '0x83c6d2cc5ddcf9711a6d59b417dc20eb48afd58d45290099e5987e3d768f328f',\n  },\n  {\n    address: '0x4404ac8bd8f9618d27ad2f1485aa1b2cfd82482d',\n    privateKey: '0xbb2d3f7c9583780a7d3904a2f55d792707c345f21de1bacb2d389934d82796b2',\n  },\n  {\n    address: '0x7457d5e02197480db681d3fdf256c7aca21bdc12',\n    privateKey: '0xb2fd4d29c1390b71b8795ae81196bfd60293adf99f9d32a0aff06288fcdac55f',\n  },\n  {\n    address: '0x91c987bf62d25945db517bdaa840a6c661374402',\n    privateKey: '0x23cb7121166b9a2f93ae0b7c05bde02eae50d64449b2cbb42bc84e9d38d6cc89',\n  },\n]"
				},
				{
					"id": 101,
					"name": "DEFAULT_ACCOUNT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "constants/accounts.ts",
							"line": 53,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": " ACCOUNTS[0].address"
				},
				{
					"id": 99,
					"name": "NULL_ADDRESS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "constants/accounts.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "0x0000000000000000000000000000000000000000"
					},
					"defaultValue": "\"0x0000000000000000000000000000000000000000\""
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						96
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						100,
						101,
						99
					]
				}
			],
			"sources": [
				{
					"fileName": "constants/accounts.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 102,
			"name": "\"constants/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/constants/index.ts",
			"children": [
				{
					"id": 103,
					"name": "DEFAULT_GAS_LIMIT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "constants/index.ts",
							"line": 24,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "BigNumber"
					},
					"defaultValue": " new BigNumber(6712390)"
				},
				{
					"id": 104,
					"name": "DEFAULT_GAS_PRICE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "constants/index.ts",
							"line": 25,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "BigNumber"
					},
					"defaultValue": " new BigNumber(6000000000)"
				},
				{
					"id": 105,
					"name": "DEPLOYED_TOKEN_QUANTITY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "constants/index.ts",
							"line": 26,
							"character": 36
						}
					],
					"type": {
						"type": "reference",
						"name": "BigNumber"
					},
					"defaultValue": " ether(100000000000)"
				},
				{
					"id": 106,
					"name": "NULL_ADDRESS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "constants/index.ts",
							"line": 27,
							"character": 25
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "0x0000000000000000000000000000000000000000"
					},
					"defaultValue": "\"0x0000000000000000000000000000000000000000\""
				},
				{
					"id": 107,
					"name": "STANDARD_DECIMALS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "constants/index.ts",
							"line": 28,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "BigNumber"
					},
					"defaultValue": " new BigNumber(18)"
				},
				{
					"id": 108,
					"name": "STANDARD_SUPPLY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "constants/index.ts",
							"line": 29,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "BigNumber"
					},
					"defaultValue": " new BigNumber(100000000000000000000)"
				},
				{
					"id": 109,
					"name": "STANDARD_TRANSFER_VALUE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "constants/index.ts",
							"line": 30,
							"character": 36
						}
					],
					"type": {
						"type": "reference",
						"name": "BigNumber"
					},
					"defaultValue": " new BigNumber(1000000000000000000)"
				},
				{
					"id": 110,
					"name": "UNLIMITED_ALLOWANCE_IN_BASE_UNITS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "constants/index.ts",
							"line": 31,
							"character": 46
						}
					],
					"type": {
						"type": "reference",
						"name": "BigNumber"
					},
					"defaultValue": " new BigNumber(2).pow(256).minus(1)"
				},
				{
					"id": 111,
					"name": "ZERO",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "constants/index.ts",
							"line": 32,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "BigNumber"
					},
					"defaultValue": " new BigNumber(0)"
				},
				{
					"id": 112,
					"name": "TX_DEFAULTS",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 113,
							"name": "from",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "constants/index.ts",
									"line": 35,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " DEFAULT_ACCOUNT"
						},
						{
							"id": 115,
							"name": "gas",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "constants/index.ts",
									"line": 37,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							},
							"defaultValue": " DEFAULT_GAS_LIMIT"
						},
						{
							"id": 114,
							"name": "gasPrice",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "constants/index.ts",
									"line": 36,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							},
							"defaultValue": " DEFAULT_GAS_PRICE"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								113,
								115,
								114
							]
						}
					],
					"sources": [
						{
							"fileName": "constants/index.ts",
							"line": 34,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						103,
						104,
						105,
						106,
						107,
						108,
						109,
						110,
						111
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						112
					]
				}
			],
			"sources": [
				{
					"fileName": "constants/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 145,
			"name": "\"errors/coreErrors\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/errors/coreErrors.ts",
			"children": [
				{
					"id": 146,
					"name": "coreAPIErrors",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 147,
							"name": "ARRAYS_EQUAL_LENGTHS",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 148,
									"name": "ARRAYS_EQUAL_LENGTHS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 149,
											"name": "firstArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 150,
											"name": "secondArray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/coreErrors.ts",
									"line": 22,
									"character": 22
								}
							]
						},
						{
							"id": 167,
							"name": "EXPIRATION_PASSED",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 168,
									"name": "EXPIRATION_PASSED",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/coreErrors.ts",
									"line": 34,
									"character": 19
								}
							]
						},
						{
							"id": 151,
							"name": "FULLY_FILLED",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 152,
									"name": "FULLY_FILLED",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/coreErrors.ts",
									"line": 24,
									"character": 14
								}
							]
						},
						{
							"id": 161,
							"name": "INVALID_NATURAL_UNIT",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 162,
									"name": "INVALID_NATURAL_UNIT",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/coreErrors.ts",
									"line": 29,
									"character": 22
								}
							]
						},
						{
							"id": 153,
							"name": "INVALID_ORDER_HASH_SCHEMA",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 154,
									"name": "INVALID_ORDER_HASH_SCHEMA",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/coreErrors.ts",
									"line": 25,
									"character": 27
								}
							]
						},
						{
							"id": 163,
							"name": "QUANTITY_NEEDS_TO_BE_MULTIPLE_OF_NATURAL_UNIT",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 164,
									"name": "QUANTITY_NEEDS_TO_BE_MULTIPLE_OF_NATURAL_UNIT",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/coreErrors.ts",
									"line": 31,
									"character": 47
								}
							]
						},
						{
							"id": 155,
							"name": "QUANTITY_NEEDS_TO_BE_POSITIVE",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 156,
									"name": "QUANTITY_NEEDS_TO_BE_POSITIVE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 157,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/coreErrors.ts",
									"line": 26,
									"character": 31
								}
							]
						},
						{
							"id": 165,
							"name": "SIGNATURE_MISMATCH",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 166,
									"name": "SIGNATURE_MISMATCH",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/coreErrors.ts",
									"line": 33,
									"character": 20
								}
							]
						},
						{
							"id": 158,
							"name": "STRING_CANNOT_BE_EMPTY",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 159,
									"name": "STRING_CANNOT_BE_EMPTY",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 160,
											"name": "variable",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/coreErrors.ts",
									"line": 28,
									"character": 24
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								147,
								167,
								151,
								161,
								153,
								163,
								155,
								165,
								158
							]
						}
					],
					"sources": [
						{
							"fileName": "errors/coreErrors.ts",
							"line": 21,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 169,
					"name": "coreAssertionErrors",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 170,
							"name": "MISSING_CORE_METHOD",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 171,
									"name": "MISSING_CORE_METHOD",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 172,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/coreErrors.ts",
									"line": 38,
									"character": 21
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								170
							]
						}
					],
					"sources": [
						{
							"fileName": "errors/coreErrors.ts",
							"line": 37,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						146,
						169
					]
				}
			],
			"sources": [
				{
					"fileName": "errors/coreErrors.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 173,
			"name": "\"errors/erc20Errors\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/errors/erc20Errors.ts",
			"children": [
				{
					"id": 174,
					"name": "erc20AssertionErrors",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 180,
							"name": "INSUFFICIENT_ALLOWANCE",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 181,
									"name": "INSUFFICIENT_ALLOWANCE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/erc20Errors.ts",
									"line": 23,
									"character": 24
								}
							]
						},
						{
							"id": 178,
							"name": "INSUFFICIENT_BALANCE",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 179,
									"name": "INSUFFICIENT_BALANCE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/erc20Errors.ts",
									"line": 22,
									"character": 22
								}
							]
						},
						{
							"id": 175,
							"name": "MISSING_ERC20_METHOD",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 176,
									"name": "MISSING_ERC20_METHOD",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 177,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/erc20Errors.ts",
									"line": 20,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								180,
								178,
								175
							]
						}
					],
					"sources": [
						{
							"fileName": "errors/erc20Errors.ts",
							"line": 19,
							"character": 33
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						174
					]
				}
			],
			"sources": [
				{
					"fileName": "errors/erc20Errors.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 278,
			"name": "\"errors/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/errors/index.ts",
			"sources": [
				{
					"fileName": "errors/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 259,
			"name": "\"errors/schemaErrors\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/errors/schemaErrors.ts",
			"children": [
				{
					"id": 260,
					"name": "schemaAssertionsError",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 261,
							"name": "DOES_NOT_CONFORM_TO_SCHEMA",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 262,
									"name": "DOES_NOT_CONFORM_TO_SCHEMA",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 263,
											"name": "variableName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 264,
											"name": "schemaId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 265,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 266,
											"name": "validationResult",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ValidatorResult"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/schemaErrors.ts",
									"line": 22,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								261
							]
						}
					],
					"sources": [
						{
							"fileName": "errors/schemaErrors.ts",
							"line": 21,
							"character": 34
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						260
					]
				}
			],
			"sources": [
				{
					"fileName": "errors/schemaErrors.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 267,
			"name": "\"errors/setTokenErrors\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/errors/setTokenErrors.ts",
			"children": [
				{
					"id": 268,
					"name": "setTokenAssertionsErrors",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 269,
							"name": "IS_NOT_A_VALID_SET",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 270,
									"name": "IS_NOT_A_VALID_SET",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 271,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/setTokenErrors.ts",
									"line": 21,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								269
							]
						}
					],
					"sources": [
						{
							"fileName": "errors/setTokenErrors.ts",
							"line": 20,
							"character": 37
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						268
					]
				}
			],
			"sources": [
				{
					"fileName": "errors/setTokenErrors.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 272,
			"name": "\"errors/vaultErrors\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/errors/vaultErrors.ts",
			"children": [
				{
					"id": 273,
					"name": "vaultAssertionErrors",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 276,
							"name": "INSUFFICIENT_SET_TOKENS_BALANCE",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 277,
									"name": "INSUFFICIENT_SET_TOKENS_BALANCE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/vaultErrors.ts",
									"line": 21,
									"character": 33
								}
							]
						},
						{
							"id": 274,
							"name": "INSUFFICIENT_TOKEN_BALANCE",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 275,
									"name": "INSUFFICIENT_TOKEN_BALANCE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "errors/vaultErrors.ts",
									"line": 20,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								276,
								274
							]
						}
					],
					"sources": [
						{
							"fileName": "errors/vaultErrors.ts",
							"line": 19,
							"character": 33
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						273
					]
				}
			],
			"sources": [
				{
					"fileName": "errors/vaultErrors.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 864,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/index.ts",
			"children": [
				{
					"id": 869,
					"name": "SetProtocol",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "SetProtocol"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe SetProtocol class that exposes all functionality for interacting with the SetProtocol smart contracts.\nMethods that require interaction with the Ethereum blockchain are exposed after instantiating a new instance\nof SetProtocol with the web3 provider argument\n"
							}
						]
					},
					"children": [
						{
							"id": 879,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Instantiates a new SetProtocol instance that provides the public interface to the SetProtocol.js library."
							},
							"signatures": [
								{
									"id": 880,
									"name": "new SetProtocol",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Instantiates a new SetProtocol instance that provides the public interface to the SetProtocol.js library."
									},
									"parameters": [
										{
											"id": 881,
											"name": "provider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The provider instance you would like the SetProtocol.js library\n                             to use for interacting with the Ethereum network."
											},
											"type": {
												"type": "reference",
												"name": "Provider"
											},
											"defaultValue": " undefined"
										},
										{
											"id": 882,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A configuration object with Set Protocol's contract addresses\n"
											},
											"type": {
												"type": "reference",
												"name": "SetProtocolConfig",
												"id": 865
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SetProtocol",
										"id": 869
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 68,
									"character": 35
								}
							]
						},
						{
							"id": 873,
							"name": "accounting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 46,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "AccountingAPI",
								"id": 747
							}
						},
						{
							"id": 871,
							"name": "core",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 44,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CoreWrapper",
								"id": 419
							}
						},
						{
							"id": 877,
							"name": "erc20",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "An instance of the ERC20Wrapper class containing methods for interacting with ERC20 compliant contracts"
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 63,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "ERC20Wrapper",
								"id": 563
							}
						},
						{
							"id": 874,
							"name": "issuance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 47,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "IssuanceAPI",
								"id": 776
							}
						},
						{
							"id": 876,
							"name": "orders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "An instance of the OrderAPI class containing methods for relaying IssuanceOrders"
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 58,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "OrderAPI",
								"id": 809
							}
						},
						{
							"id": 878,
							"name": "setToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "An instance of the OrderAPI class containing methods for relaying IssuanceOrders"
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 68,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "SetTokenWrapper",
								"id": 611
							}
						},
						{
							"id": 872,
							"name": "vault",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 45,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "VaultWrapper",
								"id": 635
							}
						},
						{
							"id": 870,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 43,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 875,
							"name": "NULL_ADDRESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "When creating an issuance order without a relayer token for a fee, you must use Solidity\naddress null type (as opposed to Javascripts `null`, `undefined` or empty string)."
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 53,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " SetProtocolUtils.CONSTANTS.NULL_ADDRESS"
						},
						{
							"id": 883,
							"name": "createSetAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 884,
									"name": "createSetAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new Set, specifying the components, units, name, symbol to use.",
										"returns": "A transaction hash to then later look up for the Set address\n"
									},
									"parameters": [
										{
											"id": 885,
											"name": "factoryAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Set Token factory address of the token being created"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 886,
											"name": "components",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Component token addresses"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 887,
											"name": "units",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Units of corresponding token components"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 888,
											"name": "naturalUnit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Supplied as the lowest common denominator for the Set"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 889,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "User-supplied name for Set (i.e. \"DEX Set\")"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 890,
											"name": "symbol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "User-supplied symbol for Set (i.e. \"DEX\")"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 891,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 101,
									"character": 29
								}
							]
						},
						{
							"id": 904,
							"name": "depositAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 905,
									"name": "depositAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deposits token either using single token type deposit or batch deposit",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 906,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 907,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 908,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 157,
									"character": 27
								}
							]
						},
						{
							"id": 923,
							"name": "getBalanceInVaultAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 924,
									"name": "getBalanceInVaultAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the balance of the provided contract address inside the vault specified\nin SetProtocolConfig",
										"returns": "The balance of the contract in the vault\n"
									},
									"parameters": [
										{
											"id": 925,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the contract (typically SetToken or ERC20)"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 926,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the user"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 219,
									"character": 37
								}
							]
						},
						{
							"id": 927,
							"name": "getSetAddressFromCreateTxHashAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 928,
									"name": "getSetAddressFromCreateTxHashAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously retrieves a Set Token address from a createSet txHash",
										"returns": "The address of the newly created Set\n"
									},
									"parameters": [
										{
											"id": 929,
											"name": "txHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The transaction has to retrieve the set address from"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 229,
									"character": 49
								}
							]
						},
						{
							"id": 930,
							"name": "getSetAddressesAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 931,
									"name": "getSetAddressesAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the addresses of SetTokens and RebalancingSetTokens created by the system\nof contracts specified in SetProtcolConfig",
										"returns": "Array of SetToken and RebalancingSetToken addresses\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 239,
									"character": 35
								}
							]
						},
						{
							"id": 932,
							"name": "isValidFactoryAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 933,
									"name": "isValidFactoryAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Verifies that the provided SetToken factory is enabled for creating a new SetToken",
										"returns": "Whether the factory contract is enabled\n"
									},
									"parameters": [
										{
											"id": 934,
											"name": "factoryAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the factory contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 249,
									"character": 34
								}
							]
						},
						{
							"id": 935,
							"name": "isValidSetAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 936,
									"name": "isValidSetAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Verifies that the provided SetToken or RebalancingSetToken address is enabled\nfor issuance and redemption",
										"returns": "Whether the set contract is enabled\n"
									},
									"parameters": [
										{
											"id": 937,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the SetToken or RebalancingSetToken contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 260,
									"character": 30
								}
							]
						},
						{
							"id": 892,
							"name": "issueAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 893,
									"name": "issueAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Issues a Set to the transaction signer. Must have component tokens in the correct quantites in either\nthe vault or in the signer's wallet. Component tokens must be approved to the Transfer\nProxy contract via setTransferProxyAllowanceAsync",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 894,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of Set to issue"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 895,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of Set to issue. Must be multiple of the natural unit of the Set"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 896,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 123,
									"character": 25
								}
							]
						},
						{
							"id": 897,
							"name": "redeemAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 898,
									"name": "redeemAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Redeems a Set to the transaction signer, returning the component tokens to the signer's wallet. Set withdraw\nto false to leave redeemed components in vault under the user's address to save gas if rebundling into another\nSet with similar components",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 899,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of Set to issue"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 900,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amount of Set to redeem. Must be multiple of the natural unit of the Set"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 901,
											"name": "withdraw",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Boolean to withdraw back to signer's wallet or leave in vault. Defaults to true"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										},
										{
											"id": 902,
											"name": "tokensToExclude",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Token addresses to exclude from withdrawal"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 903,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 139,
									"character": 26
								}
							]
						},
						{
							"id": 914,
							"name": "setTransferProxyAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 915,
									"name": "setTransferProxyAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Set TransferProxy contract's allowance to a specified quantity on behalf of the user. Allowance is\nrequired for issuing, redeeming, and filling issuance orders",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 916,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of contract to approve (typically SetToken or ERC20)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 917,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The allowance quantity"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 918,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 182,
									"character": 45
								}
							]
						},
						{
							"id": 919,
							"name": "setUnlimitedTransferProxyAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 920,
									"name": "setUnlimitedTransferProxyAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Set TransferProxy contract's allowance to a unlimited number on behalf of the user. Allowance is\nrequired for issuing, redeeming, and filling issuance orders",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 921,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of contract to approve (typically SetToken or ERC20)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 922,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 203,
									"character": 54
								}
							]
						},
						{
							"id": 909,
							"name": "withdrawAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 910,
									"name": "withdrawAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Withdraws tokens either using single token type withdraw or batch withdraw",
										"returns": "Transaction hash\n"
									},
									"parameters": [
										{
											"id": 911,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 912,
											"name": "quantities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 913,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.ts",
									"line": 169,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								879
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								873,
								871,
								877,
								874,
								876,
								878,
								872,
								870,
								875
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								883,
								904,
								923,
								927,
								930,
								932,
								935,
								892,
								897,
								914,
								919,
								909
							]
						}
					],
					"sources": [
						{
							"fileName": "index.ts",
							"line": 42,
							"character": 17
						}
					]
				},
				{
					"id": 865,
					"name": "SetProtocolConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 866,
							"name": "coreAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 29,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 867,
							"name": "transferProxyAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 30,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 868,
							"name": "vaultAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 31,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								866,
								867,
								868
							]
						}
					],
					"sources": [
						{
							"fileName": "index.ts",
							"line": 28,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						869
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						865
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 240,
			"name": "\"schemas/SchemaValidator\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/schemas/SchemaValidator.ts",
			"children": [
				{
					"id": 241,
					"name": "SchemaValidator",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Borrowed, with slight modification, from the wonderful dharma codebase and 0x.js project codebase:\nhttps://github.com/0xProject/0x.js/tree/development/packages/json-schemas"
					},
					"children": [
						{
							"id": 243,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 244,
									"name": "new SchemaValidator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SchemaValidator",
										"id": 241
									}
								}
							],
							"sources": [
								{
									"fileName": "schemas/SchemaValidator.ts",
									"line": 30,
									"character": 32
								}
							]
						},
						{
							"id": 242,
							"name": "_validator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/SchemaValidator.ts",
									"line": 30,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "Validator"
							}
						},
						{
							"id": 256,
							"name": "addCustomValidators",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 257,
									"name": "addCustomValidators",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "schemas/SchemaValidator.ts",
									"line": 55,
									"character": 28
								}
							]
						},
						{
							"id": 245,
							"name": "addSchema",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 246,
									"name": "addSchema",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 247,
											"name": "schema",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Schema"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "schemas/SchemaValidator.ts",
									"line": 42,
									"character": 18
								}
							]
						},
						{
							"id": 252,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 253,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 254,
											"name": "instance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 255,
											"name": "schema",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Schema"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "schemas/SchemaValidator.ts",
									"line": 50,
									"character": 16
								}
							]
						},
						{
							"id": 248,
							"name": "validate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 249,
									"name": "validate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 250,
											"name": "instance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 251,
											"name": "schema",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Schema"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValidatorResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "schemas/SchemaValidator.ts",
									"line": 46,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								243
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								242
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								256,
								245,
								252,
								248
							]
						}
					],
					"sources": [
						{
							"fileName": "schemas/SchemaValidator.ts",
							"line": 29,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						241
					]
				}
			],
			"sources": [
				{
					"fileName": "schemas/SchemaValidator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 182,
			"name": "\"schemas/basicTypeSchemas\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/schemas/basicTypeSchemas.ts",
			"children": [
				{
					"id": 183,
					"name": "addressSchema",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 184,
							"name": "id",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"/Address\""
						},
						{
							"id": 186,
							"name": "pattern",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 22,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"^0x[0-9a-fA-F]{40}$\""
						},
						{
							"id": 185,
							"name": "type",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 21,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"string\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								184,
								186,
								185
							]
						}
					],
					"sources": [
						{
							"fileName": "schemas/basicTypeSchemas.ts",
							"line": 19,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 187,
					"name": "bytes32Schema",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 188,
							"name": "id",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"/Bytes32\""
						},
						{
							"id": 190,
							"name": "pattern",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 28,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"^0x[0-9a-fA-F]{64}$\""
						},
						{
							"id": 189,
							"name": "type",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 27,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"string\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								188,
								190,
								189
							]
						}
					],
					"sources": [
						{
							"fileName": "schemas/basicTypeSchemas.ts",
							"line": 25,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 191,
					"name": "bytesSchema",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 192,
							"name": "id",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"/Bytes\""
						},
						{
							"id": 194,
							"name": "pattern",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 34,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"^0x[0-9a-fA-F]*$\""
						},
						{
							"id": 193,
							"name": "type",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 33,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"string\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								192,
								194,
								193
							]
						}
					],
					"sources": [
						{
							"fileName": "schemas/basicTypeSchemas.ts",
							"line": 31,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 195,
					"name": "numberSchema",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 198,
							"name": "format",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 41,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"BigNumber\""
						},
						{
							"id": 196,
							"name": "id",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 38,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"/Number\""
						},
						{
							"id": 197,
							"name": "type",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 39,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"object\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								198,
								196,
								197
							]
						}
					],
					"sources": [
						{
							"fileName": "schemas/basicTypeSchemas.ts",
							"line": 37,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 199,
					"name": "wholeNumberSchema",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 202,
							"name": "format",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 47,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"wholeBigNumber\""
						},
						{
							"id": 200,
							"name": "id",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 45,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"/WholeNumber\""
						},
						{
							"id": 201,
							"name": "type",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/basicTypeSchemas.ts",
									"line": 46,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"object\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								202,
								200,
								201
							]
						}
					],
					"sources": [
						{
							"fileName": "schemas/basicTypeSchemas.ts",
							"line": 44,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						183,
						187,
						191,
						195,
						199
					]
				}
			],
			"sources": [
				{
					"fileName": "schemas/basicTypeSchemas.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 230,
			"name": "\"schemas/customFormats\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/schemas/customFormats.ts",
			"children": [
				{
					"id": 231,
					"name": "bigNumberFormat",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 232,
							"name": "bigNumberFormat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 233,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "schemas/customFormats.ts",
							"line": 24,
							"character": 28
						}
					]
				},
				{
					"id": 237,
					"name": "isBigNumber",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 238,
							"name": "isBigNumber",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "NOTE: BigNumber.js is currently changing their API, and the method `isBigNumber` on instances\nof BigNumber is deprecated. I.E. this will not be available in the next version (v6.0.)",
								"text": "However, Truffe.js uses v5.0, and so we are dependent on v5.0 until Truffle upgrades.\n\nIn version 6.0, this can be replaced with `BigNumber.isBigNumber(object);`\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 239,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "schemas/customFormats.ts",
							"line": 47,
							"character": 20
						}
					]
				},
				{
					"id": 234,
					"name": "wholeBigNumberFormat",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 235,
							"name": "wholeBigNumberFormat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 236,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "schemas/customFormats.ts",
							"line": 30,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						231,
						237,
						234
					]
				}
			],
			"sources": [
				{
					"fileName": "schemas/customFormats.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 258,
			"name": "\"schemas/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/schemas/index.ts",
			"sources": [
				{
					"fileName": "schemas/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 203,
			"name": "\"schemas/schemas\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/schemas/schemas.ts",
			"children": [
				{
					"id": 204,
					"name": "schemas",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 205,
							"name": "addressSchema",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/schemas.ts",
									"line": 28,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 206,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 207,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 20,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/Address\""
										},
										{
											"id": 209,
											"name": "pattern",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 22,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"^0x[0-9a-fA-F]{40}$\""
										},
										{
											"id": 208,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 21,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"string\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												207,
												209,
												208
											]
										}
									]
								}
							}
						},
						{
							"id": 220,
							"name": "bytes32Schema",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/schemas.ts",
									"line": 31,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 221,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 222,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 26,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/Bytes32\""
										},
										{
											"id": 224,
											"name": "pattern",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 28,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"^0x[0-9a-fA-F]{64}$\""
										},
										{
											"id": 223,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 27,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"string\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												222,
												224,
												223
											]
										}
									]
								}
							}
						},
						{
							"id": 215,
							"name": "bytesSchema",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/schemas.ts",
									"line": 30,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 217,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/Bytes\""
										},
										{
											"id": 219,
											"name": "pattern",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 34,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"^0x[0-9a-fA-F]*$\""
										},
										{
											"id": 218,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 33,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"string\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												217,
												219,
												218
											]
										}
									]
								}
							}
						},
						{
							"id": 210,
							"name": "numberSchema",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/schemas.ts",
									"line": 29,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 211,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 214,
											"name": "format",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 41,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"BigNumber\""
										},
										{
											"id": 212,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 38,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/Number\""
										},
										{
											"id": 213,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 39,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"object\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												214,
												212,
												213
											]
										}
									]
								}
							}
						},
						{
							"id": 225,
							"name": "wholeNumberSchema",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "schemas/schemas.ts",
									"line": 32,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 226,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 229,
											"name": "format",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 47,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"wholeBigNumber\""
										},
										{
											"id": 227,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 45,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/WholeNumber\""
										},
										{
											"id": 228,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "schemas/basicTypeSchemas.ts",
													"line": 46,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"object\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												229,
												227,
												228
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								205,
								220,
								215,
								210,
								225
							]
						}
					],
					"sources": [
						{
							"fileName": "schemas/schemas.ts",
							"line": 27,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						204
					]
				}
			],
			"sources": [
				{
					"fileName": "schemas/schemas.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 382,
			"name": "\"types/abi-decoder/index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/types/abi-decoder/index.d.ts",
			"children": [
				{
					"id": 383,
					"name": "\"abi-decoder\"",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"children": [
						{
							"id": 384,
							"name": "DecodedLog",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 387,
									"name": "address",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 7,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 386,
									"name": "events",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 6,
											"character": 10
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "DecodedMethodParam",
											"id": 388
										}
									}
								},
								{
									"id": 385,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 5,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										387,
										386,
										385
									]
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 4,
									"character": 29
								}
							]
						},
						{
							"id": 392,
							"name": "DecodedMethod",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 393,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 17,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 394,
									"name": "params",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 18,
											"character": 10
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "DecodedMethodParam",
											"id": 388
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										393,
										394
									]
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 16,
									"character": 32
								}
							]
						},
						{
							"id": 388,
							"name": "DecodedMethodParam",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 389,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 11,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 391,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 13,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 390,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "types/abi-decoder/index.d.ts",
											"line": 12,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										389,
										391,
										390
									]
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 10,
									"character": 37
								}
							]
						},
						{
							"id": 395,
							"name": "addABI",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 396,
									"name": "addABI",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 397,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 21,
									"character": 24
								}
							]
						},
						{
							"id": 401,
							"name": "decodeLogs",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 402,
									"name": "decodeLogs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 403,
											"name": "logs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "DecodedLog",
											"id": 384
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 23,
									"character": 28
								}
							]
						},
						{
							"id": 404,
							"name": "decodeMethod",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 405,
									"name": "decodeMethod",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 406,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "DecodedMethod",
										"id": 392
									}
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 24,
									"character": 30
								}
							]
						},
						{
							"id": 398,
							"name": "removeABI",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 399,
									"name": "removeABI",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 400,
											"name": "abi",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/abi-decoder/index.d.ts",
									"line": 22,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								384,
								392,
								388
							]
						},
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								395,
								401,
								404,
								398
							]
						}
					],
					"sources": [
						{
							"fileName": "types/abi-decoder/index.d.ts",
							"line": 1,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						383
					]
				}
			],
			"sources": [
				{
					"fileName": "types/abi-decoder/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 938,
			"name": "\"types/chai-bignumber/index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/types/chai-bignumber/index.d.ts",
			"children": [
				{
					"id": 939,
					"name": "\"chai-bignumber\"",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"children": [
						{
							"id": 940,
							"name": "chaiBignumber",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true,
								"hasExportAssignment": true
							},
							"signatures": [
								{
									"id": 941,
									"name": "chaiBignumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 942,
											"name": "bignumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 943,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 944,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 945,
															"name": "chai",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 946,
															"name": "utils",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "types/chai-bignumber/index.d.ts",
													"line": 4,
													"character": 41
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "types/chai-bignumber/index.d.ts",
									"line": 4,
									"character": 24
								},
								{
									"fileName": "types/chai-bignumber/index.d.ts",
									"line": 6,
									"character": 25
								}
							]
						}
					],
					"groups": [
						{
							"title": "Modules",
							"kind": 2,
							"children": [
								940
							]
						}
					],
					"sources": [
						{
							"fileName": "types/chai-bignumber/index.d.ts",
							"line": 3,
							"character": 31
						}
					]
				},
				{
					"id": 947,
					"name": "Chai",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"children": [
						{
							"id": 948,
							"name": "Assertion",
							"kind": 256,
							"kindString": "Interface",
							"flags": {},
							"signatures": [
								{
									"id": 978,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 979,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 980,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									}
								}
							],
							"children": [
								{
									"id": 963,
									"name": "above",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 140,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.above"
									}
								},
								{
									"id": 956,
									"name": "and",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 130,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.and"
									}
								},
								{
									"id": 960,
									"name": "at",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 134,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.at"
									}
								},
								{
									"id": 951,
									"name": "be",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 125,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.be"
									}
								},
								{
									"id": 952,
									"name": "been",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 126,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.been"
									}
								},
								{
									"id": 968,
									"name": "below",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 145,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.below"
									}
								},
								{
									"id": 949,
									"name": "bignumber",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "types/chai-bignumber/index.d.ts",
											"line": 16,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									}
								},
								{
									"id": 965,
									"name": "greaterThan",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 142,
											"character": 19
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.greaterThan"
									}
								},
								{
									"id": 964,
									"name": "gt",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 141,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.gt"
									}
								},
								{
									"id": 967,
									"name": "gte",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 144,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.gte"
									}
								},
								{
									"id": 957,
									"name": "has",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 131,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.has"
									}
								},
								{
									"id": 958,
									"name": "have",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 132,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.have"
									}
								},
								{
									"id": 982,
									"name": "instanceOf",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 160,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"name": "InstanceOf"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypeComparison.instanceOf"
									}
								},
								{
									"id": 981,
									"name": "instanceof",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 159,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"name": "InstanceOf"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TypeComparison.instanceof"
									}
								},
								{
									"id": 953,
									"name": "is",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 127,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.is"
									}
								},
								{
									"id": 966,
									"name": "least",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 143,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.least"
									}
								},
								{
									"id": 970,
									"name": "lessThan",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 147,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.lessThan"
									}
								},
								{
									"id": 969,
									"name": "lt",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 146,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.lt"
									}
								},
								{
									"id": 972,
									"name": "lte",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 149,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.lte"
									}
								},
								{
									"id": 971,
									"name": "most",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 148,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "NumberComparer"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.most"
									}
								},
								{
									"id": 961,
									"name": "of",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 135,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.of"
									}
								},
								{
									"id": 962,
									"name": "same",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 136,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.same"
									}
								},
								{
									"id": 954,
									"name": "that",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 128,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.that"
									}
								},
								{
									"id": 950,
									"name": "to",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 124,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.to"
									}
								},
								{
									"id": 955,
									"name": "which",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 129,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.which"
									}
								},
								{
									"id": 959,
									"name": "with",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 133,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Assertion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "LanguageChains.with"
									}
								},
								{
									"id": 973,
									"name": "within",
									"kind": 2048,
									"kindString": "Method",
									"flags": {},
									"signatures": [
										{
											"id": 974,
											"name": "within",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 975,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 976,
													"name": "finish",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 977,
													"name": "message",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Assertion"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "NumericComparison.within"
											}
										}
									],
									"sources": [
										{
											"fileName": "/Users/felixfeng/Dapps/setProtocol.js/node_modules/@0xproject/typescript-typings/types/chai/index.d.ts",
											"line": 150,
											"character": 14
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "NumericComparison.within"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										963,
										956,
										960,
										951,
										952,
										968,
										949,
										965,
										964,
										967,
										957,
										958,
										982,
										981,
										953,
										966,
										970,
										969,
										972,
										971,
										961,
										962,
										954,
										950,
										955,
										959
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										973
									]
								}
							],
							"sources": [
								{
									"fileName": "types/chai-bignumber/index.d.ts",
									"line": 15,
									"character": 21
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "LanguageChains"
								},
								{
									"type": "reference",
									"name": "NumericComparison"
								},
								{
									"type": "reference",
									"name": "TypeComparison"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								948
							]
						}
					],
					"sources": [
						{
							"fileName": "types/chai-bignumber/index.d.ts",
							"line": 13,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						939,
						947
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chai-bignumber/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 61,
			"name": "\"types/common\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/types/common.ts",
			"children": [
				{
					"id": 62,
					"name": "Component",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 63,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 6,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 64,
							"name": "unit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								63,
								64
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 5,
							"character": 26
						}
					]
				},
				{
					"id": 87,
					"name": "CreateLogArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 90,
							"name": "_components",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 39,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Address"
								}
							}
						},
						{
							"id": 89,
							"name": "_factoryAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 38,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 93,
							"name": "_name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 42,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 92,
							"name": "_naturalUnit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 41,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 88,
							"name": "_setTokenAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 37,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 94,
							"name": "_symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 43,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 91,
							"name": "_units",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 40,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "BigNumber"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								90,
								89,
								93,
								92,
								88,
								94,
								91
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 36,
							"character": 30
						}
					]
				},
				{
					"id": 65,
					"name": "SetComponent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 66,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 11,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 68,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 13,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 67,
							"name": "quantity",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 69,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 14,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								66,
								68,
								67,
								69
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 10,
							"character": 29
						}
					]
				},
				{
					"id": 70,
					"name": "Token",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 71,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 74,
							"name": "balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 21,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 75,
							"name": "decimals",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 22,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						},
						{
							"id": 72,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 19,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 73,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 20,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								71,
								74,
								75,
								72,
								73
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 17,
							"character": 22
						}
					]
				},
				{
					"id": 76,
					"name": "TxData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 77,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 26,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 78,
							"name": "gas",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 27,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "UInt"
							}
						},
						{
							"id": 79,
							"name": "gasPrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 28,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "UInt"
							}
						},
						{
							"id": 80,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 29,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								77,
								78,
								79,
								80
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 25,
							"character": 23
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "TxDataPayable",
							"id": 81
						}
					]
				},
				{
					"id": 81,
					"name": "TxDataPayable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 83,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 26,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TxData.from",
								"id": 77
							}
						},
						{
							"id": 84,
							"name": "gas",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 27,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "UInt"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TxData.gas",
								"id": 78
							}
						},
						{
							"id": 85,
							"name": "gasPrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 28,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "UInt"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TxData.gasPrice",
								"id": 79
							}
						},
						{
							"id": 86,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 29,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TxData.nonce",
								"id": 80
							}
						},
						{
							"id": 82,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.ts",
									"line": 33,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								83,
								84,
								85,
								86,
								82
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.ts",
							"line": 32,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "TxData",
							"id": 76
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						62,
						87,
						65,
						70,
						76,
						81
					]
				}
			],
			"sources": [
				{
					"fileName": "types/common.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 983,
			"name": "\"types/ethereumjs-util/index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/types/ethereumjs-util/index.d.ts",
			"children": [
				{
					"id": 984,
					"name": "\"ethereumjs-util\"",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"sources": [
						{
							"fileName": "types/ethereumjs-util/index.d.ts",
							"line": 1,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						984
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ethereumjs-util/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 18,
			"name": "\"types/tiny-promisify/index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/types/tiny-promisify/index.d.ts",
			"children": [
				{
					"id": 19,
					"name": "\"tiny-promisify\"",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"sources": [
						{
							"fileName": "types/tiny-promisify/index.d.ts",
							"line": 1,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						19
					]
				}
			],
			"sources": [
				{
					"fileName": "types/tiny-promisify/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 985,
			"name": "\"types/truffle-hdwallet-provider/index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/types/truffle-hdwallet-provider/index.d.ts",
			"children": [
				{
					"id": 986,
					"name": "\"truffle-hdwallet-provider\"",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"sources": [
						{
							"fileName": "types/truffle-hdwallet-provider/index.d.ts",
							"line": 1,
							"character": 42
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						986
					]
				}
			],
			"sources": [
				{
					"fileName": "types/truffle-hdwallet-provider/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 20,
			"name": "\"types/web3-utils/index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/types/web3-utils/index.d.ts",
			"children": [
				{
					"id": 21,
					"name": "\"web3-utils\"",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"sources": [
						{
							"fileName": "types/web3-utils/index.d.ts",
							"line": 1,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						21
					]
				}
			],
			"sources": [
				{
					"fileName": "types/web3-utils/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 22,
			"name": "\"util/Web3Utils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/util/Web3Utils.ts",
			"children": [
				{
					"id": 23,
					"name": "Web3Utils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 25,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 26,
									"name": "new Web3Utils",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 27,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Web3Utils",
										"id": 23
									}
								}
							],
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 30,
									"character": 21
								}
							]
						},
						{
							"id": 24,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 30,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 35,
							"name": "doesContractExistAtAddressAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 36,
									"name": "doesContractExistAtAddressAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 37,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 48,
									"character": 46
								}
							]
						},
						{
							"id": 33,
							"name": "getAvailableAddressesAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 34,
									"name": "getAvailableAddressesAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 44,
									"character": 41
								}
							]
						},
						{
							"id": 46,
							"name": "getCurrentBlockTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 47,
									"name": "getCurrentBlockTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the current blocktime in seconds.",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 75,
									"character": 34
								}
							]
						},
						{
							"id": 31,
							"name": "getNetworkIdAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 32,
									"name": "getNetworkIdAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 40,
									"character": 32
								}
							]
						},
						{
							"id": 38,
							"name": "getTransactionReceiptAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 39,
									"name": "getTransactionReceiptAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 40,
											"name": "txHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TransactionReceipt"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 56,
									"character": 41
								}
							]
						},
						{
							"id": 48,
							"name": "increaseTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 49,
									"name": "increaseTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Increases block time by the given number of seconds. Returns true\nif the next block was mined successfully after increasing time.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 50,
											"name": "seconds",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 88,
									"character": 27
								}
							]
						},
						{
							"id": 51,
							"name": "mineBlock",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 52,
									"name": "mineBlock",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Mines a single block.",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "JSONRPCResponsePayload"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 102,
									"character": 24
								}
							]
						},
						{
							"id": 43,
							"name": "revertToSnapshot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 44,
									"name": "revertToSnapshot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 45,
											"name": "snapshotId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 65,
									"character": 31
								}
							]
						},
						{
							"id": 41,
							"name": "saveTestSnapshot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 42,
									"name": "saveTestSnapshot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 60,
									"character": 31
								}
							]
						},
						{
							"id": 53,
							"name": "sendJsonRpcRequestAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 54,
									"name": "sendJsonRpcRequestAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 55,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 56,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "JSONRPCResponsePayload"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 106,
									"character": 39
								}
							]
						},
						{
							"id": 28,
							"name": "soliditySHA3",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 29,
									"name": "soliditySHA3",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 30,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/Web3Utils.ts",
									"line": 36,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								25
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								24
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								35,
								33,
								46,
								31,
								38,
								48,
								51,
								43,
								41,
								53,
								28
							]
						}
					],
					"sources": [
						{
							"fileName": "util/Web3Utils.ts",
							"line": 29,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						23
					]
				}
			],
			"sources": [
				{
					"fileName": "util/Web3Utils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"util/bignumber\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/util/bignumber.ts",
			"sources": [
				{
					"fileName": "util/bignumber.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2,
			"name": "\"util/classUtils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/util/classUtils.ts",
			"children": [
				{
					"id": 3,
					"name": "classUtils",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 4,
							"name": "bindAll",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5,
									"name": "bindAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 6,
											"name": "self",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 7,
											"name": "exclude",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": " ['contructor']"
										},
										{
											"id": 8,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/classUtils.ts",
									"line": 5,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								4
							]
						}
					],
					"sources": [
						{
							"fileName": "util/classUtils.ts",
							"line": 3,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "util/classUtils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 144,
			"name": "\"util/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/util/index.ts",
			"sources": [
				{
					"fileName": "util/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 407,
			"name": "\"util/logs\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/util/logs.ts",
			"children": [
				{
					"id": 415,
					"name": "extractNewSetTokenAddressFromLogs",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 416,
							"name": "extractNewSetTokenAddressFromLogs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 417,
									"name": "logs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Log"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						}
					],
					"sources": [
						{
							"fileName": "util/logs.ts",
							"line": 71,
							"character": 49
						}
					]
				},
				{
					"id": 412,
					"name": "formatLogEntry",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 413,
							"name": "formatLogEntry",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts a ABI Decoded Log into a Log\nInput Example\n{\n  name: 'Transfer',\n  events: [\n   { name: 'from',\n     type: 'address',\n     value: '0xc604980c49f5c3be6e7e42526ec00f211e333385' },\n   { name: 'to',\n     type: 'address',\n     value: '0xf8600afbf76236454a53e8dcc4d1feaa26fe1a77' },\n   { name: 'value', type: 'uint256', value: '10000000000000000000' },\n  ],\n  address: '0xea76972f7587c27887aa403d84671717f6826f62'\n}",
								"text": "Output Example\n{\n  event: \"Transfer\",\n  address: tokenAddress,\n  args: {\n    from,\n    to,\n    value,\n  },\n};\n"
							},
							"parameters": [
								{
									"id": 414,
									"name": "logs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "DecodedLog",
										"id": 384
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Log"
							}
						}
					],
					"sources": [
						{
							"fileName": "util/logs.ts",
							"line": 42,
							"character": 30
						}
					]
				},
				{
					"id": 408,
					"name": "getFormattedLogsFromTxHash",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 409,
							"name": "getFormattedLogsFromTxHash",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 410,
									"name": "web3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Web3"
									}
								},
								{
									"id": 411,
									"name": "txHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Log"
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "util/logs.ts",
							"line": 8,
							"character": 48
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						415,
						412,
						408
					]
				}
			],
			"sources": [
				{
					"fileName": "util/logs.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 9,
			"name": "\"util/provider\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/util/provider.ts",
			"children": [
				{
					"id": 10,
					"name": "instantiateWeb3",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 11,
							"name": "instantiateWeb3",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 12,
									"name": "provider",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Provider"
									},
									"defaultValue": " undefined"
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						}
					],
					"sources": [
						{
							"fileName": "util/provider.ts",
							"line": 7,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						10
					]
				}
			],
			"sources": [
				{
					"fileName": "util/provider.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 13,
			"name": "\"util/setTokenUtils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/util/setTokenUtils.ts",
			"children": [
				{
					"id": 14,
					"name": "TRANSFER_GAS_MAXIMUM",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "util/setTokenUtils.ts",
							"line": 21,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "BigNumber"
					},
					"defaultValue": " new BigNumber(70000)"
				},
				{
					"id": 15,
					"name": "estimateIssueRedeemGasCost",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 16,
							"name": "estimateIssueRedeemGasCost",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 17,
									"name": "numComponents",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNumber"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "util/setTokenUtils.ts",
							"line": 23,
							"character": 39
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						14
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						15
					]
				}
			],
			"sources": [
				{
					"fileName": "util/setTokenUtils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 121,
			"name": "\"util/signatureUtils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/util/signatureUtils.ts",
			"children": [
				{
					"id": 122,
					"name": "SignatureUtils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 129,
							"name": "addPersonalMessagePrefix",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 130,
									"name": "addPersonalMessagePrefix",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Applies an Ethereum-specific prefix to the message payload we intend on signing,\nas per the `eth_sign` specification in the JSON-RPC wiki:",
										"text": "https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n\nThis must *sometimes* be manually done by our libraries because certain signing\nclients (e.g. Metamask) do not adhere to the `eth_sign` specification described\nabove.\n",
										"returns": "Message hashed as per how certain clients (i.e. Metamask)\n expect to ingest messages in `eth_sign`\n"
									},
									"parameters": [
										{
											"id": 131,
											"name": "messageHashHex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The raw hex message payload"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/signatureUtils.ts",
									"line": 66,
									"character": 40
								}
							]
						},
						{
							"id": 138,
							"name": "convertToHexRSV",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 139,
									"name": "convertToHexRSV",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 140,
											"name": "signature",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ECSig"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/signatureUtils.ts",
									"line": 99,
									"character": 31
								}
							]
						},
						{
							"id": 141,
							"name": "convertToHexVRS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 142,
									"name": "convertToHexVRS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 143,
											"name": "signature",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ECSig"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/signatureUtils.ts",
									"line": 104,
									"character": 31
								}
							]
						},
						{
							"id": 123,
							"name": "isValidSignature",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 124,
									"name": "isValidSignature",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Given a data payload, signature, and a signer's address, returns true\nif the given signature is valid.",
										"returns": "Whether or not the signature is valid.\n"
									},
									"parameters": [
										{
											"id": 125,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Data payload"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 126,
											"name": "signature",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Signature"
											},
											"type": {
												"type": "reference",
												"name": "ECSig"
											}
										},
										{
											"id": 127,
											"name": "signerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The Signer's address"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 128,
											"name": "addPersonalMessagePrefix",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "In certain circumstances, the `eth_sign`\n     API adds an Ethereum-specific prefix to message payloads.  This option\n     specifies whether, in the `isValidSignature`, we want to add the\n     Ethereum-specifc prefix to the message payload."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/signatureUtils.ts",
									"line": 24,
									"character": 32
								}
							]
						},
						{
							"id": 135,
							"name": "parseSignatureHexAsRSV",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 136,
									"name": "parseSignatureHexAsRSV",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 137,
											"name": "signatureHex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ECSig"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/signatureUtils.ts",
									"line": 89,
									"character": 38
								}
							]
						},
						{
							"id": 132,
							"name": "parseSignatureHexAsVRS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 133,
									"name": "parseSignatureHexAsVRS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 134,
											"name": "signatureHex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ECSig"
									}
								}
							],
							"sources": [
								{
									"fileName": "util/signatureUtils.ts",
									"line": 73,
									"character": 38
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								129,
								138,
								141,
								123,
								135,
								132
							]
						}
					],
					"sources": [
						{
							"fileName": "util/signatureUtils.ts",
							"line": 10,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						122
					]
				}
			],
			"sources": [
				{
					"fileName": "util/signatureUtils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 57,
			"name": "\"util/timeStampUtils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/util/timeStampUtils.ts",
			"children": [
				{
					"id": 58,
					"name": "generateFutureTimestamp",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 59,
							"name": "generateFutureTimestamp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 60,
									"name": "seconds",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BigNumber"
							}
						}
					],
					"sources": [
						{
							"fileName": "util/timeStampUtils.ts",
							"line": 21,
							"character": 39
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						58
					]
				}
			],
			"sources": [
				{
					"fileName": "util/timeStampUtils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 116,
			"name": "\"util/transactionUtils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/util/transactionUtils.ts",
			"children": [
				{
					"id": 117,
					"name": "generateTxOpts",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 118,
							"name": "generateTxOpts",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 119,
									"name": "web3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Web3"
									}
								},
								{
									"id": 120,
									"name": "txOpts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "TxData",
										"id": 76
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "TxData",
										"id": 76
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "util/transactionUtils.ts",
							"line": 8,
							"character": 36
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						117
					]
				}
			],
			"sources": [
				{
					"fileName": "util/transactionUtils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 343,
			"name": "\"wrappers/ContractWrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/wrappers/ContractWrapper.ts",
			"children": [
				{
					"id": 344,
					"name": "ContractWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "ContractWrapper"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe Contracts API handles all functions that load contracts\n\n"
							}
						]
					},
					"children": [
						{
							"id": 351,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 352,
									"name": "new ContractWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 353,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ContractWrapper",
										"id": 344
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 41,
									"character": 58
								}
							]
						},
						{
							"id": 346,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 40,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions",
								"id": 734
							}
						},
						{
							"id": 347,
							"name": "cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 41,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 348,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 349,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 350,
												"name": "contractName",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "BaseContract"
										}
									},
									"sources": [
										{
											"fileName": "wrappers/ContractWrapper.ts",
											"line": 41,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 345,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 39,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 370,
							"name": "getCoreCacheKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 371,
									"name": "getCoreCacheKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a string used for accessing values in the core cache",
										"returns": "The cache key\n"
									},
									"parameters": [
										{
											"id": 372,
											"name": "coreAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Core contract to use"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 158,
									"character": 25
								}
							]
						},
						{
							"id": 376,
							"name": "getERC20TokenCacheKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 377,
									"name": "getERC20TokenCacheKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a string used for accessing values in the ERC20 token cache",
										"returns": "The cache key\n"
									},
									"parameters": [
										{
											"id": 378,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 Token contract to use"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 178,
									"character": 31
								}
							]
						},
						{
							"id": 373,
							"name": "getSetTokenCacheKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 374,
									"name": "getSetTokenCacheKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a string used for accessing values in the set token cache",
										"returns": "The cache key\n"
									},
									"parameters": [
										{
											"id": 375,
											"name": "setTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set Token contract to use"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 168,
									"character": 29
								}
							]
						},
						{
							"id": 379,
							"name": "getVaultCacheKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 380,
									"name": "getVaultCacheKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a string used for accessing values in the vault cache",
										"returns": "The cache key\n"
									},
									"parameters": [
										{
											"id": 381,
											"name": "vaultAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Vault contract to use"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 188,
									"character": 26
								}
							]
						},
						{
							"id": 354,
							"name": "loadCoreAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 355,
									"name": "loadCoreAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Load Core contract",
										"returns": "The Core Contract\n"
									},
									"parameters": [
										{
											"id": 356,
											"name": "coreAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Core contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 357,
											"name": "transactionOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Options sent into the contract deployed method"
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "CoreContract"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 56,
									"character": 28
								}
							]
						},
						{
							"id": 362,
							"name": "loadERC20TokenAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 363,
									"name": "loadERC20TokenAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Load ERC20 Token contract",
										"returns": "The ERC20 Token Contract\n"
									},
									"parameters": [
										{
											"id": 364,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 Token contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 365,
											"name": "transactionOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Options sent into the contract deployed method"
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DetailedERC20Contract"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 108,
									"character": 34
								}
							]
						},
						{
							"id": 358,
							"name": "loadSetTokenAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 359,
									"name": "loadSetTokenAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Load Set Token contract",
										"returns": "The Set Token Contract\n"
									},
									"parameters": [
										{
											"id": 360,
											"name": "setTokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set Token contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 361,
											"name": "transactionOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Options sent into the contract deployed method"
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SetTokenContract"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 80,
									"character": 32
								}
							]
						},
						{
							"id": 366,
							"name": "loadVaultAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 367,
									"name": "loadVaultAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Load Vault contract",
										"returns": "The Vault Contract\n"
									},
									"parameters": [
										{
											"id": 368,
											"name": "vaultAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Vault contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 369,
											"name": "transactionOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Options sent into the contract deployed method"
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "VaultContract"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ContractWrapper.ts",
									"line": 136,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								351
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								346,
								347,
								345
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								370,
								376,
								373,
								379,
								354,
								362,
								358,
								366
							]
						}
					],
					"sources": [
						{
							"fileName": "wrappers/ContractWrapper.ts",
							"line": 38,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						344
					]
				}
			],
			"sources": [
				{
					"fileName": "wrappers/ContractWrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 418,
			"name": "\"wrappers/CoreWrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/wrappers/CoreWrapper.ts",
			"children": [
				{
					"id": 419,
					"name": "CoreWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "CoreWrapper"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe Core API handles all functions on the Core SetProtocol smart contract.\n\n"
							}
						]
					},
					"children": [
						{
							"id": 427,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 428,
									"name": "new CoreWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 429,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										},
										{
											"id": 430,
											"name": "coreAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 431,
											"name": "transferProxyAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											},
											"defaultValue": " undefined"
										},
										{
											"id": 432,
											"name": "vaultAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											},
											"defaultValue": " undefined"
										}
									],
									"type": {
										"type": "reference",
										"name": "CoreWrapper",
										"id": 419
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 56,
									"character": 31
								}
							]
						},
						{
							"id": 421,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 50,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions",
								"id": 734
							}
						},
						{
							"id": 422,
							"name": "contracts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 51,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ContractWrapper",
								"id": 344
							}
						},
						{
							"id": 424,
							"name": "coreAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 54,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 423,
							"name": "setProtocolUtils",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 52,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "SetProtocolUtils"
							}
						},
						{
							"id": 425,
							"name": "transferProxyAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 55,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 426,
							"name": "vaultAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 56,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 420,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 49,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 558,
							"name": "assertCancelIssuanceOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 559,
									"name": "assertCancelIssuanceOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 560,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										},
										{
											"id": 561,
											"name": "quantityToCancel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 810,
									"character": 41
								}
							]
						},
						{
							"id": 529,
							"name": "assertCreateSet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 530,
									"name": "assertCreateSet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 531,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 532,
											"name": "factoryAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 533,
											"name": "components",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 534,
											"name": "units",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 535,
											"name": "naturalUnit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 536,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 537,
											"name": "symbol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 612,
									"character": 31
								}
							]
						},
						{
							"id": 538,
							"name": "assertCreateSignedIssuanceOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 539,
									"name": "assertCreateSignedIssuanceOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 540,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 541,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 542,
											"name": "requiredComponents",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 543,
											"name": "requiredComponentAmounts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 544,
											"name": "makerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 545,
											"name": "makerToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 546,
											"name": "makerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 547,
											"name": "expiration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 548,
											"name": "relayerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 549,
											"name": "relayerToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 550,
											"name": "makerRelayerFee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 551,
											"name": "takerRelayerFee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 671,
									"character": 47
								}
							]
						},
						{
							"id": 552,
							"name": "assertFillIssuanceOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 553,
									"name": "assertFillIssuanceOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 554,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 555,
											"name": "signedIssuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SignedIssuanceOrder"
											}
										},
										{
											"id": 556,
											"name": "quantityToFill",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 557,
											"name": "orderData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Bytes"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 729,
									"character": 39
								}
							]
						},
						{
							"id": 471,
							"name": "batchDeposit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 472,
									"name": "batchDeposit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously batch deposits tokens to the vault",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 473,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 474,
											"name": "quantitiesInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 475,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 280,
									"character": 27
								}
							]
						},
						{
							"id": 476,
							"name": "batchWithdraw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 477,
									"name": "batchWithdraw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously batch withdraws tokens from the vault",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 478,
											"name": "tokenAddresses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 479,
											"name": "quantitiesInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 480,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 303,
									"character": 28
								}
							]
						},
						{
							"id": 501,
							"name": "cancelOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 502,
									"name": "cancelOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cancels an Issuance Order",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 503,
											"name": "issuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Issuance order to cancel"
											},
											"type": {
												"type": "reference",
												"name": "IssuanceOrder"
											}
										},
										{
											"id": 504,
											"name": "quantityToCancel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Set to cancel in this call"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 505,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 457,
									"character": 26
								}
							]
						},
						{
							"id": 481,
							"name": "createOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 482,
									"name": "createOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new Issuance Order including the signature",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 483,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set token for issuance order"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 484,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Set tokens to create as part of issuance order"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 485,
											"name": "requiredComponents",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Addresses of required component tokens of Set"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 486,
											"name": "requiredComponentAmounts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Amounts of each required component needed"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 487,
											"name": "makerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of person making the order"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 488,
											"name": "makerToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of token the issuer is paying in"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 489,
											"name": "makerTokenAmount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of tokens being exchanged for aggregate order size"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 490,
											"name": "expiration",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Unix timestamp of expiration (in seconds)"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 491,
											"name": "relayerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of relayer of order"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 492,
											"name": "relayerToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of token paid to relayer"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 493,
											"name": "makerRelayerFee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of token paid to relayer by maker"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 494,
											"name": "takerRelayerFee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of token paid tp relayer by taker"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SignedIssuanceOrder"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 335,
									"character": 26
								}
							]
						},
						{
							"id": 433,
							"name": "createSet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 434,
									"name": "createSet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a new Set, specifying the components, units, name, symbol to use.",
										"returns": "A transaction hash to then later look up for the Set address\n"
									},
									"parameters": [
										{
											"id": 435,
											"name": "factoryAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Set Token factory address of the token being created"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 436,
											"name": "components",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Component token addresses"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										},
										{
											"id": 437,
											"name": "units",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Units of corresponding token components"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										},
										{
											"id": 438,
											"name": "naturalUnit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Supplied as the lowest common denominator for the Set"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 439,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "User-supplied name for Set (i.e. \"DEX Set\")"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 440,
											"name": "symbol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "User-supplied symbol for Set (i.e. \"DEX\")"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 441,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 98,
									"character": 24
								}
							]
						},
						{
							"id": 461,
							"name": "deposit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 462,
									"name": "deposit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously deposits tokens to the vault",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 463,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 464,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of tokens a user wants to deposit into the vault"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 465,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 234,
									"character": 22
								}
							]
						},
						{
							"id": 495,
							"name": "fillOrder",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 496,
									"name": "fillOrder",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fills an Issuance Order",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 497,
											"name": "signedIssuanceOrder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Signed issuance order to fill"
											},
											"type": {
												"type": "reference",
												"name": "SignedIssuanceOrder"
											}
										},
										{
											"id": 498,
											"name": "quantityToFill",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Set to fill in this call"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 499,
											"name": "orders",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"name": "ZeroExSignedFillOrder"
														},
														{
															"type": "reference",
															"name": "TakerWalletOrder"
														}
													]
												}
											}
										},
										{
											"id": 500,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 395,
									"character": 24
								}
							]
						},
						{
							"id": 506,
							"name": "getExchangeAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 507,
									"name": "getExchangeAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously gets the exchange address for a given exhange id",
										"returns": "An exchange address\n"
									},
									"parameters": [
										{
											"id": 508,
											"name": "exchangeId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Enum id of the exchange"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 506,
									"character": 33
								}
							]
						},
						{
							"id": 513,
							"name": "getFactories",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 514,
									"name": "getFactories",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously gets factory addresses",
										"returns": "Array of factory addresses\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 539,
									"character": 27
								}
							]
						},
						{
							"id": 526,
							"name": "getOrderCancels",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 527,
									"name": "getOrderCancels",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously gets the quantity of the Issuance Order cancelled",
										"returns": "Quantity of Issuance Order cancelled\n"
									},
									"parameters": [
										{
											"id": 528,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set contract"
											},
											"type": {
												"type": "reference",
												"name": "Bytes"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 603,
									"character": 30
								}
							]
						},
						{
							"id": 523,
							"name": "getOrderFills",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 524,
									"name": "getOrderFills",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously gets the quantity of the Issuance Order filled",
										"returns": "Quantity of Issuance Order filled\n"
									},
									"parameters": [
										{
											"id": 525,
											"name": "orderHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Bytes32 hash"
											},
											"type": {
												"type": "reference",
												"name": "Bytes"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 590,
									"character": 28
								}
							]
						},
						{
							"id": 442,
							"name": "getSetAddressFromCreateTxHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 443,
									"name": "getSetAddressFromCreateTxHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously retrieves a Set Token address from a createSet txHash",
										"returns": "The address of the newly created Set\n"
									},
									"parameters": [
										{
											"id": 444,
											"name": "txHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The transaction has to retrieve the set address from"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 141,
									"character": 44
								}
							]
						},
						{
							"id": 515,
							"name": "getSetAddresses",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 516,
									"name": "getSetAddresses",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the addresses of SetTokens and RebalancingSetTokens created by the system\nof contracts specified in SetProtcolConfig",
										"returns": "Array of SetToken and RebalancingSetToken addresses\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 551,
									"character": 30
								}
							]
						},
						{
							"id": 509,
							"name": "getTransferProxyAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 510,
									"name": "getTransferProxyAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously gets the transfer proxy address",
										"returns": "Transfer proxy address\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 517,
									"character": 38
								}
							]
						},
						{
							"id": 511,
							"name": "getVaultAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 512,
									"name": "getVaultAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously gets the vault address",
										"returns": "Vault address\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 528,
									"character": 30
								}
							]
						},
						{
							"id": 517,
							"name": "isValidFactoryAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 518,
									"name": "isValidFactoryAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Verifies that the provided SetToken factory is enabled for creating a new SetToken",
										"returns": "Whether the factory contract is enabled\n"
									},
									"parameters": [
										{
											"id": 519,
											"name": "factoryAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the factory contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 563,
									"character": 34
								}
							]
						},
						{
							"id": 520,
							"name": "isValidSetAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 521,
									"name": "isValidSetAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Verifies that the provided SetToken or RebalancingSetToken address is enabled\nfor issuance and redemption",
										"returns": "Whether the contract is enabled\n"
									},
									"parameters": [
										{
											"id": 522,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the SetToken or RebalancingSetToken contract"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 577,
									"character": 30
								}
							]
						},
						{
							"id": 445,
							"name": "issue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 446,
									"name": "issue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously issues a particular quantity of tokens from a particular Sets",
										"returns": "A transaction hash to then later look up\n"
									},
									"parameters": [
										{
											"id": 447,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Set token address of Set being issued"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 448,
											"name": "quantityInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Sets a user wants to issue in Wei"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 449,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 157,
									"character": 20
								}
							]
						},
						{
							"id": 450,
							"name": "redeem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 451,
									"name": "redeem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously redeems a particular quantity of tokens from a particular Sets",
										"returns": "A transaction hash to then later look up\n"
									},
									"parameters": [
										{
											"id": 452,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Set token address of Set being issued"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 453,
											"name": "quantityInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of Sets a user wants to redeem in Wei"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 454,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 180,
									"character": 21
								}
							]
						},
						{
							"id": 455,
							"name": "redeemAndWithdraw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 456,
									"name": "redeemAndWithdraw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Redeem and withdraw with a single transaction",
										"text": "Normally, you should expect to be able to withdraw all of the tokens.\nHowever, some have central abilities to freeze transfers (e.g. EOS). The parameter toExclude\nallows you to optionally specify which component tokens to remain under the user's\naddress in the vault. The rest will be transferred to the user.\n",
										"returns": "A transaction hash to then later look up\n"
									},
									"parameters": [
										{
											"id": 457,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The address of the Set token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 458,
											"name": "quantityInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The number of tokens to redeem"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 459,
											"name": "toExclude",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Bitmask of component indexes to exclude from withdrawal"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 460,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 209,
									"character": 32
								}
							]
						},
						{
							"id": 466,
							"name": "withdraw",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 467,
									"name": "withdraw",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously withdraw tokens from the vault",
										"returns": "A transaction hash\n"
									},
									"parameters": [
										{
											"id": 468,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 469,
											"name": "quantityInWei",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Number of tokens a user wants to withdraw from the vault"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 470,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The options for executing the transaction"
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/CoreWrapper.ts",
									"line": 257,
									"character": 23
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								427
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								421,
								422,
								424,
								423,
								425,
								426,
								420
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								558,
								529,
								538,
								552,
								471,
								476,
								501,
								481,
								433,
								461,
								495,
								506,
								513,
								526,
								523,
								442,
								515,
								509,
								511,
								517,
								520,
								445,
								450,
								455,
								466
							]
						}
					],
					"sources": [
						{
							"fileName": "wrappers/CoreWrapper.ts",
							"line": 48,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						419
					]
				}
			],
			"sources": [
				{
					"fileName": "wrappers/CoreWrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 562,
			"name": "\"wrappers/ERC20Wrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/wrappers/ERC20Wrapper.ts",
			"children": [
				{
					"id": 563,
					"name": "ERC20Wrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "VaultAPI"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe Vault API handles all functions on the Vault smart contract.\n\n"
							}
						]
					},
					"children": [
						{
							"id": 567,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 568,
									"name": "new ERC20Wrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 569,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ERC20Wrapper",
										"id": 563
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 38,
									"character": 37
								}
							]
						},
						{
							"id": 565,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 37,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions",
								"id": 734
							}
						},
						{
							"id": 566,
							"name": "contracts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 38,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ContractWrapper",
								"id": 344
							}
						},
						{
							"id": 564,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 36,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 604,
							"name": "approveAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 605,
									"name": "approveAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously approves the value amount of the spender from the owner",
										"returns": "the hash of the resulting transaction.\n"
									},
									"parameters": [
										{
											"id": 606,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the address of the token being used."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 607,
											"name": "spenderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the spender."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 608,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the amount to be approved."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 609,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "any parameters necessary to modify the transaction."
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 221,
									"character": 27
								}
							]
						},
						{
							"id": 586,
							"name": "getAllowanceAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 587,
									"name": "getAllowanceAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the allowance of the spender by the owner account",
										"returns": "The allowance of the spender\n"
									},
									"parameters": [
										{
											"id": 588,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 589,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the owner"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 590,
											"name": "spenderAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 117,
									"character": 32
								}
							]
						},
						{
							"id": 570,
							"name": "getBalanceOfAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 571,
									"name": "getBalanceOfAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets balance of the ERC20 token",
										"returns": "The balance of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 572,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 573,
											"name": "userAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the user"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 53,
									"character": 32
								}
							]
						},
						{
							"id": 583,
							"name": "getDecimalsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 584,
									"name": "getDecimalsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets decimals of the ERC20 token",
										"returns": "The decimals of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 585,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 103,
									"character": 31
								}
							]
						},
						{
							"id": 574,
							"name": "getNameAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 575,
									"name": "getNameAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets name of the ERC20 token",
										"returns": "The name of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 576,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 66,
									"character": 27
								}
							]
						},
						{
							"id": 577,
							"name": "getSymbolAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 578,
									"name": "getSymbolAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets balance of the ERC20 token",
										"returns": "The symbol of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 579,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 78,
									"character": 29
								}
							]
						},
						{
							"id": 580,
							"name": "getTotalSupplyAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 581,
									"name": "getTotalSupplyAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the total supply of the ERC20 token",
										"returns": "The symbol of the ERC20 token\n"
									},
									"parameters": [
										{
											"id": 582,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the ERC20 token"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 90,
									"character": 34
								}
							]
						},
						{
							"id": 591,
							"name": "transferAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 592,
									"name": "transferAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously transfer value denominated in the specified ERC20 token to\nthe address specified.",
										"returns": "the hash of the resulting transaction.\n"
									},
									"parameters": [
										{
											"id": 593,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the address of the token being used."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 594,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "to whom the transfer is being made."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 595,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the amount being transferred."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 596,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "any parameters necessary to modify the transaction."
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 140,
									"character": 28
								}
							]
						},
						{
							"id": 597,
							"name": "transferFromAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 598,
									"name": "transferFromAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Asynchronously transfer the value amount in the token specified so long\nas the sender of the message has received sufficient allowance on behalf\nof `from` to do so.",
										"returns": "the hash of the resulting transaction.\n"
									},
									"parameters": [
										{
											"id": 599,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the address of the token being used."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 600,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "from whom are the funds being transferred."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 601,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "to whom are the funds being transferred."
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 602,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the amount to be transferred."
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										},
										{
											"id": 603,
											"name": "txOpts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "any parameters necessary to modify the transaction."
											},
											"type": {
												"type": "reference",
												"name": "TxData",
												"id": 76
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/ERC20Wrapper.ts",
									"line": 177,
									"character": 32
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								567
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								565,
								566,
								564
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								604,
								586,
								570,
								583,
								574,
								577,
								580,
								591,
								597
							]
						}
					],
					"sources": [
						{
							"fileName": "wrappers/ERC20Wrapper.ts",
							"line": 35,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						563
					]
				}
			],
			"sources": [
				{
					"fileName": "wrappers/ERC20Wrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 610,
			"name": "\"wrappers/SetTokenWrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/wrappers/SetTokenWrapper.ts",
			"children": [
				{
					"id": 611,
					"name": "SetTokenWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "SetTokenWrapper"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe Set Token API handles all functions on the Set Token smart contract.\n\n"
							}
						]
					},
					"children": [
						{
							"id": 615,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 616,
									"name": "new SetTokenWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 617,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SetTokenWrapper",
										"id": 611
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 38,
									"character": 37
								}
							]
						},
						{
							"id": 613,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 37,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions",
								"id": 734
							}
						},
						{
							"id": 614,
							"name": "contracts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 38,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ContractWrapper",
								"id": 344
							}
						},
						{
							"id": 612,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 36,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 621,
							"name": "getComponentsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 622,
									"name": "getComponentsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets component tokens that make up the Set",
										"returns": "An array of addresses\n"
									},
									"parameters": [
										{
											"id": 623,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Address"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 63,
									"character": 33
								}
							]
						},
						{
							"id": 618,
							"name": "getFactoryAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 619,
									"name": "getFactoryAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the Set's origin factory",
										"returns": "The factory address\n"
									},
									"parameters": [
										{
											"id": 620,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Address"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 52,
									"character": 30
								}
							]
						},
						{
							"id": 624,
							"name": "getNaturalUnitAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 625,
									"name": "getNaturalUnitAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets natural unit of the Set",
										"returns": "The natural unit of the Set\n"
									},
									"parameters": [
										{
											"id": 626,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 74,
									"character": 34
								}
							]
						},
						{
							"id": 627,
							"name": "getUnitsAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 628,
									"name": "getUnitsAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets units of each component token that make up the Set",
										"returns": "An array of units that make up the Set composition which\n                   correspond to the component tokens in the Set\n"
									},
									"parameters": [
										{
											"id": 629,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "BigNumber"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 86,
									"character": 28
								}
							]
						},
						{
							"id": 630,
							"name": "isMultipleOfNaturalUnitAsync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 631,
									"name": "isMultipleOfNaturalUnitAsync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns whether the quantity passed in is a multiple of a Set's natural unit",
										"returns": "boolean    A boolean representing whether the Set is a multiple of the natural Unit\n\n"
									},
									"parameters": [
										{
											"id": 632,
											"name": "setAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the Set"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 633,
											"name": "quantity",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Quantity to be checked"
											},
											"type": {
												"type": "reference",
												"name": "BigNumber"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/SetTokenWrapper.ts",
									"line": 99,
									"character": 43
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								615
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								613,
								614,
								612
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								621,
								618,
								624,
								627,
								630
							]
						}
					],
					"sources": [
						{
							"fileName": "wrappers/SetTokenWrapper.ts",
							"line": 35,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						611
					]
				}
			],
			"sources": [
				{
					"fileName": "wrappers/SetTokenWrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 634,
			"name": "\"wrappers/VaultWrapper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/wrappers/VaultWrapper.ts",
			"children": [
				{
					"id": 635,
					"name": "VaultWrapper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "title",
								"text": "VaultWrapper"
							},
							{
								"tag": "author",
								"text": "Set Protocol\n\nThe Vault API handles all functions on the Vault smart contract.\n\n"
							}
						]
					},
					"children": [
						{
							"id": 640,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 641,
									"name": "new VaultWrapper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 642,
											"name": "web3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Web3"
											}
										},
										{
											"id": 643,
											"name": "vaultAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "VaultWrapper",
										"id": 635
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/VaultWrapper.ts",
									"line": 37,
									"character": 32
								}
							]
						},
						{
							"id": 637,
							"name": "assert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/VaultWrapper.ts",
									"line": 35,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Assertions",
								"id": 734
							}
						},
						{
							"id": 638,
							"name": "contracts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/VaultWrapper.ts",
									"line": 36,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ContractWrapper",
								"id": 344
							}
						},
						{
							"id": 639,
							"name": "vaultAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/VaultWrapper.ts",
									"line": 37,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "Address"
							}
						},
						{
							"id": 636,
							"name": "web3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "wrappers/VaultWrapper.ts",
									"line": 34,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Web3"
							}
						},
						{
							"id": 644,
							"name": "getBalanceInVault",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 645,
									"name": "getBalanceInVault",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the balance of the provided contract address inside the vault specified\nin SetProtocolConfig",
										"returns": "The balance of the user's Set\n"
									},
									"parameters": [
										{
											"id": 646,
											"name": "tokenAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the contract (typically SetToken or ERC20)"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										},
										{
											"id": 647,
											"name": "ownerAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Address of the user"
											},
											"type": {
												"type": "reference",
												"name": "Address"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BigNumber"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "wrappers/VaultWrapper.ts",
									"line": 54,
									"character": 32
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								640
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								637,
								638,
								639,
								636
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								644
							]
						}
					],
					"sources": [
						{
							"fileName": "wrappers/VaultWrapper.ts",
							"line": 33,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						635
					]
				}
			],
			"sources": [
				{
					"fileName": "wrappers/VaultWrapper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 648,
			"name": "\"wrappers/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/felixfeng/Dapps/setProtocol.js/src/wrappers/index.ts",
			"sources": [
				{
					"fileName": "wrappers/index.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				746,
				863,
				775,
				808,
				279,
				285,
				309,
				325,
				649,
				658,
				688,
				714,
				733,
				95,
				102,
				145,
				173,
				278,
				259,
				267,
				272,
				864,
				240,
				182,
				230,
				258,
				203,
				382,
				938,
				61,
				983,
				18,
				985,
				20,
				22,
				1,
				2,
				144,
				407,
				9,
				13,
				121,
				57,
				116,
				343,
				418,
				562,
				610,
				634,
				648
			]
		}
	]
}