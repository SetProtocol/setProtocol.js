"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("@src/util");
exports.testSets = [
    {
        setName: 'StableSet',
        setSymbol: 'STBL',
        targetPriceInUSD: 1.0,
        components: [
            {
                name: 'TrueUSD',
                symbol: 'TUSD',
                decimals: 18,
                price: 1.0,
                supply: 12013114 * Math.pow(10, 18),
            },
            {
                name: 'Dai',
                symbol: 'Dai',
                decimals: 18,
                price: 1.0,
                supply: 29028274 * Math.pow(10, 18),
            },
        ],
        units: [new util_1.BigNumber(5), new util_1.BigNumber(5)],
        naturalUnit: new util_1.BigNumber(10),
    },
    {
        setName: 'Decentralized Exchange',
        setSymbol: 'DEX',
        targetPriceInUSD: 100.0,
        components: [
            {
                name: '0x Protocol',
                symbol: 'ZRX',
                decimals: 18,
                price: 1.16,
                supply: 1000000000 * Math.pow(10, 18),
            },
            {
                name: 'Kyber Network',
                symbol: 'KNC',
                decimals: 18,
                price: 2.58,
                supply: 215617232938864872334407431,
            },
            {
                name: 'Airswap',
                symbol: 'AST',
                decimals: 16,
                price: 0.54,
                supply: 500000000 * Math.pow(10, 4),
            },
        ],
        units: [new util_1.BigNumber(505823196193389), new util_1.BigNumber(129066795398825), new util_1.BigNumber(1)],
        naturalUnit: new util_1.BigNumber(Math.pow(10, 4)),
    },
    {
        setName: 'EthereumX',
        setSymbol: 'ETHX',
        targetPriceInUSD: 100.0,
        components: [
            {
                name: 'VeChain',
                symbol: 'VEN',
                decimals: 18,
                price: 4.6,
                supply: 873378637 * Math.pow(10, 18),
            },
            {
                name: 'OmiseGO',
                symbol: 'OMG',
                decimals: 18,
                price: 16.99,
                supply: 140245398 * Math.pow(10, 18),
            },
            {
                name: 'ICON',
                symbol: 'ICX',
                decimals: 18,
                price: 4.4,
                supply: 400228740 * Math.pow(10, 18),
            },
            {
                name: 'BinanceCoin',
                symbol: 'BNB',
                decimals: 18,
                price: 14.16,
                supply: 194972068 * Math.pow(10, 18),
            },
            {
                name: 'Aeternity',
                symbol: 'AE',
                decimals: 18,
                price: 4.63,
                supply: 273685830 * Math.pow(10, 18),
            },
            {
                name: 'Bytom',
                symbol: 'BTM',
                decimals: 8,
                price: 1.0,
                supply: 1407000000 * Math.pow(10, 8),
            },
            {
                name: 'Populous',
                symbol: 'PPT',
                decimals: 8,
                price: 23.43,
                supply: 53252246 * Math.pow(10, 8),
            },
            {
                name: 'Zilliqa',
                symbol: 'ZIL',
                decimals: 12,
                price: 0.103,
                supply: 12600000000 * Math.pow(10, 12),
            },
            {
                name: 'Maker',
                symbol: 'MKR',
                decimals: 18,
                price: 1040.96,
                supply: 1000000 * Math.pow(10, 18),
            },
            {
                name: 'RChain',
                symbol: 'RHOC',
                decimals: 8,
                price: 1.75,
                supply: 870663574 * Math.pow(10, 8),
            },
        ],
        units: [
            new util_1.BigNumber(431108388524),
            new util_1.BigNumber(83668972206),
            new util_1.BigNumber(317507239500),
            new util_1.BigNumber(93507241499),
            new util_1.BigNumber(191063267901),
            new util_1.BigNumber(81),
            new util_1.BigNumber(3),
            new util_1.BigNumber(5972702),
            new util_1.BigNumber(506910904),
            new util_1.BigNumber(30),
        ],
        naturalUnit: new util_1.BigNumber(Math.pow(10, 11)),
    },
];
//# sourceMappingURL=testSets.js.map